begin_compilation
  name " HotSpotCompilation-9609[sun.misc.FDBigInteger.multBy10()]"
  method "HotSpotCompilation-9609[sun.misc.FDBigInteger.multBy10()]"
  date 1527005207872
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a855 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a855  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v870 v871 v872 v157 ?40 ?106 v143 ?120 v144 ?139 v878 ?59 v158 j582 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a855 v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 57]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
=== Succesors ===
next: i856 
=== Usages ===
a174 v877 v876 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v872 #next: i856  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 654
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v476 i856 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a855 
=== Succesors ===
=== Usages ===
i856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:664) [bci: 84]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v876 
=== Succesors ===
next: i857 
=== Usages ===
v23 i53 i452 v229 v297 v204 v214 i264 j336 v450 v853 
=== Predecessor ===
a855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v876 #next: i857  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i857 v222 v237 v286 v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
=== Succesors ===
next: v844 
=== Usages ===
v5 j338 ?83 v84 v108 i145 v23 i38 v879 i153 v287 i854 
=== Predecessor ===
i856 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 101]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?40 v259 i44 i53 i62 j94 i102 v108 v121 i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i34 
=== Succesors ===
=== Usages ===
v379 v844 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i857 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid a174 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 57]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a855 
=== Succesors ===
=== Usages ===
v874 ?83 ?40 ?40 ?83 v873 j512 v875 v880 j507 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a855  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v8 v16 v253 v29 ?40 v411 a543 i82 v113 v126 v229 v828 v853 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j340 j768 j810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v840 
falseSuccessor: v843 
=== Usages ===
=== Predecessor ===
i857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v840 #falseSuccessor: v843  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v840 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B89" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i857 
=== Succesors ===
=== Usages ===
j340 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i857  <|@  <|@
f <@~|@floating>@ <|@
tid j340 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j338 
y: j339 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j338 y: j339  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i856 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i856  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j340 
y: j336 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j340 y: j336  <|@  <|@
f <@~|@floating>@ <|@
tid a481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@505626034
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@505626034]
=== Inputs ===
=== Succesors ===
=== Usages ===
a475 a475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -49179
stableDimension: 0
stamp: i32 [-49179] ⇊00000000ffff3fe5 ⇈00000000ffff3fe5
stampKind: i32
value: int[-49179|0xffffffffffff3fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v851 
falseSuccessor: v848 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v851 #falseSuccessor: v848  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i4 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i856 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v849 
falseSuccessor: v841 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v849 #falseSuccessor: v841  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v841 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v838 v839 
=== Succesors ===
next: v371 
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v838 v839 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i4 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i857 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid a473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 a475 a475 v503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v368 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v370 #falseSuccessor: v368  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42259
stableDimension: 0
stamp: i32 [-42259] ⇊00000000ffff5aed ⇈00000000ffff5aed
stampKind: i32
value: int[-42259|0xffffffffffff5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i858 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i858  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.isImmutable
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 10]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
=== Succesors ===
next: v375 
=== Usages ===
i169 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i858 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i858  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i4 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i169 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 13]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
i858 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v372 #falseSuccessor: v374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1348) [bci: 37]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1344) [bci: 0]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j81 j787 v800 j738 j746 v756 j793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613312558536229009
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j81 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000f
valueDescription: i64
=== Inputs ===
merge: v80 
values: j78 j101 
=== Succesors ===
=== Usages ===
?83 i104 j96 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: j78 j101  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i4 i102 
=== Succesors ===
=== Usages ===
?83 v84 i102 v873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i4 i102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.722328911724681
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v79 
=== Succesors ===
next: v89 
=== Usages ===
j81 i82 v86 v103 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v79 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i82 
y: i857 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i82 y: i857  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
trueSuccessorProbability: 0.6326674577443074
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610435499017699618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 11]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: i859 
=== Usages ===
v348 
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i859  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v837 v85 
=== Succesors ===
=== Usages ===
i859 v198 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v837 v85  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a174 
index: i82 
=== Succesors ===
=== Usages ===
v198 i859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v348 
address: v873 
=== Succesors ===
next: v198 
=== Usages ===
j91 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v348 address: v873 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 19]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i859 
=== Succesors ===
=== Usages ===
j93 j94 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i859  <|@  <|@
f <@~|@floating>@ <|@
tid j93 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 34359738360] ⇈00000007fffffff8
=== Inputs ===
x: j91 
y: i92 
=== Succesors ===
=== Usages ===
j95 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j91 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 8589934590] ⇈00000001fffffffe
=== Inputs ===
x: j91 
y: i34 
=== Succesors ===
=== Usages ===
j95 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j91 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid j95 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 42949672950] ⇈0000000ffffffffe
=== Inputs ===
x: j93 
y: j94 
=== Succesors ===
=== Usages ===
j96 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j93 y: j94  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 25]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 42949672960] ⇈0000000fffffffff
=== Inputs ===
x: j81 
y: j95 
=== Succesors ===
=== Usages ===
i97 j101 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j81 y: j95  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 33]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
resultBits: 32
stamp: i32
=== Inputs ===
value: j96 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v348 
address: v873 
value: i97 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
i859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v348 address: v873 value: i97 stateAfter: - lastLocationAccess: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1348) [bci: 39]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 10] ⇈000000000000000f
=== Inputs ===
x: j96 
y: i100 
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j96 y: i100  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 41]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i32
=== Inputs ===
x: i82 
y: i34 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i82 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v80 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 47]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v80 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v80 #next: v19  <|@  <|@
tid ?106 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 662
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FDBigInteger.multAndCarryBy10(int[], int, int[])>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1345
stackSize: 0
=== Inputs ===
outerFrameState: ?106 
values: a174 i857 a174 j81 - i82 - - 
=== Succesors ===
=== Usages ===
v489 a543 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?106 values: a174 i857 a174 j81 - i82 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 48]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
resultBits: 32
stamp: i32 [0 - 10] ⇈000000000000000f
=== Inputs ===
value: j81 
=== Succesors ===
=== Usages ===
?59 v304 v16 ?40 v294 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j81  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:663) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i104 
y: i4 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i104 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 113]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 i124 i854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:663) [bci: 73]
stamp: void
trueSuccessorProbability: 0.9367512142471668
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 172]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v378 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v378 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50963
stableDimension: 0
stamp: i32 [-50963] ⇊00000000ffff38ed ⇈00000000ffff38ed
stampKind: i32
value: int[-50963|0xffffffffffff38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 113]
stamp: i32
=== Inputs ===
x: i857 
y: i37 
=== Succesors ===
=== Usages ===
v204 v874 i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i857 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i854 
y: i856 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i854 y: i856  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v380 #falseSuccessor: v382  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: i860 
=== Usages ===
i860 
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i860  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a174 
index: i854 
=== Succesors ===
=== Usages ===
i860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: i854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v380 
address: v874 
=== Succesors ===
next: v116 
=== Usages ===
v113 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v380 address: v874 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i860 
y: i4 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i860 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 0.08541926203716788
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v114 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
i860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v114 #falseSuccessor: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4590430224157318175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 173
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 674
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v118 
values: i854 i124 
=== Succesors ===
=== Usages ===
?120 v121 i124 v222 j868 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v118 values: i854 i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.3187490602916856
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v117 
=== Succesors ===
next: v388 
=== Usages ===
i119 v128 v132 v387 v392 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v117 #next: v388  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<FDBigInteger.trimLeadingZeros()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: ?139 
values: a1 i119 
=== Succesors ===
=== Usages ===
v334 v503 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?139 values: a1 i119  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i34 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v387 #falseSuccessor: v384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v118 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v118 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54291
stableDimension: 0
stamp: i32 [-54291] ⇊00000000ffff2bed ⇈00000000ffff2bed
stampKind: i32
value: int[-54291|0xffffffffffff2bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 31]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: i32
=== Inputs ===
x: i119 
y: i37 
=== Succesors ===
=== Usages ===
i119 v214 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i119 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i856 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i124 y: i856  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v389 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: i861 
=== Usages ===
i861 
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i861  <|@  <|@
f <@~|@floating>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i119 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i119  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a174 
index: j868 
=== Succesors ===
=== Usages ===
i861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v389 
address: v875 
=== Succesors ===
next: v131 
=== Usages ===
v126 
=== Predecessor ===
v389 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v389 address: v875 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i861 
y: i4 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i861 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
i861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v127 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4583008599190775394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?120 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
loopBegin: v118 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4590430224157318176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v118 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v118 #next: v222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 44]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
value: i119 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v870 value: i119 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v118 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v118 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -55067
stableDimension: 0
stamp: i32 [-55067] ⇊00000000ffff28e5 ⇈00000000ffff28e5
stampKind: i32
value: int[-55067|0xffffffffffff28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-55067 - -54291] ⇊00000000ffff28e5 ⇈00000000ffff2bed
valueDescription: i32
=== Inputs ===
merge: v498 
values: i500 i505 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v498 values: i500 i505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v499 v504 
=== Succesors ===
next: v503 
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v499 v504 #next: v503  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
actionAndReason: i501 
speculation: a473 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?120 actionAndReason: i501 speculation: a473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4605891998947352060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:381) [bci: 56]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -52507
stableDimension: 0
stamp: i32 [-52507] ⇊00000000ffff32e5 ⇈00000000ffff32e5
stampKind: i32
value: int[-52507|0xffffffffffff32e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B29" "B84" 
    xhandlers
    flags 
    probability 4589221975990334464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:664) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:664) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i857 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i856 y: i857  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:664) [bci: 85]
stamp: void
trueSuccessorProbability: 0.9989761092150171
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v24 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i4 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i856 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v396 #falseSuccessor: v394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79131
stableDimension: 0
stamp: i32 [-79131] ⇊00000000fffecae5 ⇈00000000fffecae5
stampKind: i32
value: int[-79131|0xfffffffffffecae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B38" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: i862 
=== Usages ===
i862 
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i862  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a855 
=== Succesors ===
=== Usages ===
i862 j717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v394 
address: v877 
=== Succesors ===
next: v32 
=== Usages ===
v29 
=== Predecessor ===
v394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v394 address: v877 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i862 
y: i4 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i862 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 94]
stamp: void
trueSuccessorProbability: 0.2145541510078579
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
i862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578968351461497041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 113]
stamp: i32
=== Inputs ===
x: i857 
y: i37 
=== Succesors ===
=== Usages ===
v237 ?40 j516 i145 v253 i264 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i857 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 115]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v870 value: i38 stateAfter: - lastLocationAccess: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i4 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i38 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v256 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v256 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 4549133451012314373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578890204164692605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: i32
=== Inputs ===
x: i856 
y: i38 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i856 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i264 
y: i34 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i264 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v262 #falseSuccessor: v260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4549083436742359534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors 
    xhandlers
    flags 
    probability 4553612043504707450
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v255 v261 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v255 v261 #next: v270  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 118
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 115]
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 666
stackSize: 5
=== Inputs ===
outerFrameState: - 
values: a1 i104 a174 i34 a174 i4 i38 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i104 a174 i34 a174 i4 i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B85" 
    xhandlers
    flags 
    probability 4578812838340856213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: i64
=== Inputs ===
object: a174 
=== Succesors ===
next: j512 
=== Usages ===
v882 
=== Predecessor ===
v260 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a174 #next: j512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: i64
=== Inputs ===
object: a174 
=== Succesors ===
next: v517 
=== Usages ===
v883 
=== Predecessor ===
j507 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a174 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: intDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v882 v883 j516 
=== Succesors ===
next: i863 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v882 v883 j516 #next: i863  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i863 v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:667) [bci: 123]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
=== Succesors ===
next: v283 
=== Usages ===
i44 
=== Predecessor ===
v517 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v878 #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:667) [bci: 127]
stamp: i32
=== Inputs ===
x: i863 
y: i34 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i863 y: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:667) [bci: 128]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
i863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v878 value: i44 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" "B82" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 145]
stamp: i32
=== Inputs ===
x: i856 
y: i34 
=== Succesors ===
=== Usages ===
j594 v287 v411 a543 i452 v569 i519 v528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i856 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i53 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i857 y: i53  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v398 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
v294 
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:114) [bci: 3]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i4 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:114) [bci: 3]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v411 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v411 #trueSuccessor: v416 #falseSuccessor: v412  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:114) [bci: 3]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -108385
stableDimension: 0
stamp: i32 [-108385] ⇊00000000fffe589f ⇈00000000fffe589f
stampKind: i32
value: int[-108385|0xfffffffffffe589f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B45" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:114) [bci: 3]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: j522 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j522 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j566 
=== Usages ===
v884 v885 
=== Predecessor ===
v412 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j566  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
j566 v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v884 
=== Succesors ===
next: j567 
=== Usages ===
j526 v886 v887 a542 v892 v888 v889 v890 v891 
=== Predecessor ===
j522 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v884 #next: j567  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v885 
=== Succesors ===
next: v531 
=== Usages ===
v532 
=== Predecessor ===
j566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v885 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i527 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i527  <|@  <|@
f <@~|@floating>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 v605 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
j567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4586597706856577017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i53 
y: i185 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i53 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i519 
y: i550 
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i519 y: i550  <|@  <|@
f <@~|@floating>@ <|@
tid i520 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i551 
y: i520 
=== Succesors ===
=== Usages ===
j525 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i551 y: i520  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i521 
=== Succesors ===
=== Usages ===
j526 v888 v889 v890 v891 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i521  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: i64
=== Inputs ===
x: j525 
y: j566 
=== Succesors ===
=== Usages ===
v532 v568 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j525 y: j566  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j567 
y: j526 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j567 y: j526  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v532 
=== Succesors ===
trueSuccessor: v537 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v532 #trueSuccessor: v537 #falseSuccessor: v536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    probability 4556874837494802676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4586533337998369191
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v884 
value: j526 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v884 value: j526 stateAfter: - lastLocationAccess: - #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j525 
index: j566 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
address: v888 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v888 #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j525 
index: j566 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
address: v889 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v889 #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j525 
index: j566 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
address: v890 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v890 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j525 
index: j566 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
address: v891 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v891 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j566 
index: - 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
value: i53 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v886 value: i53 stateAfter: - lastLocationAccess: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j566 
index: - 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v887 
value: j508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v887 value: j508 stateAfter: - lastLocationAccess: - #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j566 
index: - 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j566 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v892 
value: v593 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v892 value: v593 stateAfter: - lastLocationAccess: - #next: v541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: a542 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j566 
=== Succesors ===
next: v544 
=== Usages ===
a547 
=== Predecessor ===
v541 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j566 #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
a542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4572371698438823018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572886649304485625
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v533 v535 
=== Succesors ===
next: a543 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v533 v535 #next: a543  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a543 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?83 
arguments: v518 i53 i4 
=== Succesors ===
next: v546 
=== Usages ===
a547 
=== Predecessor ===
v534 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?83 arguments: v518 i53 i4 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
a543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v545 
values: a542 a543 
=== Succesors ===
=== Usages ===
v894 a457 v881 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v545 values: a542 a543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v544 v546 
=== Succesors ===
next: v716 
=== Usages ===
a547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v544 v546 #next: v716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v608 
=== Usages ===
j717 j719 
=== Predecessor ===
v545 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:116) [bci: 9]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:116) [bci: 9]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i449 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i856 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v450 
trueValue: i53 
falseValue: i856 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v450 trueValue: i53 falseValue: i856  <|@  <|@
f <@~|@floating>@ <|@
tid j595 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i452 
=== Succesors ===
=== Usages ===
j768 v894 j599 v605 v713 j755 j761 j765 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i452  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j508 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j595 y: j508  <|@  <|@
f <@~|@floating>@ <|@
tid j736 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j737 j786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j765 j807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j745 j792 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j760 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j761 j804 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j572 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j798 j753 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j755 j799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v606 #falseSuccessor: v607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a547 
index: - 
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a547 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v716 
address: v881 
=== Succesors ===
=== Usages ===
v895 v897 v899 v901 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v716 address: v881  <|@  <|@
f <@~|@floating>@ <|@
tid j717 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v716 
address: v877 
=== Succesors ===
=== Usages ===
v896 v898 v900 v902 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v716 address: v877  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j595 
y: j754 
=== Succesors ===
=== Usages ===
v756 v758 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j754  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j755 
y: j78 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j755 y: j78  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v756 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v756 #trueSuccessor: v609 #falseSuccessor: v610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B81" 
    successors "B53" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j746 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v613 
values: j78 j753 
=== Succesors ===
=== Usages ===
v902 j753 v901 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v613 values: j78 j753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v612 
=== Succesors ===
next: v864 
=== Usages ===
v864 v617 v618 j746 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v612 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j717 
index: j746 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v613 
address: v902 
=== Succesors ===
next: v825 
=== Usages ===
v825 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v613 address: v902 #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j719 
index: j746 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v901 
value: v864 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v901 value: v864 stateAfter: - lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j746 
y: j572 
=== Succesors ===
=== Usages ===
j738 j746 v758 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j746 y: j572  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j755 
y: j753 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j755 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v619 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v617 #falseSuccessor: v619  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v613 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v613 #next: v623  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v622 
values: j78 j753 
=== Succesors ===
=== Usages ===
v900 j745 j729 v762 v899 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v622 values: j78 j753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v621 v623 
=== Succesors ===
next: v641 
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v621 v623 #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid j761 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j595 
y: j760 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j760  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j738 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j761 y: j738  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v640 #falseSuccessor: v639  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
v865 
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j717 
index: j738 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: j738  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v639 
address: v900 
=== Succesors ===
next: v823 
=== Usages ===
v823 
=== Predecessor ===
v639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v639 address: v900 #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j719 
index: j738 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j738  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v899 
value: v865 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v899 value: v865 stateAfter: - lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j738 
y: j722 
=== Succesors ===
=== Usages ===
j729 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j738 y: j722  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j729 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v633 
values: j745 j738 
=== Succesors ===
=== Usages ===
v898 j737 j720 v766 v897 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v633 values: j745 j738  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v644 
=== Succesors ===
next: v647 
=== Usages ===
j729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v644 #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j595 
y: j764 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j729 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j765 y: j729  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v646 #falseSuccessor: v645  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v866 
=== Usages ===
v866 
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j717 
index: j729 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: j729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v645 
address: v898 
=== Succesors ===
next: v821 
=== Usages ===
v821 
=== Predecessor ===
v645 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v645 address: v898 #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j719 
index: j729 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v897 
value: v866 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v897 value: v866 stateAfter: - lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j729 
y: j736 
=== Succesors ===
=== Usages ===
j720 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j729 y: j736  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j720 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v636 
values: j737 j729 
=== Succesors ===
=== Usages ===
v896 v769 v895 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v636 values: j737 j729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v635 v650 
=== Succesors ===
next: v653 
=== Usages ===
j720 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v635 v650 #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j595 
y: j339 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j339  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j768 
y: j720 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j768 y: j720  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v769 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v651 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v769 #trueSuccessor: v652 #falseSuccessor: v651  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i867 
=== Usages ===
i867 
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i867  <|@  <|@
f <@~|@floating>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j717 
index: j720 
=== Succesors ===
=== Usages ===
i867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i867 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v651 
address: v896 
=== Succesors ===
next: v819 
=== Usages ===
v819 
=== Predecessor ===
v651 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v651 address: v896 #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j719 
index: j720 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v895 
value: i867 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
i867 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v895 value: i867 stateAfter: - lastLocationAccess: - #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v819 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B48" "B62" "B61" 
    successors "B64" "B79" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v625 v638 v656 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v625 v638 v656 #next: v772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v663 
=== Usages ===
j774 
=== Predecessor ===
v626 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid j594 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i53 
=== Succesors ===
=== Usages ===
j599 v713 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i53  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j594 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j595 y: j594  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v662 
falseSuccessor: v661 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v662 #falseSuccessor: v661  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a547 
index: j595 
=== Succesors ===
=== Usages ===
j774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a547 index: j595  <|@  <|@
f <@~|@floating>@ <|@
tid j774 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v772 
address: v894 
=== Succesors ===
=== Usages ===
v903 v904 v905 v906 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v772 address: v894  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j594 
y: j595 
=== Succesors ===
=== Usages ===
j810 j799 j804 j807 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j594 y: j595  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j599 
y: j754 
=== Succesors ===
=== Usages ===
v800 v802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j754  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j799 
y: j78 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j799 y: j78  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v800 
=== Succesors ===
trueSuccessor: v664 
falseSuccessor: v665 
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v800 #trueSuccessor: v664 #falseSuccessor: v665  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v665 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B78" 
    successors "B68" "B78" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j793 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v668 
values: j78 j798 
=== Succesors ===
=== Usages ===
v906 j798 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v668 values: j78 j798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v667 
=== Succesors ===
next: v833 
=== Usages ===
j793 v671 v672 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v667 #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j774 
index: j793 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
value: v834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v906 value: v834 stateAfter: - lastLocationAccess: - #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid j798 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j793 
y: j572 
=== Succesors ===
=== Usages ===
j787 j793 v802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j793 y: j572  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j799 
y: j798 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j799 y: j798  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v671 
falseSuccessor: v673 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v671 #falseSuccessor: v673  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v668 
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v668 #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j787 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v676 
values: j78 j798 
=== Succesors ===
=== Usages ===
v905 j792 j781 v805 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v676 values: j78 j798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v675 v677 
=== Succesors ===
next: v695 
=== Usages ===
j787 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v675 v677 #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j599 
y: j760 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j760  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j804 
y: j787 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j804 y: j787  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v805 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v805 #trueSuccessor: v694 #falseSuccessor: v693  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j774 
index: j787 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j787  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v905 
value: v836 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v905 value: v836 stateAfter: - lastLocationAccess: - #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j787 
y: j722 
=== Succesors ===
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j787 y: j722  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j781 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v687 
values: j792 j787 
=== Succesors ===
=== Usages ===
v904 j786 j775 v808 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: j792 j787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v686 v698 
=== Succesors ===
next: v701 
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v686 v698 #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j599 
y: j764 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j807 
y: j781 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j807 y: j781  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v808 
=== Succesors ===
trueSuccessor: v700 
falseSuccessor: v699 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v808 #trueSuccessor: v700 #falseSuccessor: v699  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
v700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v830 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j774 
index: j781 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v904 
value: v835 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v904 value: v835 stateAfter: - lastLocationAccess: - #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j781 
y: j736 
=== Succesors ===
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j781 y: j736  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
v830 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j775 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v690 
values: j786 j781 
=== Succesors ===
=== Usages ===
v903 v811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v690 values: j786 j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v689 v704 
=== Succesors ===
next: v707 
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v689 v704 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j599 
y: j339 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j339  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j810 
y: j775 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j810 y: j775  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v811 
=== Succesors ===
trueSuccessor: v706 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v811 #trueSuccessor: v706 #falseSuccessor: v705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v710  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j774 
index: j775 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v903 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v903 value: i4 stateAfter: - lastLocationAccess: - #next: v692  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v668 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v668  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B80" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v661 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v679 v692 v710 
=== Succesors ===
next: a457 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v679 v692 v710 #next: a457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a547 
=== Succesors ===
next: v285 
=== Usages ===
v879 a284 
=== Predecessor ===
v680 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a547 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid a284 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
op: Compress
stamp: n! -
=== Inputs ===
value: a457 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
value: a284 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j582 
=== Usages ===
=== Predecessor ===
a457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v872 value: a284 stateAfter: - lastLocationAccess: - #next: j582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v588 
=== Usages ===
j584 
=== Predecessor ===
v285 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid i583 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j584 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j582 
y: i583 
=== Succesors ===
=== Usages ===
v893 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j582 y: i583  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v893 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j584 
index: j587 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: j587  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v893 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
j582 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v893 value: i589 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 163]
stamp: i32
=== Inputs ===
x: i857 
y: i34 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i857 y: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 164]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
value: i153 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v870 value: i153 stateAfter: - lastLocationAccess: - #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a457 
index: i857 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v398 
address: v879 
value: i104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v398 address: v879 value: i104 stateAfter: - lastLocationAccess: - #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v613 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v613  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -73755
stableDimension: 0
stamp: i32 [-73755] ⇊00000000fffedfe5 ⇈00000000fffedfe5
stampKind: i32
value: int[-73755|0xfffffffffffedfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" "B27" "B82" "B40" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i487 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-108385 - -50963] ⇊00000000fffe0085
valueDescription: i32
=== Inputs ===
merge: v484 
values: i486 i491 i493 i495 i497 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v484 values: i486 i491 i493 i495 i497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v485 v490 v492 v494 v496 
=== Succesors ===
next: v489 
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v485 v490 v492 v494 v496 #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?83 
actionAndReason: i487 
speculation: a473 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?83 actionAndReason: i487 speculation: a473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B85" 
    xhandlers
    flags 
    probability 4544406857824635433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B37" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i857 i38 
=== Succesors ===
=== Usages ===
i62 v297 v880 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v48 values: i857 i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v47 v49 
=== Succesors ===
next: v405 
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v47 v49 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i856 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i145 y: i856  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v402 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v295 
=== Usages ===
v304 
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 163]
stamp: i32
=== Inputs ===
x: i145 
y: i34 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i145 y: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 164]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
value: i62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v870 value: i62 stateAfter: - lastLocationAccess: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a174 
index: i145 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v402 
address: v880 
value: i104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v402 address: v880 value: i104 stateAfter: - lastLocationAccess: - #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 152
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 672
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i104 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i104  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 298
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?59 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43539
stableDimension: 0
stamp: i32 [-43539] ⇊00000000ffff55ed ⇈00000000ffff55ed
stampKind: i32
value: int[-43539|0xffffffffffff55ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B7" "B89" "B88" "B4" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-84235 - -42259] ⇊00000000fffe10e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v470 
values: i478 i480 i483 i480 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v470 values: i478 i480 i483 i480  <|@  <|@
f <@~|@floating>@ <|@
tid a475 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v470 
values: a473 a481 a473 a481 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v470 values: a473 a481 a473 a481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v477 v479 v482 v907 
=== Succesors ===
next: v476 
=== Usages ===
i474 a475 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v477 v479 v482 v907 #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i474 
speculation: a475 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i474 speculation: a475  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a855 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a855  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v870 v871 v872 v157 ?40 ?106 v143 ?120 v144 ?139 v878 ?59 v158 j582 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a855 v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a855 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 57]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
=== Succesors ===
next: i856 
=== Usages ===
a174 v877 v876 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v872 #next: i856  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 654
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v476 i856 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a855 
=== Succesors ===
=== Usages ===
i856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i856 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:664) [bci: 84]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v876 
=== Succesors ===
next: i857 
=== Usages ===
v23 i53 i452 v229 v297 v204 v214 i264 j336 v450 v853 
=== Predecessor ===
a855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v876 #next: i857  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i857 v222 v237 v286 v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i857 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
=== Succesors ===
next: v844 
=== Usages ===
v5 j338 ?83 v84 v108 i145 v23 i38 v879 i153 v287 i854 
=== Predecessor ===
i856 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 101]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?40 v259 i44 i53 i62 j94 i102 v108 v121 i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i34 
=== Succesors ===
=== Usages ===
v379 v844 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i857 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid a174 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 57]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a855 
=== Succesors ===
=== Usages ===
v874 ?83 ?40 ?40 ?83 v873 j512 v875 v880 j507 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a855  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v8 v16 v253 v29 ?40 v411 a543 i82 v113 v126 v229 v828 v853 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j339 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j340 j768 j810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v840 
falseSuccessor: v843 
=== Usages ===
=== Predecessor ===
i857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v840 #falseSuccessor: v843  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@640cae55 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v840 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B89" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i857 
=== Succesors ===
=== Usages ===
j340 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i857  <|@  <|@
f <@~|@floating>@ <|@
tid j340 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j338 
y: j339 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j338 y: j339  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i856 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i856  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j340 
y: j336 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j340 y: j336  <|@  <|@
f <@~|@floating>@ <|@
tid a481 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@505626034
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@505626034]
=== Inputs ===
=== Succesors ===
=== Usages ===
a475 a475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
result int[-49179|0xffffffffffff3fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -49179
stableDimension: 0
stamp: i32 [-49179] ⇊00000000ffff3fe5 ⇈00000000ffff3fe5
stampKind: i32
value: int[-49179|0xffffffffffff3fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v851 
falseSuccessor: v848 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v851 #falseSuccessor: v848  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = DEC v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i4 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i856 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v849 
falseSuccessor: v841 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v849 #falseSuccessor: v841  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-49179|0xffffffffffff3fe5], v8|QWORD[.]] destination: B4 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v841 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v838 v839 
=== Succesors ===
next: v371 
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v838 v839 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i4 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i857 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid a473 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 a475 a475 v503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v368 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v370 #falseSuccessor: v368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result int[-42259|0xffffffffffff5aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42259
stableDimension: 0
stamp: i32 [-42259] ⇊00000000ffff5aed ⇈00000000ffff5aed
stampKind: i32
value: int[-42259|0xffffffffffff5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42259|0xffffffffffff5aed], Object[null]] destination: B7 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i858 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i858  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i858 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.isImmutable
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 10]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
=== Succesors ===
next: v375 
=== Usages ===
i169 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i858 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i858  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i4 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i169 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 13]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
i858 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v372 #falseSuccessor: v374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVZXB [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1348) [bci: 37]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1344) [bci: 0]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j81 j787 v800 j738 j746 v756 j793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613312558536229009
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j81 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000f
valueDescription: i64
=== Inputs ===
merge: v80 
values: j78 j101 
=== Succesors ===
=== Usages ===
?83 i104 j96 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: j78 j101  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i4 i102 
=== Succesors ===
=== Usages ===
?83 v84 i102 v873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i4 i102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.722328911724681
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v79 
=== Succesors ===
next: v89 
=== Usages ===
j81 i82 v86 v103 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v79 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i82 
y: i857 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i82 y: i857  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
trueSuccessorProbability: 0.6326674577443074
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD, v11|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610435499017699618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 11]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: i859 
=== Usages ===
v348 
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i859  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v837 v85 
=== Succesors ===
=== Usages ===
i859 v198 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v837 v85  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
result [v4|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a174 
index: i82 
=== Succesors ===
=== Usages ===
v198 i859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i859 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v348 
address: v873 
=== Succesors ===
next: v198 
=== Usages ===
j91 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v348 address: v873 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 19]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i859 
=== Succesors ===
=== Usages ===
j93 j94 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i859  <|@  <|@
f <@~|@floating>@ <|@
tid j93 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 34359738360] ⇈00000007fffffff8
=== Inputs ===
x: j91 
y: i92 
=== Succesors ===
=== Usages ===
j95 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j91 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 8589934590] ⇈00000001fffffffe
=== Inputs ===
x: j91 
y: i34 
=== Succesors ===
=== Usages ===
j95 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j91 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid j95 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 42949672950] ⇈0000000ffffffffe
=== Inputs ===
x: j93 
y: j94 
=== Succesors ===
=== Usages ===
j96 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j93 y: j94  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 25]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 42949672960] ⇈0000000fffffffff
=== Inputs ===
x: j81 
y: j95 
=== Succesors ===
=== Usages ===
i97 j101 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j81 y: j95  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 33]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
resultBits: 32
stamp: i32
=== Inputs ===
value: j96 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v348 
address: v873 
value: i97 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
i859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v348 address: v873 value: i97 stateAfter: - lastLocationAccess: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1348) [bci: 39]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i64 [0 - 10] ⇈000000000000000f
=== Inputs ===
x: j96 
y: i100 
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j96 y: i100  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 41]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: i32
=== Inputs ===
x: i82 
y: i34 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i82 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v80 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v4|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHL v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHL v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v10|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v11|DWORD * 4 + 16], y: v16|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = SHR v16|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD, v18|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 47]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v80 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v80 #next: v19  <|@  <|@
tid ?106 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 662
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FDBigInteger.multAndCarryBy10(int[], int, int[])>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1345
stackSize: 0
=== Inputs ===
outerFrameState: ?106 
values: a174 i857 a174 j81 - i82 - - 
=== Succesors ===
=== Usages ===
v489 a543 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?106 values: a174 i857 a174 j81 - i82 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 48]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
resultBits: 32
stamp: i32 [0 - 10] ⇈000000000000000f
=== Inputs ===
value: j81 
=== Succesors ===
=== Usages ===
?59 v304 v16 ?40 v294 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j81  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:663) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i104 
y: i4 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i104 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 113]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 i124 i854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:663) [bci: 73]
stamp: void
trueSuccessorProbability: 0.9367512142471668
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9367512142471668 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 172]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v378 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v378 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result int[-50963|0xffffffffffff38ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50963
stableDimension: 0
stamp: i32 [-50963] ⇊00000000ffff38ed ⇈00000000ffff38ed
stampKind: i32
value: int[-50963|0xffffffffffff38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50963|0xffffffffffff38ed]] destination: B14 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 113]
stamp: i32
=== Inputs ===
x: i857 
y: i37 
=== Succesors ===
=== Usages ===
v204 v874 i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i857 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i854 
y: i856 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i854 y: i856  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v380 #falseSuccessor: v382  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: i860 
=== Usages ===
i860 
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i860  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
result [v4|QWORD[.] + v20|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a174 
index: i854 
=== Succesors ===
=== Usages ===
i860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: i854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i860 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v380 
address: v874 
=== Succesors ===
next: v116 
=== Usages ===
v113 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v380 address: v874 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i860 
y: i4 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i860 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 0.08541926203716788
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v114 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
i860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v114 #falseSuccessor: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v4|QWORD[.] + v20|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4590430224157318175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 173
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 674
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i119 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v118 
values: i854 i124 
=== Succesors ===
=== Usages ===
?120 v121 i124 v222 j868 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v118 values: i854 i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.3187490602916856
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v117 
=== Succesors ===
next: v388 
=== Usages ===
i119 v128 v132 v387 v392 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v117 #next: v388  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<FDBigInteger.trimLeadingZeros()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: ?139 
values: a1 i119 
=== Succesors ===
=== Usages ===
v334 v503 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?139 values: a1 i119  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i34 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v387 #falseSuccessor: v384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v118 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v118 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
result int[-54291|0xffffffffffff2bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54291
stableDimension: 0
stamp: i32 [-54291] ⇊00000000ffff2bed ⇈00000000ffff2bed
stampKind: i32
value: int[-54291|0xffffffffffff2bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54291|0xffffffffffff2bed]] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 31]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: i32
=== Inputs ===
x: i119 
y: i37 
=== Succesors ===
=== Usages ===
i119 v214 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i119 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i856 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i124 y: i856  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v389 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = DEC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: i861 
=== Usages ===
i861 
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i861  <|@  <|@
f <@~|@floating>@ <|@
tid j868 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i119 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i119  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
result [v4|QWORD[.] + v23|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a174 
index: j868 
=== Succesors ===
=== Usages ===
i861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i861 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v389 
address: v875 
=== Succesors ===
next: v131 
=== Usages ===
v126 
=== Predecessor ===
v389 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v389 address: v875 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i861 
y: i4 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i861 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
i861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v127 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v4|QWORD[.] + v23|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4583008599190775394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?120 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
loopBegin: v118 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v21|DWORD 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 173] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B22 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4590430224157318176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v118 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v118 #next: v222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 44]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
value: i119 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v870 value: i119 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v118 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v118 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
result int[-55067|0xffffffffffff28e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -55067
stableDimension: 0
stamp: i32 [-55067] ⇊00000000ffff28e5 ⇈00000000ffff28e5
stampKind: i32
value: int[-55067|0xffffffffffff28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55067|0xffffffffffff28e5]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i501 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-55067 - -54291] ⇊00000000ffff28e5 ⇈00000000ffff2bed
valueDescription: i32
=== Inputs ===
merge: v498 
values: i500 i505 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v498 values: i500 i505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v499 v504 
=== Succesors ===
next: v503 
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v499 v504 #next: v503  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
actionAndReason: i501 
speculation: a473 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?120 actionAndReason: i501 speculation: a473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v21|DWORD 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21, 173] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4605891998947352060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:381) [bci: 56]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
result int[-52507|0xffffffffffff32e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -52507
stableDimension: 0
stamp: i32 [-52507] ⇊00000000ffff32e5 ⇈00000000ffff32e5
stampKind: i32
value: int[-52507|0xffffffffffff32e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52507|0xffffffffffff32e5]] destination: B27 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B29" "B84" 
    xhandlers
    flags 
    probability 4589221975990334464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:664) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:664) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i857 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i856 y: i857  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:664) [bci: 85]
stamp: void
trueSuccessorProbability: 0.9989761092150171
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v24 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989761092150171 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i4 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i856 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v396 #falseSuccessor: v394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid i491 <|@
result int[-79131|0xfffffffffffecae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79131
stableDimension: 0
stamp: i32 [-79131] ⇊00000000fffecae5 ⇈00000000fffecae5
stampKind: i32
value: int[-79131|0xfffffffffffecae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79131|0xfffffffffffecae5]] destination: B30 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B38" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: i862 
=== Usages ===
i862 
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i862  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a855 
=== Succesors ===
=== Usages ===
i862 j717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i862 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 93]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v394 
address: v877 
=== Succesors ===
next: v32 
=== Usages ===
v29 
=== Predecessor ===
v394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v394 address: v877 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i862 
y: i4 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i862 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:665) [bci: 94]
stamp: void
trueSuccessorProbability: 0.2145541510078579
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
i862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2145541510078579 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578968351461497041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 113]
stamp: i32
=== Inputs ===
x: i857 
y: i37 
=== Succesors ===
=== Usages ===
v237 ?40 j516 i145 v253 i264 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i857 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 115]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v870 value: i38 stateAfter: - lastLocationAccess: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i4 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i38 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v256 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v256 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 4549133451012314373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578890204164692605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: i32
=== Inputs ===
x: i856 
y: i38 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i856 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i264 
y: i34 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i264 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v262 #falseSuccessor: v260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v2|DWORD, ~y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4549083436742359534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors 
    xhandlers
    flags 
    probability 4553612043504707450
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v255 v261 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v255 v261 #next: v270  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 118
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 115]
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 666
stackSize: 5
=== Inputs ===
outerFrameState: - 
values: a1 i104 a174 i34 a174 i4 i38 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i104 a174 i34 a174 i4 i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -69217 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stack: v4|QWORD[.] int[1|0x1] v4|QWORD[.] int[0|0x0] v25|DWORD 
locals: v0|QWORD[.] v19|DWORD 
>@ <|@ instruction DEOPT info [bci:118] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B85" 
    xhandlers
    flags 
    probability 4578812838340856213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
result v27|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: i64
=== Inputs ===
object: a174 
=== Succesors ===
next: j512 
=== Usages ===
v882 
=== Predecessor ===
v260 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a174 #next: j512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
result v28|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: i64
=== Inputs ===
object: a174 
=== Succesors ===
next: v517 
=== Usages ===
v883 
=== Predecessor ===
j507 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a174 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
result [v27|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
result [v28|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: intDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v882 v883 j516 
=== Succesors ===
next: i863 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v882 v883 j516 #next: i863  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i863 v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i863 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:667) [bci: 123]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
=== Succesors ===
next: v283 
=== Usages ===
i44 
=== Predecessor ===
v517 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v878 #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:667) [bci: 127]
stamp: i32
=== Inputs ===
x: i863 
y: i34 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i863 y: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:667) [bci: 128]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
i863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v878 value: i44 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v27|QWORD[*] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v28|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: intDisjointArraycopy(Word,Word,Word)void@0x106812e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B37 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" "B82" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 145]
stamp: i32
=== Inputs ===
x: i856 
y: i34 
=== Succesors ===
=== Usages ===
j594 v287 v411 a543 i452 v569 i519 v528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i856 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i53 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i857 y: i53  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v398 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
v294 
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:114) [bci: 3]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i4 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:114) [bci: 3]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v411 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v411 #trueSuccessor: v416 #falseSuccessor: v412  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:114) [bci: 3]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
result int[-108385|0xfffffffffffe589f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -108385
stableDimension: 0
stamp: i32 [-108385] ⇊00000000fffe589f ⇈00000000fffe589f
stampKind: i32
value: int[-108385|0xfffffffffffe589f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108385|0xfffffffffffe589f]] destination: B40 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B45" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:114) [bci: 3]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: j522 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j522 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j566 
=== Usages ===
v884 v885 
=== Predecessor ===
v412 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j566  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
j566 v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j566 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v884 
=== Succesors ===
next: j567 
=== Usages ===
j526 v886 v887 a542 v892 v888 v889 v890 v891 
=== Predecessor ===
j522 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v884 #next: j567  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j567 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v885 
=== Succesors ===
next: v531 
=== Usages ===
v532 
=== Predecessor ===
j566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v885 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i527 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i527  <|@  <|@
f <@~|@floating>@ <|@
tid j508 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 v605 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
j567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4586597706856577017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i53 
y: i185 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i53 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i519 
y: i550 
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i519 y: i550  <|@  <|@
f <@~|@floating>@ <|@
tid i520 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i551 
y: i520 
=== Succesors ===
=== Usages ===
j525 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i551 y: i520  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i521 
=== Succesors ===
=== Usages ===
j526 v888 v889 v890 v891 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i521  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: i64
=== Inputs ===
x: j525 
y: j566 
=== Succesors ===
=== Usages ===
v532 v568 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j525 y: j566  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j567 
y: j526 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j567 y: j526  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v532 
=== Succesors ===
trueSuccessor: v537 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v532 #trueSuccessor: v537 #falseSuccessor: v536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL v32|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = LEA [v35|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND v36|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = ADD (x: v38|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    probability 4556874837494802676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4586533337998369191
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v884 
value: j526 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v884 value: j526 stateAfter: - lastLocationAccess: - #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
result [v38|QWORD + v33|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j525 
index: j566 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
address: v888 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v888 #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
result [v38|QWORD + v33|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j525 
index: j566 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
address: v889 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v889 #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
result [v38|QWORD + v33|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j525 
index: j566 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
address: v890 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v890 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
result [v38|QWORD + v33|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j525 
index: j566 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
address: v891 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v891 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
result [v33|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j566 
index: - 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
value: i53 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v886 value: i53 stateAfter: - lastLocationAccess: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
result [v33|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j566 
index: - 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v887 
value: j508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v887 value: j508 stateAfter: - lastLocationAccess: - #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
result [v33|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j566 
index: - 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j566 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v892 
value: v593 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v892 value: v593 stateAfter: - lastLocationAccess: - #next: v541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: a542 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a542 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j566 
=== Succesors ===
next: v544 
=== Usages ===
a547 
=== Predecessor ===
v541 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j566 #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
a542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + v33|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD + 12], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4572371698438823018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572886649304485625
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v533 v535 
=== Succesors ===
next: a543 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v533 v535 #next: a543  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a543 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?83 
arguments: v518 i53 i4 
=== Succesors ===
next: v546 
=== Usages ===
a547 
=== Predecessor ===
v534 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?83 arguments: v518 i53 i4 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
a543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: v4|QWORD[.] v3|DWORD v4|QWORD[.] v10|QWORD - v11|DWORD - - 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 68] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a547 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v545 
values: a542 a543 
=== Succesors ===
=== Usages ===
v894 a457 v881 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v545 values: a542 a543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v544 v546 
=== Succesors ===
next: v716 
=== Usages ===
a547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v544 v546 #next: v716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v608 
=== Usages ===
j717 j719 
=== Predecessor ===
v545 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:116) [bci: 9]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:116) [bci: 9]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i856 
y: i449 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i856 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v450 
trueValue: i53 
falseValue: i856 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v450 trueValue: i53 falseValue: i856  <|@  <|@
f <@~|@floating>@ <|@
tid j595 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i452 
=== Succesors ===
=== Usages ===
j768 v894 j599 v605 v713 j755 j761 j765 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i452  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j508 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j595 y: j508  <|@  <|@
f <@~|@floating>@ <|@
tid j736 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j737 j786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j765 j807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j745 j792 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j760 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j761 j804 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j572 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j798 j753 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j755 j799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v606 #falseSuccessor: v607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v32|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v45|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
result [v43|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a547 
index: - 
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a547 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v716 
address: v881 
=== Succesors ===
=== Usages ===
v895 v897 v899 v901 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v716 address: v881  <|@  <|@
f <@~|@floating>@ <|@
tid j717 <|@
result v47|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v716 
address: v877 
=== Succesors ===
=== Usages ===
v896 v898 v900 v902 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v716 address: v877  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j595 
y: j754 
=== Succesors ===
=== Usages ===
v756 v758 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j754  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j755 
y: j78 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j755 y: j78  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v756 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v756 #trueSuccessor: v609 #falseSuccessor: v610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LEA [v43|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = LEA [v1|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B81" 
    successors "B53" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j746 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v613 
values: j78 j753 
=== Succesors ===
=== Usages ===
v902 j753 v901 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v613 values: j78 j753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v612 
=== Succesors ===
next: v864 
=== Usages ===
v864 v617 v618 j746 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v612 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
result [v47|QWORD[*] + v49|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j717 
index: j746 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
result v50|V256_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v613 
address: v902 
=== Succesors ===
next: v825 
=== Usages ===
v825 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v613 address: v902 #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
result [v46|QWORD[.] + v49|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j719 
index: j746 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v901 
value: v864 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v901 value: v864 stateAfter: - lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j746 
y: j572 
=== Succesors ===
=== Usages ===
j738 j746 v758 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j746 y: j572  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j755 
y: j753 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j755 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v619 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v617 #falseSuccessor: v619  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|V256_DWORD = H [v47|QWORD[*] + v49|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v49|QWORD * 4], input: v50|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v49|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v613 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v613 #next: v623  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j738 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v622 
values: j78 j753 
=== Succesors ===
=== Usages ===
v900 j745 j729 v762 v899 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v622 values: j78 j753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v621 v623 
=== Succesors ===
next: v641 
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v621 v623 #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid j761 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j595 
y: j760 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j760  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j738 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j761 y: j738  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v640 #falseSuccessor: v639  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v45|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
v865 
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
result [v47|QWORD[*] + v52|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j717 
index: j738 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: j738  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
result v54|V128_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v639 
address: v900 
=== Succesors ===
next: v823 
=== Usages ===
v823 
=== Predecessor ===
v639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v639 address: v900 #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
result [v46|QWORD[.] + v52|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j719 
index: j738 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j738  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v899 
value: v865 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v899 value: v865 stateAfter: - lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j738 
y: j722 
=== Succesors ===
=== Usages ===
j729 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j738 y: j722  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V128_DWORD = H [v47|QWORD[*] + v52|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v52|QWORD * 4], input: v54|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j729 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v633 
values: j745 j738 
=== Succesors ===
=== Usages ===
v898 j737 j720 v766 v897 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v633 values: j745 j738  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v644 
=== Succesors ===
next: v647 
=== Usages ===
j729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v644 #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j595 
y: j764 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j729 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j765 y: j729  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v646 #falseSuccessor: v645  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v45|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v866 
=== Usages ===
v866 
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
result [v47|QWORD[*] + v56|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j717 
index: j729 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: j729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
result v58|V64_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v645 
address: v898 
=== Succesors ===
next: v821 
=== Usages ===
v821 
=== Predecessor ===
v645 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v645 address: v898 #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
result [v46|QWORD[.] + v56|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j719 
index: j729 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v897 
value: v866 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v897 value: v866 stateAfter: - lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j729 
y: j736 
=== Succesors ===
=== Usages ===
j720 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j729 y: j736  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|V64_DWORD = H [v47|QWORD[*] + v56|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v56|QWORD * 4], input: v58|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v56|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j720 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v636 
values: j737 j729 
=== Succesors ===
=== Usages ===
v896 v769 v895 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v636 values: j737 j729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v635 v650 
=== Succesors ===
next: v653 
=== Usages ===
j720 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v635 v650 #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j595 
y: j339 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j339  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j768 
y: j720 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j768 y: j720  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v769 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v651 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v769 #trueSuccessor: v652 #falseSuccessor: v651  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = DEC v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i867 
=== Usages ===
i867 
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i867  <|@  <|@
f <@~|@floating>@ <|@
tid v896 <|@
result [v47|QWORD[*] + v60|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j717 
index: j720 
=== Succesors ===
=== Usages ===
i867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j717 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i867 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v651 
address: v896 
=== Succesors ===
next: v819 
=== Usages ===
v819 
=== Predecessor ===
v651 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v651 address: v896 #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v895 <|@
result [v46|QWORD[.] + v60|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j719 
index: j720 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v895 
value: i867 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
i867 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v895 value: i867 stateAfter: - lastLocationAccess: - #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v819 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v47|QWORD[*] + v60|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + v60|QWORD * 4], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B48" "B62" "B61" 
    successors "B64" "B79" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v625 v638 v656 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v625 v638 v656 #next: v772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v663 
=== Usages ===
j774 
=== Predecessor ===
v626 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid j594 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i53 
=== Succesors ===
=== Usages ===
j599 v713 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i53  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j594 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j595 y: j594  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v662 
falseSuccessor: v661 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v662 #falseSuccessor: v661  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVSXD v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
result [v43|QWORD[.] + v45|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a547 
index: j595 
=== Succesors ===
=== Usages ===
j774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a547 index: j595  <|@  <|@
f <@~|@floating>@ <|@
tid j774 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v772 
address: v894 
=== Succesors ===
=== Usages ===
v903 v904 v905 v906 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v772 address: v894  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j594 
y: j595 
=== Succesors ===
=== Usages ===
j810 j799 j804 j807 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j594 y: j595  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j599 
y: j754 
=== Succesors ===
=== Usages ===
v800 v802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j754  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j799 
y: j78 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j799 y: j78  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v800 
=== Succesors ===
trueSuccessor: v664 
falseSuccessor: v665 
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v800 #trueSuccessor: v664 #falseSuccessor: v665  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = LEA [v43|QWORD[.] + v45|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SUB (x: v63|QWORD, ~y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v66|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
result v67|V256_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v665 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B78" 
    successors "B68" "B78" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j793 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v668 
values: j78 j798 
=== Succesors ===
=== Usages ===
v906 j798 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v668 values: j78 j798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v667 
=== Succesors ===
next: v833 
=== Usages ===
j793 v671 v672 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v667 #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
result [v64|QWORD[.] + v68|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j774 
index: j793 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
value: v834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v906 value: v834 stateAfter: - lastLocationAccess: - #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid j798 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j793 
y: j572 
=== Succesors ===
=== Usages ===
j787 j793 v802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j793 y: j572  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j799 
y: j798 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j799 y: j798  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v671 
falseSuccessor: v673 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v671 #falseSuccessor: v673  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v64|QWORD[.] + v68|QWORD * 4], input: v67|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v668 
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v668 #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j787 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v676 
values: j78 j798 
=== Succesors ===
=== Usages ===
v905 j792 j781 v805 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v676 values: j78 j798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v675 v677 
=== Succesors ===
next: v695 
=== Usages ===
j787 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v675 v677 #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j599 
y: j760 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j760  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j804 
y: j787 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j804 y: j787  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v805 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v805 #trueSuccessor: v694 #falseSuccessor: v693  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v65|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
result [v64|QWORD[.] + v70|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j774 
index: j787 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j787  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
result v72|V128_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v905 
value: v836 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v905 value: v836 stateAfter: - lastLocationAccess: - #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j787 
y: j722 
=== Succesors ===
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j787 y: j722  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v64|QWORD[.] + v70|QWORD * 4], input: v72|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v70|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j781 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v687 
values: j792 j787 
=== Succesors ===
=== Usages ===
v904 j786 j775 v808 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: j792 j787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v686 v698 
=== Succesors ===
next: v701 
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v686 v698 #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j599 
y: j764 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j807 
y: j781 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j807 y: j781  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v808 
=== Succesors ===
trueSuccessor: v700 
falseSuccessor: v699 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v808 #trueSuccessor: v700 #falseSuccessor: v699  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v65|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
v700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v830 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
result [v64|QWORD[.] + v74|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j774 
index: j781 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
result v76|V64_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v904 
value: v835 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v904 value: v835 stateAfter: - lastLocationAccess: - #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j781 
y: j736 
=== Succesors ===
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j781 y: j736  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
v830 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v64|QWORD[.] + v74|QWORD * 4], input: v76|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j775 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v690 
values: j786 j781 
=== Succesors ===
=== Usages ===
v903 v811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v690 values: j786 j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v689 v704 
=== Succesors ===
next: v707 
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v689 v704 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j599 
y: j339 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j339  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j810 
y: j775 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j810 y: j775  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v811 
=== Succesors ===
trueSuccessor: v706 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v811 #trueSuccessor: v706 #falseSuccessor: v705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = DEC v65|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v710  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
result [v64|QWORD[.] + v78|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j774 
index: j775 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v903 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v903 value: i4 stateAfter: - lastLocationAccess: - #next: v692  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + v78|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v668 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v668  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B78 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B80" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v661 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v679 v692 v710 
=== Succesors ===
next: a457 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v679 v692 v710 #next: a457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a457 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$f, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:62) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfInt(stripped:123) [bci: 58]
at java.util.Arrays.copyOf(int[], int) [bci: -1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 146]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a547 
=== Succesors ===
next: v285 
=== Usages ===
v879 a284 
=== Predecessor ===
v680 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a547 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid a284 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
op: Compress
stamp: n! -
=== Inputs ===
value: a457 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
value: a284 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j582 
=== Usages ===
=== Predecessor ===
a457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v872 value: a284 stateAfter: - lastLocationAccess: - #next: j582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j582 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v588 
=== Usages ===
j584 
=== Predecessor ===
v285 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid i583 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j584 <|@
result v81|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j582 
y: i583 
=== Succesors ===
=== Usages ===
v893 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j582 y: i583  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v893 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
result [v81|QWORD[*] + v82|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j584 
index: j587 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: j587  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:669) [bci: 149]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v893 
value: i589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
j582 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v893 value: i589 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 163]
stamp: i32
=== Inputs ===
x: i857 
y: i34 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i857 y: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 164]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
value: i153 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v870 value: i153 stateAfter: - lastLocationAccess: - #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
result [v43|QWORD[.] + v3|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a457 
index: i857 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v398 
address: v879 
value: i104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v398 address: v879 value: i104 stateAfter: - lastLocationAccess: - #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = COMPRESSPOINTER (input: v43|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v81|QWORD[*] + v82|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD[.] + v3|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4581021292925742756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v613 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v613  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B81 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
result int[-73755|0xfffffffffffedfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -73755
stableDimension: 0
stamp: i32 [-73755] ⇊00000000fffedfe5 ⇈00000000fffedfe5
stampKind: i32
value: int[-73755|0xfffffffffffedfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-73755|0xfffffffffffedfe5]] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" "B27" "B82" "B40" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i487 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-108385 - -50963] ⇊00000000fffe0085
valueDescription: i32
=== Inputs ===
merge: v484 
values: i486 i491 i493 i495 i497 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v484 values: i486 i491 i493 i495 i497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v485 v490 v492 v494 v496 
=== Succesors ===
next: v489 
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v485 v490 v492 v494 v496 #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?83 
actionAndReason: i487 
speculation: a473 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?83 actionAndReason: i487 speculation: a473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: v4|QWORD[.] v3|DWORD v4|QWORD[.] v10|QWORD - v11|DWORD - - 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:5, 68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B85" 
    xhandlers
    flags 
    probability 4544406857824635433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B37" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i145 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i857 i38 
=== Succesors ===
=== Usages ===
i62 v297 v880 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v48 values: i857 i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v47 v49 
=== Succesors ===
next: v405 
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v47 v49 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i856 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i145 y: i856  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v402 #falseSuccessor: v404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v295 
=== Usages ===
v304 
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 163]
stamp: i32
=== Inputs ===
x: i145 
y: i34 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i145 y: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 164]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
value: i62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v870 value: i62 stateAfter: - lastLocationAccess: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
result [v4|QWORD[.] + v85|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a174 
index: i145 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v402 
address: v880 
value: i104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v402 address: v880 value: i104 stateAfter: - lastLocationAccess: - #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = INC v85|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v85|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 152
code: ResolvedJavaMethodBytecode<FDBigInteger.multBy10()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 672
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i104 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i104  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 298
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 168]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?59 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -76315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
locals: v0|QWORD[.] v19|DWORD 
>@ <|@ instruction DEOPT info [bci:152] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:657) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
result int[-43539|0xffffffffffff55ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43539
stableDimension: 0
stamp: i32 [-43539] ⇊00000000ffff55ed ⇈00000000ffff55ed
stampKind: i32
value: int[-43539|0xffffffffffff55ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43539|0xffffffffffff55ed], Object[null]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-49179|0xffffffffffff3fe5], v8|QWORD[.]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B7" "B89" "B88" "B4" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i474 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-84235 - -42259] ⇊00000000fffe10e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v470 
values: i478 i480 i483 i480 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v470 values: i478 i480 i483 i480  <|@  <|@
f <@~|@floating>@ <|@
tid a475 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v470 
values: a473 a481 a473 a481 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v470 values: a473 a481 a473 a481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v477 v479 v482 v907 
=== Succesors ===
next: v476 
=== Usages ===
i474 a475 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v477 v479 v482 v907 #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i474 
speculation: a475 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i474 speculation: a475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@640cae55 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B89" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = DEC v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVZXB [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610435499017699618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v4|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHL v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHL v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v10|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v11|DWORD * 4 + 16], y: v16|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = SHR v16|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD, v18|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613312558536229009
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD, v11|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9367512142471668 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v4|QWORD[.] + v20|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4605891998947352060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4590430224157318175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = DEC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v4|QWORD[.] + v23|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4583008599190775394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v21|DWORD 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 173] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B22 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4590430224157318176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B29" "B84" 
    xhandlers
    flags 
    probability 4589221975990334464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989761092150171 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B38" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2145541510078579 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" "B82" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B45" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4586597706856577017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL v32|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = LEA [v35|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND v36|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = ADD (x: v38|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4586533337998369191
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + v33|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD + 12], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v32|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v45|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LEA [v43|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = LEA [v1|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v45|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V128_DWORD = H [v47|QWORD[*] + v52|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v52|QWORD * 4], input: v54|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v45|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|V64_DWORD = H [v47|QWORD[*] + v56|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v56|QWORD * 4], input: v58|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v56|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = DEC v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v47|QWORD[*] + v60|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + v60|QWORD * 4], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B48" "B62" "B61" 
    successors "B64" "B79" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVSXD v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B80" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = COMPRESSPOINTER (input: v43|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v81|QWORD[*] + v82|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD[.] + v3|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = LEA [v43|QWORD[.] + v45|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SUB (x: v63|QWORD, ~y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v66|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v65|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v64|QWORD[.] + v70|QWORD * 4], input: v72|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v70|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v65|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v64|QWORD[.] + v74|QWORD * 4], input: v76|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = DEC v65|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + v78|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578968351461497041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578890204164692605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v2|DWORD, ~y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B85" 
    xhandlers
    flags 
    probability 4578812838340856213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v27|QWORD[*] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v28|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: intDisjointArraycopy(Word,Word,Word)void@0x106812e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B37 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B37" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = INC v85|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v85|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B78 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B78" 
    successors "B68" "B78" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v64|QWORD[.] + v68|QWORD * 4], input: v67|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4581021292925742756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B81 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B81" 
    successors "B53" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|V256_DWORD = H [v47|QWORD[*] + v49|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v49|QWORD * 4], input: v50|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v49|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4572371698438823018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572886649304485625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: v4|QWORD[.] v3|DWORD v4|QWORD[.] v10|QWORD - v11|DWORD - - 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 68] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    probability 4556874837494802676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 4549133451012314373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors 
    xhandlers
    flags 
    probability 4553612043504707450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -69217 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stack: v4|QWORD[.] int[1|0x1] v4|QWORD[.] int[0|0x0] v25|DWORD 
locals: v0|QWORD[.] v19|DWORD 
>@ <|@ instruction DEOPT info [bci:118] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4549083436742359534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B85" 
    xhandlers
    flags 
    probability 4544406857824635433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52507|0xffffffffffff32e5]] destination: B27 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" "B27" "B82" "B40" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: v4|QWORD[.] v3|DWORD v4|QWORD[.] v10|QWORD - v11|DWORD - - 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:5, 68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55067|0xffffffffffff28e5]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v21|DWORD 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21, 173] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79131|0xfffffffffffecae5]] destination: B30 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-49179|0xffffffffffff3fe5], v90|QWORD[.]] destination: B4 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B7" "B89" "B88" "B4" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-49179|0xffffffffffff3fe5], v89|QWORD[.]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42259|0xffffffffffff5aed], Object[null]] destination: B7 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54291|0xffffffffffff2bed]] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108385|0xfffffffffffe589f]] destination: B40 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43539|0xffffffffffff55ed], Object[null]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-73755|0xfffffffffffedfe5]] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50963|0xffffffffffff38ed]] destination: B14 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -76315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
locals: v0|QWORD[.] v19|DWORD 
>@ <|@ instruction DEOPT info [bci:152] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // nWords:int
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: getfield      #1          // isImmutable:boolean
    13: ifeq          56
    16: aload_0       
    17: getfield      #4          // nWords:int
    20: iconst_1      
    21: iadd          
    22: newarray      int
    24: astore_1      
    25: aload_1       
    26: aload_0       
    27: getfield      #4          // nWords:int
    30: aload_0       
    31: getfield      #2          // data:int[]
    34: aload_0       
    35: getfield      #4          // nWords:int
    38: aload_1       
    39: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
    42: iastore       
    43: new           #12         // sun.misc.FDBigInteger
    46: dup           
    47: aload_1       
    48: aload_0       
    49: getfield      #3          // offset:int
    52: invokespecial #10         // <init>:(int[], int)void
    55: areturn       
    56: aload_0       
    57: getfield      #2          // data:int[]
    60: aload_0       
    61: getfield      #4          // nWords:int
    64: aload_0       
    65: getfield      #2          // data:int[]
    68: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
    71: istore_1      
    72: iload_1       
    73: ifeq          172
    76: aload_0       
    77: getfield      #4          // nWords:int
    80: aload_0       
    81: getfield      #2          // data:int[]
    84: arraylength   
    85: if_icmpne     152
    88: aload_0       
    89: getfield      #2          // data:int[]
    92: iconst_0      
    93: iaload        
    94: ifne          134
    97: aload_0       
    98: getfield      #2          // data:int[]
   101: iconst_1      
   102: aload_0       
   103: getfield      #2          // data:int[]
   106: iconst_0      
   107: aload_0       
   108: dup           
   109: getfield      #4          // nWords:int
   112: iconst_1      
   113: isub          
   114: dup_x1        
   115: putfield      #4          // nWords:int
   118: invokestatic  #26         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   121: aload_0       
   122: dup           
   123: getfield      #3          // offset:int
   126: iconst_1      
   127: iadd          
   128: putfield      #3          // offset:int
   131: goto          152
   134: aload_0       
   135: aload_0       
   136: getfield      #2          // data:int[]
   139: aload_0       
   140: getfield      #2          // data:int[]
   143: arraylength   
   144: iconst_1      
   145: iadd          
   146: invokestatic  #19         // java.util.Arrays.copyOf:(int[], int)int[]
   149: putfield      #2          // data:int[]
   152: aload_0       
   153: getfield      #2          // data:int[]
   156: aload_0       
   157: dup           
   158: getfield      #4          // nWords:int
   161: dup_x1        
   162: iconst_1      
   163: iadd          
   164: putfield      #4          // nWords:int
   167: iload_1       
   168: iastore       
   169: goto          176
   172: aload_0       
   173: invokespecial #5          // trimLeadingZeros:()void
   176: aload_0       
   177: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@640cae55 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B89" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD = DEC rax|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction rdi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   82  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610435499017699618
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = SHL rax|QWORD y: 3 size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|QWORD = SHL rax|QWORD size: QWORD <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r11|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction r8|QWORD = SHR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  108  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613312558536229009
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   88  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOV r8|QWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.9367512142471668 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rdi|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction CMP [r11|QWORD[.] + rdi|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4605891998947352060
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4590430224157318175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  172  <|@ instruction rax|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rdi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  182  <|@ instruction CMP [r11|QWORD[.] + rdi|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4583008599190775394
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ st <@st|@reference-map: [rsi:0, r11:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: rsi|QWORD[.] r8|DWORD 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 173] <|@ <|@
      nr  190  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  160  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4590430224157318176
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B29" "B84" 
    xhandlers
    flags 
    probability 4589221975990334464
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.9989761092150171 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B38" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction CMP [r13|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.2145541510078579 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" "B82" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rbx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B45" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  366  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  368  <|@ instruction CMP rbx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4586597706856577017
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rax|DWORD = SHL rbx|DWORD y: 2 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  378  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: rbp|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4586533337998369191
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  406  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  408  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  412  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  416  <|@ instruction MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction stack:68|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  464  <|@ instruction CMP r14|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: = <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  470  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  484  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  486  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  522  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  524  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction xmm0|V128_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  536  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  538  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  540  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V64_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  560  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  562  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction r11|DWORD = MOV [r11|QWORD[*] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 4], y: r11|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B48" "B62" "B61" 
    successors "B64" "B79" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  592  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B80" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3 <|@ <|@
      nr  732  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  734  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  736  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  738  <|@ instruction MOVB (x: [r11|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  740  <|@ instruction r14|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  742  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  600  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  638  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  640  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  652  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  654  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  656  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  662  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  676  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  678  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  680  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  686  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  688  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578968351461497041
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578890204164692605
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B85" 
    xhandlers
    flags 
    probability 4578812838340856213
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  312  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 20] size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: intDisjointArraycopy(Word,Word,Word)void@0x106812e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction r14|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B37" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  780  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r11|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  618  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4581021292925742756
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B78 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B78" 
    successors "B68" "B78" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  624  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  626  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  628  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4581021292925742756
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B81 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B81" 
    successors "B53" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  506  <|@ instruction xmm0|V256_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  508  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4572371698438823018
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction stack:64|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction stack:68|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572886649304485625
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  454  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:12, stack:32, stack:48]
live-base-pointers: []
sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: stack:32|QWORD[.] stack:56|DWORD stack:32|QWORD[.] stack:64|QWORD - stack:52|DWORD - - 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
locals: stack:48|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 68] <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    probability 4556874837494802676
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:64|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction stack:68|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 4549133451012314373
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors 
    xhandlers
    flags 
    probability 4553612043504707450
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 668] y: -69217 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rsi:0, stack:48]
live-base-pointers: []
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stack: stack:32|QWORD[.] int[1|0x1] stack:32|QWORD[.] int[0|0x0] r14|DWORD 
locals: rsi|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:118] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4549083436742359534
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B85" 
    xhandlers
    flags 
    probability 4544406857824635433
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: int[-52507|0xffffffffffff32e5] <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" "B27" "B82" "B40" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: r8|QWORD[.] r10|DWORD r8|QWORD[.] rcx|QWORD - r9|DWORD - - 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:5, 68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-55067|0xffffffffffff28e5] <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: rsi|QWORD[.] r8|DWORD 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21, 173] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r11|DWORD = MOVE input: int[-79131|0xfffffffffffecae5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034] <|@ <|@
      nr   46  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B7" "B89" "B88" "B4" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  830  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  834  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034] <|@ <|@
      nr  822  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction r10|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE input: int[-42259|0xffffffffffff5aed] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-54291|0xffffffffffff2bed] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: int[-108385|0xfffffffffffe589f] <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B40 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  814  <|@ instruction r10|DWORD = MOVE input: int[-43539|0xffffffffffff55ed] <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction r11|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction r11|DWORD = MOVE input: int[-50963|0xffffffffffff38ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B14 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction MOV [r15|QWORD + 668] y: -76315 size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
locals: rsi|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:152] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // nWords:int
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: getfield      #1          // isImmutable:boolean
    13: ifeq          56
    16: aload_0       
    17: getfield      #4          // nWords:int
    20: iconst_1      
    21: iadd          
    22: newarray      int
    24: astore_1      
    25: aload_1       
    26: aload_0       
    27: getfield      #4          // nWords:int
    30: aload_0       
    31: getfield      #2          // data:int[]
    34: aload_0       
    35: getfield      #4          // nWords:int
    38: aload_1       
    39: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
    42: iastore       
    43: new           #12         // sun.misc.FDBigInteger
    46: dup           
    47: aload_1       
    48: aload_0       
    49: getfield      #3          // offset:int
    52: invokespecial #10         // <init>:(int[], int)void
    55: areturn       
    56: aload_0       
    57: getfield      #2          // data:int[]
    60: aload_0       
    61: getfield      #4          // nWords:int
    64: aload_0       
    65: getfield      #2          // data:int[]
    68: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
    71: istore_1      
    72: iload_1       
    73: ifeq          172
    76: aload_0       
    77: getfield      #4          // nWords:int
    80: aload_0       
    81: getfield      #2          // data:int[]
    84: arraylength   
    85: if_icmpne     152
    88: aload_0       
    89: getfield      #2          // data:int[]
    92: iconst_0      
    93: iaload        
    94: ifne          134
    97: aload_0       
    98: getfield      #2          // data:int[]
   101: iconst_1      
   102: aload_0       
   103: getfield      #2          // data:int[]
   106: iconst_0      
   107: aload_0       
   108: dup           
   109: getfield      #4          // nWords:int
   112: iconst_1      
   113: isub          
   114: dup_x1        
   115: putfield      #4          // nWords:int
   118: invokestatic  #26         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   121: aload_0       
   122: dup           
   123: getfield      #3          // offset:int
   126: iconst_1      
   127: iadd          
   128: putfield      #3          // offset:int
   131: goto          152
   134: aload_0       
   135: aload_0       
   136: getfield      #2          // data:int[]
   139: aload_0       
   140: getfield      #2          // data:int[]
   143: arraylength   
   144: iconst_1      
   145: iadd          
   146: invokestatic  #19         // java.util.Arrays.copyOf:(int[], int)int[]
   149: putfield      #2          // data:int[]
   152: aload_0       
   153: getfield      #2          // data:int[]
   156: aload_0       
   157: dup           
   158: getfield      #4          // nWords:int
   161: dup_x1        
   162: iconst_1      
   163: iadd          
   164: putfield      #4          // nWords:int
   167: iload_1       
   168: iastore       
   169: goto          176
   172: aload_0       
   173: invokespecial #5          // trimLeadingZeros:()void
   176: aload_0       
   177: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B6" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@640cae55 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B0 -> B6 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B89" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD = DEC rax|QWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction rdi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" "B3" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   82  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610435499017699618
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = SHL rax|QWORD y: 3 size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|QWORD = SHL rax|QWORD size: QWORD <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r11|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction r8|QWORD = SHR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  108  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613312558536229009
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   88  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOV r8|QWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.9367512142471668 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rdi|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    probability 4606612724384121216
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction CMP [r11|QWORD[.] + rdi|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4605891998947352060
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4590430224157318175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  172  <|@ instruction rax|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rdi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  182  <|@ instruction CMP [r11|QWORD[.] + rdi|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4583008599190775394
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ st <@st|@reference-map: [rsi:0, r11:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: rsi|QWORD[.] r8|DWORD 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 173] <|@ <|@
      nr  190  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592268068602906040
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  160  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4590430224157318176
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B29" "B85" 
    xhandlers
    flags 
    probability 4589221975990334464
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.9989761092150171 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B38" 
    xhandlers
    flags 
    probability 4589217309551432925
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction CMP [r13|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.2145541510078579 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" "B82" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rbx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B46" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  366  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  368  <|@ instruction CMP rbx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" "B44" 
    xhandlers
    flags 
    probability 4586597706856577017
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rax|DWORD = SHL rbx|DWORD y: 2 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  378  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: rbp|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B46 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4586533337998369191
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  406  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  408  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  410  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  412  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  416  <|@ instruction MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction stack:68|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors "B63" "B49" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  464  <|@ instruction CMP r14|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: = <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  470  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B47 -> B63 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B54" "B52" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  484  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  486  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B54 falseDestination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B57" "B56" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  522  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  524  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B57 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction xmm0|V128_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  536  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  538  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  540  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B54" 
    successors "B60" "B59" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B60 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V64_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  560  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  562  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B57" 
    successors "B63" "B62" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction r11|DWORD = MOV [r11|QWORD[*] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 4], y: r11|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" "B62" "B60" 
    successors "B64" "B80" 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  592  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B63" "B77" "B75" 
    successors 
    xhandlers
    flags 
    probability 4587312916392219526
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3 <|@ <|@
      nr  732  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  734  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  736  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  738  <|@ instruction MOVB (x: [r11|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  740  <|@ instruction r14|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  742  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  600  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B72" "B71" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  638  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  640  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B72 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  652  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  654  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  656  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B69" 
    successors "B75" "B74" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  662  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  676  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  678  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  680  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B72" 
    successors "B80" "B77" 
    xhandlers
    flags 
    probability 4582809316764849030
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  686  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  688  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B80 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4581021292925742756
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B34" 
    xhandlers
    flags 
    probability 4578968351461497041
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B32 -> B36 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4578890204164692605
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B34 -> B36 falseDestination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B85" 
    xhandlers
    flags 
    probability 4578812838340856213
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  312  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 20] size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: intDisjointArraycopy(Word,Word,Word)void@0x106812e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction r14|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B28" "B37" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  780  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4578850169852068521
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r11|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573802117510108038
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  618  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B67" 
    successors "B69" "B67" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  624  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  626  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  628  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B69 falseDestination: B67 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B54" "B52" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582809316764849030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  506  <|@ instruction xmm0|V256_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  508  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B54 falseDestination: B52 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572886649304485625
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction stack:64|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction stack:68|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  454  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:12, stack:32, stack:48]
live-base-pointers: []
sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: stack:32|QWORD[.] stack:56|DWORD stack:32|QWORD[.] stack:64|QWORD - stack:52|DWORD - - 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
locals: stack:48|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 68] <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 4553612043504707450
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV [r15|QWORD + 668] y: -69217 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rsi:0, stack:48]
live-base-pointers: []
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118]
stack: stack:32|QWORD[.] int[1|0x1] stack:32|QWORD[.] int[0|0x0] r14|DWORD 
locals: rsi|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:118] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: int[-52507|0xffffffffffff32e5] <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" "B27" "B82" "B40" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: r8|QWORD[.] r10|DWORD r8|QWORD[.] rcx|QWORD - r9|DWORD - - 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:5, 68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-55067|0xffffffffffff28e5] <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: rsi|QWORD[.] r8|DWORD 
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21, 173] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r11|DWORD = MOVE input: int[-79131|0xfffffffffffecae5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034] <|@ <|@
      nr   46  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B7" "B89" "B88" "B4" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  830  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  834  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034] <|@ <|@
      nr  822  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction r10|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE input: int[-42259|0xffffffffffff5aed] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-54291|0xffffffffffff2bed] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: int[-108385|0xfffffffffffe589f] <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B40 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  814  <|@ instruction r10|DWORD = MOVE input: int[-43539|0xffffffffffff55ed] <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction r11|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction r11|DWORD = MOVE input: int[-50963|0xffffffffffff38ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B14 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction MOV [r15|QWORD + 668] y: -76315 size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152]
locals: rsi|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:152] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // nWords:int
     4: ifne          9
     7: aload_0       
     8: areturn       
     9: aload_0       
    10: getfield      #1          // isImmutable:boolean
    13: ifeq          56
    16: aload_0       
    17: getfield      #4          // nWords:int
    20: iconst_1      
    21: iadd          
    22: newarray      int
    24: astore_1      
    25: aload_1       
    26: aload_0       
    27: getfield      #4          // nWords:int
    30: aload_0       
    31: getfield      #2          // data:int[]
    34: aload_0       
    35: getfield      #4          // nWords:int
    38: aload_1       
    39: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
    42: iastore       
    43: new           #12         // sun.misc.FDBigInteger
    46: dup           
    47: aload_1       
    48: aload_0       
    49: getfield      #3          // offset:int
    52: invokespecial #10         // <init>:(int[], int)void
    55: areturn       
    56: aload_0       
    57: getfield      #2          // data:int[]
    60: aload_0       
    61: getfield      #4          // nWords:int
    64: aload_0       
    65: getfield      #2          // data:int[]
    68: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
    71: istore_1      
    72: iload_1       
    73: ifeq          172
    76: aload_0       
    77: getfield      #4          // nWords:int
    80: aload_0       
    81: getfield      #2          // data:int[]
    84: arraylength   
    85: if_icmpne     152
    88: aload_0       
    89: getfield      #2          // data:int[]
    92: iconst_0      
    93: iaload        
    94: ifne          134
    97: aload_0       
    98: getfield      #2          // data:int[]
   101: iconst_1      
   102: aload_0       
   103: getfield      #2          // data:int[]
   106: iconst_0      
   107: aload_0       
   108: dup           
   109: getfield      #4          // nWords:int
   112: iconst_1      
   113: isub          
   114: dup_x1        
   115: putfield      #4          // nWords:int
   118: invokestatic  #26         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   121: aload_0       
   122: dup           
   123: getfield      #3          // offset:int
   126: iconst_1      
   127: iadd          
   128: putfield      #3          // offset:int
   131: goto          152
   134: aload_0       
   135: aload_0       
   136: getfield      #2          // data:int[]
   139: aload_0       
   140: getfield      #2          // data:int[]
   143: arraylength   
   144: iconst_1      
   145: iadd          
   146: invokestatic  #19         // java.util.Arrays.copyOf:(int[], int)int[]
   149: putfield      #2          // data:int[]
   152: aload_0       
   153: getfield      #2          // data:int[]
   156: aload_0       
   157: dup           
   158: getfield      #4          // nWords:int
   161: dup_x1        
   162: iconst_1      
   163: iadd          
   164: putfield      #4          // nWords:int
   167: iload_1       
   168: iastore       
   169: goto          176
   172: aload_0       
   173: invokespecial #5          // trimLeadingZeros:()void
   176: aload_0       
   177: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c2440448b6e18468b14ed0c000000448b7610458bdd49c1e3034c895c24304183fe010f8c1b0000004963c648ffc8418bfa483bf80f86c80400004585d20f84980400004585f60f84cb0400000fb6461485c00f85ed04000041b90000000049c7c000000000e9290000000f1f840000000000438b448b10488bf848c1e70348d1e04803f84c03c74789448b1049c1e82041ffc1453bf17fda418bc885c90f859a0000004183fe010f8cbe040000418bfeffcf443bd70f86d203000041837cbb10000f8416000000488bc6488b6c24404883c448850500000000c5f877c3448bc7e9330000000f1f8000000000660f1f440000418bc0ffc8443bd00f86b00300004963f841837cbb0c000f8514000000850500000000448bc04183f8017dd4e90604000044894610488bc6488b6c24404883c448850500000000c5f877c3894c242c453bf20f856c0200004585d20f8477030000488974242042833ced10000000000f84f2010000418bdaffc3413bde0f86e203000085db0f8cb4030000498b7f60498b577081fbffffff000f83ab0200008bc3c1e0028d401783e0f84863c0488be84803ef483bea0f878e02000049896f600f188438c00000000f188438000100000f188438400100000f18843880010000895f0c48c70701000000c74708addeadde488bc74489742418458bf244896c240c448beb4181feffffff7f458bd6450f44d54d63d24983fa010f8c7c000000448b5c240c4c8d40104e8d1cdd100000004d8d4af84d85c948c7c1000000000f8dec0100004d8d4afc493bc90f8f13000000c4c17a6f048bc4c17a7f04884c8d4904498bc94d8d4afe493bc90f8f13000000c4c1f96e048bc4c1f97e04884c8d4902498bc94d8bca49ffc9493bc90f8f08000000458b1c8b45891c884d63dd4d3bda0f8f530000008b4c242c448b542418488b7424204c8bd849c1eb0344895e184c8bde49c1eb0949b800e01b170100000047882403458bf241ffc64489761042894c9010488bc6488b6c24404883c448850500000000c5f877c34e8d4490104d2bda4d8d53f84d85d20f8dea00000049c7c1000000004d8d53fc4d3bca0f8f11000000c5f9efc0c4817a7f04884d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481f97e04884d8d51024d8bca49ffcb4d3bcb0f8f49ffffff47892488e940ffffff41ffce448976104585f60f8c0c010000418bfa412bfe83ff010f8cfd000000448954241c498bfb498bd34d63c6488d7f14488d7210498bd04489742418e80000000090b801000000488b74242003460c89460c448b742418448b54241c453bd68b4c242c0f86bc0100004c8b5c2430418bc6ffc089461043894cb310488bc6488b6c24404883c448850500000000c5f877c3c5f9efc049c7c100000000660f1f440000660f1f440000c4817e7f04884d8d49084d3bca7ef1e9f2feffff660f1f440000660f1f440000c4c17e6f048bc4c17e7f0488488d4908493bc97eebe9fafdffff44894c241c4c89442410448974241844896c240c48baaddeaddeaddeadde488bf28bd3b900000000448beb458bf2e80000000090e981fdffff41c7879c0200009ff1feff4d89a7a8020000e80000000090498bc84d8bc3458bd641bbe532ffff45899f9c0200004d89a7a8020000e8000000009041bae528ffff4589979c0200004d89a7a8020000e80000000090498bc84d8bc3458bd641bbe5cafeffebc149baaddeaddeaddeadde4d8bda41bae53fffff4589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bae53fffffebd749bb000000000000000041baed5affffebc541baed2bffffeb85498bc84d8bc3458bd641bb9f58feffe957ffffff49bb000000000000000041baed55ffffeb97498bc84d8bc3458bd641bbe5dffeffe931ffffff498bc84d8bc3458bd641bbed38ffffe91dffffff41c7879c020000e5d5feff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@640cae55 slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 52 8 r10|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r13:0]at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 r14|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 64 12 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3  <||@
  Comment 71 14 stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 76 16 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 80 18 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B0 -> B6 falseDestination: B0 -> B2  <||@
  Comment 86 block B2 null  <||@
  Comment 86 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 26 rax|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 89 28 rax|QWORD = DEC rax|QWORD size: QWORD  <||@
  Comment 92 30 rdi|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 95 32 CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 98 34 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B89  <||@
  Comment 104 block B3 null  <||@
  Comment 104 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 104 38 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 107 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B6  <||@
  Comment 113 block B6 null  <||@
  Comment 113 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 58 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 116 60 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 122 block B8 null  <||@
  Comment 122 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 122 72 rax|DWORD = MOVZXB [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 126 74 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 128 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B88  <||@
  Comment 134 block B9 null  <||@
  Comment 134 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 80 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 140 82 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 147 84 JUMP ~[] destination: B9 -> B10  <||@
  Comment 152 block B11 loop 0 depth 1 header:80|LoopBegin  <||@
  Comment 152 92 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 94 rax|QWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 165 96 rdi|QWORD = SHL rax|QWORD y: 3 size: QWORD  <||@
  Comment 172 98 rax|QWORD = SHL rax|QWORD size: QWORD  <||@
  Comment 175 100 rdi|QWORD = ADD (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 178 102 r8|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 181 104 MOV (x: [r11|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD  <||@
  Comment 186 106 r8|QWORD = SHR r8|QWORD y: 32 size: QWORD  <||@
  Comment 190 108 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 193 110 JUMP ~[] destination: B11 -> B10  <||@
  Comment 193 block B10 loop 0 depth 1 header:80|LoopBegin  <||@
  Comment 193 86 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 193 88 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 196 90 BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 198 block B12 null  <||@
  Comment 198 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 198 114 rcx|DWORD = MOV r8|QWORD size: DWORD  <||@
  Comment 201 116 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 203 118 BRANCH trueDestinationProbability: 0.9367512142471668 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B28  <||@
  Comment 209 block B13 null  <||@
  Comment 209 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 122 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 213 124 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 219 block B15 null  <||@
  Comment 219 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 140 rdi|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 224 142 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 227 144 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B27  <||@
  Comment 233 block B16 null  <||@
  Comment 233 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 148 CMP [r11|QWORD[.] + rdi|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 239 150 BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B26  <||@
  Comment 245 block B26 null  <||@
  Comment 245 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 218 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 248 220 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 257 12  <||@
  Comment 267 block B17 null  <||@
  Comment 267 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 154 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 270 156 JUMP ~[] destination: B17 -> B18  <||@
  Comment 275 block B20 loop 1 depth 1 header:118|LoopBegin  <||@
  Comment 275 170 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 288 172 rax|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 293 174 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 296 176 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24  <||@
  Comment 302 block B21 loop 1 depth 1 header:118|LoopBegin  <||@
  Comment 302 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 302 180 rdi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 305 182 CMP [r11|QWORD[.] + rdi|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 311 184 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 317 block B22 loop 1 depth 1 header:118|LoopBegin  <||@
  Comment 317 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 188 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 173]  <||@
  Comment 317 [rsi:0, r11:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1        
     locals:  |rsi|QWORD[.]  |r8|DWORD 
  at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 317 {infopoint: SAFEPOINT}  <||@
  Comment 317 11  <||@
  Comment 323 190 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 326 192 JUMP ~[] destination: B22 -> B18  <||@
  Comment 326 block B18 loop 1 depth 1 header:118|LoopBegin  <||@
  Comment 326 158 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 326 160 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 330 162 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 337 block B23 null  <||@
  Comment 337 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 337 196 MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 341 198 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 344 200 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 353 12  <||@
  Comment 363 block B28 null  <||@
  Comment 363 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 363 236 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 367 238 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 370 240 BRANCH trueDestinationProbability: 0.9989761092150171 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B85  <||@
  Comment 376 block B29 null  <||@
  Comment 376 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 244 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 379 246 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 385 block B31 null  <||@
  Comment 385 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 262 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 390 264 CMP [r13|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 399 266 BRANCH trueDestinationProbability: 0.2145541510078579 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B38  <||@
  Comment 405 block B38 null  <||@
  Comment 405 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 338 rbx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 410 340 CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 413 342 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B82  <||@
  Comment 419 block B39 null  <||@
  Comment 419 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 419 346 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 421 348 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 427 block B41 null  <||@
  Comment 427 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 364 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 431 366 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 435 368 CMP rbx|DWORD y: 16777215 size: DWORD  <||@
  Comment 441 370 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B46  <||@
  Comment 447 block B42 null  <||@
  Comment 447 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 374 rax|DWORD = SHL rbx|DWORD y: 2 size: DWORD  <||@
  Comment 452 376 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 455 378 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 458 380 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 461 382 rbp|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 467 384 CMP (x: rbp|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 470 386 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B46 falseDestination: B42 -> B44  <||@
  Comment 476 block B44 null  <||@
  Comment 476 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 476 402 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 480 404 AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 192] instr: 0  <||@
  Comment 488 406 AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 496 408 AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 504 410 AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 512 412 MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 515 414 MOV [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 522 416 MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 522 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 529 418 rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 529 420 rax|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 532 422 stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 537 424 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 540 426 stack:68|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 545 428 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 548 430 JUMP ~[] destination: B44 -> B47  <||@
  Comment 548 block B47 null  <||@
  Comment 548 462 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 548 464 CMP r14|DWORD y: 2147483647 size: DWORD  <||@
  Comment 555 466 r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: =  <||@
  Comment 562 468 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 565 470 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 569 472 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B47 -> B63 falseDestination: B47 -> B49  <||@
  Comment 575 block B49 null  <||@
  Comment 575 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 480 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 580 482 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 584 484 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 592 486 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 596 488 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 599 494 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 606 490 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B54 falseDestination: B49 -> B52  <||@
  Comment 612 block B54 null  <||@
  Comment 612 520 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 612 522 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 616 524 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 619 526 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B57 falseDestination: B54 -> B56  <||@
  Comment 625 block B56 null  <||@
  Comment 625 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 534 xmm0|V128_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 631 536 J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 637 538 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 641 540 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 644 542 JUMP ~[] destination: B56 -> B57  <||@
  Comment 644 block B57 null  <||@
  Comment 644 544 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 644 546 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 648 548 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 651 550 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B60 falseDestination: B57 -> B59  <||@
  Comment 657 block B59 null  <||@
  Comment 657 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 657 558 xmm0|V64_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 663 560 J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 669 562 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 673 564 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 676 566 JUMP ~[] destination: B59 -> B60  <||@
  Comment 676 block B60 null  <||@
  Comment 676 568 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 676 570 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 682 572 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 685 574 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62  <||@
  Comment 691 block B62 null  <||@
  Comment 691 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 691 582 r11|DWORD = MOV [r11|QWORD[*] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 695 584 MOV (x: [r8|QWORD[.] + rcx|QWORD * 4], y: r11|DWORD) size: DWORD  <||@
  Comment 699 586 JUMP ~[] destination: B62 -> B63  <||@
  Comment 699 block B63 null  <||@
  Comment 699 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 699 590 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 702 592 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 705 594 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B80  <||@
  Comment 711 block B80 null  <||@
  Comment 711 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 720 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 715 722 r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 720 724 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 725 730 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3  <||@
  Comment 732 732 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 736 734 r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 743 736 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 753 738 MOVB (x: [r11|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 757 740 r14|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 763 742 MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 767 744 MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 772 746 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 775 748 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 784 12  <||@
  Comment 794 block B64 null  <||@
  Comment 794 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 598 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 4 + 16] size: QWORD  <||@
  Comment 799 600 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 802 602 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 806 604 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 809 606 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 815 block B65 null  <||@
  Comment 815 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 610 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 822 612 JUMP ~[] destination: B65 -> B69  <||@
  Comment 822 block B69 null  <||@
  Comment 822 636 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 822 638 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 826 640 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 829 642 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B72 falseDestination: B69 -> B71  <||@
  Comment 835 block B71 null  <||@
  Comment 835 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 835 650 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 839 652 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 845 654 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 849 656 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 852 658 JUMP ~[] destination: B71 -> B72  <||@
  Comment 852 block B72 null  <||@
  Comment 852 660 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 852 662 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 856 664 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 859 666 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74  <||@
  Comment 865 block B74 null  <||@
  Comment 865 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 865 674 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 869 676 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 875 678 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 879 680 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 882 682 JUMP ~[] destination: B74 -> B75  <||@
  Comment 882 block B75 null  <||@
  Comment 882 684 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 882 686 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 885 688 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 888 690 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B80 falseDestination: B75 -> B77  <||@
  Comment 894 block B77 null  <||@
  Comment 894 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 894 704 MOV (x: [r8|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 898 712 JUMP ~[] destination: B77 -> B80  <||@
  Comment 903 block B32 null  <||@
  Comment 903 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 270 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 906 272 MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 910 274 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 913 276 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B32 -> B36 falseDestination: B32 -> B34  <||@
  Comment 919 block B34 null  <||@
  Comment 919 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 919 284 rdi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 925 286 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 928 288 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B34 -> B36 falseDestination: B34 -> B37  <||@
  Comment 934 block B37 null  <||@
  Comment 934 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 934 304 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 939 306 rdi|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 942 308 rdx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 945 310 r8|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 948 312 rdi|QWORD = LEA [rdi|QWORD[*] + 20] size: QWORD  <||@
  Comment 952 314 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 956 316 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 959 318 stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 964 320 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: intDisjointArraycopy(Word,Word,Word)void@0x106812e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 964 {Field[name=StubRoutines::_jint_disjoint_arraycopy, type=address, offset=0, address=0x105a7dcb0, value=0x106812e00]:0x106812e00}  <||@
  Comment 970 322 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 975 324 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 980 326 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 983 328 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 986 330 r14|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 991 332 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 996 334 JUMP ~[] destination: B37 -> B85  <||@
  Comment 996 block B85 null  <||@
  Comment 996 778 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 996 780 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 999 786 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1003 782 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 1009 block B86 null  <||@
  Comment 1009 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1009 788 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1014 790 rax|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 1019 792 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1022 794 MOV (x: [r11|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1027 796 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 798 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1039 12  <||@
  Comment 1049 block B66 null  <||@
  Comment 1049 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 616 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1053 618 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1060 620 JUMP ~[] destination: B66 -> B67  <||@
  Comment 1060 block B67 loop 3 depth 1 header:668|LoopBegin  <||@
  Comment 1060 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1072 624 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1078 626 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1082 628 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1085 630 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B69 falseDestination: B67 -> B67  <||@
  Comment 1092 block B52 loop 2 depth 1 header:613|LoopBegin  <||@
  Comment 1092 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 506 xmm0|V256_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1110 508 J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1116 510 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1120 512 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1123 514 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B54 falseDestination: B52 -> B52  <||@
  Comment 1130 block B46 null  <||@
  Comment 1130 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1130 434 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1135 436 stack:64|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1140 438 stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1145 440 stack:68|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1150 446 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1150 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1160 448 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1163 450 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1165 452 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1170 454 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1173 456 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1176 458 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 68]  <||@
  Comment 1176 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1181 [stack:12, stack:32, stack:48]at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3               |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:32|QWORD[.]  |stack:64|QWORD  |-  |stack:52|DWORD  |-  |- 
  at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |-   <||@
  Comment 1182 460 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1187 block B36 null  <||@
  Comment 1187 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 296 MOV [r15|QWORD + 668] y: -69217 size: DWORD  <||@
  Comment 1198 298 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1205 300 DEOPT info [bci:118]  <||@
  Comment 1205 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1210 [rsi:0, stack:48]at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118, duringCall: false, rethrow: false]
              |0                  |1           |2                  |3           |4         
     locals:  |rsi|QWORD[.]       |rcx|DWORD   |                   |            |          
     stack:   |stack:32|QWORD[.]  |int[1|0x1]  |stack:32|QWORD[.]  |int[0|0x0]  |r14|DWORD   <||@
  Comment 1211 block B27 null  <||@
  Comment 1211 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1211 224 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1214 226 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1217 228 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1220 230 r11|DWORD = MOVE input: int[-52507|0xffffffffffff32e5]  <||@
  Comment 1226 232 JUMP ~[] destination: B27 -> B83  <||@
  Comment 1226 block B83 null  <||@
  Comment 1226 766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1226 768 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1233 770 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1240 772 DEOPT info [bci:5, 68]  <||@
  Comment 1240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1245 [rsi:0, r8:0]at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5, duringCall: false, rethrow: false]
              |0            |1          |2            |3          |4  |5         |6  |7 
     locals:  |r8|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |rcx|QWORD  |-  |r9|DWORD  |-  |- 
  at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1246 block B24 null  <||@
  Comment 1246 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1246 204 r10|DWORD = MOVE input: int[-55067|0xffffffffffff28e5]  <||@
  Comment 1252 206 JUMP ~[] destination: B24 -> B25  <||@
  Comment 1252 block B25 null  <||@
  Comment 1252 208 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1252 210 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1259 212 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1266 214 DEOPT info [bci:21, 173]  <||@
  Comment 1266 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1271 [rsi:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1        
     locals:  |rsi|QWORD[.]  |r8|DWORD 
  at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1272 block B30 null  <||@
  Comment 1272 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 250 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1275 252 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1278 254 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1281 256 r11|DWORD = MOVE input: int[-79131|0xfffffffffffecae5]  <||@
  Comment 1287 258 JUMP ~[] destination: B30 -> B83  <||@
  Comment 1289 block B4 null  <||@
  Comment 1289 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1289 44 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034]  <||@
  Comment 1289 {Object[d.a@505626034]}  <||@
  Comment 1299 46 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1302 48 r10|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5]  <||@
  Comment 1308 50 JUMP ~[] destination: B4 -> B90  <||@
  Comment 1308 block B90 null  <||@
  Comment 1308 828 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1308 830 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1315 832 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1322 834 DEOPT info [bci:0]  <||@
  Comment 1322 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1327 [rsi:0]at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1328 block B89 null  <||@
  Comment 1328 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1328 820 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034]  <||@
  Comment 1328 {Object[d.a@505626034]}  <||@
  Comment 1338 822 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1341 824 r10|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5]  <||@
  Comment 1347 826 JUMP ~[] destination: B89 -> B90  <||@
  Comment 1349 block B7 null  <||@
  Comment 1349 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1349 64 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1359 66 r10|DWORD = MOVE input: int[-42259|0xffffffffffff5aed]  <||@
  Comment 1365 68 JUMP ~[] destination: B7 -> B90  <||@
  Comment 1367 block B19 null  <||@
  Comment 1367 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 166 r10|DWORD = MOVE input: int[-54291|0xffffffffffff2bed]  <||@
  Comment 1373 168 JUMP ~[] destination: B19 -> B25  <||@
  Comment 1375 block B40 null  <||@
  Comment 1375 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 352 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1378 354 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1381 356 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1384 358 r11|DWORD = MOVE input: int[-108385|0xfffffffffffe589f]  <||@
  Comment 1390 360 JUMP ~[] destination: B40 -> B83  <||@
  Comment 1395 block B88 null  <||@
  Comment 1395 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1395 812 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1405 814 r10|DWORD = MOVE input: int[-43539|0xffffffffffff55ed]  <||@
  Comment 1411 816 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1413 block B82 null  <||@
  Comment 1413 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 756 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1416 758 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 760 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1422 762 r11|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5]  <||@
  Comment 1428 764 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1433 block B14 null  <||@
  Comment 1433 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1433 128 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1436 130 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 132 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1442 134 r11|DWORD = MOVE input: int[-50963|0xffffffffffff38ed]  <||@
  Comment 1448 136 JUMP ~[] destination: B14 -> B83  <||@
  Comment 1453 block B87 null  <||@
  Comment 1453 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1453 804 MOV [r15|QWORD + 668] y: -76315 size: DWORD  <||@
  Comment 1464 806 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1471 808 DEOPT info [bci:152]  <||@
  Comment 1471 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1476 [rsi:0]at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rcx|DWORD   <||@
  Comment 1477 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1477 4  <||@
  Comment 1483 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1483 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9609[sun.misc.FDBigInteger.multBy10()]"
  method "HotSpotCompilation-9609[sun.misc.FDBigInteger.multBy10()]"
  date 1527005208379
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bc3600 448b560849c1e203493bc20f854f28c4fe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c2440448b6e18468b14ed0c000000448b7610458bdd49c1e3034c895c24304183fe010f8c1b0000004963c648ffc8418bfa483bf80f86c80400004585d20f84980400004585f60f84cb0400000fb6461485c00f85ed04000041b90000000049c7c000000000e9290000000f1f840000000000438b448b10488bf848c1e70348d1e04803f84c03c74789448b1049c1e82041ffc1453bf17fda418bc885c90f859a0000004183fe010f8cbe040000418bfeffcf443bd70f86d203000041837cbb10000f8416000000488bc6488b6c24404883c4488505ffb8ccfcc5f877c3448bc7e9330000000f1f8000000000660f1f440000418bc0ffc8443bd00f86b00300004963f841837cbb0c000f85140000008505c3b8ccfc448bc04183f8017dd4e90604000044894610488bc6488b6c24404883c44885059fb8ccfcc5f877c3894c242c453bf20f856c0200004585d20f8477030000488974242042833ced10000000000f84f2010000418bdaffc3413bde0f86e203000085db0f8cb4030000498b7f60498b577081fbffffff000f83ab0200008bc3c1e0028d401783e0f84863c0488be84803ef483bea0f878e02000049896f600f188438c00000000f188438000100000f188438400100000f18843880010000895f0c48c70701000000c747086d0100f8488bc74489742418458bf244896c240c448beb4181feffffff7f458bd6450f44d54d63d24983fa010f8c7c000000448b5c240c4c8d40104e8d1cdd100000004d8d4af84d85c948c7c1000000000f8dec0100004d8d4afc493bc90f8f13000000c4c17a6f048bc4c17a7f04884c8d4904498bc94d8d4afe493bc90f8f13000000c4c1f96e048bc4c1f97e04884c8d4902498bc94d8bca49ffc9493bc90f8f08000000458b1c8b45891c884d63dd4d3bda0f8f530000008b4c242c448b542418488b7424204c8bd849c1eb0344895e184c8bde49c1eb0949b800e01b170100000047882403458bf241ffc64489761042894c9010488bc6488b6c24404883c4488505f0b6ccfcc5f877c34e8d4490104d2bda4d8d53f84d85d20f8dea00000049c7c1000000004d8d53fc4d3bca0f8f11000000c5f9efc0c4817a7f04884d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481f97e04884d8d51024d8bca49ffcb4d3bcb0f8f49ffffff47892488e940ffffff41ffce448976104585f60f8c0c010000418bfa412bfe83ff010f8cfd000000448954241c498bfb498bd34d63c6488d7f14488d7210498bd04489742418e837f4c4fe90b801000000488b74242003460c89460c448b742418448b54241c453bd68b4c242c0f86bc0100004c8b5c2430418bc6ffc089461043894cb310488bc6488b6c24404883c4488505f1b5ccfcc5f877c3c5f9efc049c7c100000000660f1f440000660f1f440000c4817e7f04884d8d49084d3bca7ef1e9f2feffff660f1f440000660f1f440000c4c17e6f048bc4c17e7f0488488d4908493bc97eebe9fafdffff44894c241c4c89442410448974241844896c240c48ba680b00c007000000488bf28bd3b900000000448beb458bf2e843333dff90e981fdffff41c7879c0200009ff1feff4d89a7a8020000e8443bc4fe90498bc84d8bc3458bd641bbe532ffff45899f9c0200004d89a7a8020000e8213bc4fe9041bae528ffff4589979c0200004d89a7a8020000e8073bc4fe90498bc84d8bc3458bd641bbe5cafeffebc149baf85ce9b9070000004d8bda41bae53fffff4589979c0200004d899fa8020000e8cf3ac4fe9049baf85ce9b9070000004d8bda41bae53fffffebd749bb000000000000000041baed5affffebc541baed2bffffeb85498bc84d8bc3458bd641bb9f58feffe957ffffff49bb000000000000000041baed55ffffeb97498bc84d8bc3458bd641bbe5dffeffe931ffffff498bc84d8bc3458bd641bbed38ffffe91dffffff41c7879c020000e5d5feff4d89a7a8020000e83a3ac4fe90e8566a08ff90e83039c4fe90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@640cae55 slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 52 8 r10|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r13:0]at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 r14|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 64 12 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3  <||@
  Comment 71 14 stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 76 16 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 80 18 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B0 -> B6 falseDestination: B0 -> B2  <||@
  Comment 86 block B2 null  <||@
  Comment 86 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 26 rax|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 89 28 rax|QWORD = DEC rax|QWORD size: QWORD  <||@
  Comment 92 30 rdi|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 95 32 CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 98 34 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B89  <||@
  Comment 104 block B3 null  <||@
  Comment 104 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 104 38 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 107 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B6  <||@
  Comment 113 block B6 null  <||@
  Comment 113 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 58 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 116 60 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 122 block B8 null  <||@
  Comment 122 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 122 72 rax|DWORD = MOVZXB [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 126 74 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 128 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B88  <||@
  Comment 134 block B9 null  <||@
  Comment 134 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 80 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 140 82 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 147 84 JUMP ~[] destination: B9 -> B10  <||@
  Comment 152 block B11 loop 0 depth 1 header:80|LoopBegin  <||@
  Comment 152 92 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 94 rax|QWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 165 96 rdi|QWORD = SHL rax|QWORD y: 3 size: QWORD  <||@
  Comment 172 98 rax|QWORD = SHL rax|QWORD size: QWORD  <||@
  Comment 175 100 rdi|QWORD = ADD (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 178 102 r8|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 181 104 MOV (x: [r11|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD  <||@
  Comment 186 106 r8|QWORD = SHR r8|QWORD y: 32 size: QWORD  <||@
  Comment 190 108 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 193 110 JUMP ~[] destination: B11 -> B10  <||@
  Comment 193 block B10 loop 0 depth 1 header:80|LoopBegin  <||@
  Comment 193 86 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 193 88 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 196 90 BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 198 block B12 null  <||@
  Comment 198 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 198 114 rcx|DWORD = MOV r8|QWORD size: DWORD  <||@
  Comment 201 116 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 203 118 BRANCH trueDestinationProbability: 0.9367512142471668 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B28  <||@
  Comment 209 block B13 null  <||@
  Comment 209 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 122 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 213 124 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 219 block B15 null  <||@
  Comment 219 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 140 rdi|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 224 142 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 227 144 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B27  <||@
  Comment 233 block B16 null  <||@
  Comment 233 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 148 CMP [r11|QWORD[.] + rdi|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 239 150 BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B26  <||@
  Comment 245 block B26 null  <||@
  Comment 245 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 218 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 248 220 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 257 12  <||@
  Comment 267 block B17 null  <||@
  Comment 267 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 154 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 270 156 JUMP ~[] destination: B17 -> B18  <||@
  Comment 275 block B20 loop 1 depth 1 header:118|LoopBegin  <||@
  Comment 275 170 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 288 172 rax|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 293 174 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 296 176 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B24  <||@
  Comment 302 block B21 loop 1 depth 1 header:118|LoopBegin  <||@
  Comment 302 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 302 180 rdi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 305 182 CMP [r11|QWORD[.] + rdi|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 311 184 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 317 block B22 loop 1 depth 1 header:118|LoopBegin  <||@
  Comment 317 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 188 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 173]  <||@
  Comment 317 [rsi:0, r11:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1        
     locals:  |rsi|QWORD[.]  |r8|DWORD 
  at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 317 {infopoint: SAFEPOINT}  <||@
  Comment 317 11  <||@
  Comment 323 190 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 326 192 JUMP ~[] destination: B22 -> B18  <||@
  Comment 326 block B18 loop 1 depth 1 header:118|LoopBegin  <||@
  Comment 326 158 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 326 160 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 330 162 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 337 block B23 null  <||@
  Comment 337 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 337 196 MOV (x: [rsi|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 341 198 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 344 200 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 353 12  <||@
  Comment 363 block B28 null  <||@
  Comment 363 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 363 236 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 367 238 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 370 240 BRANCH trueDestinationProbability: 0.9989761092150171 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B85  <||@
  Comment 376 block B29 null  <||@
  Comment 376 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 244 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 379 246 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 385 block B31 null  <||@
  Comment 385 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 262 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 390 264 CMP [r13|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 399 266 BRANCH trueDestinationProbability: 0.2145541510078579 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B38  <||@
  Comment 405 block B38 null  <||@
  Comment 405 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 338 rbx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 410 340 CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 413 342 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B82  <||@
  Comment 419 block B39 null  <||@
  Comment 419 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 419 346 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 421 348 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 427 block B41 null  <||@
  Comment 427 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 364 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 431 366 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 435 368 CMP rbx|DWORD y: 16777215 size: DWORD  <||@
  Comment 441 370 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B46  <||@
  Comment 447 block B42 null  <||@
  Comment 447 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 374 rax|DWORD = SHL rbx|DWORD y: 2 size: DWORD  <||@
  Comment 452 376 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 455 378 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 458 380 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 461 382 rbp|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 467 384 CMP (x: rbp|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 470 386 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B46 falseDestination: B42 -> B44  <||@
  Comment 476 block B44 null  <||@
  Comment 476 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 476 402 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 480 404 AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 192] instr: 0  <||@
  Comment 488 406 AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 496 408 AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 504 410 AMD64PREFETCH ~[rax|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 512 412 MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 515 414 MOV [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 522 416 MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 522 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 529 418 rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 529 420 rax|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 532 422 stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 537 424 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 540 426 stack:68|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 545 428 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 548 430 JUMP ~[] destination: B44 -> B47  <||@
  Comment 548 block B47 null  <||@
  Comment 548 462 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 548 464 CMP r14|DWORD y: 2147483647 size: DWORD  <||@
  Comment 555 466 r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: =  <||@
  Comment 562 468 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 565 470 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 569 472 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B47 -> B63 falseDestination: B47 -> B49  <||@
  Comment 575 block B49 null  <||@
  Comment 575 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 480 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 580 482 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 584 484 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 592 486 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 596 488 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 599 494 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 606 490 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B54 falseDestination: B49 -> B52  <||@
  Comment 612 block B54 null  <||@
  Comment 612 520 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 612 522 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 616 524 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 619 526 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B57 falseDestination: B54 -> B56  <||@
  Comment 625 block B56 null  <||@
  Comment 625 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 534 xmm0|V128_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 631 536 J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 637 538 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 641 540 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 644 542 JUMP ~[] destination: B56 -> B57  <||@
  Comment 644 block B57 null  <||@
  Comment 644 544 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 644 546 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 648 548 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 651 550 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B60 falseDestination: B57 -> B59  <||@
  Comment 657 block B59 null  <||@
  Comment 657 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 657 558 xmm0|V64_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 663 560 J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 669 562 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 673 564 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 676 566 JUMP ~[] destination: B59 -> B60  <||@
  Comment 676 block B60 null  <||@
  Comment 676 568 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 676 570 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 682 572 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 685 574 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62  <||@
  Comment 691 block B62 null  <||@
  Comment 691 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 691 582 r11|DWORD = MOV [r11|QWORD[*] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 695 584 MOV (x: [r8|QWORD[.] + rcx|QWORD * 4], y: r11|DWORD) size: DWORD  <||@
  Comment 699 586 JUMP ~[] destination: B62 -> B63  <||@
  Comment 699 block B63 null  <||@
  Comment 699 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 699 590 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 702 592 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 705 594 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B80  <||@
  Comment 711 block B80 null  <||@
  Comment 711 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 720 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 715 722 r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 720 724 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 725 730 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@79b85cd3 encoding: base: 0 shift: 3  <||@
  Comment 732 732 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 736 734 r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 743 736 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 753 738 MOVB (x: [r11|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 757 740 r14|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 763 742 MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 767 744 MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 772 746 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 775 748 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 784 12  <||@
  Comment 794 block B64 null  <||@
  Comment 794 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 598 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 4 + 16] size: QWORD  <||@
  Comment 799 600 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 802 602 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 806 604 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 809 606 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 815 block B65 null  <||@
  Comment 815 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 610 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 822 612 JUMP ~[] destination: B65 -> B69  <||@
  Comment 822 block B69 null  <||@
  Comment 822 636 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 822 638 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 826 640 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 829 642 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B72 falseDestination: B69 -> B71  <||@
  Comment 835 block B71 null  <||@
  Comment 835 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 835 650 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 839 652 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 845 654 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 849 656 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 852 658 JUMP ~[] destination: B71 -> B72  <||@
  Comment 852 block B72 null  <||@
  Comment 852 660 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 852 662 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 856 664 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 859 666 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74  <||@
  Comment 865 block B74 null  <||@
  Comment 865 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 865 674 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 869 676 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 875 678 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 879 680 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 882 682 JUMP ~[] destination: B74 -> B75  <||@
  Comment 882 block B75 null  <||@
  Comment 882 684 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 882 686 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 885 688 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 888 690 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B80 falseDestination: B75 -> B77  <||@
  Comment 894 block B77 null  <||@
  Comment 894 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 894 704 MOV (x: [r8|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 898 712 JUMP ~[] destination: B77 -> B80  <||@
  Comment 903 block B32 null  <||@
  Comment 903 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 270 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 906 272 MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 910 274 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 913 276 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B32 -> B36 falseDestination: B32 -> B34  <||@
  Comment 919 block B34 null  <||@
  Comment 919 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 919 284 rdi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 925 286 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 928 288 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B34 -> B36 falseDestination: B34 -> B37  <||@
  Comment 934 block B37 null  <||@
  Comment 934 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 934 304 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 939 306 rdi|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 942 308 rdx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 945 310 r8|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 948 312 rdi|QWORD = LEA [rdi|QWORD[*] + 20] size: QWORD  <||@
  Comment 952 314 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 956 316 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 959 318 stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 964 320 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: intDisjointArraycopy(Word,Word,Word)void@0x106812e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 964 {Field[name=StubRoutines::_jint_disjoint_arraycopy, type=address, offset=0, address=0x105a7dcb0, value=0x106812e00]:0x106812e00}  <||@
  Comment 970 322 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 975 324 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 980 326 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 983 328 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 986 330 r14|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 991 332 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 996 334 JUMP ~[] destination: B37 -> B85  <||@
  Comment 996 block B85 null  <||@
  Comment 996 778 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 996 780 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 999 786 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1003 782 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 1009 block B86 null  <||@
  Comment 1009 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1009 788 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1014 790 rax|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 1019 792 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1022 794 MOV (x: [r11|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1027 796 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 798 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1039 12  <||@
  Comment 1049 block B66 null  <||@
  Comment 1049 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 616 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1053 618 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1060 620 JUMP ~[] destination: B66 -> B67  <||@
  Comment 1060 block B67 loop 3 depth 1 header:668|LoopBegin  <||@
  Comment 1060 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1072 624 J (address: [r8|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1078 626 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1082 628 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1085 630 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B69 falseDestination: B67 -> B67  <||@
  Comment 1092 block B52 loop 2 depth 1 header:613|LoopBegin  <||@
  Comment 1092 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 506 xmm0|V256_DWORD = H [r11|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1110 508 J (address: [r8|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1116 510 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1120 512 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1123 514 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B54 falseDestination: B52 -> B52  <||@
  Comment 1130 block B46 null  <||@
  Comment 1130 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1130 434 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1135 436 stack:64|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1140 438 stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1145 440 stack:68|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1150 446 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1150 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1160 448 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1163 450 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1165 452 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1170 454 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1173 456 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1176 458 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 68]  <||@
  Comment 1176 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1181 [stack:12, stack:32, stack:48]at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3               |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:32|QWORD[.]  |stack:64|QWORD  |-  |stack:52|DWORD  |-  |- 
  at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |-   <||@
  Comment 1182 460 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1187 block B36 null  <||@
  Comment 1187 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 296 MOV [r15|QWORD + 668] y: -69217 size: DWORD  <||@
  Comment 1198 298 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1205 300 DEOPT info [bci:118]  <||@
  Comment 1205 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1210 [rsi:0, stack:48]at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:666) [bci: 118, duringCall: false, rethrow: false]
              |0                  |1           |2                  |3           |4         
     locals:  |rsi|QWORD[.]       |rcx|DWORD   |                   |            |          
     stack:   |stack:32|QWORD[.]  |int[1|0x1]  |stack:32|QWORD[.]  |int[0|0x0]  |r14|DWORD   <||@
  Comment 1211 block B27 null  <||@
  Comment 1211 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1211 224 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1214 226 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1217 228 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1220 230 r11|DWORD = MOVE input: int[-52507|0xffffffffffff32e5]  <||@
  Comment 1226 232 JUMP ~[] destination: B27 -> B83  <||@
  Comment 1226 block B83 null  <||@
  Comment 1226 766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1226 768 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1233 770 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1240 772 DEOPT info [bci:5, 68]  <||@
  Comment 1240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1245 [rsi:0, r8:0]at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5, duringCall: false, rethrow: false]
              |0            |1          |2            |3          |4  |5         |6  |7 
     locals:  |r8|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |rcx|QWORD  |-  |r9|DWORD  |-  |- 
  at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:662) [bci: 68, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1246 block B24 null  <||@
  Comment 1246 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1246 204 r10|DWORD = MOVE input: int[-55067|0xffffffffffff28e5]  <||@
  Comment 1252 206 JUMP ~[] destination: B24 -> B25  <||@
  Comment 1252 block B25 null  <||@
  Comment 1252 208 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1252 210 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1259 212 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1266 214 DEOPT info [bci:21, 173]  <||@
  Comment 1266 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1271 [rsi:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1        
     locals:  |rsi|QWORD[.]  |r8|DWORD 
  at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:674) [bci: 173, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1272 block B30 null  <||@
  Comment 1272 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 250 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1275 252 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1278 254 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1281 256 r11|DWORD = MOVE input: int[-79131|0xfffffffffffecae5]  <||@
  Comment 1287 258 JUMP ~[] destination: B30 -> B83  <||@
  Comment 1289 block B4 null  <||@
  Comment 1289 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1289 44 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034]  <||@
  Comment 1289 {Object[d.a@505626034]}  <||@
  Comment 1299 46 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1302 48 r10|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5]  <||@
  Comment 1308 50 JUMP ~[] destination: B4 -> B90  <||@
  Comment 1308 block B90 null  <||@
  Comment 1308 828 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1308 830 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1315 832 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1322 834 DEOPT info [bci:0]  <||@
  Comment 1322 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1327 [rsi:0]at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:654) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1328 block B89 null  <||@
  Comment 1328 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1328 820 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@505626034]  <||@
  Comment 1328 {Object[d.a@505626034]}  <||@
  Comment 1338 822 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1341 824 r10|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5]  <||@
  Comment 1347 826 JUMP ~[] destination: B89 -> B90  <||@
  Comment 1349 block B7 null  <||@
  Comment 1349 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1349 64 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1359 66 r10|DWORD = MOVE input: int[-42259|0xffffffffffff5aed]  <||@
  Comment 1365 68 JUMP ~[] destination: B7 -> B90  <||@
  Comment 1367 block B19 null  <||@
  Comment 1367 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 166 r10|DWORD = MOVE input: int[-54291|0xffffffffffff2bed]  <||@
  Comment 1373 168 JUMP ~[] destination: B19 -> B25  <||@
  Comment 1375 block B40 null  <||@
  Comment 1375 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 352 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1378 354 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1381 356 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1384 358 r11|DWORD = MOVE input: int[-108385|0xfffffffffffe589f]  <||@
  Comment 1390 360 JUMP ~[] destination: B40 -> B83  <||@
  Comment 1395 block B88 null  <||@
  Comment 1395 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1395 812 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1405 814 r10|DWORD = MOVE input: int[-43539|0xffffffffffff55ed]  <||@
  Comment 1411 816 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1413 block B82 null  <||@
  Comment 1413 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 756 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1416 758 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 760 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1422 762 r11|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5]  <||@
  Comment 1428 764 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1433 block B14 null  <||@
  Comment 1433 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1433 128 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1436 130 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 132 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1442 134 r11|DWORD = MOVE input: int[-50963|0xffffffffffff38ed]  <||@
  Comment 1448 136 JUMP ~[] destination: B14 -> B83  <||@
  Comment 1453 block B87 null  <||@
  Comment 1453 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1453 804 MOV [r15|QWORD + 668] y: -76315 size: DWORD  <||@
  Comment 1464 806 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1471 808 DEOPT info [bci:152]  <||@
  Comment 1471 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1476 [rsi:0]at sun.misc.FDBigInteger.multBy10(FDBigInteger.java:672) [bci: 152, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rcx|DWORD   <||@
  Comment 1477 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1477 4  <||@
  Comment 1483 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1483 5  <||@
  HexCodeFile>>> <|@
end_nmethod
