begin_compilation
  name " HotSpotCompilation-9435[java.net.URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)]"
  method "HotSpotCompilation-9435[java.net.URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)]"
  date 1527005211944
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2677) [bci: 17]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?43 i64 v150 i181 v194 i736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/net/URI;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/StringBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v851 ?123 ?67 ?67 v24 ?124 ?178 j855 ?114 ?114 v1213 ?116 ?116 v1243 ?146 ?146 v863 ?124 v1215 ?164 v1216 j622 v631 j636 v659 v685 v694 j799 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v106 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v104 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
index: 6
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a8 <|@
d <@d|@=== Debug Properties ===
index: 7
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 ?116 ?114 ?164 ?43 v1210 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
d <@d|@=== Debug Properties ===
index: 8
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v29 ?67 ?123 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1887
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 a5 a6 i7 a8 a9 - - - 
=== Succesors ===
=== Usages ===
v570 a1197 i1198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 a5 a6 i7 a8 a9 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v428 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v430 #falseSuccessor: v428  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid a567 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@4965096
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@4965096]
=== Inputs ===
=== Succesors ===
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66571
stableDimension: 0
stamp: i32 [-66571] ⇊00000000fffefbf5 ⇈00000000fffefbf5
stampKind: i32
value: int[-66571|0xfffffffffffefbf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1197 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a8 
index: - 
=== Succesors ===
=== Usages ===
a1197 a1200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a8 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?10 
guard: - 
address: v1210 
=== Succesors ===
next: i1198 
=== Usages ===
a237 v1211 
=== Predecessor ===
v428 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?10 guard: - address: v1210 #next: i1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1197 
=== Succesors ===
=== Usages ===
i1198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?10 
guard: - 
address: v1211 
=== Succesors ===
next: v1188 
=== Usages ===
v74 v423 j401 
=== Predecessor ===
a1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?10 guard: - address: v1211 #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1198 
=== Succesors ===
=== Usages ===
j403 v412 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1198  <|@  <|@
f <@~|@floating>@ <|@
tid j402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j403 j1096 j1147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j403 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j401 
y: j402 
=== Succesors ===
=== Usages ===
v412 v405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j401 y: j402  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2677) [bci: 14]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 v79 v423 a760 v858 v185 v198 v341 v647 v652 v673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1198 
y: i38 
=== Succesors ===
=== Usages ===
v1188 v1194 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1198 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 i672 j1121 v667 j1127 v882 v716 v1080 v1134 j1070 v828 v838 v843 j1062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v1184 
falseSuccessor: v1187 
=== Usages ===
=== Predecessor ===
i1198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v1184 #falseSuccessor: v1187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1182 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1182  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
v1184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j403 
y: j400 
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j403 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v1185 
=== Usages ===
=== Predecessor ===
v1187 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v442 #falseSuccessor: v1185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid a577 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@476172961
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@476172961]
=== Inputs ===
=== Succesors ===
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -62227
stableDimension: 0
stamp: i32 [-62227] ⇊00000000ffff0ced ⇈00000000ffff0ced
stampKind: i32
value: int[-62227|0xffffffffffff0ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1183 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1183  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
v1185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1182 v1183 
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1182 v1183 #next: v1196  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j403 
y: j401 
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j403 y: j401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v412 
=== Succesors ===
trueSuccessor: v1192 
falseSuccessor: v1195 
=== Usages ===
=== Predecessor ===
v1181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v412 #trueSuccessor: v1192 #falseSuccessor: v1195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1190 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
v1192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B139" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1194 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v1193 
falseSuccessor: v446 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v1193 #falseSuccessor: v446  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1191 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
v1193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1190 v1191 
=== Succesors ===
next: v451 
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1190 v1191 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2676) [bci: 6]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?43 ?124 a569 a569 a569 v604 v592 v612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v448 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v448 #falseSuccessor: v450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
value: a6 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a6  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v452 #falseSuccessor: v454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v456 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid a237 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1197 
=== Succesors ===
=== Usages ===
v1212 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1197  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 39]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: -64
stableDimension: 0
stamp: i32 [-64] ⇊00000000ffffffc0 ⇈00000000ffffffc0
stampKind: i32
value: int[-64|0xffffffffffffffc0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 144]
rawvalue: 5188146764422578175
stableDimension: 0
stamp: i64 [5188146764422578175] ⇊47fffffe87ffffff ⇈47fffffe87ffffff
stampKind: i64
value: long[5188146764422578175|0x47fffffe87ffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 ?43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j86 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 12]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j87 j95 j677 v787 v903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 141]
rawvalue: 3458764316252045313
stableDimension: 0
stamp: i64 [3458764316252045313] ⇊2fffffd200000001 ⇈2fffffd200000001
stampKind: i64
value: long[3458764316252045313|0x2fffffd200000001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 ?43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 7]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 46]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" "B25" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v41 
values: i38 i64 i64 
=== Succesors ===
=== Usages ===
?43 i64 v74 v1212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v41 values: i38 i64 i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 19.59093851132685
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v40 
=== Succesors ===
next: v52 
=== Usages ===
i42 v50 v65 v103 v463 v468 v473 v478 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v40 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i1198 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i42 y: i1198  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 33]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.948955993128056
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2679) [bci: 36]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1199 
=== Usages ===
v417 
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1199  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1189 v49 
=== Succesors ===
=== Usages ===
i1199 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1189 v49  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a237 
index: i42 
=== Succesors ===
=== Usages ===
i1199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a237 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v417 
address: v1212 
=== Succesors ===
next: v464 
=== Usages ===
i255 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v417 address: v1212 #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1199 
=== Succesors ===
=== Usages ===
j87 i94 v91 v79 v82 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1199  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.net.URI.match(URI.java:2519) [bci: 32]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i56 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i255 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v460 
falseSuccessor: v463 
=== Usages ===
=== Predecessor ===
i1199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v460 #falseSuccessor: v463  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i38 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i255 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v468 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v468 #falseSuccessor: v465  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i594 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -65811
stableDimension: 0
stamp: i32 [-65811] ⇊00000000fffefeed ⇈00000000fffefeed
stampKind: i32
value: int[-65811|0xfffffffffffefeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 9]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i81 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i255 y: i81  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 187]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: i32
=== Inputs ===
x: i42 
y: i39 
=== Succesors ===
=== Usages ===
i42 i42 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 9]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.053955085675688075
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v84 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v83 #falseSuccessor: v84  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 12]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 14]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: i64
=== Inputs ===
x: j86 
y: i255 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j86 y: i255  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
x: j87 
y: j19 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j87 y: j19  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v473 #falseSuccessor: v470  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66067
stableDimension: 0
stamp: i32 [-66067] ⇊00000000fffefded ⇈00000000fffefded
stampKind: i32
value: int[-66067|0xfffffffffffefded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2519) [bci: 28]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 39]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: i32 [-64 - 65471]
=== Inputs ===
x: i255 
y: i93 
=== Succesors ===
=== Usages ===
j95 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i255 y: i93  <|@  <|@
f <@~|@floating>@ <|@
tid j95 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 40]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: i64
=== Inputs ===
x: j86 
y: i94 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j86 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
x: j95 
y: j20 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j95 y: j20  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v478 #falseSuccessor: v475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid i598 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66323
stableDimension: 0
stamp: i32 [-66323] ⇊00000000fffefced ⇈00000000fffefced
stampKind: i32
value: int[-66323|0xfffffffffffefced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -65555
stableDimension: 0
stamp: i32 [-65555] ⇊00000000fffeffed ⇈00000000fffeffed
stampKind: i32
value: int[-65555|0xfffffffffffeffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B18" "B21" "B24" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-66323 - -65555] ⇊00000000fffefced ⇈00000000fffeffed
valueDescription: i32
=== Inputs ===
merge: v587 
values: i589 i594 i596 i598 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v587 values: i589 i594 i596 i598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v588 v593 v595 v597 
=== Succesors ===
next: v592 
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v588 v593 v595 v597 #next: v592  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 147
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - - - a9 - - - a2 
=== Succesors ===
=== Usages ===
?43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - - - a9 - - - a2  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<URI.quote(String, long, long)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 2678
stackSize: 0
=== Inputs ===
outerFrameState: ?67 
values: a8 j19 - j20 - - a37 i39 i42 - 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: a8 j19 - j20 - - a37 i39 i42 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?43 
actionAndReason: i590 
speculation: a37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?43 actionAndReason: i590 speculation: a37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2704) [bci: 193]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: j713 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: j713  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j876 j713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j713 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:230) [bci: 12]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
=== Succesors ===
next: j621 
=== Usages ===
j623 j627 j643 i651 j660 j677 v706 v1224 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 #next: j621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j621 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:232) [bci: 18]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j622 
=== Usages ===
v659 v1222 j680 v694 v717 
=== Predecessor ===
j713 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:234) [bci: 24]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j714 
=== Usages ===
v1223 
=== Predecessor ===
j621 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: j714  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: v261 
index: - 
=== Succesors ===
=== Usages ===
j714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v261 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j714 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:314) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1220 
=== Succesors ===
next: j625 
=== Usages ===
j626 j660 
=== Predecessor ===
j622 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1220 #next: j625  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j625 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:315) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
j626 j644 
=== Predecessor ===
j714 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j625 
y: j714 
=== Succesors ===
=== Usages ===
j627 i651 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j625 y: j714  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 42]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j626 
y: j713 
=== Succesors ===
=== Usages ===
v698 v700 v702 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j626 y: j713  <|@  <|@
f <@~|@floating>@ <|@
tid j697 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j627 
y: j697 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j627 y: j697  <|@  <|@
f <@~|@floating>@ <|@
tid j705 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 109]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 v866 j1052 j1114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - - - a9 - - - 
=== Succesors ===
=== Usages ===
?114 ?116 ?146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - - - a9 - - -  <|@  <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?146 ?114 ?116 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: false
localsSize: 2
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 269
stackSize: 0
=== Inputs ===
outerFrameState: ?123 
values: a2 a8 a2 
monitorIds: v112 
=== Succesors ===
=== Usages ===
v694 v604 i646 i651 v659 j660 i672 j680 v694 v715 v716 v717 v659 v1260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a2 a8 a2 monitorIds: v112  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j623 v700 j820 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 136]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 v821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 97]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
j625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v629 #falseSuccessor: v628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B54" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:322) [bci: 100]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:324) [bci: 120]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
object: a2 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a2 #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B41" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j713 
y: j695 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j713 y: j695  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 142]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j623 
y: j699 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j623 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v633 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v634 #falseSuccessor: v633  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B40" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 151]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j636 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 152]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v639 
=== Usages ===
v1221 
=== Predecessor ===
v634 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
i646 i651 j660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 172]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j627 
y: j695 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j627 y: j695  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 178]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v700 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v637 
=== Usages ===
=== Predecessor ===
j636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v700 #trueSuccessor: v638 #falseSuccessor: v637  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 181]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid j701 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 192]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 196]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j627 
y: j701 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j627 y: j701  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 202]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v702 
=== Succesors ===
trueSuccessor: v641 
falseSuccessor: v640 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v702 #trueSuccessor: v641 #falseSuccessor: v640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 205]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: i646 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i646  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j643 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j713 
y: j703 
=== Succesors ===
=== Usages ===
j644 i646 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j713 y: j703  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:358) [bci: 235]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j625 
y: j643 
=== Succesors ===
=== Usages ===
i646 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j625 y: j643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i646 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 276]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
expectedValue: j643 
newValue: j644 
stateAfter: ?114 
=== Succesors ===
next: v650 
=== Usages ===
v647 
=== Predecessor ===
v641 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1221 expectedValue: j643 newValue: j644 stateAfter: ?114 #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i646 
y: i38 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i646 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v647 
=== Succesors ===
trueSuccessor: v648 
falseSuccessor: v649 
=== Usages ===
=== Predecessor ===
i646 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v647 #trueSuccessor: v648 #falseSuccessor: v649  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:370) [bci: 308]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v648 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B54" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:363) [bci: 287]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:379) [bci: 330]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: i651 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i651 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 365]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
expectedValue: j713 
newValue: j626 
stateAfter: ?114 
=== Succesors ===
next: v655 
=== Usages ===
v652 
=== Predecessor ===
v640 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1221 expectedValue: j713 newValue: j626 stateAfter: ?114 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i651 
y: i38 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i651 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v652 
=== Succesors ===
trueSuccessor: v653 
falseSuccessor: v654 
=== Usages ===
=== Predecessor ===
i651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v652 #trueSuccessor: v653 #falseSuccessor: v654  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:390) [bci: 397]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B54" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v656 v658 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v656 v658 #next: v659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 421]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: ?114 
stateDuring: ?114 
arguments: a2 j621 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?114 stateDuring: ?114 arguments: a2 j621 #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:383) [bci: 376]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 426]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j660 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j660 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 440]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
expectedValue: j713 
newValue: j714 
stateAfter: ?114 
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v1221 expectedValue: j713 newValue: j714 stateAfter: ?114 #next: v661  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
j660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B42" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:419) [bci: 460]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 86]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v661 v662 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v661 v662 #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j621 
index: - 
=== Succesors ===
=== Usages ===
v715 v716 v717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j621 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 113]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j713 
y: j705 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j713 y: j705  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 119]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v706 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v664 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v706 #trueSuccessor: v663 #falseSuccessor: v664  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 141]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid j677 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j713 
y: j86 
=== Succesors ===
=== Usages ===
j680 v681 v715 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j713 y: j86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:258) [bci: 176]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
value: j677 
stateAfter: ?114 
lastLocationAccess: - 
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 value: j677 stateAfter: ?114 lastLocationAccess: - #next: v678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:261) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j680 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j680  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j622 
index: - 
=== Succesors ===
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j622 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j680 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:265) [bci: 199]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1223 
expectedValue: j677 
newValue: j621 
stateAfter: ?114 
=== Succesors ===
next: v684 
=== Usages ===
v681 j687 
=== Predecessor ===
v678 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v1223 expectedValue: j677 newValue: j621 stateAfter: ?114 #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 216]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j677 
y: j680 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j677 y: j680  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 222]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v681 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v682 
=== Usages ===
=== Predecessor ===
j680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v681 #trueSuccessor: v683 #falseSuccessor: v682  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B54" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:267) [bci: 225]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:269) [bci: 245]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
object: a2 
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a2 #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:272) [bci: 249]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j686 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j686 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:289) [bci: 273]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
j687 
=== Predecessor ===
v682 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 297]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j680 
y: j686 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j680 y: j686  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 305]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 312]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j687 
y: j708 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j687 y: j708  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 318]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v688 
=== Usages ===
=== Predecessor ===
j686 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v689 #falseSuccessor: v688  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 321]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 335]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
value: j400 
stateAfter: ?114 
lastLocationAccess: - 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 value: j400 stateAfter: ?114 lastLocationAccess: - #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B53" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:297) [bci: 358]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B52" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 122]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v717 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:439) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
value: j621 
stateAfter: ?114 
lastLocationAccess: - 
=== Succesors ===
next: j718 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 value: j621 stateAfter: ?114 lastLocationAccess: - #next: j718  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j713 
index: - 
=== Succesors ===
=== Usages ===
i672 j718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j713 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j718 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:443) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
=== Succesors ===
next: v670 
=== Usages ===
v667 
=== Predecessor ===
v717 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1224 #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j400 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j718 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v669 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
j718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v669 #falseSuccessor: v668  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j671 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j671 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 74]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i672 
=== Usages ===
i672 
=== Predecessor ===
v669 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i672 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
expectedValue: j400 
newValue: j671 
stateAfter: ?114 
=== Succesors ===
next: v676 
=== Usages ===
v673 
=== Predecessor ===
j671 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1224 expectedValue: j400 newValue: j671 stateAfter: ?114 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i672 
y: i38 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i672 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v673 
=== Succesors ===
trueSuccessor: v674 
falseSuccessor: v675 
=== Usages ===
=== Predecessor ===
i672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v673 #trueSuccessor: v674 #falseSuccessor: v675  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:452) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:448) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:456) [bci: 132]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 137]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v668 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B47" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v691 v693 v711 
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v691 v693 v711 #next: v694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2 a8 
locks: a2 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2 - - - - - - a9 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 383]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: ?114 
stateDuring: ?114 
arguments: a2 j621 
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?114 stateDuring: ?114 arguments: a2 j621 #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B44" "B46" "B53" "B29" "B35" "B39" "B38" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v721 v722 v723 v724 v725 v726 v727 v728 
=== Succesors ===
next: a1200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v721 v722 v723 v724 v725 v726 v727 v728 #next: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1210 
=== Succesors ===
next: v1260 
=== Usages ===
a268 v1260 v1214 
=== Predecessor ===
v720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1210 #next: v1260  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?114 
object: a1200 
=== Succesors ===
next: a1201 
=== Usages ===
=== Predecessor ===
a1200 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?114 object: a1200 #next: a1201  <|@  <|@
f <@~|@floating>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1201 v332 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1216 
=== Succesors ===
next: v487 
=== Usages ===
a278 v279 v1217 v1218 
=== Predecessor ===
v1260 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1216 #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
value: a1201 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
a1201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v486 #falseSuccessor: v484  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71691
stableDimension: 0
stamp: i32 [-71691] ⇊00000000fffee7f5 ⇈00000000fffee7f5
stampKind: i32
value: int[-71691|0xfffffffffffee7f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?114 
actionAndReason: i606 
speculation: a37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?114 actionAndReason: i606 speculation: a37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1202 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1201 
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1217 
=== Succesors ===
next: v266 
=== Usages ===
i149 i181 i543 i312 v521 
=== Predecessor ===
v484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1217 #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a377 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 2]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 2]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1213 
value: a377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1203 
=== Usages ===
=== Predecessor ===
i1202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1213 value: a377 stateAfter: - lastLocationAccess: - #next: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1200 
=== Succesors ===
=== Usages ===
i1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1214 
=== Succesors ===
next: i1204 
=== Usages ===
i132 i312 ?164 ?178 j818 i359 
=== Predecessor ===
v266 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1214 #next: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1204 v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1215 
=== Succesors ===
next: v153 
=== Usages ===
i132 j814 v341 v360 v313 
=== Predecessor ===
i1203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1215 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1204 
y: i38 
=== Succesors ===
=== Usages ===
v347 v300 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1204 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i1203 
y: i1204 
=== Succesors ===
=== Usages ===
v284 i149 i184 i383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1203 y: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i132 
y: i1202 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i132 y: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i149 
y: i39 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i149 y: i39  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?123 
values: a2 - a2 
monitorIds: v112 
=== Succesors ===
=== Usages ===
?164 ?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a2 - a2 monitorIds: v112  <|@  <|@
tid ?116 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: false
localsSize: 2
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 2]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?123 
values: a2 a8 a2 
monitorIds: v112 
=== Succesors ===
=== Usages ===
v612 a760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a2 a8 a2 monitorIds: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9530056616276885
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v152 
=== Usages ===
=== Predecessor ===
i1204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v151 #falseSuccessor: v152  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606759131430453278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid i614 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81505
stableDimension: 0
stamp: i32 [-81505] ⇊00000000fffec19f ⇈00000000fffec19f
stampKind: i32
value: int[-81505|0xfffffffffffec19f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v299 #falseSuccessor: v295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576647325387566637
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4606673292311601509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1202 
y: i1203 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1202 y: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i312 
y: i1204 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i312 y: i1204  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v314 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v316 #falseSuccessor: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576592388351501504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B118" 
    xhandlers
    flags 
    probability 4606588311583938258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid a278 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1201 
=== Succesors ===
=== Usages ===
a501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1202 
y: i39 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1202 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i181 
y: i182 
=== Succesors ===
=== Usages ===
i184 i383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i181 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i183 
y: i132 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i183 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i38 
=== Succesors ===
=== Usages ===
i383 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v185 
trueValue: i132 
falseValue: i183 
=== Succesors ===
=== Usages ===
i359 j892 v194 i197 v745 v521 i543 a760 v786 i736 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v185 trueValue: i132 falseValue: i183  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i39 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i383 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v490 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v490 #falseSuccessor: v488  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243] ⇊00000000fffeb6ed ⇈00000000fffeb6ed
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i196 
y: i383 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i196 y: i383  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i38 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i197 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v494 
falseSuccessor: v492 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v494 #falseSuccessor: v492  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84499
stableDimension: 0
stamp: i32 [-84499] ⇊00000000fffeb5ed ⇈00000000fffeb5ed
stampKind: i32
value: int[-84499|0xfffffffffffeb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B63" "B58" "B65" "B60" 
    successors 
    xhandlers
    flags 
    probability 4581123456496904566
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i610 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-84499 - -81505] ⇊00000000fffe808d ⇈00000000fffef7ff
valueDescription: i32
=== Inputs ===
merge: v607 
values: i609 i614 i616 i614 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v607 values: i609 i614 i616 i614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v608 v613 v615 v619 
=== Succesors ===
next: v612 
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v608 v613 v615 v619 #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?116 
actionAndReason: i610 
speculation: a37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?116 actionAndReason: i610 speculation: a37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" "B71" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j739 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j783 
=== Usages ===
v1225 v1226 
=== Predecessor ===
v492 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j783  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j739 
index: - 
=== Succesors ===
=== Usages ===
j783 v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
=== Succesors ===
next: j784 
=== Usages ===
j743 v1227 v1228 a759 v1233 v1229 v1230 v1231 v1232 
=== Predecessor ===
j739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1225 #next: j784  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j739 
index: - 
=== Succesors ===
=== Usages ===
j784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j784 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1226 
=== Succesors ===
next: v748 
=== Usages ===
v749 
=== Predecessor ===
j783 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1226 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i744 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i744  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v745 
=== Succesors ===
trueSuccessor: v747 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
j784 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v745 #trueSuccessor: v747 #falseSuccessor: v746  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4586256159157517904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i383 
y: i39 
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i383 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i768 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i736 
y: i767 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i736 y: i767  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i768 
y: i737 
=== Succesors ===
=== Usages ===
j742 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i768 y: i737  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i738 
=== Succesors ===
=== Usages ===
j743 v1229 v1230 v1231 v1232 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i738  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j742 
y: j783 
=== Succesors ===
=== Usages ===
v749 v785 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j742 y: j783  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j784 
y: j743 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j784 y: j743  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v749 
=== Succesors ===
trueSuccessor: v754 
falseSuccessor: v753 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v749 #trueSuccessor: v754 #falseSuccessor: v753  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B72" 
    xhandlers
    flags 
    probability 4556437656440007011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4586195205776300669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
value: j743 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1225 value: j743 stateAfter: - lastLocationAccess: - #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j742 
index: j783 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j742 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
address: v1229 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1229 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j742 
index: j783 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j742 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
address: v1230 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1230 #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j742 
index: j783 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j742 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
address: v1231 
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1231 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j742 
index: j783 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j742 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
address: v1232 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1232 #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1227 
value: i383 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1227 value: i383 stateAfter: - lastLocationAccess: - #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1228 
value: j86 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1228 value: j86 stateAfter: - lastLocationAccess: - #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1233 
value: v889 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1233 value: v889 stateAfter: - lastLocationAccess: - #next: v758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j783 
=== Succesors ===
next: v761 
=== Usages ===
a764 
=== Predecessor ===
v758 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j783 #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
a759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4572068100484103807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B69" 
    successors "B73" 
    xhandlers
    flags 
    probability 4572555727533841685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v752 
=== Succesors ===
next: a760 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v752 #next: a760  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a760 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?116 
arguments: v735 i383 i38 
=== Succesors ===
next: v763 
=== Usages ===
a764 
=== Predecessor ===
v751 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?116 arguments: v735 i383 i38 #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
a760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v762 
values: a759 a760 
=== Succesors ===
=== Usages ===
v1244 a549 v1219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v762 values: a759 a760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v763 
=== Succesors ===
next: v1033 
=== Usages ===
a764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v763 #next: v1033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v906 
=== Usages ===
j1034 j1036 
=== Predecessor ===
v762 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1202 
y: i383 
=== Succesors ===
=== Usages ===
i543 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1202 y: i383  <|@  <|@
f <@~|@floating>@ <|@
tid i543 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v521 
trueValue: i1202 
falseValue: i383 
=== Succesors ===
=== Usages ===
j893 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v521 trueValue: i1202 falseValue: i383  <|@  <|@
f <@~|@floating>@ <|@
tid j893 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i543 
=== Succesors ===
=== Usages ===
j1096 v1244 j897 v903 v1030 j1079 j1085 j1089 j1093 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i543  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j893 
y: j86 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j893 y: j86  <|@  <|@
f <@~|@floating>@ <|@
tid j1092 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1093 j1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1060 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1061 j1120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1088 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1089 j1141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j789 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1126 j1069 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1084 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1085 j1138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1132 j1077 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1078 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1079 j1133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v903 
=== Succesors ===
trueSuccessor: v904 
falseSuccessor: v905 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v903 #trueSuccessor: v904 #falseSuccessor: v905  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v923 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v923  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a764 
index: - 
=== Succesors ===
=== Usages ===
j1036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1036 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1033 
address: v1219 
=== Succesors ===
=== Usages ===
v1245 v1247 v1249 v1251 v1253 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1033 address: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1201 
=== Succesors ===
=== Usages ===
j1034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1201  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1033 
address: v1218 
=== Succesors ===
=== Usages ===
v1246 v1248 v1250 v1252 v1254 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1033 address: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid j1079 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j893 
y: j1078 
=== Succesors ===
=== Usages ===
v1080 v1082 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1079 
y: j400 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1079 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1080 
=== Succesors ===
trueSuccessor: v907 
falseSuccessor: v908 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1080 #trueSuccessor: v907 #falseSuccessor: v908  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v907 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v910  <|@  <|@
f <@*|@fixed>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B135" 
    successors "B79" "B135" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1070 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v911 
values: j400 j1077 
=== Succesors ===
=== Usages ===
v1254 j1077 v1253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v911 values: j400 j1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v910 
=== Succesors ===
next: v1205 
=== Usages ===
v1205 v915 v916 j1070 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v910 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1070 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v911 
address: v1254 
=== Succesors ===
next: v1165 
=== Usages ===
v1165 
=== Predecessor ===
v911 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v911 address: v1254 #next: v1165  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1070 
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
value: v1205 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1253 value: v1205 stateAfter: - lastLocationAccess: - #next: v918  <|@  <|@
f <@~|@floating>@ <|@
tid j1077 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1070 
y: j251 
=== Succesors ===
=== Usages ===
j1062 j1070 v1082 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1070 y: j251  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1079 
y: j1077 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1079 y: j1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1082 
=== Succesors ===
trueSuccessor: v915 
falseSuccessor: v917 
=== Usages ===
=== Predecessor ===
v1165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1082 #trueSuccessor: v915 #falseSuccessor: v917  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v911 
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v911 #next: v921  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v915 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1062 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v920 
values: j400 j1077 
=== Succesors ===
=== Usages ===
v1252 j1069 j1053 v1086 v1251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v920 values: j400 j1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v919 v921 
=== Succesors ===
next: v943 
=== Usages ===
j1062 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v919 v921 #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid j1085 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j893 
y: j1084 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1085 
y: j1062 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1085 y: j1062  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1086 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v941 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1086 #trueSuccessor: v942 #falseSuccessor: v941  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v946  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
v942 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
v1206 
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1062 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v941 
address: v1252 
=== Succesors ===
next: v1163 
=== Usages ===
v1163 
=== Predecessor ===
v941 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v941 address: v1252 #next: v1163  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1062 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
value: v1206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1251 value: v1206 stateAfter: - lastLocationAccess: - #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid j1069 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1062 
y: j789 
=== Succesors ===
=== Usages ===
j1053 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1062 y: j789  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
v1163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1053 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v931 
values: j1069 j1062 
=== Succesors ===
=== Usages ===
v1250 j1061 j1045 v1090 v1249 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v931 values: j1069 j1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v930 v946 
=== Succesors ===
next: v949 
=== Usages ===
j1053 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v930 v946 #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j893 
y: j1088 
=== Succesors ===
=== Usages ===
v1090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j1088  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1089 
y: j1053 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1089 y: j1053  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v948 #falseSuccessor: v947  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1207 
=== Usages ===
v1207 
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1053 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v947 
address: v1250 
=== Succesors ===
next: v1161 
=== Usages ===
v1161 
=== Predecessor ===
v947 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v947 address: v1250 #next: v1161  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1053 
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
value: v1207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1249 value: v1207 stateAfter: - lastLocationAccess: - #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid j1061 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1053 
y: j1060 
=== Succesors ===
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1053 y: j1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
v1161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1045 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v935 
values: j1061 j1053 
=== Succesors ===
=== Usages ===
v1248 j1052 j1037 v1094 v1247 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v935 values: j1061 j1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v934 v952 
=== Succesors ===
next: v955 
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v934 v952 #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid j1093 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j893 
y: j1092 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j1092  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1093 
y: j1045 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1093 y: j1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1094 
=== Succesors ===
trueSuccessor: v954 
falseSuccessor: v953 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1094 #trueSuccessor: v954 #falseSuccessor: v953  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
v954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1208 
=== Usages ===
v1208 
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1045 
=== Succesors ===
=== Usages ===
v1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v953 
address: v1248 
=== Succesors ===
next: v1159 
=== Usages ===
v1159 
=== Predecessor ===
v953 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v953 address: v1248 #next: v1159  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1045 
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
value: v1208 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1247 value: v1208 stateAfter: - lastLocationAccess: - #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1045 
y: j705 
=== Succesors ===
=== Usages ===
j1037 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1045 y: j705  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
v1159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1037 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v938 
values: j1052 j1045 
=== Succesors ===
=== Usages ===
v1246 v1097 v1245 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v938 values: j1052 j1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v937 v958 
=== Succesors ===
next: v961 
=== Usages ===
j1037 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v937 v958 #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid j1096 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j893 
y: j402 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j402  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1096 
y: j1037 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1096 y: j1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1097 
=== Succesors ===
trueSuccessor: v960 
falseSuccessor: v959 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1097 #trueSuccessor: v960 #falseSuccessor: v959  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v960 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1209 
=== Usages ===
i1209 
=== Predecessor ===
v961 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1037 
=== Succesors ===
=== Usages ===
i1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1209 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v959 
address: v1246 
=== Succesors ===
next: v1157 
=== Usages ===
v1157 
=== Predecessor ===
v959 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v959 address: v1246 #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1037 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
value: i1209 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
i1209 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1245 value: i1209 stateAfter: - lastLocationAccess: - #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v1157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B74" "B91" "B90" 
    successors "B93" "B111" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v923 v940 v964 
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v923 v940 v964 #next: v1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v971 
=== Usages ===
j1102 
=== Predecessor ===
v924 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v971  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i383 
=== Succesors ===
=== Usages ===
j897 v1030 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i383  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j893 
y: j892 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j893 y: j892  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1030 
=== Succesors ===
trueSuccessor: v970 
falseSuccessor: v969 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1030 #trueSuccessor: v970 #falseSuccessor: v969  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a764 
index: j893 
=== Succesors ===
=== Usages ===
j1102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: j893  <|@  <|@
f <@~|@floating>@ <|@
tid j1102 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1100 
address: v1244 
=== Succesors ===
=== Usages ===
v1255 v1256 v1257 v1258 v1259 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1100 address: v1244  <|@  <|@
f <@~|@floating>@ <|@
tid j897 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j892 
y: j893 
=== Succesors ===
=== Usages ===
j1147 j1133 j1138 j1141 j1144 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j892 y: j893  <|@  <|@
f <@~|@floating>@ <|@
tid j1133 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j897 
y: j1078 
=== Succesors ===
=== Usages ===
v1134 v1136 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1133 
y: j400 
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1133 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v973 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v972 #falseSuccessor: v973  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@*|@fixed>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B110" 
    successors "B97" "B110" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1127 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v976 
values: j400 j1132 
=== Succesors ===
=== Usages ===
v1259 j1132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v976 values: j400 j1132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v975 
=== Succesors ===
next: v1175 
=== Usages ===
j1127 v979 v980 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v975 #next: v1175  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1127 
=== Succesors ===
=== Usages ===
v1175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
value: v1176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1259 value: v1176 stateAfter: - lastLocationAccess: - #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid j1132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1127 
y: j251 
=== Succesors ===
=== Usages ===
j1121 j1127 v1136 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1127 y: j251  <|@  <|@
f <@~|@floating>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1133 
y: j1132 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1133 y: j1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1136 
=== Succesors ===
trueSuccessor: v979 
falseSuccessor: v981 
=== Usages ===
=== Predecessor ===
v1175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1136 #trueSuccessor: v979 #falseSuccessor: v981  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v976 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v976 #next: v985  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1121 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v984 
values: j400 j1132 
=== Succesors ===
=== Usages ===
v1258 j1126 j1115 v1139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v984 values: j400 j1132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v983 v985 
=== Succesors ===
next: v1006 
=== Usages ===
j1121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v983 v985 #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid j1138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j897 
y: j1084 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1138 
y: j1121 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1138 y: j1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1139 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v1004 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1139 #trueSuccessor: v1005 #falseSuccessor: v1004  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
v1005 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1174  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1121 
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1121  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
value: v1180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 value: v1180 stateAfter: - lastLocationAccess: - #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid j1126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1121 
y: j789 
=== Succesors ===
=== Usages ===
j1115 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1121 y: j789  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
v1174 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1115 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v995 
values: j1126 j1121 
=== Succesors ===
=== Usages ===
v1257 j1120 j1109 v1142 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v995 values: j1126 j1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v994 v1009 
=== Succesors ===
next: v1012 
=== Usages ===
j1115 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v994 v1009 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid j1141 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j897 
y: j1088 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j1088  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1141 
y: j1115 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1141 y: j1115  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1010 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v1011 #falseSuccessor: v1010  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1115 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1115  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
value: v1179 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1257 value: v1179 stateAfter: - lastLocationAccess: - #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid j1120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1115 
y: j1060 
=== Succesors ===
=== Usages ===
j1109 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
v1172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1109 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v998 
values: j1120 j1115 
=== Succesors ===
=== Usages ===
v1256 j1114 j1103 v1145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v998 values: j1120 j1115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v997 v1015 
=== Succesors ===
next: v1018 
=== Usages ===
j1109 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v997 v1015 #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid j1144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j897 
y: j1092 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j1092  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1144 
y: j1109 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1144 y: j1109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1145 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1016 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1145 #trueSuccessor: v1017 #falseSuccessor: v1016  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1170 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1170  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1109 
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
value: v1178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1256 value: v1178 stateAfter: - lastLocationAccess: - #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid j1114 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1109 
y: j705 
=== Succesors ===
=== Usages ===
j1103 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1109 y: j705  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v1170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1103 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1001 
values: j1114 j1109 
=== Succesors ===
=== Usages ===
v1255 v1148 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1001 values: j1114 j1109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1000 v1021 
=== Succesors ===
next: v1024 
=== Usages ===
j1103 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1000 v1021 #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid j1147 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j897 
y: j402 
=== Succesors ===
=== Usages ===
v1148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j402  <|@  <|@
f <@~|@floating>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1147 
y: j1103 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1147 y: j1103  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1148 
=== Succesors ===
trueSuccessor: v1023 
falseSuccessor: v1022 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1148 #trueSuccessor: v1023 #falseSuccessor: v1022  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1027  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
v1023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1103 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1103  <|@  <|@
f <@~|@floating>@ <|@
tid i1177 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
value: i1177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1255 value: i1177 stateAfter: - lastLocationAccess: - #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
v1168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B96" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v976 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v976  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B112" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v987  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B109" "B108" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v987 v1003 v1027 
=== Succesors ===
next: a549 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v987 v1003 v1027 #next: a549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a764 
=== Succesors ===
next: v332 
=== Usages ===
a501 a331 
=== Predecessor ===
v988 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a764 #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: Compress
stamp: n! -
=== Inputs ===
value: a549 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1216 
value: a331 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j799 
=== Usages ===
=== Predecessor ===
a549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1216 value: a331 stateAfter: - lastLocationAccess: - #next: j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v805 
=== Usages ===
j801 
=== Predecessor ===
v332 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j799 
y: i800 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j799 y: i800  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: j804 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: j804  <|@  <|@
f <@~|@floating>@ <|@
tid i806 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1234 
value: i806 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
j799 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1234 value: i806 stateAfter: - lastLocationAccess: - #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v346 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v346 #falseSuccessor: v342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4557304548972874350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B117" 
    xhandlers
    flags 
    probability 4586865692969690251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i383 
y: i1203 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i383 y: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i359 
y: i1204 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i359 y: i1204  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v361 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v363 #falseSuccessor: v361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4557217859719587616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B113" "B115" 
    successors 
    xhandlers
    flags 
    probability 4561764803973601479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v345 v362 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v345 v362 #next: v365  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?146 
values: a2 a8 i1203 
=== Succesors ===
=== Usages ===
?161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: a2 a8 i1203  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?164 
values: - - 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?164 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?161 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 4586798644250351293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B61" 
    successors "B119" "B134" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a501 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v223 
values: a549 a278 
=== Succesors ===
=== Usages ===
j813 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v223 values: a549 a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v222 v225 
=== Succesors ===
next: j809 
=== Usages ===
a501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v222 v225 #next: j809  <|@  <|@
f <@~|@floating>@ <|@
tid a268 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1200 
=== Succesors ===
=== Usages ===
j809 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
object: a268 
=== Succesors ===
next: j813 
=== Usages ===
v1235 
=== Predecessor ===
v223 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a268 #next: j813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
object: a501 
=== Succesors ===
next: v819 
=== Usages ===
v1236 
=== Predecessor ===
j809 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a501 #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1204 
=== Succesors ===
=== Usages ===
v1236 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j813 
index: j814 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1203 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1235 v1236 j818 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
j813 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1235 v1236 j818 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
stamp: void
=== Inputs ===
value: a9 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a9  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v496 #falseSuccessor: v498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1215 
value: i132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j876 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1215 value: i132 stateAfter: - lastLocationAccess: - #next: j876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:483) [bci: 17]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
=== Succesors ===
next: v824 
=== Usages ===
j820 v866 v1239 v1240 v1241 v1242 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 #next: v824  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 50]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j876 
y: j695 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j876 y: j695  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 65]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j820 
y: j699 
=== Succesors ===
=== Usages ===
v824 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j820 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 71]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
j876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v823 #falseSuccessor: v822  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4606120379935890898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v890  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4591726785454822243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 101]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j826 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 102]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j877 
=== Usages ===
v1237 v851 i857 v863 
=== Predecessor ===
v822 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j877  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j826 
index: - 
=== Succesors ===
=== Usages ===
j877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j826 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:504) [bci: 118]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1237 
=== Succesors ===
next: v831 
=== Usages ===
v828 i857 
=== Predecessor ===
j826 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1237 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 140]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j877 
y: j400 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j877 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 146]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v830 
falseSuccessor: v829 
=== Usages ===
=== Predecessor ===
j877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v830 #falseSuccessor: v829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B133" 
    xhandlers
    flags 
    probability 4585810712869120284
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:509) [bci: 149]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v830 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B127" 
    xhandlers
    flags 
    probability 4588635658785783210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 170]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j876 
y: j705 
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j876 y: j705  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 153
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - - - a37 - - - a2 
=== Succesors ===
=== Usages ===
v882 v851 i857 v863 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - - - a37 - - - a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v866 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v866 #trueSuccessor: v832 #falseSuccessor: v833  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4588550910408283322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:578) [bci: 253]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j855 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:518) [bci: 193]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: i857 
=== Usages ===
v1238 
=== Predecessor ===
v832 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: i857  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j855 
index: - 
=== Succesors ===
=== Usages ===
i857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i857 <|@
st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 153]
stack: a2 
locals: - a2 - - - - - - a37 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 216]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1238 
expectedValue: j826 
newValue: j877 
stateAfter: ?124 
=== Succesors ===
next: v861 
=== Usages ===
v858 
=== Predecessor ===
j855 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1238 expectedValue: j826 newValue: j877 stateAfter: ?124 #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i38 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i857 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v859 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
i857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v859 #falseSuccessor: v860  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B133" 
    xhandlers
    flags 
    probability 4543716276279518103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:524) [bci: 248]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 153]
stack: a2 
locals: - a2 - - - - - - a37 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:526) [bci: 272]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: ?124 
stateDuring: - 
arguments: a2 j826 
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?124 stateDuring: - arguments: a2 j826 #next: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v863 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B133" 
    xhandlers
    flags 
    probability 4588542520318910833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:520) [bci: 227]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v862 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v862  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v860 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" "B131" 
    xhandlers
    flags 
    probability 4558563119431564279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:550) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j878 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j878  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j876 
index: - 
=== Succesors ===
=== Usages ===
j878 v882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j876 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j878 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:552) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
=== Succesors ===
next: j879 
=== Usages ===
j836 
=== Predecessor ===
v833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1239 #next: j879  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j876 
index: - 
=== Succesors ===
=== Usages ===
j879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j876 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j879 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
=== Succesors ===
next: j835 
=== Usages ===
j837 
=== Predecessor ===
j878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1240 #next: j835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j835 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:555) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v841 
=== Usages ===
j836 
=== Predecessor ===
j879 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid j836 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j835 
y: j878 
=== Succesors ===
=== Usages ===
j837 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j835 y: j878  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j836 
y: j879 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j836 y: j879  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 113]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j837 
y: j400 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j837 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v840 
falseSuccessor: v839 
=== Usages ===
=== Predecessor ===
j835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v840 #falseSuccessor: v839  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4558508880469964351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:558) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j880 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j880  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j876 
index: - 
=== Succesors ===
=== Usages ===
j880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j876 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:559) [bci: 137]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
=== Succesors ===
next: j881 
=== Usages ===
j842 
=== Predecessor ===
v840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 #next: j881  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j876 
index: - 
=== Succesors ===
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j876 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:561) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
=== Succesors ===
next: v849 
=== Usages ===
j842 
=== Predecessor ===
j880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1242 #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid j842 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 175]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j880 
y: j881 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j880 y: j881  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 179]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j842 
y: j400 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j842 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 185]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v847 
falseSuccessor: v848 
=== Usages ===
=== Predecessor ===
j881 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v847 #falseSuccessor: v848  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B133" 
    xhandlers
    flags 
    probability 4557971914750125062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 190]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v882 <|@
st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 153]
stack: a2 
locals: - a2 - - - - - - a37 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:567) [bci: 200]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
value: j400 
stateAfter: ?124 
lastLocationAccess: - 
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1239 value: j400 stateAfter: ?124 lastLocationAccess: - #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4543716276279518102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
v848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4528556612964768804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4544358061840973709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v844 v846 
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v844 v846 #next: v851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 153]
stack: a2 
locals: - a2 - - - - - - a37 - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:575) [bci: 248]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: ?124 
stateDuring: - 
arguments: a2 j826 
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?124 stateDuring: - arguments: a2 j826 #next: v874  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 184]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v851 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B122" "B129" "B126" "B125" "B132" 
    successors 
    xhandlers
    flags 
    probability 4591726785454822242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v852 v854 v862 v864 v874 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v852 v854 v862 v864 v874 #next: v865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?146 
values: a2 - i1203 
=== Succesors ===
=== Usages ===
?224 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: a2 - i1203  <|@  <|@
tid ?224 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: - - - - - 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 285
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?224 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v916  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v911 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v911  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i586 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -59411
stableDimension: 0
stamp: i32 [-59411] ⇊00000000ffff17ed ⇈00000000ffff17ed
stampKind: i32
value: int[-59411|0xffffffffffff17ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid i584 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -59155
stableDimension: 0
stamp: i32 [-59155] ⇊00000000ffff18ed ⇈00000000ffff18ed
stampKind: i32
value: int[-59155|0xffffffffffff18ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid i582 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58899
stableDimension: 0
stamp: i32 [-58899] ⇊00000000ffff19ed ⇈00000000ffff19ed
stampKind: i32
value: int[-58899|0xffffffffffff19ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid a580 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@2138803663
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@2138803663]
=== Inputs ===
=== Succesors ===
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -63259
stableDimension: 0
stamp: i32 [-63259] ⇊00000000ffff08e5 ⇈00000000ffff08e5
stampKind: i32
value: int[-63259|0xffffffffffff08e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B139" "B138" "B137" "B136" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i568 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-66571 - -58899] ⇊00000000fffe00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v564 
values: i566 i576 i579 i582 i584 i586 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v564 values: i566 i576 i579 i582 i584 i586  <|@  <|@
f <@~|@floating>@ <|@
tid a569 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v564 
values: a567 a577 a580 a37 a37 a37 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v564 values: a567 a577 a580 a37 a37 a37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v565 v575 v578 v581 v583 v585 
=== Succesors ===
next: v570 
=== Usages ===
i568 a569 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v565 v575 v578 v581 v583 v585 #next: v570  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?10 
actionAndReason: i568 
speculation: a569 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?10 actionAndReason: i568 speculation: a569  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2677) [bci: 17]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?43 i64 v150 i181 v194 i736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/net/URI;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/StringBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v851 ?123 ?67 ?67 v24 ?124 ?178 j855 ?114 ?114 v1213 ?116 ?116 v1243 ?146 ?146 v863 ?124 v1215 ?164 v1216 j622 v631 j636 v659 v685 v694 j799 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v106 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v104 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
index: 6
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a8 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 7
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 ?116 ?114 ?164 ?43 v1210 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 8
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?10 v29 ?67 ?123 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1887
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 a5 a6 i7 a8 a9 - - - 
=== Succesors ===
=== Usages ===
v570 a1197 i1198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 a5 a6 i7 a8 a9 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v428 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v430 #falseSuccessor: v428  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@725c08e5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid a567 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@4965096
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@4965096]
=== Inputs ===
=== Succesors ===
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
result int[-66571|0xfffffffffffefbf5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66571
stableDimension: 0
stamp: i32 [-66571] ⇊00000000fffefbf5 ⇈00000000fffefbf5
stampKind: i32
value: int[-66571|0xfffffffffffefbf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@4965096] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66571|0xfffffffffffefbf5], v9|QWORD[.]] destination: B1 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1197 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
result [v7|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a8 
index: - 
=== Succesors ===
=== Usages ===
a1197 a1200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a8 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1197 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?10 
guard: - 
address: v1210 
=== Succesors ===
next: i1198 
=== Usages ===
a237 v1211 
=== Predecessor ===
v428 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?10 guard: - address: v1210 #next: i1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1197 
=== Succesors ===
=== Usages ===
i1198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1198 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?10 
guard: - 
address: v1211 
=== Succesors ===
next: v1188 
=== Usages ===
v74 v423 j401 
=== Predecessor ===
a1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?10 guard: - address: v1211 #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1198 
=== Succesors ===
=== Usages ===
j403 v412 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1198  <|@  <|@
f <@~|@floating>@ <|@
tid j402 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j403 j1096 j1147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j403 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j401 
y: j402 
=== Succesors ===
=== Usages ===
v412 v405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j401 y: j402  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2677) [bci: 14]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 v79 v423 a760 v858 v185 v198 v341 v647 v652 v673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1198 
y: i38 
=== Succesors ===
=== Usages ===
v1188 v1194 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1198 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 i672 j1121 v667 j1127 v882 v716 v1080 v1134 j1070 v828 v838 v843 j1062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v1184 
falseSuccessor: v1187 
=== Usages ===
=== Predecessor ===
i1198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v1184 #falseSuccessor: v1187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] - - - 
>@ <|@ instruction v10|DWORD[.] = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = DEC v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1182 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1182  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
v1184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j403 
y: j400 
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j403 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v1185 
=== Usages ===
=== Predecessor ===
v1187 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v442 #falseSuccessor: v1185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid a577 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@476172961
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@476172961]
=== Inputs ===
=== Succesors ===
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
result int[-62227|0xffffffffffff0ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -62227
stableDimension: 0
stamp: i32 [-62227] ⇊00000000ffff0ced ⇈00000000ffff0ced
stampKind: i32
value: int[-62227|0xffffffffffff0ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@476172961] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62227|0xffffffffffff0ced], v14|QWORD[.]] destination: B5 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1183 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1183  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
v1185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1182 v1183 
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1182 v1183 #next: v1196  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j403 
y: j401 
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j403 y: j401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v412 
=== Succesors ===
trueSuccessor: v1192 
falseSuccessor: v1195 
=== Usages ===
=== Predecessor ===
v1181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v412 #trueSuccessor: v1192 #falseSuccessor: v1195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1190 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
v1192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B139" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1194 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v1193 
falseSuccessor: v446 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v1193 #falseSuccessor: v446  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1191 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
v1193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1190 v1191 
=== Succesors ===
next: v451 
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1190 v1191 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2676) [bci: 6]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?43 ?124 a569 a569 a569 v604 v592 v612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v448 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v448 #falseSuccessor: v450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
value: a6 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a6  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v452 #falseSuccessor: v454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v456 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid a237 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1197 
=== Succesors ===
=== Usages ===
v1212 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1197  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result int[-64|0xffffffffffffffc0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 39]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: -64
stableDimension: 0
stamp: i32 [-64] ⇊00000000ffffffc0 ⇈00000000ffffffc0
stampKind: i32
value: int[-64|0xffffffffffffffc0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 144]
rawvalue: 5188146764422578175
stableDimension: 0
stamp: i64 [5188146764422578175] ⇊47fffffe87ffffff ⇈47fffffe87ffffff
stampKind: i64
value: long[5188146764422578175|0x47fffffe87ffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 ?43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j86 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 12]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j87 j95 j677 v787 v903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 141]
rawvalue: 3458764316252045313
stableDimension: 0
stamp: i64 [3458764316252045313] ⇊2fffffd200000001 ⇈2fffffd200000001
stampKind: i64
value: long[3458764316252045313|0x2fffffd200000001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 ?43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 7]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 46]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" "B25" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i42 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v41 
values: i38 i64 i64 
=== Succesors ===
=== Usages ===
?43 i64 v74 v1212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v41 values: i38 i64 i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 19.59093851132685
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v40 
=== Succesors ===
next: v52 
=== Usages ===
i42 v50 v65 v103 v463 v468 v473 v478 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v40 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i1198 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i42 y: i1198  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 33]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.948955993128056
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2679) [bci: 36]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1199 
=== Usages ===
v417 
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1199  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1189 v49 
=== Succesors ===
=== Usages ===
i1199 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1189 v49  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
result [v15|QWORD[.] + v18|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a237 
index: i42 
=== Succesors ===
=== Usages ===
i1199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a237 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1199 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v417 
address: v1212 
=== Succesors ===
next: v464 
=== Usages ===
i255 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v417 address: v1212 #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1199 
=== Succesors ===
=== Usages ===
j87 i94 v91 v79 v82 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1199  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.net.URI.match(URI.java:2519) [bci: 32]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i56 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i255 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v460 
falseSuccessor: v463 
=== Usages ===
=== Predecessor ===
i1199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v460 #falseSuccessor: v463  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZX [v15|QWORD[.] + v18|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i38 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i255 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v468 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v468 #falseSuccessor: v465  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i594 <|@
result int[-65811|0xfffffffffffefeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -65811
stableDimension: 0
stamp: i32 [-65811] ⇊00000000fffefeed ⇈00000000fffefeed
stampKind: i32
value: int[-65811|0xfffffffffffefeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-65811|0xfffffffffffefeed]] destination: B18 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 9]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i81 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i255 y: i81  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 187]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: i32
=== Inputs ===
x: i42 
y: i39 
=== Succesors ===
=== Usages ===
i42 i42 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 9]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.053955085675688075
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v84 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v83 #falseSuccessor: v84  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 12]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 14]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: i64
=== Inputs ===
x: j86 
y: i255 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j86 y: i255  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
x: j87 
y: j19 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j87 y: j19  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v473 #falseSuccessor: v470  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL (x: v22|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
result int[-66067|0xfffffffffffefded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66067
stableDimension: 0
stamp: i32 [-66067] ⇊00000000fffefded ⇈00000000fffefded
stampKind: i32
value: int[-66067|0xfffffffffffefded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66067|0xfffffffffffefded]] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B22 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2519) [bci: 28]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 39]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: i32 [-64 - 65471]
=== Inputs ===
x: i255 
y: i93 
=== Succesors ===
=== Usages ===
j95 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i255 y: i93  <|@  <|@
f <@~|@floating>@ <|@
tid j95 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 40]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: i64
=== Inputs ===
x: j86 
y: i94 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j86 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
x: j95 
y: j20 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j95 y: j20  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v478 #falseSuccessor: v475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA [v19|DWORD - 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHL (x: v25|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid i598 <|@
result int[-66323|0xfffffffffffefced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66323
stableDimension: 0
stamp: i32 [-66323] ⇊00000000fffefced ⇈00000000fffefced
stampKind: i32
value: int[-66323|0xfffffffffffefced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66323|0xfffffffffffefced]] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B25 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
result int[-65555|0xfffffffffffeffed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -65555
stableDimension: 0
stamp: i32 [-65555] ⇊00000000fffeffed ⇈00000000fffeffed
stampKind: i32
value: int[-65555|0xfffffffffffeffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-65555|0xfffffffffffeffed]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B18" "B21" "B24" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i590 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-66323 - -65555] ⇊00000000fffefced ⇈00000000fffeffed
valueDescription: i32
=== Inputs ===
merge: v587 
values: i589 i594 i596 i598 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v587 values: i589 i594 i596 i598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v588 v593 v595 v597 
=== Succesors ===
next: v592 
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v588 v593 v595 v597 #next: v592  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 147
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - - - a9 - - - a2 
=== Succesors ===
=== Usages ===
?43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - - - a9 - - - a2  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<URI.quote(String, long, long)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 2678
stackSize: 0
=== Inputs ===
outerFrameState: ?67 
values: a8 j19 - j20 - - a37 i39 i42 - 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: a8 j19 - j20 - - a37 i39 i42 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?43 
actionAndReason: i590 
speculation: a37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?43 actionAndReason: i590 speculation: a37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.quote(URI.java:2678) [bci: 27]
locals: v7|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] v18|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: v1|QWORD[.] 
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:27, 147] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2704) [bci: 193]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: j713 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: j713  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j876 j713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j713 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:230) [bci: 12]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
=== Succesors ===
next: j621 
=== Usages ===
j623 j627 j643 i651 j660 j677 v706 v1224 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 #next: j621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j621 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:232) [bci: 18]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j622 
=== Usages ===
v659 v1222 j680 v694 v717 
=== Predecessor ===
j713 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j622 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:234) [bci: 24]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j714 
=== Usages ===
v1223 
=== Predecessor ===
j621 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: j714  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
result [v29|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: v261 
index: - 
=== Succesors ===
=== Usages ===
j714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v261 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j714 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:314) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1220 
=== Succesors ===
next: j625 
=== Usages ===
j626 j660 
=== Predecessor ===
j622 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1220 #next: j625  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j625 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:315) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
j626 j644 
=== Predecessor ===
j714 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j625 
y: j714 
=== Succesors ===
=== Usages ===
j627 i651 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j625 y: j714  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 42]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j626 
y: j713 
=== Succesors ===
=== Usages ===
v698 v700 v702 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j626 y: j713  <|@  <|@
f <@~|@floating>@ <|@
tid j697 <|@
result long[-121|0xffffffffffffff87] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j627 
y: j697 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j627 y: j697  <|@  <|@
f <@~|@floating>@ <|@
tid j705 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 109]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 v866 j1052 j1114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - - - a9 - - - 
=== Succesors ===
=== Usages ===
?114 ?116 ?146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - - - a9 - - -  <|@  <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?146 ?114 ?116 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: false
localsSize: 2
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 269
stackSize: 0
=== Inputs ===
outerFrameState: ?123 
values: a2 a8 a2 
monitorIds: v112 
=== Succesors ===
=== Usages ===
v694 v604 i646 i651 v659 j660 i672 j680 v694 v715 v716 v717 v659 v1260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a2 a8 a2 monitorIds: v112  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j623 v700 j820 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j699 <|@
result long[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 136]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 v821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 97]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
j625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v629 #falseSuccessor: v628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [v29|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = OR (x: r15|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = XOR (x: v31|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v32|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B54" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:322) [bci: 100]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:324) [bci: 120]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
object: a2 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a2 #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B41" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j713 
y: j695 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j713 y: j695  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 142]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j623 
y: j699 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j623 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v633 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v634 #falseSuccessor: v633  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v27|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v33|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B40" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 151]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j636 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j636 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 152]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v639 
=== Usages ===
v1221 
=== Predecessor ===
v634 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
i646 i651 j660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 172]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j627 
y: j695 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j627 y: j695  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 178]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v700 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v637 
=== Usages ===
=== Predecessor ===
j636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v700 #trueSuccessor: v638 #falseSuccessor: v637  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v32|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 181]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid j701 <|@
result long[768|0x300] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 192]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 196]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j627 
y: j701 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j627 y: j701  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 202]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v702 
=== Succesors ===
trueSuccessor: v641 
falseSuccessor: v640 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v702 #trueSuccessor: v641 #falseSuccessor: v640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v32|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 205]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: i646 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i646  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
result long[895|0x37f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j643 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j713 
y: j703 
=== Succesors ===
=== Usages ===
j644 i646 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j713 y: j703  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:358) [bci: 235]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j625 
y: j643 
=== Succesors ===
=== Usages ===
i646 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j625 y: j643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i646 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 276]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
expectedValue: j643 
newValue: j644 
stateAfter: ?114 
=== Succesors ===
next: v650 
=== Usages ===
v647 
=== Predecessor ===
v641 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1221 expectedValue: j643 newValue: j644 stateAfter: ?114 #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i646 
y: i38 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i646 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v647 
=== Succesors ===
trueSuccessor: v648 
falseSuccessor: v649 
=== Usages ===
=== Predecessor ===
i646 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v647 #trueSuccessor: v648 #falseSuccessor: v649  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = AND v27|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = OR (x: r15|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v35|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:370) [bci: 308]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v648 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B54" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:363) [bci: 287]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:379) [bci: 330]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: i651 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i651 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 365]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
expectedValue: j713 
newValue: j626 
stateAfter: ?114 
=== Succesors ===
next: v655 
=== Usages ===
v652 
=== Predecessor ===
v640 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1221 expectedValue: j713 newValue: j626 stateAfter: ?114 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i651 
y: i38 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i651 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v652 
=== Succesors ===
trueSuccessor: v653 
falseSuccessor: v654 
=== Usages ===
=== Predecessor ===
i651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v652 #trueSuccessor: v653 #falseSuccessor: v654  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v31|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B36 -> B37 falseDestination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:390) [bci: 397]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B54" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v656 v658 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v656 v658 #next: v659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 421]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: ?114 
stateDuring: ?114 
arguments: a2 j621 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?114 stateDuring: ?114 arguments: a2 j621 #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:383) [bci: 376]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 426]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j660 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j660 <|@
result v36|QWORD <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 440]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
expectedValue: j713 
newValue: j714 
stateAfter: ?114 
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v1221 expectedValue: j713 newValue: j714 stateAfter: ?114 #next: v661  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
j660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v30|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B42" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:419) [bci: 460]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 86]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v661 v662 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v661 v662 #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
result [v28|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j621 
index: - 
=== Succesors ===
=== Usages ===
v715 v716 v717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j621 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 113]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j713 
y: j705 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j713 y: j705  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 119]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v706 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v664 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v706 #trueSuccessor: v663 #falseSuccessor: v664  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v27|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 141]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid j677 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j713 
y: j86 
=== Succesors ===
=== Usages ===
j680 v681 v715 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j713 y: j86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:258) [bci: 176]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
value: j677 
stateAfter: ?114 
lastLocationAccess: - 
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 value: j677 stateAfter: ?114 lastLocationAccess: - #next: v678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:261) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j680 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j680  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j622 
index: - 
=== Succesors ===
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j622 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j680 <|@
result v38|QWORD <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:265) [bci: 199]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1223 
expectedValue: j677 
newValue: j621 
stateAfter: ?114 
=== Succesors ===
next: v684 
=== Usages ===
v681 j687 
=== Predecessor ===
v678 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v1223 expectedValue: j677 newValue: j621 stateAfter: ?114 #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 216]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j677 
y: j680 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j677 y: j680  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 222]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v681 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v682 
=== Usages ===
=== Predecessor ===
j680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v681 #trueSuccessor: v683 #falseSuccessor: v682  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = OR v27|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v28|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B54" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:267) [bci: 225]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:269) [bci: 245]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
object: a2 
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a2 #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:272) [bci: 249]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j686 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j686 <|@
result rsp|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:289) [bci: 273]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
j687 
=== Predecessor ===
v682 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 297]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j680 
y: j686 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j680 y: j686  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
result long[-4089|0xfffffffffffff007] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 305]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 312]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j687 
y: j708 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j687 y: j708  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 318]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v688 
=== Usages ===
=== Predecessor ===
j686 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v689 #falseSuccessor: v688  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = SUB (x: v38|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v39|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 321]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 335]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
value: j400 
stateAfter: ?114 
lastLocationAccess: - 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 value: j400 stateAfter: ?114 lastLocationAccess: - #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B53" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:297) [bci: 358]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B52" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 122]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v717 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:439) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
value: j621 
stateAfter: ?114 
lastLocationAccess: - 
=== Succesors ===
next: j718 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 value: j621 stateAfter: ?114 lastLocationAccess: - #next: j718  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
result [v27|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j713 
index: - 
=== Succesors ===
=== Usages ===
i672 j718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j713 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j718 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:443) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
=== Succesors ===
next: v670 
=== Usages ===
v667 
=== Predecessor ===
v717 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1224 #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j400 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j718 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v669 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
j718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v669 #falseSuccessor: v668  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v27|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j671 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j671 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 74]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i672 
=== Usages ===
i672 
=== Predecessor ===
v669 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i672 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
expectedValue: j400 
newValue: j671 
stateAfter: ?114 
=== Succesors ===
next: v676 
=== Usages ===
v673 
=== Predecessor ===
j671 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1224 expectedValue: j400 newValue: j671 stateAfter: ?114 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i672 
y: i38 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i672 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v673 
=== Succesors ===
trueSuccessor: v674 
falseSuccessor: v675 
=== Usages ===
=== Predecessor ===
i672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v673 #trueSuccessor: v674 #falseSuccessor: v675  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v27|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:452) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:448) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:456) [bci: 132]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 137]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v668 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B47" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v691 v693 v711 
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v691 v693 v711 #next: v694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: a2: v1|QWORD[.] a8: v7|QWORD[.] 
locks: a2: v1|QWORD[.] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - a2: v1|QWORD[.] - - - - - - a9: v8|QWORD[.] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 383]
at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: ?114 
stateDuring: ?114 
arguments: a2 j621 
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?114 stateDuring: ?114 arguments: a2 j621 #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B44" "B46" "B53" "B29" "B35" "B39" "B38" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v721 v722 v723 v724 v725 v726 v727 v728 
=== Succesors ===
next: a1200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v721 v722 v723 v724 v725 v726 v727 v728 #next: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1200 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1210 
=== Succesors ===
next: v1260 
=== Usages ===
a268 v1260 v1214 
=== Predecessor ===
v720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1210 #next: v1260  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?114 
object: a1200 
=== Succesors ===
next: a1201 
=== Usages ===
=== Predecessor ===
a1200 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?114 object: a1200 #next: a1201  <|@  <|@
f <@~|@floating>@ <|@
tid v1216 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1201 v332 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1201 <|@
result v41|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1216 
=== Succesors ===
next: v487 
=== Usages ===
a278 v279 v1217 v1218 
=== Predecessor ===
v1260 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1216 #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
value: a1201 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
a1201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v486 #falseSuccessor: v484  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v7|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:0, 150] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD[.], y: v41|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
result int[-71691|0xfffffffffffee7f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71691
stableDimension: 0
stamp: i32 [-71691] ⇊00000000fffee7f5 ⇈00000000fffee7f5
stampKind: i32
value: int[-71691|0xfffffffffffee7f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?114 
actionAndReason: i606 
speculation: a37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?114 actionAndReason: i606 speculation: a37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -71691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1202 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
result [v41|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1201 
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1202 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1217 
=== Succesors ===
next: v266 
=== Usages ===
i149 i181 i543 i312 v521 
=== Predecessor ===
v484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1217 #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a377 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 2]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 2]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1213 
value: a377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1203 
=== Usages ===
=== Predecessor ===
i1202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1213 value: a377 stateAfter: - lastLocationAccess: - #next: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
result [v40|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1200 
=== Succesors ===
=== Usages ===
i1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1203 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1214 
=== Succesors ===
next: i1204 
=== Usages ===
i132 i312 ?164 ?178 j818 i359 
=== Predecessor ===
v266 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1214 #next: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1204 v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1204 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1215 
=== Succesors ===
next: v153 
=== Usages ===
i132 j814 v341 v360 v313 
=== Predecessor ===
i1203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1215 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1204 
y: i38 
=== Succesors ===
=== Usages ===
v347 v300 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1204 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i1203 
y: i1204 
=== Succesors ===
=== Usages ===
v284 i149 i184 i383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1203 y: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i132 
y: i1202 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i132 y: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i149 
y: i39 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i149 y: i39  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?123 
values: a2 - a2 
monitorIds: v112 
=== Succesors ===
=== Usages ===
?164 ?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a2 - a2 monitorIds: v112  <|@  <|@
tid ?116 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: false
localsSize: 2
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 2]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?123 
values: a2 a8 a2 
monitorIds: v112 
=== Succesors ===
=== Usages ===
v612 a760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a2 a8 a2 monitorIds: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9530056616276885
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v152 
=== Usages ===
=== Predecessor ===
i1204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v151 #falseSuccessor: v152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v40|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = ADD (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SUB (x: v45|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9530056616276885 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606759131430453278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid i614 <|@
result int[-81505|0xfffffffffffec19f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81505
stableDimension: 0
stamp: i32 [-81505] ⇊00000000fffec19f ⇈00000000fffec19f
stampKind: i32
value: int[-81505|0xfffffffffffec19f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v299 #falseSuccessor: v295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576647325387566637
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81505|0xfffffffffffec19f]] destination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4606673292311601509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1202 
y: i1203 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1202 y: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i312 
y: i1204 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i312 y: i1204  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v314 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v316 #falseSuccessor: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v42|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576592388351501504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81505|0xfffffffffffec19f]] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B118" 
    xhandlers
    flags 
    probability 4606588311583938258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid a278 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1201 
=== Succesors ===
=== Usages ===
a501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B61 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1202 
y: i39 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1202 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i181 
y: i182 
=== Succesors ===
=== Usages ===
i184 i383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i181 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i183 
y: i132 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i183 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i38 
=== Succesors ===
=== Usages ===
i383 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v185 
trueValue: i132 
falseValue: i183 
=== Succesors ===
=== Usages ===
i359 j892 v194 i197 v745 v521 i543 a760 v786 i736 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v185 trueValue: i132 falseValue: i183  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i39 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i383 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v490 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v490 #falseSuccessor: v488  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA [v49|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SUB (x: v50|DWORD, ~y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v50|DWORD, ~trueValue: v45|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
result int[-84243|0xfffffffffffeb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243] ⇊00000000fffeb6ed ⇈00000000fffeb6ed
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i196 
y: i383 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i196 y: i383  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i38 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i197 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v494 
falseSuccessor: v492 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v494 #falseSuccessor: v492  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
result int[-84499|0xfffffffffffeb5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84499
stableDimension: 0
stamp: i32 [-84499] ⇊00000000fffeb5ed ⇈00000000fffeb5ed
stampKind: i32
value: int[-84499|0xfffffffffffeb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84499|0xfffffffffffeb5ed]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B63" "B58" "B65" "B60" 
    successors 
    xhandlers
    flags 
    probability 4581123456496904566
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i610 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-84499 - -81505] ⇊00000000fffe808d ⇈00000000fffef7ff
valueDescription: i32
=== Inputs ===
merge: v607 
values: i609 i614 i616 i614 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v607 values: i609 i614 i616 i614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v608 v613 v615 v619 
=== Succesors ===
next: v612 
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v608 v613 v615 v619 #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?116 
actionAndReason: i610 
speculation: a37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?116 actionAndReason: i610 speculation: a37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:5, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" "B71" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j739 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j739 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j783 
=== Usages ===
v1225 v1226 
=== Predecessor ===
v492 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j783  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j739 
index: - 
=== Succesors ===
=== Usages ===
j783 v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j783 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
=== Succesors ===
next: j784 
=== Usages ===
j743 v1227 v1228 a759 v1233 v1229 v1230 v1231 v1232 
=== Predecessor ===
j739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1225 #next: j784  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j739 
index: - 
=== Succesors ===
=== Usages ===
j784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j784 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1226 
=== Succesors ===
next: v748 
=== Usages ===
v749 
=== Predecessor ===
j783 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1226 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i744 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i744  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v745 
=== Succesors ===
trueSuccessor: v747 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
j784 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v745 #trueSuccessor: v747 #falseSuccessor: v746  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4586256159157517904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i383 
y: i39 
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i383 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i768 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i736 
y: i767 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i736 y: i767  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i768 
y: i737 
=== Succesors ===
=== Usages ===
j742 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i768 y: i737  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i738 
=== Succesors ===
=== Usages ===
j743 v1229 v1230 v1231 v1232 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i738  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j742 
y: j783 
=== Succesors ===
=== Usages ===
v749 v785 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j742 y: j783  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j784 
y: j743 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j784 y: j743  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v749 
=== Succesors ===
trueSuccessor: v754 
falseSuccessor: v753 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v749 #trueSuccessor: v754 #falseSuccessor: v753  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v58|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = AND v59|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVSXD v60|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v61|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B72" 
    xhandlers
    flags 
    probability 4556437656440007011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4586195205776300669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
value: j743 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1225 value: j743 stateAfter: - lastLocationAccess: - #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
result [v61|QWORD + v56|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j742 
index: j783 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j742 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
address: v1229 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1229 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
result [v61|QWORD + v56|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j742 
index: j783 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j742 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
address: v1230 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1230 #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
result [v61|QWORD + v56|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j742 
index: j783 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j742 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
address: v1231 
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1231 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
result [v61|QWORD + v56|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j742 
index: j783 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j742 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
address: v1232 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1232 #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
result [v56|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1227 
value: i383 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1227 value: i383 stateAfter: - lastLocationAccess: - #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
result [v56|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1228 
value: j86 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1228 value: j86 stateAfter: - lastLocationAccess: - #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
result [v56|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1233 
value: v889 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1233 value: v889 stateAfter: - lastLocationAccess: - #next: v758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j783 
=== Succesors ===
next: v761 
=== Usages ===
a764 
=== Predecessor ===
v758 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j783 #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
a759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v56|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD + 12], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4572068100484103807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B69" 
    successors "B73" 
    xhandlers
    flags 
    probability 4572555727533841685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v752 
=== Succesors ===
next: a760 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v752 #next: a760  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a760 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?116 
arguments: v735 i383 i38 
=== Succesors ===
next: v763 
=== Usages ===
a764 
=== Predecessor ===
v751 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?116 arguments: v735 i383 i38 #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
a760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 150] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a764 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v762 
values: a759 a760 
=== Succesors ===
=== Usages ===
v1244 a549 v1219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v762 values: a759 a760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v763 
=== Succesors ===
next: v1033 
=== Usages ===
a764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v763 #next: v1033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v906 
=== Usages ===
j1034 j1036 
=== Predecessor ===
v762 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1202 
y: i383 
=== Succesors ===
=== Usages ===
i543 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1202 y: i383  <|@  <|@
f <@~|@floating>@ <|@
tid i543 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v521 
trueValue: i1202 
falseValue: i383 
=== Succesors ===
=== Usages ===
j893 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v521 trueValue: i1202 falseValue: i383  <|@  <|@
f <@~|@floating>@ <|@
tid j893 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i543 
=== Succesors ===
=== Usages ===
j1096 v1244 j897 v903 v1030 j1079 j1085 j1089 j1093 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i543  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j893 
y: j86 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j893 y: j86  <|@  <|@
f <@~|@floating>@ <|@
tid j1092 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1093 j1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1060 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1061 j1120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1088 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1089 j1141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j789 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1126 j1069 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1084 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1085 j1138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1132 j1077 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1078 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1079 j1133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v903 
=== Succesors ===
trueSuccessor: v904 
falseSuccessor: v905 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v903 #trueSuccessor: v904 #falseSuccessor: v905  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = CMOVE (falseValue: v52|DWORD, ~trueValue: v42|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v68|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v923 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v923  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1219 <|@
result [v66|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a764 
index: - 
=== Succesors ===
=== Usages ===
j1036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1036 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1033 
address: v1219 
=== Succesors ===
=== Usages ===
v1245 v1247 v1249 v1251 v1253 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1033 address: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
result [v41|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1201 
=== Succesors ===
=== Usages ===
j1034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1201  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
result v70|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1033 
address: v1218 
=== Succesors ===
=== Usages ===
v1246 v1248 v1250 v1252 v1254 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1033 address: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid j1079 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j893 
y: j1078 
=== Succesors ===
=== Usages ===
v1080 v1082 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1079 
y: j400 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1079 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1080 
=== Succesors ===
trueSuccessor: v907 
falseSuccessor: v908 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1080 #trueSuccessor: v907 #falseSuccessor: v908  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v66|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = LEA [v41|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v68|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v907 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v910  <|@  <|@
f <@*|@fixed>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B135" 
    successors "B79" "B135" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1070 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v911 
values: j400 j1077 
=== Succesors ===
=== Usages ===
v1254 j1077 v1253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v911 values: j400 j1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v910 
=== Succesors ===
next: v1205 
=== Usages ===
v1205 v915 v916 j1070 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v910 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
result [v70|QWORD[*] + v72|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1070 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1205 <|@
result v73|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v911 
address: v1254 
=== Succesors ===
next: v1165 
=== Usages ===
v1165 
=== Predecessor ===
v911 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v911 address: v1254 #next: v1165  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
result [v69|QWORD[.] + v72|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1070 
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
value: v1205 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1253 value: v1205 stateAfter: - lastLocationAccess: - #next: v918  <|@  <|@
f <@~|@floating>@ <|@
tid j1077 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1070 
y: j251 
=== Succesors ===
=== Usages ===
j1062 j1070 v1082 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1070 y: j251  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1079 
y: j1077 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1079 y: j1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1082 
=== Succesors ===
trueSuccessor: v915 
falseSuccessor: v917 
=== Usages ===
=== Predecessor ===
v1165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1082 #trueSuccessor: v915 #falseSuccessor: v917  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V256_WORD = H [v70|QWORD[*] + v72|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v69|QWORD[.] + v72|QWORD * 2], input: v73|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v72|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v911 
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v911 #next: v921  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v915 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1062 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v920 
values: j400 j1077 
=== Succesors ===
=== Usages ===
v1252 j1069 j1053 v1086 v1251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v920 values: j400 j1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v919 v921 
=== Succesors ===
next: v943 
=== Usages ===
j1062 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v919 v921 #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid j1085 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j893 
y: j1084 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1085 
y: j1062 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1085 y: j1062  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1086 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v941 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1086 #trueSuccessor: v942 #falseSuccessor: v941  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v68|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v946  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
v942 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
v1206 
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
result [v70|QWORD[*] + v75|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1062 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1206 <|@
result v77|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v941 
address: v1252 
=== Succesors ===
next: v1163 
=== Usages ===
v1163 
=== Predecessor ===
v941 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v941 address: v1252 #next: v1163  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
result [v69|QWORD[.] + v75|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1062 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
value: v1206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1251 value: v1206 stateAfter: - lastLocationAccess: - #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid j1069 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1062 
y: j789 
=== Succesors ===
=== Usages ===
j1053 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1062 y: j789  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
v1163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V128_WORD = H [v70|QWORD[*] + v75|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v69|QWORD[.] + v75|QWORD * 2], input: v77|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1053 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v931 
values: j1069 j1062 
=== Succesors ===
=== Usages ===
v1250 j1061 j1045 v1090 v1249 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v931 values: j1069 j1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v930 v946 
=== Succesors ===
next: v949 
=== Usages ===
j1053 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v930 v946 #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j893 
y: j1088 
=== Succesors ===
=== Usages ===
v1090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j1088  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1089 
y: j1053 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1089 y: j1053  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v948 #falseSuccessor: v947  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v68|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1207 
=== Usages ===
v1207 
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
result [v70|QWORD[*] + v79|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1053 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
result v81|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v947 
address: v1250 
=== Succesors ===
next: v1161 
=== Usages ===
v1161 
=== Predecessor ===
v947 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v947 address: v1250 #next: v1161  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
result [v69|QWORD[.] + v79|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1053 
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
value: v1207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1249 value: v1207 stateAfter: - lastLocationAccess: - #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid j1061 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1053 
y: j1060 
=== Succesors ===
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1053 y: j1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
v1161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|V64_WORD = H [v70|QWORD[*] + v79|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v69|QWORD[.] + v79|QWORD * 2], input: v81|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v79|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1045 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v935 
values: j1061 j1053 
=== Succesors ===
=== Usages ===
v1248 j1052 j1037 v1094 v1247 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v935 values: j1061 j1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v934 v952 
=== Succesors ===
next: v955 
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v934 v952 #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid j1093 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j893 
y: j1092 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j1092  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1093 
y: j1045 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1093 y: j1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1094 
=== Succesors ===
trueSuccessor: v954 
falseSuccessor: v953 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1094 #trueSuccessor: v954 #falseSuccessor: v953  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v68|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
v954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1208 
=== Usages ===
v1208 
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
result [v70|QWORD[*] + v83|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1045 
=== Succesors ===
=== Usages ===
v1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1208 <|@
result v85|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v953 
address: v1248 
=== Succesors ===
next: v1159 
=== Usages ===
v1159 
=== Predecessor ===
v953 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v953 address: v1248 #next: v1159  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
result [v69|QWORD[.] + v83|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1045 
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
value: v1208 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1247 value: v1208 stateAfter: - lastLocationAccess: - #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1045 
y: j705 
=== Succesors ===
=== Usages ===
j1037 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1045 y: j705  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
v1159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|V32_WORD = H [v70|QWORD[*] + v83|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v69|QWORD[.] + v83|QWORD * 2], input: v85|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1037 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v938 
values: j1052 j1045 
=== Succesors ===
=== Usages ===
v1246 v1097 v1245 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v938 values: j1052 j1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v937 v958 
=== Succesors ===
next: v961 
=== Usages ===
j1037 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v937 v958 #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid j1096 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j893 
y: j402 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j402  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1096 
y: j1037 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1096 y: j1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1097 
=== Succesors ===
trueSuccessor: v960 
falseSuccessor: v959 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1097 #trueSuccessor: v960 #falseSuccessor: v959  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = DEC v68|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v960 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1209 
=== Usages ===
i1209 
=== Predecessor ===
v961 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
result [v70|QWORD[*] + v87|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1034 
index: j1037 
=== Succesors ===
=== Usages ===
i1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1034 index: j1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1209 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v959 
address: v1246 
=== Succesors ===
next: v1157 
=== Usages ===
v1157 
=== Predecessor ===
v959 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v959 address: v1246 #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
result [v69|QWORD[.] + v87|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1036 
index: j1037 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
value: i1209 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
i1209 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1245 value: i1209 stateAfter: - lastLocationAccess: - #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v1157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSX [v70|QWORD[*] + v87|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD[.] + v87|QWORD * 2], y: v89|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B74" "B91" "B90" 
    successors "B93" "B111" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v923 v940 v964 
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v923 v940 v964 #next: v1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v971 
=== Usages ===
j1102 
=== Predecessor ===
v924 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v971  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i383 
=== Succesors ===
=== Usages ===
j897 v1030 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i383  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j893 
y: j892 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j893 y: j892  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1030 
=== Succesors ===
trueSuccessor: v970 
falseSuccessor: v969 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1030 #trueSuccessor: v970 #falseSuccessor: v969  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVSXD v52|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
result [v66|QWORD[.] + v68|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a764 
index: j893 
=== Succesors ===
=== Usages ===
j1102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: j893  <|@  <|@
f <@~|@floating>@ <|@
tid j1102 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1100 
address: v1244 
=== Succesors ===
=== Usages ===
v1255 v1256 v1257 v1258 v1259 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1100 address: v1244  <|@  <|@
f <@~|@floating>@ <|@
tid j897 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j892 
y: j893 
=== Succesors ===
=== Usages ===
j1147 j1133 j1138 j1141 j1144 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j892 y: j893  <|@  <|@
f <@~|@floating>@ <|@
tid j1133 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j897 
y: j1078 
=== Succesors ===
=== Usages ===
v1134 v1136 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1133 
y: j400 
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1133 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v973 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v972 #falseSuccessor: v973  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = LEA [v66|QWORD[.] + v68|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = SUB (x: v90|QWORD, ~y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = LEA [v92|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@*|@fixed>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
result v94|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B110" 
    successors "B97" "B110" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1127 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v976 
values: j400 j1132 
=== Succesors ===
=== Usages ===
v1259 j1132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v976 values: j400 j1132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v975 
=== Succesors ===
next: v1175 
=== Usages ===
j1127 v979 v980 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v975 #next: v1175  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
result [v91|QWORD[.] + v95|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1127 
=== Succesors ===
=== Usages ===
v1175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
value: v1176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1259 value: v1176 stateAfter: - lastLocationAccess: - #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid j1132 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1127 
y: j251 
=== Succesors ===
=== Usages ===
j1121 j1127 v1136 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1127 y: j251  <|@  <|@
f <@~|@floating>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1133 
y: j1132 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1133 y: j1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1136 
=== Succesors ===
trueSuccessor: v979 
falseSuccessor: v981 
=== Usages ===
=== Predecessor ===
v1175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1136 #trueSuccessor: v979 #falseSuccessor: v981  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v91|QWORD[.] + v95|QWORD * 2], input: v94|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v95|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v976 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v976 #next: v985  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1121 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v984 
values: j400 j1132 
=== Succesors ===
=== Usages ===
v1258 j1126 j1115 v1139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v984 values: j400 j1132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v983 v985 
=== Succesors ===
next: v1006 
=== Usages ===
j1121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v983 v985 #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid j1138 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j897 
y: j1084 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1138 
y: j1121 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1138 y: j1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1139 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v1004 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1139 #trueSuccessor: v1005 #falseSuccessor: v1004  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v92|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
v1005 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1174  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
result [v91|QWORD[.] + v97|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1121 
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1121  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
result v99|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
value: v1180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 value: v1180 stateAfter: - lastLocationAccess: - #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid j1126 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1121 
y: j789 
=== Succesors ===
=== Usages ===
j1115 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1121 y: j789  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
v1174 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v91|QWORD[.] + v97|QWORD * 2], input: v99|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = LEA [v97|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|QWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1115 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v995 
values: j1126 j1121 
=== Succesors ===
=== Usages ===
v1257 j1120 j1109 v1142 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v995 values: j1126 j1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v994 v1009 
=== Succesors ===
next: v1012 
=== Usages ===
j1115 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v994 v1009 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid j1141 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j897 
y: j1088 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j1088  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1141 
y: j1115 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1141 y: j1115  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1010 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v1011 #falseSuccessor: v1010  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v92|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
result [v91|QWORD[.] + v101|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1115 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1115  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
result v103|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
value: v1179 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1257 value: v1179 stateAfter: - lastLocationAccess: - #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid j1120 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1115 
y: j1060 
=== Succesors ===
=== Usages ===
j1109 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
v1172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v91|QWORD[.] + v101|QWORD * 2], input: v103|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = LEA [v101|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|QWORD] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1109 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v998 
values: j1120 j1115 
=== Succesors ===
=== Usages ===
v1256 j1114 j1103 v1145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v998 values: j1120 j1115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v997 v1015 
=== Succesors ===
next: v1018 
=== Usages ===
j1109 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v997 v1015 #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid j1144 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j897 
y: j1092 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j1092  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1144 
y: j1109 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1144 y: j1109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1145 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1016 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1145 #trueSuccessor: v1017 #falseSuccessor: v1016  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = LEA [v92|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|QWORD, y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|QWORD] destination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1170 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1170  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
result [v91|QWORD[.] + v105|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1109 
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
result v107|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
value: v1178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1256 value: v1178 stateAfter: - lastLocationAccess: - #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid j1114 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1109 
y: j705 
=== Succesors ===
=== Usages ===
j1103 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1109 y: j705  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v1170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v91|QWORD[.] + v105|QWORD * 2], input: v107|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v105|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|QWORD] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1103 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1001 
values: j1114 j1109 
=== Succesors ===
=== Usages ===
v1255 v1148 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1001 values: j1114 j1109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1000 v1021 
=== Succesors ===
next: v1024 
=== Usages ===
j1103 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1000 v1021 #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid j1147 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j897 
y: j402 
=== Succesors ===
=== Usages ===
v1148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j897 y: j402  <|@  <|@
f <@~|@floating>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1147 
y: j1103 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1147 y: j1103  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1148 
=== Succesors ===
trueSuccessor: v1023 
falseSuccessor: v1022 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1148 #trueSuccessor: v1023 #falseSuccessor: v1022  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = DEC v92|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v109|QWORD, y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1027  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
v1023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
result [v91|QWORD[.] + v109|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1102 
index: j1103 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: j1103  <|@  <|@
f <@~|@floating>@ <|@
tid i1177 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
value: i1177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1255 value: i1177 stateAfter: - lastLocationAccess: - #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
v1168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v91|QWORD[.] + v109|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B96" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v976 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v976  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B110 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B112" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v987  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B109" "B108" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v987 v1003 v1027 
=== Succesors ===
next: a549 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v987 v1003 v1027 #next: a549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a549 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a764 
=== Succesors ===
next: v332 
=== Usages ===
a501 a331 
=== Predecessor ===
v988 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a764 #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
result v111|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: Compress
stamp: n! -
=== Inputs ===
value: a549 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1216 
value: a331 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j799 
=== Usages ===
=== Predecessor ===
a549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1216 value: a331 stateAfter: - lastLocationAccess: - #next: j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j799 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v805 
=== Usages ===
j801 
=== Predecessor ===
v332 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
result v112|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j799 
y: i800 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j799 y: i800  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
result [v112|QWORD[*] + v113|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: j804 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: j804  <|@  <|@
f <@~|@floating>@ <|@
tid i806 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1234 
value: i806 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
j799 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1234 value: i806 stateAfter: - lastLocationAccess: - #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v346 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v346 #falseSuccessor: v342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[.] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 16], y: v111|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v112|QWORD[*] + v113|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4557304548972874350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B117" 
    xhandlers
    flags 
    probability 4586865692969690251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i32
=== Inputs ===
x: i383 
y: i1203 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i383 y: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i359 
y: i1204 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i359 y: i1204  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v361 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v363 #falseSuccessor: v361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SUB (x: v52|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4557217859719587616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B113" "B115" 
    successors 
    xhandlers
    flags 
    probability 4561764803973601479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v345 v362 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v345 v362 #next: v365  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?146 
values: a2 a8 i1203 
=== Succesors ===
=== Usages ===
?161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: a2 a8 i1203  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?164 
values: - - 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?164 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?161 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -93537 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v1|QWORD[.] v7|QWORD[.] v43|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v1|QWORD[.] - 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 4586798644250351293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B61" 
    successors "B119" "B134" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a501 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v223 
values: a549 a278 
=== Succesors ===
=== Usages ===
j813 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v223 values: a549 a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v222 v225 
=== Succesors ===
next: j809 
=== Usages ===
a501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v222 v225 #next: j809  <|@  <|@
f <@~|@floating>@ <|@
tid a268 <|@
result v116|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1200 
=== Succesors ===
=== Usages ===
j809 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j809 <|@
result v117|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
object: a268 
=== Succesors ===
next: j813 
=== Usages ===
v1235 
=== Predecessor ===
v223 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a268 #next: j813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j813 <|@
result v118|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
object: a501 
=== Succesors ===
next: v819 
=== Usages ===
v1236 
=== Predecessor ===
j809 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a501 #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
result [v117|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1204 
=== Succesors ===
=== Usages ===
v1236 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
result [v118|QWORD[*] + v119|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j813 
index: j814 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1203 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1235 v1236 j818 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
j813 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1235 v1236 j818 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
stamp: void
=== Inputs ===
value: a9 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a9  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v496 #falseSuccessor: v498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[*] = MOVE v116|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[*] = MOVE v115|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v117|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v118|QWORD[*] + v119|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|QWORD[.], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1215 
value: i132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j876 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1215 value: i132 stateAfter: - lastLocationAccess: - #next: j876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j876 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:483) [bci: 17]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
=== Succesors ===
next: v824 
=== Usages ===
j820 v866 v1239 v1240 v1241 v1242 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 #next: v824  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 50]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j876 
y: j695 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j876 y: j695  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 65]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j820 
y: j699 
=== Succesors ===
=== Usages ===
v824 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j820 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 71]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
j876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v823 #falseSuccessor: v822  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = AND v121|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v122|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4606120379935890898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v890  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4591726785454822243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 101]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j826 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j826 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 102]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j877 
=== Usages ===
v1237 v851 i857 v863 
=== Predecessor ===
v822 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j877  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
result [v123|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j826 
index: - 
=== Succesors ===
=== Usages ===
j877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j826 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j877 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:504) [bci: 118]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1237 
=== Succesors ===
next: v831 
=== Usages ===
v828 i857 
=== Predecessor ===
j826 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1237 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 140]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j877 
y: j400 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j877 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 146]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v830 
falseSuccessor: v829 
=== Usages ===
=== Predecessor ===
j877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v830 #falseSuccessor: v829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOV [v123|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v124|QWORD, y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B133" 
    xhandlers
    flags 
    probability 4585810712869120284
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:509) [bci: 149]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v830 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B127" 
    xhandlers
    flags 
    probability 4588635658785783210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 170]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
x: j876 
y: j705 
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j876 y: j705  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 153
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - - - a37 - - - a2 
=== Succesors ===
=== Usages ===
v882 v851 i857 v863 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - - - a37 - - - a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v866 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v866 #trueSuccessor: v832 #falseSuccessor: v833  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v121|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4588550910408283322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:578) [bci: 253]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j855 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j855 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:518) [bci: 193]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: i857 
=== Usages ===
v1238 
=== Predecessor ===
v832 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: i857  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j855 
index: - 
=== Succesors ===
=== Usages ===
i857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i857 <|@
result INTERIOR_MATCH <|@
st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 153]
stack: a2: v1|QWORD[.] 
locals: - a2: v1|QWORD[.] - - - - - - a37: Object[null] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 216]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1238 
expectedValue: j826 
newValue: j877 
stateAfter: ?124 
=== Succesors ===
next: v861 
=== Usages ===
v858 
=== Predecessor ===
j855 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1238 expectedValue: j826 newValue: j877 stateAfter: ?124 #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i857 
y: i38 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i857 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v859 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
i857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v859 #falseSuccessor: v860  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v123|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v124|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B133" 
    xhandlers
    flags 
    probability 4543716276279518103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:524) [bci: 248]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 153]
stack: a2: v1|QWORD[.] 
locals: - a2: v1|QWORD[.] - - - - - - a37: Object[null] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:526) [bci: 272]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: ?124 
stateDuring: - 
arguments: a2 j826 
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?124 stateDuring: - arguments: a2 j826 #next: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v863 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v123|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B133" 
    xhandlers
    flags 
    probability 4588542520318910833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:520) [bci: 227]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v862 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v862  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v860 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" "B131" 
    xhandlers
    flags 
    probability 4558563119431564279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:550) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j878 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j878  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
result [v121|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j876 
index: - 
=== Succesors ===
=== Usages ===
j878 v882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j876 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j878 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:552) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
=== Succesors ===
next: j879 
=== Usages ===
j836 
=== Predecessor ===
v833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1239 #next: j879  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
result [v121|QWORD + 38] <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j876 
index: - 
=== Succesors ===
=== Usages ===
j879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j876 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j879 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
=== Succesors ===
next: j835 
=== Usages ===
j837 
=== Predecessor ===
j878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1240 #next: j835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j835 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:555) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v841 
=== Usages ===
j836 
=== Predecessor ===
j879 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid j836 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j835 
y: j878 
=== Succesors ===
=== Usages ===
j837 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j835 y: j878  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j836 
y: j879 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j836 y: j879  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 113]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j837 
y: j400 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j837 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v840 
falseSuccessor: v839 
=== Usages ===
=== Predecessor ===
j835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v840 #falseSuccessor: v839  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [v121|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v121|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = XOR (x: r15|QWORD, y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = OR (x: v127|QWORD, y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|QWORD, y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4558508880469964351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:558) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: j880 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j880  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
result [v121|QWORD + 54] <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j876 
index: - 
=== Succesors ===
=== Usages ===
j880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j876 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j880 <|@
result v129|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:559) [bci: 137]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
=== Succesors ===
next: j881 
=== Usages ===
j842 
=== Predecessor ===
v840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 #next: j881  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
result [v121|QWORD + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j876 
index: - 
=== Succesors ===
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j876 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j881 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:561) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
=== Succesors ===
next: v849 
=== Usages ===
j842 
=== Predecessor ===
j880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1242 #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid j842 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 175]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: i64
=== Inputs ===
x: j880 
y: j881 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j880 y: j881  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 179]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j842 
y: j400 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j842 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 185]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v847 
falseSuccessor: v848 
=== Usages ===
=== Predecessor ===
j881 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v847 #falseSuccessor: v848  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = MOV [v121|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = OR (x: v129|QWORD, ~y: [v121|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v130|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B133" 
    xhandlers
    flags 
    probability 4557971914750125062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 190]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v882 <|@
st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 153]
stack: a2: v1|QWORD[.] 
locals: - a2: v1|QWORD[.] - - - - - - a37: Object[null] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:567) [bci: 200]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
value: j400 
stateAfter: ?124 
lastLocationAccess: - 
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1239 value: j400 stateAfter: ?124 lastLocationAccess: - #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4543716276279518102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
v848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4528556612964768804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4544358061840973709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v844 v846 
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v844 v846 #next: v851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 153]
stack: a2: v1|QWORD[.] 
locals: - a2: v1|QWORD[.] - - - - - - a37: Object[null] - - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:575) [bci: 248]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: ?124 
stateDuring: - 
arguments: a2 j826 
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?124 stateDuring: - arguments: a2 j826 #next: v874  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 184]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v851 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v123|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B122" "B129" "B126" "B125" "B132" 
    successors 
    xhandlers
    flags 
    probability 4591726785454822242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v852 v854 v862 v864 v874 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v852 v854 v862 v864 v874 #next: v865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:271) [bci: 12]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?146 
values: a2 - i1203 
=== Succesors ===
=== Usages ===
?224 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: a2 - i1203  <|@  <|@
tid ?224 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: - - - - - 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 285
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?224 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -72979 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: v1|QWORD[.] - v43|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v1|QWORD[.] - 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:61, 35, 7, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580736669843193496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v916  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v911 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v911  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B135 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i586 <|@
result int[-59411|0xffffffffffff17ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -59411
stableDimension: 0
stamp: i32 [-59411] ⇊00000000ffff17ed ⇈00000000ffff17ed
stampKind: i32
value: int[-59411|0xffffffffffff17ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-59411|0xffffffffffff17ed], Object[null]] destination: B136 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid i584 <|@
result int[-59155|0xffffffffffff18ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -59155
stableDimension: 0
stamp: i32 [-59155] ⇊00000000ffff18ed ⇈00000000ffff18ed
stampKind: i32
value: int[-59155|0xffffffffffff18ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-59155|0xffffffffffff18ed], Object[null]] destination: B137 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid i582 <|@
result int[-58899|0xffffffffffff19ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58899
stableDimension: 0
stamp: i32 [-58899] ⇊00000000ffff19ed ⇈00000000ffff19ed
stampKind: i32
value: int[-58899|0xffffffffffff19ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58899|0xffffffffffff19ed], Object[null]] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid a580 <|@
result v131|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@2138803663
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@2138803663]
=== Inputs ===
=== Succesors ===
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
result int[-63259|0xffffffffffff08e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -63259
stableDimension: 0
stamp: i32 [-63259] ⇊00000000ffff08e5 ⇈00000000ffff08e5
stampKind: i32
value: int[-63259|0xffffffffffff08e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2138803663] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-63259|0xffffffffffff08e5], v131|QWORD[.]] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B139" "B138" "B137" "B136" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i568 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-66571 - -58899] ⇊00000000fffe00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v564 
values: i566 i576 i579 i582 i584 i586 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v564 values: i566 i576 i579 i582 i584 i586  <|@  <|@
f <@~|@floating>@ <|@
tid a569 <|@
result v133|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v564 
values: a567 a577 a580 a37 a37 a37 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v564 values: a567 a577 a580 a37 a37 a37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v565 v575 v578 v581 v583 v585 
=== Succesors ===
next: v570 
=== Usages ===
i568 a569 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v565 v575 v578 v581 v583 v585 #next: v570  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?10 
actionAndReason: i568 
speculation: a569 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?10 actionAndReason: i568 speculation: a569  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|DWORD, v133|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v133|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@725c08e5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] - - - 
>@ <|@ instruction v10|DWORD[.] = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = DEC v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B139" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" "B25" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZX [v15|QWORD[.] + v18|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA [v19|DWORD - 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHL (x: v25|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B25 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL (x: v22|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B22 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [v29|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = OR (x: r15|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = XOR (x: v31|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v32|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B54" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B44" "B46" "B53" "B29" "B35" "B39" "B38" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v7|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:0, 150] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD[.], y: v41|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v40|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = ADD (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SUB (x: v45|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9530056616276885 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606759131430453278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4606673292311601509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v42|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B118" 
    xhandlers
    flags 
    probability 4606588311583938258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B61 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B61" 
    successors "B119" "B134" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[*] = MOVE v116|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[*] = MOVE v115|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v117|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v118|QWORD[*] + v119|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|QWORD[.], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = AND v121|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v122|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4606120379935890898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4591726785454822243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOV [v123|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v124|QWORD, y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B127" 
    xhandlers
    flags 
    probability 4588635658785783210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v121|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4588550910408283322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v123|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v124|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B133" 
    xhandlers
    flags 
    probability 4588542520318910833
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B122" "B129" "B126" "B125" "B132" 
    successors 
    xhandlers
    flags 
    probability 4591726785454822242
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA [v49|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SUB (x: v50|DWORD, ~y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v50|DWORD, ~trueValue: v45|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" "B71" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4586256159157517904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v58|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = AND v59|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVSXD v60|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v61|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4586195205776300669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v56|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD + 12], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = CMOVE (falseValue: v52|DWORD, ~trueValue: v42|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v68|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v66|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = LEA [v41|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v68|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v68|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V128_WORD = H [v70|QWORD[*] + v75|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v69|QWORD[.] + v75|QWORD * 2], input: v77|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v68|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|V64_WORD = H [v70|QWORD[*] + v79|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v69|QWORD[.] + v79|QWORD * 2], input: v81|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v79|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v68|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|V32_WORD = H [v70|QWORD[*] + v83|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v69|QWORD[.] + v83|QWORD * 2], input: v85|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = DEC v68|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSX [v70|QWORD[*] + v87|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD[.] + v87|QWORD * 2], y: v89|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B74" "B91" "B90" 
    successors "B93" "B111" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVSXD v52|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B112" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B109" "B108" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[.] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 16], y: v111|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v112|QWORD[*] + v113|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B117" 
    xhandlers
    flags 
    probability 4586865692969690251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SUB (x: v52|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 4586798644250351293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B133" 
    xhandlers
    flags 
    probability 4585810712869120284
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = LEA [v66|QWORD[.] + v68|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = SUB (x: v90|QWORD, ~y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = LEA [v92|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v92|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v91|QWORD[.] + v97|QWORD * 2], input: v99|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = LEA [v97|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|QWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v92|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v91|QWORD[.] + v101|QWORD * 2], input: v103|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = LEA [v101|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|QWORD] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = LEA [v92|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|QWORD, y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v91|QWORD[.] + v105|QWORD * 2], input: v107|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v105|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|QWORD] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = DEC v92|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v109|QWORD, y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v91|QWORD[.] + v109|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B41" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v27|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v33|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B42" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v27|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = OR v27|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v28|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B54" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576647325387566637
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81505|0xfffffffffffec19f]] destination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B63" "B58" "B65" "B60" 
    successors 
    xhandlers
    flags 
    probability 4581123456496904566
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:5, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576592388351501504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81505|0xfffffffffffec19f]] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B96" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B110 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B110" 
    successors "B97" "B110" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v91|QWORD[.] + v95|QWORD * 2], input: v94|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v95|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580736669843193496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B135 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B135" 
    successors "B79" "B135" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V256_WORD = H [v70|QWORD[*] + v72|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v69|QWORD[.] + v72|QWORD * 2], input: v73|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v72|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|QWORD] destination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4572068100484103807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B69" 
    successors "B73" 
    xhandlers
    flags 
    probability 4572555727533841685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 150] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B40" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v32|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v32|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = AND v27|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = OR (x: r15|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v35|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B54" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" "B131" 
    xhandlers
    flags 
    probability 4558563119431564279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [v121|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v121|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = XOR (x: r15|QWORD, y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = OR (x: v127|QWORD, y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|QWORD, y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4558508880469964351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = MOV [v121|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = OR (x: v129|QWORD, ~y: [v121|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v130|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B133" 
    xhandlers
    flags 
    probability 4557971914750125062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4557304548972874350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B113" "B115" 
    successors 
    xhandlers
    flags 
    probability 4561764803973601479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -93537 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v1|QWORD[.] v7|QWORD[.] v43|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v1|QWORD[.] - 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4557217859719587616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B72" 
    xhandlers
    flags 
    probability 4556437656440007011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v30|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B52" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v27|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v27|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = SUB (x: v38|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v39|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v31|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B36 -> B37 falseDestination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B133" 
    xhandlers
    flags 
    probability 4543716276279518103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v123|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4543716276279518102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4544358061840973709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v123|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B47" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4528556612964768804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B53" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B54" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-59155|0xffffffffffff18ed], Object[null]] destination: B137 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B139" "B138" "B137" "B136" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|DWORD, v133|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v133|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66067|0xfffffffffffefded]] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B18" "B21" "B24" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.quote(URI.java:2678) [bci: 27]
locals: v7|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] v18|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: v1|QWORD[.] 
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:27, 147] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@4965096] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66571|0xfffffffffffefbf5], v9|QWORD[.]] destination: B1 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -71691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: v1|QWORD[.] v7|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-65811|0xfffffffffffefeed]] destination: B18 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-65555|0xfffffffffffeffed]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58899|0xffffffffffff19ed], Object[null]] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84499|0xfffffffffffeb5ed]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@476172961] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62227|0xffffffffffff0ced], v14|QWORD[.]] destination: B5 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-59411|0xffffffffffff17ed], Object[null]] destination: B136 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66323|0xfffffffffffefced]] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -72979 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: v1|QWORD[.] - v43|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v1|QWORD[.] - 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - v1|QWORD[.] - - - - - - v8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:61, 35, 7, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2138803663] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-63259|0xffffffffffff08e5], v131|QWORD[.]] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnull        121
     4: aload_2       
     5: ldc           #110        // "//["
     7: invokevirtual #89         // java.lang.String.startsWith:(java.lang.String)boolean
    10: ifeq          103
    13: aload_2       
    14: ldc           #102        // "]"
    16: invokevirtual #92         // java.lang.String.indexOf:(java.lang.String)int
    19: istore        9
    21: iload         9
    23: iconst_m1     
    24: if_icmpeq     100
    27: aload_2       
    28: ldc           #107        // ":"
    30: invokevirtual #92         // java.lang.String.indexOf:(java.lang.String)int
    33: iconst_m1     
    34: if_icmpeq     100
    37: iload         9
    39: aload_2       
    40: invokevirtual #76         // java.lang.String.length:()int
    43: if_icmpne     56
    46: aload_2       
    47: astore        11
    49: ldc           #106        // ""
    51: astore        10
    53: goto          77
    56: aload_2       
    57: iconst_0      
    58: iload         9
    60: iconst_1      
    61: iadd          
    62: invokevirtual #93         // java.lang.String.substring:(int, int)java.lang.String
    65: astore        11
    67: aload_2       
    68: iload         9
    70: iconst_1      
    71: iadd          
    72: invokevirtual #94         // java.lang.String.substring:(int)java.lang.String
    75: astore        10
    77: aload_1       
    78: aload         11
    80: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    83: pop           
    84: aload_1       
    85: aload         10
    87: getstatic     #26         // L_URIC:long
    90: getstatic     #25         // H_URIC:long
    93: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
    96: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    99: pop           
   100: goto          182
   103: aload_1       
   104: aload_2       
   105: getstatic     #26         // L_URIC:long
   108: getstatic     #25         // H_URIC:long
   111: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
   114: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   117: pop           
   118: goto          182
   121: aload_0       
   122: aload_1       
   123: aload_3       
   124: aload         4
   126: aload         5
   128: iload         6
   130: invokespecial #95         // appendAuthority:(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, int)void
   133: aload         7
   135: ifnull        154
   138: aload_1       
   139: aload         7
   141: getstatic     #22         // L_PATH:long
   144: getstatic     #21         // H_PATH:long
   147: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
   150: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   153: pop           
   154: aload         8
   156: ifnull        182
   159: aload_1       
   160: bipush        63
   162: invokevirtual #88         // java.lang.StringBuffer.append:(char)java.lang.StringBuffer
   165: pop           
   166: aload_1       
   167: aload         8
   169: getstatic     #26         // L_URIC:long
   172: getstatic     #25         // H_URIC:long
   175: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
   178: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   181: pop           
   182: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@725c08e5 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r13:0, stack:32, stack:40]
live-base-pointers: []
java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] in:0|DWORD r13|QWORD[.] r10|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0, stack:32, stack:40]
live-base-pointers: []
java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] in:0|DWORD r13|QWORD[.] r10|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rbp|QWORD = DEC rax|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP (x: rax|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B139" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff] <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001] <|@ <|@
      nr  124  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" "B25" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  130  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r9|DWORD = MOVZX [r11|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction CMP r9|DWORD y: 128 size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction CMP r9|DWORD y: 64 size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = LEA [r9|DWORD - 64] size: DWORD <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  200  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction TEST (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B25 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rbp|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction rbp|QWORD = SHL (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction TEST (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction r11|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  244  <|@ instruction r8|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  246  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr  248  <|@ instruction r9|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = OR (x: r15|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction rbx|QWORD = XOR (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction TEST rbx|QWORD y: -121 size: QWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B54" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B44" "B46" "B53" "B29" "B35" "B39" "B38" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0, r14:0, stack:32, stack:40]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: rdx|QWORD[.] r13|QWORD[.] 
locks: monitor[rdx|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rdx|QWORD[.] - - - - - - r10|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0, 150] <|@ <|@
      nr  480  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  504  <|@ instruction r9|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  506  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  508  <|@ instruction rcx|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.9530056616276885 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606759131430453278
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4606673292311601509
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B118" 
    xhandlers
    flags 
    probability 4606588311583938258
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B61 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B61" 
    successors "B119" "B134" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr 1068  <|@ instruction r8|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr 1070  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr 1096  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr 1098  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr 1100  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4606120379935890898
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4591726785454822243
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr 1110  <|@ instruction rsi|QWORD = MOV [r11|QWORD] size: QWORD <|@ <|@
      nr 1112  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1114  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B127" 
    xhandlers
    flags 
    probability 4588635658785783210
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr 1124  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4588550910408283322
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rax|QWORD = CAS (address: [rdx|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr 1132  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B133" 
    xhandlers
    flags 
    probability 4588542520318910833
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B126 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B122" "B129" "B126" "B125" "B132" 
    successors 
    xhandlers
    flags 
    probability 4591726785454822242
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction rax|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  556  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  564  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  578  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" "B71" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  602  <|@ instruction r9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  604  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4586256159157517904
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rdi|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr  614  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  618  <|@ instruction rbp|QWORD = ADD (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: rbp|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4586195205776300669
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  642  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  644  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  646  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  652  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  706  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  708  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction r11|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction r10|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  724  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  726  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  774  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  776  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  778  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  798  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  800  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  802  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  808  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  812  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  822  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  824  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  826  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  834  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B74" "B91" "B90" 
    successors "B93" "B111" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  854  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B112" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction rbx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B109" "B108" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1012  <|@ instruction MOV (x: [rbp|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD[*] = SHR rbp|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1018  <|@ instruction MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1020  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B117" 
    xhandlers
    flags 
    probability 4586865692969690251
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: stack:64|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 4586798644250351293
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction r14|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B133" 
    xhandlers
    flags 
    probability 4585810712869120284
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction JUMP ~[] destination: B122 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  862  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  902  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  904  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  914  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  918  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  926  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  938  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  940  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  942  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  948  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  950  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  952  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  962  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  964  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  966  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  972  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  974  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  990  <|@ instruction rbx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B109 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B41" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = AND r11|QWORD y: 7 size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B42" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction TEST r11|QWORD y: 2 size: QWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|QWORD = OR r11|QWORD y: 1 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV (x: [r8|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|QWORD = CAS (address: [rdx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B54" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B44 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576647325387566637
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD = MOVE input: int[-81505|0xfffffffffffec19f] <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B63" "B58" "B65" "B60" 
    successors 
    xhandlers
    flags 
    probability 4581123456496904566
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  596  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: rdx|QWORD[.] r13|QWORD[.] 
locks: monitor[rdx|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rdx|QWORD[.] - - - - - - r10|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:5, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576592388351501504
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD = MOVE input: int[-81505|0xfffffffffffec19f] <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  880  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B96" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580736669843193496
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B110 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B110" 
    successors "B97" "B110" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  886  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  888  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  890  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580736669843193496
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1218  <|@ instruction JUMP ~[] destination: B135 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B135" 
    successors "B79" "B135" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  744  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  746  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  748  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  750  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B108 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4572068100484103807
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B69" 
    successors "B73" 
    xhandlers
    flags 
    probability 4572555727533841685
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  688  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ st <@st|@reference-map: [stack:4, stack:8, stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - stack:40|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 150] <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B40" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction TEST rbx|QWORD y: 7 size: QWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction TEST rbx|QWORD y: 768 size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction r11|QWORD = AND r11|QWORD y: 895 size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B54" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B35 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" "B131" 
    xhandlers
    flags 
    probability 4558563119431564279
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1160  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1162  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1164  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4558508880469964351
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr 1172  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B133" 
    xhandlers
    flags 
    probability 4557971914750125062
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1180  <|@ instruction JUMP ~[] destination: B129 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4557304548972874350
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B113" "B115" 
    successors 
    xhandlers
    flags 
    probability 4561764803973601479
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 668] y: -93537 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] stack:56|QWORD[.] stack:64|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4557217859719587616
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B72" 
    xhandlers
    flags 
    probability 4556437656440007011
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr  356  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B52" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r8|QWORD], y: r8|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ instruction CMP [r11|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  436  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r8|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B36 -> B37 falseDestination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B39 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B133" 
    xhandlers
    flags 
    probability 4543716276279518103
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1136  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B125 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4543716276279518102
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4544358061840973709
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1194  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B47" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: rbp|QWORD[.] stack:56|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150] <|@ <|@
      nr  466  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4528556612964768804
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B53" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B54" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: rbp|QWORD[.] stack:56|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150] <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B38 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1238  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction r10|DWORD = MOVE input: int[-59155|0xffffffffffff18ed] <|@ <|@
      nr 1246  <|@ instruction JUMP ~[] destination: B137 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B139" "B138" "B137" "B136" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1280  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1284  <|@ st <@st|@reference-map: [rcx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, stack:24, stack:32]
live-base-pointers: []
java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: rsi|QWORD[.] rbp|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] rbx|DWORD stack:56|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOVE input: int[-66067|0xfffffffffffefded] <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B18" "B21" "B24" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@reference-map: [rbp:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI.quote(URI.java:2678) [bci: 27]
locals: r13|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] r8|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: rbp|QWORD[.] 
locals: - rbp|QWORD[.] - - - - - - r11|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:27, 147] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@4965096] <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[-66571|0xfffffffffffefbf5] <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B1 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction MOV [r15|QWORD + 668] y: -71691 size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: rbp|QWORD[.] stack:56|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r10|DWORD = MOVE input: int[-65811|0xfffffffffffefeed] <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B18 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1252  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1256  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction r10|DWORD = MOVE input: int[-58899|0xffffffffffff19ed] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rsi|DWORD = MOVE input: int[-84499|0xfffffffffffeb5ed] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@476172961] <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-62227|0xffffffffffff0ced] <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1224  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction r10|DWORD = MOVE input: int[-59411|0xffffffffffff17ed] <|@ <|@
      nr 1232  <|@ instruction JUMP ~[] destination: B136 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-66323|0xfffffffffffefced] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction MOV [r15|QWORD + 668] y: -72979 size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1214  <|@ st <@st|@reference-map: [rbp:0, stack:32]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: rbp|QWORD[.] - r9|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:61, 35, 7, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1266  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2138803663] <|@ <|@
      nr 1270  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction r10|DWORD = MOVE input: int[-63259|0xffffffffffff08e5] <|@ <|@
      nr 1274  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnull        121
     4: aload_2       
     5: ldc           #110        // "//["
     7: invokevirtual #89         // java.lang.String.startsWith:(java.lang.String)boolean
    10: ifeq          103
    13: aload_2       
    14: ldc           #102        // "]"
    16: invokevirtual #92         // java.lang.String.indexOf:(java.lang.String)int
    19: istore        9
    21: iload         9
    23: iconst_m1     
    24: if_icmpeq     100
    27: aload_2       
    28: ldc           #107        // ":"
    30: invokevirtual #92         // java.lang.String.indexOf:(java.lang.String)int
    33: iconst_m1     
    34: if_icmpeq     100
    37: iload         9
    39: aload_2       
    40: invokevirtual #76         // java.lang.String.length:()int
    43: if_icmpne     56
    46: aload_2       
    47: astore        11
    49: ldc           #106        // ""
    51: astore        10
    53: goto          77
    56: aload_2       
    57: iconst_0      
    58: iload         9
    60: iconst_1      
    61: iadd          
    62: invokevirtual #93         // java.lang.String.substring:(int, int)java.lang.String
    65: astore        11
    67: aload_2       
    68: iload         9
    70: iconst_1      
    71: iadd          
    72: invokevirtual #94         // java.lang.String.substring:(int)java.lang.String
    75: astore        10
    77: aload_1       
    78: aload         11
    80: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    83: pop           
    84: aload_1       
    85: aload         10
    87: getstatic     #26         // L_URIC:long
    90: getstatic     #25         // H_URIC:long
    93: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
    96: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    99: pop           
   100: goto          182
   103: aload_1       
   104: aload_2       
   105: getstatic     #26         // L_URIC:long
   108: getstatic     #25         // H_URIC:long
   111: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
   114: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   117: pop           
   118: goto          182
   121: aload_0       
   122: aload_1       
   123: aload_3       
   124: aload         4
   126: aload         5
   128: iload         6
   130: invokespecial #95         // appendAuthority:(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, int)void
   133: aload         7
   135: ifnull        154
   138: aload_1       
   139: aload         7
   141: getstatic     #22         // L_PATH:long
   144: getstatic     #21         // H_PATH:long
   147: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
   150: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   153: pop           
   154: aload         8
   156: ifnull        182
   159: aload_1       
   160: bipush        63
   162: invokevirtual #88         // java.lang.StringBuffer.append:(char)java.lang.StringBuffer
   165: pop           
   166: aload_1       
   167: aload         8
   169: getstatic     #26         // L_URIC:long
   172: getstatic     #25         // H_URIC:long
   175: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
   178: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   181: pop           
   182: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@725c08e5 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r13:0, stack:32, stack:40]
live-base-pointers: []
java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] in:0|DWORD r13|QWORD[.] r10|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0, stack:32, stack:40]
live-base-pointers: []
java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] in:0|DWORD r13|QWORD[.] r10|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rbp|QWORD = DEC rax|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B11" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP (x: rax|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" "B139" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B11 falseDestination: B9 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B12" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff] <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001] <|@ <|@
      nr  124  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" "B25" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  130  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r9|DWORD = MOVZX [r11|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction CMP r9|DWORD y: 128 size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction CMP r9|DWORD y: 64 size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = LEA [r9|DWORD - 64] size: DWORD <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  200  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction TEST (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B25 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rbp|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction rbp|QWORD = SHL (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction TEST (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B54" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction r11|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  244  <|@ instruction r8|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  246  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr  248  <|@ instruction r9|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = OR (x: r15|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction rbx|QWORD = XOR (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction TEST rbx|QWORD y: -121 size: QWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B28 -> B54 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B43" "B46" "B53" "B28" "B35" "B39" "B38" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  478  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0, r14:0, stack:32, stack:40]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: rdx|QWORD[.] r13|QWORD[.] 
locks: monitor[rdx|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rdx|QWORD[.] - - - - - - r10|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0, 150] <|@ <|@
      nr  480  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  504  <|@ instruction r9|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  506  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  508  <|@ instruction rcx|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.9530056616276885 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606759131430453278
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4606673292311601509
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B118" 
    xhandlers
    flags 
    probability 4606588311583938258
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B61 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B61" 
    successors "B119" "B134" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr 1068  <|@ instruction r8|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr 1070  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr 1096  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr 1098  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr 1100  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4606120379935890898
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B133" "B123" 
    xhandlers
    flags 
    probability 4591726785454822243
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr 1110  <|@ instruction rsi|QWORD = MOV [r11|QWORD] size: QWORD <|@ <|@
      nr 1112  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1114  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B121 -> B133 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B127" 
    xhandlers
    flags 
    probability 4588635658785783210
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr 1124  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B133" 
    xhandlers
    flags 
    probability 4588550910408283322
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rax|QWORD = CAS (address: [rdx|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr 1132  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B124 -> B125 falseDestination: B124 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B121" "B129" "B124" "B125" "B132" 
    successors 
    xhandlers
    flags 
    probability 4591726785454822242
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction rax|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  556  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  564  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  578  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" "B72" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  602  <|@ instruction r9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  604  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" "B70" 
    xhandlers
    flags 
    probability 4586256159157517904
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rdi|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr  614  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  618  <|@ instruction rbp|QWORD = ADD (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: rbp|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B68 -> B72 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4586195205776300669
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  642  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  644  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  646  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  652  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" 
    successors "B92" "B75" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  706  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  708  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B73 -> B92 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B80" "B78" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction r11|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction r10|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  724  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  726  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  728  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B75 -> B80 falseDestination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B83" "B82" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B83 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  774  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  776  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  778  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B80" 
    successors "B86" "B85" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B86 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  798  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  800  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  802  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B83" 
    successors "B89" "B88" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  808  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  812  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B89 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  822  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  824  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  826  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B86" 
    successors "B92" "B91" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  834  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B92 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B73" "B91" "B89" 
    successors "B93" "B112" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  854  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B92" "B109" "B107" 
    successors "B116" "B114" 
    xhandlers
    flags 
    probability 4586933418948820512
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction rbx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1012  <|@ instruction MOV (x: [rbp|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD[*] = SHR rbp|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1018  <|@ instruction MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1020  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B112 -> B116 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4586865692969690251
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: stack:64|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B116 falseDestination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B118" 
    xhandlers
    flags 
    probability 4586798644250351293
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction r14|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  862  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors "B101" "B100" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  902  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  904  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B98 -> B101 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  914  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  918  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B98" 
    successors "B104" "B103" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  926  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B101 -> B104 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  938  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  940  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  942  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B101" 
    successors "B107" "B106" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  948  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  950  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  952  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B107 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  962  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  964  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  966  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B104" 
    successors "B112" "B109" 
    xhandlers
    flags 
    probability 4582429819321450016
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  972  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  974  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B107 -> B112 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B112" 
    xhandlers
    flags 
    probability 4580736669843193496
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B109 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B42" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = AND r11|QWORD y: 7 size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B30" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction TEST r11|QWORD y: 2 size: QWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B54" "B45" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|QWORD = OR r11|QWORD y: 1 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV (x: [r8|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|QWORD = CAS (address: [rdx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B43 -> B54 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576647325387566637
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD = MOVE input: int[-81505|0xfffffffffffec19f] <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B63" "B58" "B65" "B60" 
    successors 
    xhandlers
    flags 
    probability 4581123456496904566
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  596  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: rdx|QWORD[.] r13|QWORD[.] 
locks: monitor[rdx|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rdx|QWORD[.] - - - - - - r10|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:5, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576592388351501504
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD = MOVE input: int[-81505|0xfffffffffffec19f] <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4573422620066709024
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  880  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B96" 
    successors "B98" "B96" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  886  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  888  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  890  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B98 falseDestination: B96 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B80" "B78" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582429819321450016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  744  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  746  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  748  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  750  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B78 -> B80 falseDestination: B78 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B67" "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4572555727533841685
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  688  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ st <@st|@reference-map: [stack:4, stack:8, stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - stack:40|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 150] <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B40" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction TEST rbx|QWORD y: 7 size: QWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction TEST rbx|QWORD y: 768 size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" "B35" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction r11|QWORD = AND r11|QWORD y: 895 size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B33 -> B38 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B54" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B35 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" "B132" 
    xhandlers
    flags 
    probability 4558563119431564279
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1160  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1162  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1164  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" "B132" 
    xhandlers
    flags 
    probability 4558508880469964351
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr 1172  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B133" 
    xhandlers
    flags 
    probability 4557971914750125062
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1180  <|@ instruction JUMP ~[] destination: B129 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" 
    successors 
    xhandlers
    flags 
    probability 4561764803973601479
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 668] y: -93537 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] stack:56|QWORD[.] stack:64|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr  356  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B53" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r8|QWORD], y: r8|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ instruction CMP [r11|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" "B51" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  436  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B49 -> B53 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B53" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r8|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B36 -> B38 falseDestination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B54" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B39 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B133" 
    xhandlers
    flags 
    probability 4543716276279518103
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1136  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B125 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B127" "B128" 
    successors "B133" 
    xhandlers
    flags 
    probability 4544358061840973709
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1194  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B45" "B48" 
    successors "B54" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: rbp|QWORD[.] stack:56|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150] <|@ <|@
      nr  466  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B54" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: rbp|QWORD[.] stack:56|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150] <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B38 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1238  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction r10|DWORD = MOVE input: int[-59155|0xffffffffffff18ed] <|@ <|@
      nr 1246  <|@ instruction JUMP ~[] destination: B137 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" "B139" "B138" "B137" "B136" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1280  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1284  <|@ st <@st|@reference-map: [rcx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, stack:24, stack:32]
live-base-pointers: []
java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0]
locals: rsi|QWORD[.] rbp|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] rbx|DWORD stack:56|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOVE input: int[-66067|0xfffffffffffefded] <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B18" "B21" "B24" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  238  <|@ st <@st|@reference-map: [rbp:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI.quote(URI.java:2678) [bci: 27]
locals: r13|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] r8|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: rbp|QWORD[.] 
locals: - rbp|QWORD[.] - - - - - - r11|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:27, 147] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@4965096] <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[-66571|0xfffffffffffefbf5] <|@ <|@
      nr   30  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B1 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction MOV [r15|QWORD + 668] y: -71691 size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: [rbp:0, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
locals: rbp|QWORD[.] stack:56|QWORD[.] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r10|DWORD = MOVE input: int[-65811|0xfffffffffffefeed] <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B18 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1252  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1256  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction r10|DWORD = MOVE input: int[-58899|0xffffffffffff19ed] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rsi|DWORD = MOVE input: int[-84499|0xfffffffffffeb5ed] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@476172961] <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-62227|0xffffffffffff0ced] <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1224  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction r10|DWORD = MOVE input: int[-59411|0xffffffffffff17ed] <|@ <|@
      nr 1232  <|@ instruction JUMP ~[] destination: B136 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-66323|0xfffffffffffefced] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction MOV [r15|QWORD + 668] y: -72979 size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1214  <|@ st <@st|@reference-map: [rbp:0, stack:32]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: rbp|QWORD[.] - r9|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - rbp|QWORD[.] - - - - - - stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:61, 35, 7, 150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B140" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1266  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2138803663] <|@ <|@
      nr 1270  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction r10|DWORD = MOVE input: int[-63259|0xffffffffffff08e5] <|@ <|@
      nr 1274  <|@ instruction rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: ifnull        121
     4: aload_2       
     5: ldc           #110        // "//["
     7: invokevirtual #89         // java.lang.String.startsWith:(java.lang.String)boolean
    10: ifeq          103
    13: aload_2       
    14: ldc           #102        // "]"
    16: invokevirtual #92         // java.lang.String.indexOf:(java.lang.String)int
    19: istore        9
    21: iload         9
    23: iconst_m1     
    24: if_icmpeq     100
    27: aload_2       
    28: ldc           #107        // ":"
    30: invokevirtual #92         // java.lang.String.indexOf:(java.lang.String)int
    33: iconst_m1     
    34: if_icmpeq     100
    37: iload         9
    39: aload_2       
    40: invokevirtual #76         // java.lang.String.length:()int
    43: if_icmpne     56
    46: aload_2       
    47: astore        11
    49: ldc           #106        // ""
    51: astore        10
    53: goto          77
    56: aload_2       
    57: iconst_0      
    58: iload         9
    60: iconst_1      
    61: iadd          
    62: invokevirtual #93         // java.lang.String.substring:(int, int)java.lang.String
    65: astore        11
    67: aload_2       
    68: iload         9
    70: iconst_1      
    71: iadd          
    72: invokevirtual #94         // java.lang.String.substring:(int)java.lang.String
    75: astore        10
    77: aload_1       
    78: aload         11
    80: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    83: pop           
    84: aload_1       
    85: aload         10
    87: getstatic     #26         // L_URIC:long
    90: getstatic     #25         // H_URIC:long
    93: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
    96: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    99: pop           
   100: goto          182
   103: aload_1       
   104: aload_2       
   105: getstatic     #26         // L_URIC:long
   108: getstatic     #25         // H_URIC:long
   111: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
   114: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   117: pop           
   118: goto          182
   121: aload_0       
   122: aload_1       
   123: aload_3       
   124: aload         4
   126: aload         5
   128: iload         6
   130: invokespecial #95         // appendAuthority:(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, int)void
   133: aload         7
   135: ifnull        154
   138: aload_1       
   139: aload         7
   141: getstatic     #22         // L_PATH:long
   144: getstatic     #21         // H_PATH:long
   147: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
   150: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   153: pop           
   154: aload         8
   156: ifnull        182
   159: aload_1       
   160: bipush        63
   162: invokevirtual #88         // java.lang.StringBuffer.append:(char)java.lang.StringBuffer
   165: pop           
   166: aload_1       
   167: aload         8
   169: getstatic     #26         // L_URIC:long
   172: getstatic     #25         // H_URIC:long
   175: invokestatic  #87         // quote:(java.lang.String, long, long)java.lang.String
   178: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   181: pop           
   182: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c244048895424284c8b6c24584c8b5424604c895424204885d20f84fb060000458b5d0c428b1cdd0c0000008bc3488be848ffcd85db0f84090000004885ed0f8c5e070000483bc50f870800000085db0f85c50700004885c90f85190700004885ff0f85630600004d85c00f855607000049c1e30348bfffffff87feffff4748be01000000d2ffff2f41b8000000000f1f4000413bd80f8e62000000470fb74c43104181f9800000000f83bb0600004585c90f84a4060000418bc0ffc04183f9400f821c000000418d49c049c7c10100000049d3e14985f90f840a070000448bc0ebb048c7c501000000418bc948d3e54885f50f8402060000448bc0eb954c8b1a4c8d44243048bfaddeaddeaddeadde4c8b8fa8000000498bcf490bc9488bd94933db48f7c387ffffff0f8549030000458b750c438504f4448b5a104585db0f84f7050000468b04dd0c00000044896214468b0cf50c0000008b5a0c418bc903cb894c24148bf9412bf883ff010f8db900000085db0f8c39030000452bc1413bd80f8f4603000049c1e30349c1e6034863f3458bc1498d7e10498d747310498bd044894c2410e800000000904c8b5424204d85d20f853f0600008b4c2414488b542428894a0c4c8b12498bc24883e0074883f8050f8513000000488b6c24404883c448850500000000c5f877c34c8d5c2430498b334885f60f841b00000049f7c2020000000f858f030000498bc3f0480fb1320f8551040000488b6c24404883c448850500000000c5f877c344894c2410418bc0d1e08d40028bf02bf185f60f4cc183f8010f8cf4050000bef7ffff7f2bf085f60f8c3f050000498b77604d8b4f7081f8ffffff000f83af0200008bf8d1e78d7f1783e7f84863ff488bef4803ee493be90f879302000049896f600f188437c00000000f188437000100000f188437400100000f1884378001000089460c48c70601000000c74608addeadde895c240c44895c240844897424044c896c2418448bf0458be8488bc6453bf5418bf6410f4ff54863f64883fe010f8c9e000000448b5c2408488d50104e8d14dd100000004c8d5ef04d85db49c7c0000000000f8dec0100004c8d5ef84d3bc30f8f13000000c4817a6f0442c4a17a7f04424d8d58084d8bc34c8d5efc4d3bc30f8f13000000c481f96e0442c4a1f97e04424d8d58044d8bc34c8d5efe4d3bc30f8f13000000c481796e0442c4a1797e04424d8d58024d8bc34c8bde49ffcb4d3bc30f8f0a000000470fbf144266468914424963d6483bd60f8f510000008b5c240c488b6c2428488bf048c1ee03897510488bd548c1ea0948be00e01b17010000004488243285db0f8c02020000418bf62b7424103bde0f8ff30100004c8bd8448b4c2410448b742404e99efdffff4c8d547010482bd6488d72f04885f60f8dd200000049c7c300000000488d72f84c3bde0f8f11000000c5f9efc0c4817a7f045a498d73084c8bde488d72fc4c3bde0f8f11000000c5f9efc0c481f97e045a498d73044c8bde488d72fe4c3bde0f8f11000000c5f9efc0c481797e045a498d73024c8bde48ffca4c3bda0f8f2dffffff664789245ae923ffffff498bc34883e0074883f8050f84c800000049f7c3020000000f85620100004983cb014d8918498bc3f04c0fb102493bc30f8481fcffffe978010000be9fc1feff4189b79c0200004d89a7a8020000e80000000090be9fc1feffebe5c5f9efc049c7c3000000000f1f4000c4817e7f045a4d8d5b104c3bde7ef1e912ffffff660f1f440000660f1f440000c4817e6f0442c4a17e7f04424d8d40104d3bc37eebe9fafdffff895c240c44895c240844897424044c896c241848beaddeaddeaddeadde8bd0b900000000448bf0458be8e80000000090e989fdffff4c896c2418488bea48f7c3070000000f857f00000048f7c3000300000f85dd0000004981e37f030000498bf7490bf3498bc3f0480fb175000f851d0100004c8b542420e996fbffff488bea498b4216498b72264933c7480bc64885c00f85ca000000498b4236490b423e4885c00f85b90000004d896216e94bfcffff41c7879c0200009f92feff4d89a7a8020000e80000000090498bc3f04c0fb14d004c8b542420e991feffff4c896c2418488bea4d890049837b16000f858000000048c7c000000000f04d0fb17b160f856d0000004c8b542420e904fbffff4c896c2418488bea482bc448f7c007f0ffff0f854b0000004d89204c8b542420e9dffaffff498bc3f0480fb14d000f854d0000004c8b542420e9c6faffff488bea488bf5498bd3e80000000090e99bfbffff488bf5498bd3e80000000090e98afbffff488bf5498bd0e800000000904c8b5424204c8b6c2418488bd5e983faffff488bf5498bd0e800000000904c8b5424204c8b6c2418488bd5e965faffff49bb00000000000000004c896c24188b5c2450488bea41baed18ffff4589979c0200004d899fa8020000e800000000904d8bda488bea41baedfdfeff4589979c0200004d89a7a8020000e800000000904c896c2418488bea49baaddeaddeaddeadde4d8bda41baf5fbfeff8b5c2450ebab4c896c2418488bea41c7879c020000f5e7feff4d89a7a8020000e800000000904d8bda488bea41baedfefeffeb9d4d8bda488bea41baedfffeffeb8f49bb00000000000000004c896c24188b5c2450488bea41baed19ffffe94effffffbeedb5feffe916fdffff4c896c2418488bea49baaddeaddeaddeadde4d8bda41baed0cffff8b5c2450e920ffffff49bb00000000000000004c896c24188b5c2450488bea41baed17ffffe9fffeffff4d8bda488bea41baedfcfeffe90effffff448b4c2410488b6c242841c7879c020000ede2feff4d89a7a8020000e800000000904c896c2418488bea49baaddeaddeaddeadde4d8bda41bae508ffff8b5c2450e9a8feffffbeedb6feffe970fcffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@725c08e5 slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 68 14 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 71 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 77 block B2 null  <||@
  Comment 77 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 36 r11|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 77 [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r13:0, stack:32, stack:40]at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6           |7             |8             |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |in:0|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |-  |-   |-    <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 38 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0, stack:32, stack:40]at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6           |7             |8             |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |in:0|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |-  |-   |-    <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 40 rax|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 91 42 rbp|QWORD = DEC rax|QWORD size: QWORD  <||@
  Comment 97 44 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 99 46 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 105 block B4 null  <||@
  Comment 105 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 54 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 108 56 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 114 block B7 null  <||@
  Comment 114 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 80 CMP (x: rax|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 117 82 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9  <||@
  Comment 123 block B9 null  <||@
  Comment 123 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 90 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 125 92 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B11 falseDestination: B9 -> B139  <||@
  Comment 131 block B11 null  <||@
  Comment 131 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 131 100 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 134 102 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B138  <||@
  Comment 140 block B12 null  <||@
  Comment 140 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 106 TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 143 108 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B137  <||@
  Comment 149 block B13 null  <||@
  Comment 149 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 112 TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 152 114 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B136  <||@
  Comment 158 block B14 null  <||@
  Comment 158 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 118 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3  <||@
  Comment 162 120 rdi|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff]  <||@
  Comment 172 122 rsi|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001]  <||@
  Comment 182 124 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 188 126 JUMP ~[] destination: B14 -> B15  <||@
  Comment 188 block B15 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 188 128 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 192 130 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 195 132 BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28  <||@
  Comment 201 block B16 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 201 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 136 r9|DWORD = MOVZX [r11|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 207 138 CMP r9|DWORD y: 128 size: DWORD  <||@
  Comment 214 140 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B26  <||@
  Comment 220 block B17 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 220 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 220 144 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 223 146 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 229 block B19 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 229 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 160 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 234 162 CMP r9|DWORD y: 64 size: DWORD  <||@
  Comment 238 164 BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 244 block B23 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 244 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 196 rcx|DWORD = LEA [r9|DWORD - 64] size: DWORD  <||@
  Comment 248 198 r9|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 255 200 r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 258 202 TEST (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 261 204 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 267 block B25 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 267 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 218 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 270 220 JUMP ~[] destination: B25 -> B15  <||@
  Comment 272 block B20 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 272 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 168 rbp|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 279 170 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 282 172 rbp|QWORD = SHL (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 285 174 TEST (x: rsi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 288 176 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 294 block B22 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 294 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 190 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 297 192 JUMP ~[] destination: B22 -> B15  <||@
  Comment 299 block B28 null  <||@
  Comment 299 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 242 r11|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 302 244 r8|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 307 246 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 307 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 317 248 r9|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 324 250 rcx|QWORD = OR (x: r15|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 330 252 rbx|QWORD = XOR (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 336 254 TEST rbx|QWORD y: -121 size: QWORD  <||@
  Comment 343 256 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B28 -> B54 falseDestination: B28 -> B30  <||@
  Comment 349 block B54 null  <||@
  Comment 349 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 349 476 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 353 478 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0, 150]  <||@
  Comment 353 [rdx:0, r10:0, r13:0, r14:0, stack:32, stack:40]at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1            
     locals:  |rdx|QWORD[.]                           |r13|QWORD[.] 
     locks:   |monitor[rdx|QWORD[.], stack:32|QWORD]  |             
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |r10|QWORD[.]  |-  |-   |-    <||@
  Comment 353 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 357 480 r11|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 361 482 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 364 484 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 370 block B56 null  <||@
  Comment 370 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 500 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 378 502 MOV (x: [rdx|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 382 504 r9|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 390 506 rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 393 508 rcx|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 398 510 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 402 512 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 407 514 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 410 516 BRANCH trueDestinationProbability: 0.9530056616276885 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B62  <||@
  Comment 416 block B57 null  <||@
  Comment 416 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 520 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 418 522 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 424 block B59 null  <||@
  Comment 424 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 424 532 r8|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 427 534 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 430 536 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 436 block B61 null  <||@
  Comment 436 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 546 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3  <||@
  Comment 440 548 JUMP ~[] destination: B61 -> B118  <||@
  Comment 440 block B118 null  <||@
  Comment 440 1058 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 440 1060 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3  <||@
  Comment 444 1062 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 444 1064 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 444 1066 rsi|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 447 1068 r8|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 450 1070 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 454 1072 rsi|QWORD = LEA [r11|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 459 1074 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 462 1076 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 467 1078 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 467 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 473 1080 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 478 1082 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 481 1084 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B134  <||@
  Comment 487 block B119 null  <||@
  Comment 487 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 1088 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 491 1090 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 496 1092 MOV (x: [rdx|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 499 1094 r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 502 1096 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 509 1098 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 513 1100 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 519 block B120 null  <||@
  Comment 519 1102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 1104 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 528 12  <||@
  Comment 538 block B121 null  <||@
  Comment 538 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 1108 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 543 1110 rsi|QWORD = MOV [r11|QWORD] size: QWORD  <||@
  Comment 546 1112 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 549 1114 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B121 -> B133 falseDestination: B121 -> B123  <||@
  Comment 555 block B123 null  <||@
  Comment 555 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 555 1122 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 562 1124 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B127  <||@
  Comment 568 block B124 null  <||@
  Comment 568 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 1128 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 571 1130 rax|QWORD = CAS (address: [rdx|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 576 1132 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B124 -> B125 falseDestination: B124 -> B133  <||@
  Comment 582 block B133 null  <||@
  Comment 582 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 582 1202 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 591 12  <||@
  Comment 601 block B62 null  <||@
  Comment 601 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 601 552 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 606 554 rax|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 611 556 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 614 558 rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 618 560 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 620 562 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 623 564 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 626 566 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 632 block B64 null  <||@
  Comment 632 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 632 576 rsi|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 637 578 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 639 580 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 641 582 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B67  <||@
  Comment 647 block B67 null  <||@
  Comment 647 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 600 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 651 602 r9|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 655 604 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 661 606 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B72  <||@
  Comment 667 block B68 null  <||@
  Comment 667 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 667 610 rdi|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 671 612 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 674 614 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 677 616 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 680 618 rbp|QWORD = ADD (x: rdi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 686 620 CMP (x: rbp|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 689 622 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B68 -> B72 falseDestination: B68 -> B70  <||@
  Comment 695 block B70 null  <||@
  Comment 695 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 695 638 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 699 640 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 707 642 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 715 644 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 723 646 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 731 648 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 734 650 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 741 652 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 741 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 748 654 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 748 656 stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 752 658 stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 757 660 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 762 662 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 767 664 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 770 666 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 773 668 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 776 670 JUMP ~[] destination: B70 -> B73  <||@
  Comment 776 block B73 null  <||@
  Comment 776 700 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 776 702 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 779 704 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 786 706 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 789 708 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 793 710 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B73 -> B92 falseDestination: B73 -> B75  <||@
  Comment 799 block B75 null  <||@
  Comment 799 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 799 718 r11|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 804 720 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 808 722 r10|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 816 724 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 820 726 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 823 732 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 830 728 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B75 -> B80 falseDestination: B75 -> B78  <||@
  Comment 836 block B80 null  <||@
  Comment 836 758 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 836 760 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 840 762 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 843 764 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B83 falseDestination: B80 -> B82  <||@
  Comment 849 block B82 null  <||@
  Comment 849 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 772 xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 855 774 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 861 776 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 865 778 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 868 780 JUMP ~[] destination: B82 -> B83  <||@
  Comment 868 block B83 null  <||@
  Comment 868 782 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 868 784 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 872 786 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 875 788 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B86 falseDestination: B83 -> B85  <||@
  Comment 881 block B85 null  <||@
  Comment 881 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 796 xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 887 798 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 893 800 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 897 802 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 900 804 JUMP ~[] destination: B85 -> B86  <||@
  Comment 900 block B86 null  <||@
  Comment 900 806 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 900 808 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 904 810 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 907 812 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B89 falseDestination: B86 -> B88  <||@
  Comment 913 block B88 null  <||@
  Comment 913 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 820 xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 919 822 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 925 824 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 929 826 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 932 828 JUMP ~[] destination: B88 -> B89  <||@
  Comment 932 block B89 null  <||@
  Comment 932 830 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 932 832 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 938 834 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 941 836 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B92 falseDestination: B89 -> B91  <||@
  Comment 947 block B91 null  <||@
  Comment 947 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 947 844 r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD  <||@
  Comment 952 846 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 957 848 JUMP ~[] destination: B91 -> B92  <||@
  Comment 957 block B92 null  <||@
  Comment 957 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 852 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 960 854 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 963 856 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B112  <||@
  Comment 969 block B112 null  <||@
  Comment 969 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 1002 rbx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 973 1004 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 978 1010 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3  <||@
  Comment 985 1012 MOV (x: [rbp|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 988 1014 rdx|QWORD[*] = SHR rbp|QWORD[.] y: 9 size: QWORD  <||@
  Comment 995 1016 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1005 1018 MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1009 1020 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1011 1022 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B112 -> B116 falseDestination: B112 -> B114  <||@
  Comment 1017 block B114 null  <||@
  Comment 1017 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1017 1030 rsi|DWORD = SUB (x: r14|DWORD, ~y: stack:64|DWORD) size: DWORD  <||@
  Comment 1024 1032 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1026 1034 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B116 falseDestination: B114 -> B117  <||@
  Comment 1032 block B117 null  <||@
  Comment 1032 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 1050 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1035 1052 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1040 1054 r14|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1045 1056 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1050 block B93 null  <||@
  Comment 1050 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1050 860 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1055 862 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1058 864 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1062 866 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1065 868 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95  <||@
  Comment 1071 block B94 null  <||@
  Comment 1071 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1071 872 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1078 874 JUMP ~[] destination: B94 -> B98  <||@
  Comment 1078 block B98 null  <||@
  Comment 1078 898 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1078 900 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1082 902 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1085 904 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B98 -> B101 falseDestination: B98 -> B100  <||@
  Comment 1091 block B100 null  <||@
  Comment 1091 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1091 912 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1095 914 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1101 916 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1105 918 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1108 920 JUMP ~[] destination: B100 -> B101  <||@
  Comment 1108 block B101 null  <||@
  Comment 1108 922 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1108 924 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1112 926 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1115 928 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B101 -> B104 falseDestination: B101 -> B103  <||@
  Comment 1121 block B103 null  <||@
  Comment 1121 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 936 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1125 938 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1131 940 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1135 942 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1138 944 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1138 block B104 null  <||@
  Comment 1138 946 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1138 948 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1142 950 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1145 952 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B107 falseDestination: B104 -> B106  <||@
  Comment 1151 block B106 null  <||@
  Comment 1151 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1151 960 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1155 962 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1161 964 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1165 966 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1168 968 JUMP ~[] destination: B106 -> B107  <||@
  Comment 1168 block B107 null  <||@
  Comment 1168 970 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1168 972 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1171 974 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1174 976 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B107 -> B112 falseDestination: B107 -> B109  <||@
  Comment 1180 block B109 null  <||@
  Comment 1180 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1180 988 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1185 994 JUMP ~[] destination: B109 -> B112  <||@
  Comment 1190 block B30 null  <||@
  Comment 1190 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1190 264 rax|QWORD = AND r11|QWORD y: 7 size: QWORD  <||@
  Comment 1197 266 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 1201 268 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B42  <||@
  Comment 1207 block B42 null  <||@
  Comment 1207 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1207 370 TEST r11|QWORD y: 2 size: QWORD  <||@
  Comment 1214 372 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48  <||@
  Comment 1220 block B43 null  <||@
  Comment 1220 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 376 r11|QWORD = OR r11|QWORD y: 1 size: QWORD  <||@
  Comment 1224 378 MOV (x: [r8|QWORD], y: r11|QWORD) size: QWORD  <||@
  Comment 1227 380 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1230 382 rax|QWORD = CAS (address: [rdx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD  <||@
  Comment 1235 384 CMP (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1238 386 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B43 -> B54 falseDestination: B43 -> B45  <||@
  Comment 1249 block B58 null  <||@
  Comment 1249 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1249 526 rsi|DWORD = MOVE input: int[-81505|0xfffffffffffec19f]  <||@
  Comment 1254 528 JUMP ~[] destination: B58 -> B66  <||@
  Comment 1254 block B66 null  <||@
  Comment 1254 590 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1254 592 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 1261 594 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1268 596 DEOPT info [bci:5, 150]  <||@
  Comment 1268 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1273 [rdx:0, r10:0, r13:0]at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5, duringCall: false, rethrow: false]
              |0                                      |1            
     locals:  |rdx|QWORD[.]                           |r13|QWORD[.] 
     locks:   |monitor[rdx|QWORD[.], stack:32|QWORD]  |             
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |r10|QWORD[.]  |-  |-   |-    <||@
  Comment 1274 block B60 null  <||@
  Comment 1274 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1274 540 rsi|DWORD = MOVE input: int[-81505|0xfffffffffffec19f]  <||@
  Comment 1279 542 JUMP ~[] destination: B60 -> B66  <||@
  Comment 1281 block B95 null  <||@
  Comment 1281 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1281 878 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1285 880 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1292 882 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1292 block B96 loop 2 depth 1 header:976|LoopBegin  <||@
  Comment 1292 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1296 886 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1302 888 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1306 890 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1309 892 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B98 falseDestination: B96 -> B96  <||@
  Comment 1316 block B78 loop 1 depth 1 header:911|LoopBegin  <||@
  Comment 1316 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1328 744 xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1334 746 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1340 748 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1344 750 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1347 752 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B78 -> B80 falseDestination: B78 -> B78  <||@
  Comment 1354 block B72 null  <||@
  Comment 1354 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 674 stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1358 676 stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1363 678 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1368 680 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1373 686 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1373 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1383 688 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1385 690 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1390 692 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1393 694 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1396 696 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 150]  <||@
  Comment 1396 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1401 [stack:4, stack:8, stack:24, stack:32, stack:40]at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5, duringCall: false, rethrow: false]
              |0                                           |1                 
     locals:  |stack:40|QWORD[.]                           |stack:56|QWORD[.] 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |                  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                  |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1402 698 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1407 block B31 null  <||@
  Comment 1407 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 272 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1412 274 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 276 TEST rbx|QWORD y: 7 size: QWORD  <||@
  Comment 1422 278 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B40  <||@
  Comment 1428 block B32 null  <||@
  Comment 1428 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 282 TEST rbx|QWORD y: 768 size: QWORD  <||@
  Comment 1435 284 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36  <||@
  Comment 1441 block B33 null  <||@
  Comment 1441 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1441 288 r11|QWORD = AND r11|QWORD y: 895 size: QWORD  <||@
  Comment 1448 290 rsi|QWORD = OR (x: r15|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1454 292 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1457 294 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1463 296 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 1469 block B35 null  <||@
  Comment 1469 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1469 304 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1474 310 JUMP ~[] destination: B35 -> B54  <||@
  Comment 1479 block B127 null  <||@
  Comment 1479 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1479 1152 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1482 1154 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 1486 1156 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 1490 1158 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1493 1160 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1496 1162 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1499 1164 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B132  <||@
  Comment 1505 block B128 null  <||@
  Comment 1505 1166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1505 1168 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 1509 1170 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 1513 1172 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1516 1174 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B132  <||@
  Comment 1522 block B129 null  <||@
  Comment 1522 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 1178 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1526 1180 JUMP ~[] destination: B129 -> B133  <||@
  Comment 1531 block B116 null  <||@
  Comment 1531 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1531 1042 MOV [r15|QWORD + 668] y: -93537 size: DWORD  <||@
  Comment 1542 1044 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1549 1046 DEOPT info [bci:26, 21, 7, 150]  <||@
  Comment 1549 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1554 [rbp:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2              
     locals:  |rbp|QWORD[.]  |stack:56|QWORD[.]  |stack:64|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1555 block B40 null  <||@
  Comment 1555 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1555 352 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1558 354 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 1564 356 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1569 362 JUMP ~[] destination: B40 -> B42  <||@
  Comment 1574 block B48 null  <||@
  Comment 1574 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1574 422 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1579 424 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1582 426 MOV (x: [r8|QWORD], y: r8|QWORD) size: QWORD  <||@
  Comment 1585 428 CMP [r11|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 1590 430 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B53  <||@
  Comment 1596 block B49 null  <||@
  Comment 1596 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1596 434 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1603 436 rax|QWORD = CAS (address: [r11|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1609 438 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B49 -> B53 falseDestination: B49 -> B51  <||@
  Comment 1615 block B51 null  <||@
  Comment 1615 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1615 446 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 452 JUMP ~[] destination: B51 -> B54  <||@
  Comment 1625 block B45 null  <||@
  Comment 1625 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1625 394 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1630 396 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1633 398 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 1636 400 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 1643 402 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B53  <||@
  Comment 1649 block B46 null  <||@
  Comment 1649 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1649 406 MOV (x: [r8|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1652 408 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1657 414 JUMP ~[] destination: B46 -> B54  <||@
  Comment 1662 block B36 null  <||@
  Comment 1662 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1662 314 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1665 316 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD  <||@
  Comment 1671 318 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B36 -> B38 falseDestination: B36 -> B39  <||@
  Comment 1677 block B39 null  <||@
  Comment 1677 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1677 342 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1682 348 JUMP ~[] destination: B39 -> B54  <||@
  Comment 1687 block B125 null  <||@
  Comment 1687 1134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1687 1136 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 1138 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 1140 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1696 1142 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1696 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1702 1144 JUMP ~[] destination: B125 -> B133  <||@
  Comment 1707 block B132 null  <||@
  Comment 1707 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1707 1192 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1710 1194 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1713 1196 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1713 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1719 1198 JUMP ~[] destination: B132 -> B133  <||@
  Comment 1724 block B53 null  <||@
  Comment 1724 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1724 460 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1727 462 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1730 464 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150]  <||@
  Comment 1730 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1735 [rbp:0, stack:24, stack:32, stack:40]at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1                 
     locals:  |rbp|QWORD[.]                           |stack:56|QWORD[.] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1736 466 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1741 468 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1746 470 rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1749 472 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1754 block B38 null  <||@
  Comment 1754 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1754 326 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1757 328 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1760 330 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150]  <||@
  Comment 1760 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1765 [rbp:0, stack:24, stack:32, stack:40]at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1                 
     locals:  |rbp|QWORD[.]                           |stack:56|QWORD[.] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1766 332 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1771 334 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1776 336 rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1779 338 JUMP ~[] destination: B38 -> B54  <||@
  Comment 1784 block B137 null  <||@
  Comment 1784 1234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1784 1236 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1794 1238 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 1240 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1803 1242 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1806 1244 r10|DWORD = MOVE input: int[-59155|0xffffffffffff18ed]  <||@
  Comment 1812 1246 JUMP ~[] destination: B137 -> B140  <||@
  Comment 1812 block B140 null  <||@
  Comment 1812 1278 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1812 1280 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1819 1282 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1826 1284 DEOPT info [bci:0]  <||@
  Comment 1826 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1831 [rcx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, stack:24, stack:32]at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6          |7                  |8                  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rbp|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |rbx|DWORD  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1832 block B21 null  <||@
  Comment 1832 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1832 180 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1835 182 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 184 r10|DWORD = MOVE input: int[-66067|0xfffffffffffefded]  <||@
  Comment 1844 186 JUMP ~[] destination: B21 -> B27  <||@
  Comment 1844 block B27 null  <||@
  Comment 1844 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1844 234 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1851 236 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1858 238 DEOPT info [bci:27, 147]  <||@
  Comment 1858 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1863 [rbp:0, r11:0, r13:0]at java.net.URI.quote(URI.java:2678) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                                             |2  |3                                             |4  |5  |6             |7           |8         |9 
     locals:  |r13|QWORD[.]  |long[3458764316252045313|0x2fffffd200000001]  |-  |long[5188146764422578175|0x47fffffe87ffffff]  |-  |-  |Object[null]  |int[1|0x1]  |r8|DWORD  |- 
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-             |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |r11|QWORD[.]  |-  |-   |-  
     stack:   |rbp|QWORD[.]  |              |   |   |   |   |   |   |              |   |    |     <||@
  Comment 1864 block B1 null  <||@
  Comment 1864 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1864 20 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1869 22 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1872 24 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@4965096]  <||@
  Comment 1872 {Object[d.a@4965096]}  <||@
  Comment 1882 26 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1885 28 r10|DWORD = MOVE input: int[-66571|0xfffffffffffefbf5]  <||@
  Comment 1891 30 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1895 32 JUMP ~[] destination: B1 -> B140  <||@
  Comment 1897 block B55 null  <||@
  Comment 1897 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1897 488 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1902 490 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1905 492 MOV [r15|QWORD + 668] y: -71691 size: DWORD  <||@
  Comment 1916 494 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1923 496 DEOPT info [bci:0, 150]  <||@
  Comment 1923 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1928 [rbp:0, stack:24, stack:32]at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1                 
     locals:  |rbp|QWORD[.]                           |stack:56|QWORD[.] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1929 block B18 null  <||@
  Comment 1929 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1929 150 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1932 152 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1935 154 r10|DWORD = MOVE input: int[-65811|0xfffffffffffefeed]  <||@
  Comment 1941 156 JUMP ~[] destination: B18 -> B27  <||@
  Comment 1943 block B26 null  <||@
  Comment 1943 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1943 224 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1946 226 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1949 228 r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed]  <||@
  Comment 1955 230 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1957 block B138 null  <||@
  Comment 1957 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1957 1250 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1967 1252 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1972 1254 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1976 1256 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1979 1258 r10|DWORD = MOVE input: int[-58899|0xffffffffffff19ed]  <||@
  Comment 1985 1260 JUMP ~[] destination: B138 -> B140  <||@
  Comment 1990 block B65 null  <||@
  Comment 1990 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1990 586 rsi|DWORD = MOVE input: int[-84499|0xfffffffffffeb5ed]  <||@
  Comment 1995 588 JUMP ~[] destination: B65 -> B66  <||@
  Comment 2000 block B5 null  <||@
  Comment 2000 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2000 60 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2005 62 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2008 64 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@476172961]  <||@
  Comment 2008 {Object[d.a@476172961]}  <||@
  Comment 2018 66 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 68 r10|DWORD = MOVE input: int[-62227|0xffffffffffff0ced]  <||@
  Comment 2027 70 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2031 72 JUMP ~[] destination: B5 -> B140  <||@
  Comment 2036 block B136 null  <||@
  Comment 2036 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2036 1222 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2046 1224 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2051 1226 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2055 1228 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2058 1230 r10|DWORD = MOVE input: int[-59411|0xffffffffffff17ed]  <||@
  Comment 2064 1232 JUMP ~[] destination: B136 -> B140  <||@
  Comment 2069 block B24 null  <||@
  Comment 2069 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2069 208 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2072 210 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2075 212 r10|DWORD = MOVE input: int[-66323|0xfffffffffffefced]  <||@
  Comment 2081 214 JUMP ~[] destination: B24 -> B27  <||@
  Comment 2086 block B134 null  <||@
  Comment 2086 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2086 1206 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2091 1208 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2096 1210 MOV [r15|QWORD + 668] y: -72979 size: DWORD  <||@
  Comment 2107 1212 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2114 1214 DEOPT info [bci:61, 35, 7, 150]  <||@
  Comment 2114 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2119 [rbp:0, stack:32]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2        
     locals:  |rbp|QWORD[.]  |-  |r9|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 2120 block B139 null  <||@
  Comment 2120 1262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2120 1264 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2125 1266 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2128 1268 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2138803663]  <||@
  Comment 2128 {Object[d.a@2138803663]}  <||@
  Comment 2138 1270 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2141 1272 r10|DWORD = MOVE input: int[-63259|0xffffffffffff08e5]  <||@
  Comment 2147 1274 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2151 1276 JUMP ~[] destination: B139 -> B140  <||@
  Comment 2156 block B63 null  <||@
  Comment 2156 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2156 570 rsi|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 2161 572 JUMP ~[] destination: B63 -> B66  <||@
  Comment 2166 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2166 4  <||@
  Comment 2172 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2172 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9435[java.net.URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)]"
  method "HotSpotCompilation-9435[java.net.URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)]"
  date 1527005212450
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106c58300 448b560849c1e203493bc20f854fdbbaff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c244048895424284c8b6c24584c8b5424604c895424204885d20f84fb060000458b5d0c428b1cdd0c0000008bc3488be848ffcd85db0f84090000004885ed0f8c5e070000483bc50f870800000085db0f85c50700004885c90f85190700004885ff0f85630600004d85c00f855607000049c1e30348bfffffff87feffff4748be01000000d2ffff2f41b8000000000f1f4000413bd80f8e62000000470fb74c43104181f9800000000f83bb0600004585c90f84a4060000418bc0ffc04183f9400f821c000000418d49c049c7c10100000049d3e14985f90f840a070000448bc0ebb048c7c501000000418bc948d3e54885f50f8402060000448bc0eb954c8b1a4c8d44243048bf08d600c0070000004c8b8fa8000000498bcf490bc9488bd94933db48f7c387ffffff0f8549030000458b750c438504f4448b5a104585db0f84f7050000468b04dd0c00000044896214468b0cf50c0000008b5a0c418bc903cb894c24148bf9412bf883ff010f8db900000085db0f8c39030000452bc1413bd80f8f4603000049c1e30349c1e6034863f3458bc1498d7e10498d747310498bd044894c2410e868a8bbff904c8b5424204d85d20f853f0600008b4c2414488b542428894a0c4c8b12498bc24883e0074883f8050f8513000000488b6c24404883c4488505f06ac3fdc5f877c34c8d5c2430498b334885f60f841b00000049f7c2020000000f858f030000498bc3f0480fb1320f8551040000488b6c24404883c4488505b16ac3fdc5f877c344894c2410418bc0d1e08d40028bf02bf185f60f4cc183f8010f8cf4050000bef7ffff7f2bf085f60f8c3f050000498b77604d8b4f7081f8ffffff000f83af0200008bf8d1e78d7f1783e7f84863ff488bef4803ee493be90f879302000049896f600f188437c00000000f188437000100000f188437400100000f1884378001000089460c48c70601000000c74608410000f8895c240c44895c240844897424044c896c2418448bf0458be8488bc6453bf5418bf6410f4ff54863f64883fe010f8c9e000000448b5c2408488d50104e8d14dd100000004c8d5ef04d85db49c7c0000000000f8dec0100004c8d5ef84d3bc30f8f13000000c4817a6f0442c4a17a7f04424d8d58084d8bc34c8d5efc4d3bc30f8f13000000c481f96e0442c4a1f97e04424d8d58044d8bc34c8d5efe4d3bc30f8f13000000c481796e0442c4a1797e04424d8d58024d8bc34c8bde49ffcb4d3bc30f8f0a000000470fbf144266468914424963d6483bd60f8f510000008b5c240c488b6c2428488bf048c1ee03897510488bd548c1ea0948be00e01b17010000004488243285db0f8c02020000418bf62b7424103bde0f8ff30100004c8bd8448b4c2410448b742404e99efdffff4c8d547010482bd6488d72f04885f60f8dd200000049c7c300000000488d72f84c3bde0f8f11000000c5f9efc0c4817a7f045a498d73084c8bde488d72fc4c3bde0f8f11000000c5f9efc0c481f97e045a498d73044c8bde488d72fe4c3bde0f8f11000000c5f9efc0c481797e045a498d73024c8bde48ffca4c3bda0f8f2dffffff664789245ae923ffffff498bc34883e0074883f8050f84c800000049f7c3020000000f85620100004983cb014d8918498bc3f04c0fb102493bc30f8481fcffffe978010000be9fc1feff4189b79c0200004d89a7a8020000e805eebaff90be9fc1feffebe5c5f9efc049c7c3000000000f1f4000c4817e7f045a4d8d5b104c3bde7ef1e912ffffff660f1f440000660f1f440000c4817e6f0442c4a17e7f04424d8d40104d3bc37eebe9fafdffff895c240c44895c240844897424044c896c241848be080200c0070000008bd0b900000000448bf0458be8e867e5330090e989fdffff4c896c2418488bea48f7c3070000000f857f00000048f7c3000300000f85dd0000004981e37f030000498bf7490bf3498bc3f0480fb175000f851d0100004c8b542420e996fbffff488bea498b4216498b72264933c7480bc64885c00f85ca000000498b4236490b423e4885c00f85b90000004d896216e94bfcffff41c7879c0200009f92feff4d89a7a8020000e8ececbaff90498bc3f04c0fb14d004c8b542420e991feffff4c896c2418488bea4d890049837b16000f858000000048c7c000000000f04d0fb17b160f856d0000004c8b542420e904fbffff4c896c2418488bea482bc448f7c007f0ffff0f854b0000004d89204c8b542420e9dffaffff498bc3f0480fb14d000f854d0000004c8b542420e9c6faffff488bea488bf5498bd3e8bb5a4e0090e99bfbffff488bf5498bd3e8aa5a4e0090e98afbffff488bf5498bd0e899df3300904c8b5424204c8b6c2418488bd5e983faffff488bf5498bd0e87bdf3300904c8b5424204c8b6c2418488bd5e965faffff49bb00000000000000004c896c24188b5c2450488bea41baed18ffff4589979c0200004d899fa8020000e8d7ebbaff904d8bda488bea41baedfdfeff4589979c0200004d89a7a8020000e8b7ebbaff904c896c2418488bea49ba500a90b9070000004d8bda41baf5fbfeff8b5c2450ebab4c896c2418488bea41c7879c020000f5e7feff4d89a7a8020000e876ebbaff904d8bda488bea41baedfefeffeb9d4d8bda488bea41baedfffeffeb8f49bb00000000000000004c896c24188b5c2450488bea41baed19ffffe94effffffbeedb5feffe916fdffff4c896c2418488bea49baf00990b9070000004d8bda41baed0cffff8b5c2450e920ffffff49bb00000000000000004c896c24188b5c2450488bea41baed17ffffe9fffeffff4d8bda488bea41baedfcfeffe90effffff448b4c2410488b6c242841c7879c020000ede2feff4d89a7a8020000e8b7eabaff904c896c2418488bea49ba200a90b9070000004d8bda41bae508ffff8b5c2450e9a8feffffbeedb6feffe970fcffffe8a51affff90e87fe9baff90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@725c08e5 slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 68 14 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 71 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 77 block B2 null  <||@
  Comment 77 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 36 r11|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 77 [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r13:0, stack:32, stack:40]at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6           |7             |8             |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |in:0|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |-  |-   |-    <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 38 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0, stack:32, stack:40]at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6           |7             |8             |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |in:0|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |-  |-   |-    <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 40 rax|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 91 42 rbp|QWORD = DEC rax|QWORD size: QWORD  <||@
  Comment 97 44 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 99 46 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 105 block B4 null  <||@
  Comment 105 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 54 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 108 56 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 114 block B7 null  <||@
  Comment 114 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 80 CMP (x: rax|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 117 82 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9  <||@
  Comment 123 block B9 null  <||@
  Comment 123 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 90 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 125 92 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B11 falseDestination: B9 -> B139  <||@
  Comment 131 block B11 null  <||@
  Comment 131 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 131 100 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 134 102 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B138  <||@
  Comment 140 block B12 null  <||@
  Comment 140 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 106 TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 143 108 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B137  <||@
  Comment 149 block B13 null  <||@
  Comment 149 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 112 TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 152 114 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B136  <||@
  Comment 158 block B14 null  <||@
  Comment 158 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 118 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3  <||@
  Comment 162 120 rdi|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff]  <||@
  Comment 172 122 rsi|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001]  <||@
  Comment 182 124 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 188 126 JUMP ~[] destination: B14 -> B15  <||@
  Comment 188 block B15 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 188 128 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 192 130 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 195 132 BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28  <||@
  Comment 201 block B16 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 201 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 136 r9|DWORD = MOVZX [r11|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 207 138 CMP r9|DWORD y: 128 size: DWORD  <||@
  Comment 214 140 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B26  <||@
  Comment 220 block B17 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 220 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 220 144 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 223 146 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 229 block B19 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 229 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 160 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 234 162 CMP r9|DWORD y: 64 size: DWORD  <||@
  Comment 238 164 BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 244 block B23 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 244 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 196 rcx|DWORD = LEA [r9|DWORD - 64] size: DWORD  <||@
  Comment 248 198 r9|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 255 200 r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 258 202 TEST (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 261 204 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 267 block B25 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 267 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 218 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 270 220 JUMP ~[] destination: B25 -> B15  <||@
  Comment 272 block B20 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 272 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 168 rbp|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 279 170 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 282 172 rbp|QWORD = SHL (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 285 174 TEST (x: rsi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 288 176 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 294 block B22 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 294 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 190 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 297 192 JUMP ~[] destination: B22 -> B15  <||@
  Comment 299 block B28 null  <||@
  Comment 299 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 242 r11|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 302 244 r8|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 307 246 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 307 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 317 248 r9|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 324 250 rcx|QWORD = OR (x: r15|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 330 252 rbx|QWORD = XOR (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 336 254 TEST rbx|QWORD y: -121 size: QWORD  <||@
  Comment 343 256 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B28 -> B54 falseDestination: B28 -> B30  <||@
  Comment 349 block B54 null  <||@
  Comment 349 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 349 476 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 353 478 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0, 150]  <||@
  Comment 353 [rdx:0, r10:0, r13:0, r14:0, stack:32, stack:40]at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1            
     locals:  |rdx|QWORD[.]                           |r13|QWORD[.] 
     locks:   |monitor[rdx|QWORD[.], stack:32|QWORD]  |             
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |r10|QWORD[.]  |-  |-   |-    <||@
  Comment 353 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 357 480 r11|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 361 482 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 364 484 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 370 block B56 null  <||@
  Comment 370 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 500 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 378 502 MOV (x: [rdx|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 382 504 r9|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 390 506 rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 393 508 rcx|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 398 510 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 402 512 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 407 514 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 410 516 BRANCH trueDestinationProbability: 0.9530056616276885 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B62  <||@
  Comment 416 block B57 null  <||@
  Comment 416 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 520 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 418 522 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 424 block B59 null  <||@
  Comment 424 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 424 532 r8|DWORD = SUB (x: r8|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 427 534 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 430 536 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 436 block B61 null  <||@
  Comment 436 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 546 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3  <||@
  Comment 440 548 JUMP ~[] destination: B61 -> B118  <||@
  Comment 440 block B118 null  <||@
  Comment 440 1058 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 440 1060 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3  <||@
  Comment 444 1062 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 444 1064 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 444 1066 rsi|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 447 1068 r8|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 450 1070 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 454 1072 rsi|QWORD = LEA [r11|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 459 1074 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 462 1076 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 467 1078 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 467 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 473 1080 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 478 1082 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 481 1084 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B134  <||@
  Comment 487 block B119 null  <||@
  Comment 487 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 1088 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 491 1090 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 496 1092 MOV (x: [rdx|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 499 1094 r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 502 1096 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 509 1098 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 513 1100 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 519 block B120 null  <||@
  Comment 519 1102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 1104 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 528 12  <||@
  Comment 538 block B121 null  <||@
  Comment 538 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 1108 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 543 1110 rsi|QWORD = MOV [r11|QWORD] size: QWORD  <||@
  Comment 546 1112 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 549 1114 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B121 -> B133 falseDestination: B121 -> B123  <||@
  Comment 555 block B123 null  <||@
  Comment 555 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 555 1122 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 562 1124 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B127  <||@
  Comment 568 block B124 null  <||@
  Comment 568 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 1128 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 571 1130 rax|QWORD = CAS (address: [rdx|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 576 1132 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B124 -> B125 falseDestination: B124 -> B133  <||@
  Comment 582 block B133 null  <||@
  Comment 582 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 582 1202 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 591 12  <||@
  Comment 601 block B62 null  <||@
  Comment 601 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 601 552 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 606 554 rax|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 611 556 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 614 558 rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 618 560 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 620 562 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 623 564 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 626 566 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 632 block B64 null  <||@
  Comment 632 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 632 576 rsi|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 637 578 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 639 580 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 641 582 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B67  <||@
  Comment 647 block B67 null  <||@
  Comment 647 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 600 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 651 602 r9|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 655 604 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 661 606 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B72  <||@
  Comment 667 block B68 null  <||@
  Comment 667 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 667 610 rdi|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 671 612 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 674 614 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 677 616 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 680 618 rbp|QWORD = ADD (x: rdi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 686 620 CMP (x: rbp|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 689 622 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B68 -> B72 falseDestination: B68 -> B70  <||@
  Comment 695 block B70 null  <||@
  Comment 695 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 695 638 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 699 640 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 707 642 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 715 644 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 723 646 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 731 648 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 734 650 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 741 652 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 741 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 748 654 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 748 656 stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 752 658 stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 757 660 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 762 662 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 767 664 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 770 666 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 773 668 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 776 670 JUMP ~[] destination: B70 -> B73  <||@
  Comment 776 block B73 null  <||@
  Comment 776 700 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 776 702 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 779 704 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 786 706 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 789 708 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 793 710 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B73 -> B92 falseDestination: B73 -> B75  <||@
  Comment 799 block B75 null  <||@
  Comment 799 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 799 718 r11|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 804 720 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 808 722 r10|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 816 724 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 820 726 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 823 732 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 830 728 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B75 -> B80 falseDestination: B75 -> B78  <||@
  Comment 836 block B80 null  <||@
  Comment 836 758 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 836 760 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 840 762 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 843 764 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B83 falseDestination: B80 -> B82  <||@
  Comment 849 block B82 null  <||@
  Comment 849 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 772 xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 855 774 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 861 776 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 865 778 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 868 780 JUMP ~[] destination: B82 -> B83  <||@
  Comment 868 block B83 null  <||@
  Comment 868 782 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 868 784 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 872 786 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 875 788 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B86 falseDestination: B83 -> B85  <||@
  Comment 881 block B85 null  <||@
  Comment 881 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 796 xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 887 798 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 893 800 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 897 802 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 900 804 JUMP ~[] destination: B85 -> B86  <||@
  Comment 900 block B86 null  <||@
  Comment 900 806 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 900 808 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 904 810 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 907 812 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B89 falseDestination: B86 -> B88  <||@
  Comment 913 block B88 null  <||@
  Comment 913 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 820 xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 919 822 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 925 824 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 929 826 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 932 828 JUMP ~[] destination: B88 -> B89  <||@
  Comment 932 block B89 null  <||@
  Comment 932 830 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 932 832 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 938 834 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 941 836 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B92 falseDestination: B89 -> B91  <||@
  Comment 947 block B91 null  <||@
  Comment 947 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 947 844 r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD  <||@
  Comment 952 846 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 957 848 JUMP ~[] destination: B91 -> B92  <||@
  Comment 957 block B92 null  <||@
  Comment 957 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 852 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 960 854 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 963 856 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B112  <||@
  Comment 969 block B112 null  <||@
  Comment 969 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 1002 rbx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 973 1004 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 978 1010 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2cded8c4 encoding: base: 0 shift: 3  <||@
  Comment 985 1012 MOV (x: [rbp|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 988 1014 rdx|QWORD[*] = SHR rbp|QWORD[.] y: 9 size: QWORD  <||@
  Comment 995 1016 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1005 1018 MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1009 1020 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1011 1022 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B112 -> B116 falseDestination: B112 -> B114  <||@
  Comment 1017 block B114 null  <||@
  Comment 1017 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1017 1030 rsi|DWORD = SUB (x: r14|DWORD, ~y: stack:64|DWORD) size: DWORD  <||@
  Comment 1024 1032 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1026 1034 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B116 falseDestination: B114 -> B117  <||@
  Comment 1032 block B117 null  <||@
  Comment 1032 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 1050 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1035 1052 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1040 1054 r14|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1045 1056 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1050 block B93 null  <||@
  Comment 1050 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1050 860 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1055 862 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1058 864 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1062 866 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1065 868 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95  <||@
  Comment 1071 block B94 null  <||@
  Comment 1071 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1071 872 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1078 874 JUMP ~[] destination: B94 -> B98  <||@
  Comment 1078 block B98 null  <||@
  Comment 1078 898 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1078 900 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1082 902 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1085 904 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B98 -> B101 falseDestination: B98 -> B100  <||@
  Comment 1091 block B100 null  <||@
  Comment 1091 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1091 912 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1095 914 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1101 916 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1105 918 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1108 920 JUMP ~[] destination: B100 -> B101  <||@
  Comment 1108 block B101 null  <||@
  Comment 1108 922 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1108 924 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1112 926 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1115 928 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B101 -> B104 falseDestination: B101 -> B103  <||@
  Comment 1121 block B103 null  <||@
  Comment 1121 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 936 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1125 938 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1131 940 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1135 942 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1138 944 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1138 block B104 null  <||@
  Comment 1138 946 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1138 948 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1142 950 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1145 952 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B107 falseDestination: B104 -> B106  <||@
  Comment 1151 block B106 null  <||@
  Comment 1151 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1151 960 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1155 962 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1161 964 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1165 966 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1168 968 JUMP ~[] destination: B106 -> B107  <||@
  Comment 1168 block B107 null  <||@
  Comment 1168 970 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1168 972 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1171 974 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1174 976 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B107 -> B112 falseDestination: B107 -> B109  <||@
  Comment 1180 block B109 null  <||@
  Comment 1180 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1180 988 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1185 994 JUMP ~[] destination: B109 -> B112  <||@
  Comment 1190 block B30 null  <||@
  Comment 1190 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1190 264 rax|QWORD = AND r11|QWORD y: 7 size: QWORD  <||@
  Comment 1197 266 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 1201 268 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B42  <||@
  Comment 1207 block B42 null  <||@
  Comment 1207 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1207 370 TEST r11|QWORD y: 2 size: QWORD  <||@
  Comment 1214 372 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48  <||@
  Comment 1220 block B43 null  <||@
  Comment 1220 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 376 r11|QWORD = OR r11|QWORD y: 1 size: QWORD  <||@
  Comment 1224 378 MOV (x: [r8|QWORD], y: r11|QWORD) size: QWORD  <||@
  Comment 1227 380 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1230 382 rax|QWORD = CAS (address: [rdx|QWORD[.]], cmpValue: rax|QWORD, newValue: r8|QWORD) accessKind: QWORD  <||@
  Comment 1235 384 CMP (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1238 386 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B43 -> B54 falseDestination: B43 -> B45  <||@
  Comment 1249 block B58 null  <||@
  Comment 1249 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1249 526 rsi|DWORD = MOVE input: int[-81505|0xfffffffffffec19f]  <||@
  Comment 1254 528 JUMP ~[] destination: B58 -> B66  <||@
  Comment 1254 block B66 null  <||@
  Comment 1254 590 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1254 592 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 1261 594 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1268 596 DEOPT info [bci:5, 150]  <||@
  Comment 1268 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1273 [rdx:0, r10:0, r13:0]at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5, duringCall: false, rethrow: false]
              |0                                      |1            
     locals:  |rdx|QWORD[.]                           |r13|QWORD[.] 
     locks:   |monitor[rdx|QWORD[.], stack:32|QWORD]  |             
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |r10|QWORD[.]  |-  |-   |-    <||@
  Comment 1274 block B60 null  <||@
  Comment 1274 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1274 540 rsi|DWORD = MOVE input: int[-81505|0xfffffffffffec19f]  <||@
  Comment 1279 542 JUMP ~[] destination: B60 -> B66  <||@
  Comment 1281 block B95 null  <||@
  Comment 1281 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1281 878 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1285 880 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1292 882 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1292 block B96 loop 2 depth 1 header:976|LoopBegin  <||@
  Comment 1292 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1296 886 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1302 888 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1306 890 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1309 892 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B98 falseDestination: B96 -> B96  <||@
  Comment 1316 block B78 loop 1 depth 1 header:911|LoopBegin  <||@
  Comment 1316 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1328 744 xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1334 746 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1340 748 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1344 750 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1347 752 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B78 -> B80 falseDestination: B78 -> B78  <||@
  Comment 1354 block B72 null  <||@
  Comment 1354 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 674 stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1358 676 stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1363 678 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1368 680 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1373 686 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1373 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1383 688 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1385 690 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1390 692 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1393 694 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1396 696 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5, 150]  <||@
  Comment 1396 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1401 [stack:4, stack:8, stack:24, stack:32, stack:40]at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5, duringCall: false, rethrow: false]
              |0                                           |1                 
     locals:  |stack:40|QWORD[.]                           |stack:56|QWORD[.] 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |                  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                  |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1402 698 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1407 block B31 null  <||@
  Comment 1407 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 272 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1412 274 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 276 TEST rbx|QWORD y: 7 size: QWORD  <||@
  Comment 1422 278 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B40  <||@
  Comment 1428 block B32 null  <||@
  Comment 1428 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 282 TEST rbx|QWORD y: 768 size: QWORD  <||@
  Comment 1435 284 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36  <||@
  Comment 1441 block B33 null  <||@
  Comment 1441 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1441 288 r11|QWORD = AND r11|QWORD y: 895 size: QWORD  <||@
  Comment 1448 290 rsi|QWORD = OR (x: r15|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1454 292 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1457 294 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1463 296 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 1469 block B35 null  <||@
  Comment 1469 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1469 304 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1474 310 JUMP ~[] destination: B35 -> B54  <||@
  Comment 1479 block B127 null  <||@
  Comment 1479 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1479 1152 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1482 1154 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 1486 1156 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 1490 1158 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1493 1160 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1496 1162 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1499 1164 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B132  <||@
  Comment 1505 block B128 null  <||@
  Comment 1505 1166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1505 1168 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 1509 1170 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 1513 1172 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1516 1174 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B132  <||@
  Comment 1522 block B129 null  <||@
  Comment 1522 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 1178 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1526 1180 JUMP ~[] destination: B129 -> B133  <||@
  Comment 1531 block B116 null  <||@
  Comment 1531 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1531 1042 MOV [r15|QWORD + 668] y: -93537 size: DWORD  <||@
  Comment 1542 1044 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1549 1046 DEOPT info [bci:26, 21, 7, 150]  <||@
  Comment 1549 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1554 [rbp:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2              
     locals:  |rbp|QWORD[.]  |stack:56|QWORD[.]  |stack:64|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1555 block B40 null  <||@
  Comment 1555 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1555 352 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1558 354 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 1564 356 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1569 362 JUMP ~[] destination: B40 -> B42  <||@
  Comment 1574 block B48 null  <||@
  Comment 1574 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1574 422 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1579 424 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1582 426 MOV (x: [r8|QWORD], y: r8|QWORD) size: QWORD  <||@
  Comment 1585 428 CMP [r11|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 1590 430 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B53  <||@
  Comment 1596 block B49 null  <||@
  Comment 1596 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1596 434 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1603 436 rax|QWORD = CAS (address: [r11|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1609 438 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B49 -> B53 falseDestination: B49 -> B51  <||@
  Comment 1615 block B51 null  <||@
  Comment 1615 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1615 446 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 452 JUMP ~[] destination: B51 -> B54  <||@
  Comment 1625 block B45 null  <||@
  Comment 1625 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1625 394 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1630 396 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1633 398 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 1636 400 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 1643 402 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B53  <||@
  Comment 1649 block B46 null  <||@
  Comment 1649 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1649 406 MOV (x: [r8|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1652 408 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1657 414 JUMP ~[] destination: B46 -> B54  <||@
  Comment 1662 block B36 null  <||@
  Comment 1662 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1662 314 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1665 316 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD  <||@
  Comment 1671 318 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B36 -> B38 falseDestination: B36 -> B39  <||@
  Comment 1677 block B39 null  <||@
  Comment 1677 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1677 342 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1682 348 JUMP ~[] destination: B39 -> B54  <||@
  Comment 1687 block B125 null  <||@
  Comment 1687 1134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1687 1136 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 1138 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 1140 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1696 1142 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1696 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1702 1144 JUMP ~[] destination: B125 -> B133  <||@
  Comment 1707 block B132 null  <||@
  Comment 1707 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1707 1192 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1710 1194 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1713 1196 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1713 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1719 1198 JUMP ~[] destination: B132 -> B133  <||@
  Comment 1724 block B53 null  <||@
  Comment 1724 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1724 460 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1727 462 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1730 464 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150]  <||@
  Comment 1730 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1735 [rbp:0, stack:24, stack:32, stack:40]at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1                 
     locals:  |rbp|QWORD[.]                           |stack:56|QWORD[.] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1736 466 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1741 468 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1746 470 rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1749 472 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1754 block B38 null  <||@
  Comment 1754 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1754 326 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1757 328 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1760 330 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0, 150]  <||@
  Comment 1760 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1765 [rbp:0, stack:24, stack:32, stack:40]at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1                 
     locals:  |rbp|QWORD[.]                           |stack:56|QWORD[.] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1766 332 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1771 334 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1776 336 rdx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1779 338 JUMP ~[] destination: B38 -> B54  <||@
  Comment 1784 block B137 null  <||@
  Comment 1784 1234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1784 1236 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1794 1238 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 1240 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1803 1242 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1806 1244 r10|DWORD = MOVE input: int[-59155|0xffffffffffff18ed]  <||@
  Comment 1812 1246 JUMP ~[] destination: B137 -> B140  <||@
  Comment 1812 block B140 null  <||@
  Comment 1812 1278 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1812 1280 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1819 1282 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1826 1284 DEOPT info [bci:0]  <||@
  Comment 1826 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1831 [rcx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, stack:24, stack:32]at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6          |7                  |8                  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rbp|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |rbx|DWORD  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1832 block B21 null  <||@
  Comment 1832 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1832 180 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1835 182 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 184 r10|DWORD = MOVE input: int[-66067|0xfffffffffffefded]  <||@
  Comment 1844 186 JUMP ~[] destination: B21 -> B27  <||@
  Comment 1844 block B27 null  <||@
  Comment 1844 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1844 234 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1851 236 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1858 238 DEOPT info [bci:27, 147]  <||@
  Comment 1858 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1863 [rbp:0, r11:0, r13:0]at java.net.URI.quote(URI.java:2678) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                                             |2  |3                                             |4  |5  |6             |7           |8         |9 
     locals:  |r13|QWORD[.]  |long[3458764316252045313|0x2fffffd200000001]  |-  |long[5188146764422578175|0x47fffffe87ffffff]  |-  |-  |Object[null]  |int[1|0x1]  |r8|DWORD  |- 
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-             |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |r11|QWORD[.]  |-  |-   |-  
     stack:   |rbp|QWORD[.]  |              |   |   |   |   |   |   |              |   |    |     <||@
  Comment 1864 block B1 null  <||@
  Comment 1864 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1864 20 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1869 22 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1872 24 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@4965096]  <||@
  Comment 1872 {Object[d.a@4965096]}  <||@
  Comment 1882 26 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1885 28 r10|DWORD = MOVE input: int[-66571|0xfffffffffffefbf5]  <||@
  Comment 1891 30 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1895 32 JUMP ~[] destination: B1 -> B140  <||@
  Comment 1897 block B55 null  <||@
  Comment 1897 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1897 488 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1902 490 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1905 492 MOV [r15|QWORD + 668] y: -71691 size: DWORD  <||@
  Comment 1916 494 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1923 496 DEOPT info [bci:0, 150]  <||@
  Comment 1923 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1928 [rbp:0, stack:24, stack:32]at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1                 
     locals:  |rbp|QWORD[.]                           |stack:56|QWORD[.] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 1929 block B18 null  <||@
  Comment 1929 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1929 150 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1932 152 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1935 154 r10|DWORD = MOVE input: int[-65811|0xfffffffffffefeed]  <||@
  Comment 1941 156 JUMP ~[] destination: B18 -> B27  <||@
  Comment 1943 block B26 null  <||@
  Comment 1943 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1943 224 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1946 226 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1949 228 r10|DWORD = MOVE input: int[-65555|0xfffffffffffeffed]  <||@
  Comment 1955 230 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1957 block B138 null  <||@
  Comment 1957 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1957 1250 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1967 1252 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1972 1254 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1976 1256 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1979 1258 r10|DWORD = MOVE input: int[-58899|0xffffffffffff19ed]  <||@
  Comment 1985 1260 JUMP ~[] destination: B138 -> B140  <||@
  Comment 1990 block B65 null  <||@
  Comment 1990 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1990 586 rsi|DWORD = MOVE input: int[-84499|0xfffffffffffeb5ed]  <||@
  Comment 1995 588 JUMP ~[] destination: B65 -> B66  <||@
  Comment 2000 block B5 null  <||@
  Comment 2000 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2000 60 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2005 62 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2008 64 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@476172961]  <||@
  Comment 2008 {Object[d.a@476172961]}  <||@
  Comment 2018 66 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 68 r10|DWORD = MOVE input: int[-62227|0xffffffffffff0ced]  <||@
  Comment 2027 70 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2031 72 JUMP ~[] destination: B5 -> B140  <||@
  Comment 2036 block B136 null  <||@
  Comment 2036 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2036 1222 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2046 1224 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2051 1226 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2055 1228 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2058 1230 r10|DWORD = MOVE input: int[-59411|0xffffffffffff17ed]  <||@
  Comment 2064 1232 JUMP ~[] destination: B136 -> B140  <||@
  Comment 2069 block B24 null  <||@
  Comment 2069 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2069 208 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2072 210 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2075 212 r10|DWORD = MOVE input: int[-66323|0xfffffffffffefced]  <||@
  Comment 2081 214 JUMP ~[] destination: B24 -> B27  <||@
  Comment 2086 block B134 null  <||@
  Comment 2086 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2086 1206 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2091 1208 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2096 1210 MOV [r15|QWORD + 668] y: -72979 size: DWORD  <||@
  Comment 2107 1212 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2114 1214 DEOPT info [bci:61, 35, 7, 150]  <||@
  Comment 2114 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2119 [rbp:0, stack:32]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2        
     locals:  |rbp|QWORD[.]  |-  |r9|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1             |2  |3  |4  |5  |6  |7  |8                  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   |-    <||@
  Comment 2120 block B139 null  <||@
  Comment 2120 1262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2120 1264 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2125 1266 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2128 1268 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2138803663]  <||@
  Comment 2128 {Object[d.a@2138803663]}  <||@
  Comment 2138 1270 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2141 1272 r10|DWORD = MOVE input: int[-63259|0xffffffffffff08e5]  <||@
  Comment 2147 1274 rbx|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2151 1276 JUMP ~[] destination: B139 -> B140  <||@
  Comment 2156 block B63 null  <||@
  Comment 2156 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2156 570 rsi|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 2161 572 JUMP ~[] destination: B63 -> B66  <||@
  Comment 2166 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2166 4  <||@
  Comment 2172 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2172 5  <||@
  HexCodeFile>>> <|@
end_nmethod
