begin_compilation
  name " HotSpotCompilation-8385[java.lang.StringBuilder.append(int)]"
  method "HotSpotCompilation-8385[java.lang.StringBuilder.append(int)]"
  date 1527005178864
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid a516 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a518 v530 v540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?448 ?42 v7 ?75 ?59 v228 v929 ?93 ?34 ?201 ?86 v274 v930 ?182 j610 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i106 v9 i102 v97 ?75 v49 ?59 ?201 ?34 ?46 ?93 i911 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v390 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -60435
stableDimension: 0
stamp: i32 [-60435] ⇊00000000ffff13ed ⇈00000000ffff13ed
stampKind: i32
value: int[-60435|0xffffffffffff13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i912 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i912  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i912 v317 v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
=== Succesors ===
next: a913 
=== Usages ===
i31 i218 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v929 #next: a913  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a913 v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a913 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
=== Succesors ===
next: v15 
=== Usages ===
v269 a268 v931 v941 v971 
=== Predecessor ===
i912 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v930 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid a268 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a913 
=== Succesors ===
=== Usages ===
?86 a193 a193 ?448 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a913  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a913 
=== Succesors ===
=== Usages ===
i915 i917 i918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a913  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
value: a913 
=== Succesors ===
=== Usages ===
v404 v395 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a913  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i451 v899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a522 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@2084224759
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@2084224759]
=== Inputs ===
=== Succesors ===
=== Usages ===
a518 a518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 24]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 i546 i57 i71 i155 v222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 208
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?75 ?59 ?201 ?34 ?182 ?93 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid a47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 3]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: int[10]{9, 99, 999, 9999, 99999, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[10]{9, 99, 999, 9999, 99999, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v932 v928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 v258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 i45 i62 v456 v97 i107 a570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i11 
=== Succesors ===
=== Usages ===
v100 v15 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.01965058868211167
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
a913 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 19]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v394 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -65035
stableDimension: 0
stamp: i32 [-65035] ⇊00000000ffff01f5 ⇈00000000ffff01f5
stampKind: i32
value: int[-65035|0xffffffffffff01f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 671
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
?63 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i911 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:440) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
?63 v65 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v61 
values: i11 i71 
=== Succesors ===
=== Usages ===
?63 v928 i186 i71 v238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v61 values: i11 i71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.7169880105877717
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v60 
=== Succesors ===
next: v400 
=== Usages ===
i62 v67 v72 v399 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v60 #next: v400  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?75 
values: i911 i62 
=== Succesors ===
=== Usages ===
v382 v397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?75 values: i911 i62  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i237 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v399 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v396 #falseSuccessor: v399  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i914 
=== Usages ===
i914 
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i914  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a47 
index: i62 
=== Succesors ===
=== Usages ===
i914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i914 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v396 
address: v928 
=== Succesors ===
next: v70 
=== Usages ===
v65 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v396 address: v928 #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i914 
y: i911 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i914 y: i911  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.6319453762390111
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i914 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4585023242285552828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?63 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?63 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i62 
y: i20 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i62 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v61 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v61 
=== Succesors ===
next: i915 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v61 #next: i915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i915 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
=== Succesors ===
next: v82 
=== Usages ===
i78 
=== Predecessor ===
v67 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i62 
y: i129 
=== Succesors ===
=== Usages ===
i215 i31 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i62 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i186 
y: i912 
=== Succesors ===
=== Usages ===
i203 i204 i78 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i186 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i31 
y: i915 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i31 y: i915  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i20 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9528794572946029
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
i915 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v80 #falseSuccessor: v81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B71" 
    xhandlers
    flags 
    probability 4581054232095786184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v80 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561679571434303217
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v61 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v61 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 239
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?63 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 29]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v403 #falseSuccessor: v401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69131
stableDimension: 0
stamp: i32 [-69131] ⇊00000000fffef1f5 ⇈00000000fffef1f5
stampKind: i32
value: int[-69131|0xfffffffffffef1f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-69131 - -60435] ⇊00000000fffe01e5 ⇈00000000fffff3fd
valueDescription: i32
=== Inputs ===
merge: v513 
values: i515 i521 i524 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v513 values: i515 i521 i524  <|@  <|@
f <@~|@floating>@ <|@
tid a518 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v513 
values: a516 a522 a522 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v513 values: a516 a522 a522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v514 v520 v523 
=== Succesors ===
next: v519 
=== Usages ===
i517 a518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v514 v520 v523 #next: v519  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.append(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 208
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i517 
speculation: a518 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i517 speculation: a518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 672
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
?46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B98" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v44 
values: i11 i57 
=== Succesors ===
=== Usages ===
?46 v932 i57 v258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v44 values: i11 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.7169880105877717
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v43 
=== Succesors ===
next: v409 
=== Usages ===
i45 v51 v56 v408 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v43 #next: v409  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?59 
values: i2 i45 
=== Succesors ===
=== Usages ===
v381 v406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: i2 i45  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i237 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i45 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v408 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v405 #falseSuccessor: v408  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i916 
=== Usages ===
i916 
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i916  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a47 
index: i45 
=== Succesors ===
=== Usages ===
i916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i916 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v405 
address: v932 
=== Succesors ===
next: v54 
=== Usages ===
v49 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v405 address: v932 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i916 
y: i2 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i916 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i45 
y: i20 
=== Succesors ===
=== Usages ===
i215 i218 i45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i45 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.6319453762390111
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
i916 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v50 #falseSuccessor: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610259495073274661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?46 #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v44 
=== Succesors ===
next: i917 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v44 #next: i917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i917 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
=== Succesors ===
next: v225 
=== Usages ===
i221 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i57 
y: i912 
=== Succesors ===
=== Usages ===
i221 i204 i203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i57 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i218 
y: i917 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i218 y: i917  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i221 
y: i20 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i221 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9528794572946029
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v223 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
i917 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v223 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B71" 
    xhandlers
    flags 
    probability 4606589338098898294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4586818163969976452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v199 
values: i31 i218 
=== Succesors ===
=== Usages ===
?93 i204 v274 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i31 i218  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v199 
values: i186 i57 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i186 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 
=== Succesors ===
next: v971 
=== Usages ===
i203 i215 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 #next: v971  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 672
stackSize: 1
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - - i215 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - - i215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?201 
object: a913 
=== Succesors ===
next: i85 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?201 object: a913 #next: i85  <|@  <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@62cb930d
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1 i203 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i203  <|@  <|@
tid ?93 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 674
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - i203 
=== Succesors ===
=== Usages ===
?86 ?448 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - i203  <|@  <|@
tid ?448 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?93 
values: - - a1 a268 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?93 values: - - a1 a268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v274 
stateDuring: ?448 
=== Succesors ===
next: v462 
=== Usages ===
?86 v555 j621 i546 v597 v456 v470 i492 a570 
=== Predecessor ===
v971 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v274 stateDuring: ?448 #next: v462  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?93 
values: - - a1 a268 i85 
=== Succesors ===
=== Usages ===
a570 v468 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?93 values: - - a1 a268 i85  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i11 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
i85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v461 #falseSuccessor: v457  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j549 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j549 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j594 
=== Usages ===
v943 v944 
=== Predecessor ===
v457 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j594  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j549 
index: - 
=== Succesors ===
=== Usages ===
j594 v596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
=== Succesors ===
next: j595 
=== Usages ===
j553 v945 v946 a569 v951 v947 v948 v949 v950 
=== Predecessor ===
j549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v943 #next: j595  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j549 
index: - 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
=== Succesors ===
next: v558 
=== Usages ===
v559 
=== Predecessor ===
j594 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v944 #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid i554 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i554 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i85 y: i554  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v598 v632 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v556 
=== Usages ===
=== Predecessor ===
j595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v557 #falseSuccessor: v556  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4586272528322596666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i85 
y: i20 
=== Succesors ===
=== Usages ===
i578 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i85 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i546 
y: i577 
=== Succesors ===
=== Usages ===
i548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i546 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i578 
y: i547 
=== Succesors ===
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i578 y: i547  <|@  <|@
f <@~|@floating>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i548 
=== Succesors ===
=== Usages ===
j553 v947 v948 v949 v950 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i548  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i64
=== Inputs ===
x: j552 
y: j594 
=== Succesors ===
=== Usages ===
v559 v596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j552 y: j594  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j553 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j595 y: j553  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v559 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v559 #trueSuccessor: v564 #falseSuccessor: v563  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4556458608971307826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4586211411249728644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
value: j553 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v943 value: j553 stateAfter: - lastLocationAccess: - #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: j594 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
address: v947 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v947 #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: j594 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
address: v948 
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v948 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: j594 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
address: v949 
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v949 #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: j594 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
address: v950 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v950 #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j594 
index: - 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
value: i85 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v945 value: i85 stateAfter: - lastLocationAccess: - #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j594 
index: - 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
value: j545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v946 value: j545 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j594 
index: - 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v951 
value: v620 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v951 value: v620 stateAfter: - lastLocationAccess: - #next: v568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a569 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j594 
=== Succesors ===
next: v571 
=== Usages ===
a574 
=== Predecessor ===
v568 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j594 #next: v571  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
a569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 4572082650853062706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4572571587436006885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v562 
=== Succesors ===
next: a570 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v562 #next: a570  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a570 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?86 
arguments: v544 i85 i11 
=== Succesors ===
next: v573 
=== Usages ===
a574 
=== Predecessor ===
v561 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?86 arguments: v544 i85 i11 #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
a570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v572 
values: a569 a570 
=== Succesors ===
=== Usages ===
v953 a499 v942 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: a569 a570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v571 v573 
=== Succesors ===
next: v762 
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v571 v573 #next: v762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i918 
=== Usages ===
j763 j765 
=== Predecessor ===
v572 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i918 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
=== Succesors ===
next: v635 
=== Usages ===
i492 v470 
=== Predecessor ===
v762 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i918 
y: i85 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i918 y: i85  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v470 
trueValue: i918 
falseValue: i85 
=== Succesors ===
=== Usages ===
j622 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v470 trueValue: i918 falseValue: i85  <|@  <|@
f <@~|@floating>@ <|@
tid j622 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i492 
=== Succesors ===
=== Usages ===
j827 v953 j626 v632 v759 j809 j815 j819 j823 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i492  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j622 
y: j545 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j622 y: j545  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j827 j878 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j782 j845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j822 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j823 j875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j790 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j791 j851 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j819 j872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j600 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j857 j799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j815 j869 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j863 j807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j808 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j809 j864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j581 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j852 v865 j792 j800 v810 j858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v633 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
i918 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v633 #falseSuccessor: v634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j622 
y: j808 
=== Succesors ===
=== Usages ===
v810 v812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j808  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j809 
y: j581 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j809 y: j581  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a574 
index: - 
=== Succesors ===
=== Usages ===
j765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v762 
address: v942 
=== Succesors ===
=== Usages ===
v954 v956 v958 v960 v962 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v762 address: v942  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a913 
=== Succesors ===
=== Usages ===
j763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a913  <|@  <|@
f <@~|@floating>@ <|@
tid j763 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v762 
address: v941 
=== Succesors ===
=== Usages ===
v955 v957 v959 v961 v963 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v762 address: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v810 
=== Succesors ===
trueSuccessor: v636 
falseSuccessor: v637 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v810 #trueSuccessor: v636 #falseSuccessor: v637  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
v636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B97" 
    successors "B37" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v640 
values: j581 j807 
=== Succesors ===
=== Usages ===
v963 j807 v962 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v640 values: j581 j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v639 
=== Succesors ===
next: v919 
=== Usages ===
v919 v644 v645 j800 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v639 #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j800 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v640 
address: v963 
=== Succesors ===
next: v896 
=== Usages ===
v896 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v640 address: v963 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j800 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: v919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: v919 stateAfter: - lastLocationAccess: - #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j800 
y: j243 
=== Succesors ===
=== Usages ===
j792 j800 v812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j809 
y: j807 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j809 y: j807  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v812 
=== Succesors ===
trueSuccessor: v644 
falseSuccessor: v646 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v812 #trueSuccessor: v644 #falseSuccessor: v646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v640 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v640 #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
v644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v649 
values: j581 j807 
=== Succesors ===
=== Usages ===
v961 j799 j783 v816 v960 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v649 values: j581 j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v648 v650 
=== Succesors ===
next: v672 
=== Usages ===
j792 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v648 v650 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j622 
y: j814 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j815 
y: j792 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j815 y: j792  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v671 
falseSuccessor: v670 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v671 #falseSuccessor: v670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v920 
=== Usages ===
v920 
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v920  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j792 
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v670 
address: v961 
=== Succesors ===
next: v894 
=== Usages ===
v894 
=== Predecessor ===
v670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v670 address: v961 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j792 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
value: v920 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v960 value: v920 stateAfter: - lastLocationAccess: - #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j792 
y: j600 
=== Succesors ===
=== Usages ===
j783 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j792 y: j600  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j783 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v660 
values: j799 j792 
=== Succesors ===
=== Usages ===
v959 j791 j775 v820 v958 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v660 values: j799 j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v659 v675 
=== Succesors ===
next: v678 
=== Usages ===
j783 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v659 v675 #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j622 
y: j818 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j819 
y: j783 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j819 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v677 
falseSuccessor: v676 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v677 #falseSuccessor: v676  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
v921 
=== Predecessor ===
v678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j783 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v676 
address: v959 
=== Succesors ===
next: v892 
=== Usages ===
v892 
=== Predecessor ===
v676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v676 address: v959 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j783 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: v921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: v921 stateAfter: - lastLocationAccess: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid j791 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j783 
y: j790 
=== Succesors ===
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j783 y: j790  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j775 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v664 
values: j791 j783 
=== Succesors ===
=== Usages ===
v957 j782 j766 v824 v956 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: j791 j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v681 
=== Succesors ===
next: v684 
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v681 #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid j823 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j622 
y: j822 
=== Succesors ===
=== Usages ===
v824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j822  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j823 
y: j775 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j823 y: j775  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v682 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v683 #falseSuccessor: v682  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
v922 
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j775 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v682 
address: v957 
=== Succesors ===
next: v890 
=== Usages ===
v890 
=== Predecessor ===
v682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v682 address: v957 #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j775 
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: v922 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: v922 stateAfter: - lastLocationAccess: - #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid j782 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j775 
y: j768 
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j775 y: j768  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v667 
values: j782 j775 
=== Succesors ===
=== Usages ===
v955 v828 v954 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v667 values: j782 j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v666 v687 
=== Succesors ===
next: v690 
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v666 v687 #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j622 
y: j826 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j827 
y: j766 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j827 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v688 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v689 #falseSuccessor: v688  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i923 
=== Usages ===
i923 
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i923  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j766 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i923 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v688 
address: v955 
=== Succesors ===
next: v888 
=== Usages ===
v888 
=== Predecessor ===
v688 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v688 address: v955 #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j766 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
value: i923 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
i923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v954 value: i923 stateAfter: - lastLocationAccess: - #next: v669  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v652 v669 v693 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v652 v669 v693 #next: v831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v700 
=== Usages ===
j833 
=== Predecessor ===
v653 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i85 
=== Succesors ===
=== Usages ===
j626 v759 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i85  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j622 
y: j621 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j622 y: j621  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v699 #falseSuccessor: v698  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a574 
index: j622 
=== Succesors ===
=== Usages ===
j833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: j622  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v831 
address: v953 
=== Succesors ===
=== Usages ===
v964 v965 v966 v967 v968 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v831 address: v953  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j621 
y: j622 
=== Succesors ===
=== Usages ===
j878 j864 j869 j872 j875 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j621 y: j622  <|@  <|@
f <@~|@floating>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j626 
y: j808 
=== Succesors ===
=== Usages ===
v865 v867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j808  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j581 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j864 y: j581  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v701 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v701 #falseSuccessor: v702  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j858 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v705 
values: j581 j863 
=== Succesors ===
=== Usages ===
v968 j863 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v705 values: j581 j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v704 
=== Succesors ===
next: v906 
=== Usages ===
j858 v708 v709 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v704 #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j858 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: v907 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: v907 stateAfter: - lastLocationAccess: - #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid j863 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j858 
y: j243 
=== Succesors ===
=== Usages ===
j852 j858 v867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j858 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j863 
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j864 y: j863  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v867 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v867 #trueSuccessor: v708 #falseSuccessor: v710  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v705 
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v705 #next: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v713 
values: j581 j863 
=== Succesors ===
=== Usages ===
v967 j857 j846 v870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v713 values: j581 j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v714 
=== Succesors ===
next: v735 
=== Usages ===
j852 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v714 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j626 
y: j814 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j869 
y: j852 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j869 y: j852  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v733 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v734 #falseSuccessor: v733  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j852 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
value: v910 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 value: v910 stateAfter: - lastLocationAccess: - #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j852 
y: j600 
=== Succesors ===
=== Usages ===
j846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j852 y: j600  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j846 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v724 
values: j857 j852 
=== Succesors ===
=== Usages ===
v966 j851 j840 v873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v724 values: j857 j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v723 v738 
=== Succesors ===
next: v741 
=== Usages ===
j846 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v723 v738 #next: v741  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j626 
y: j818 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j846 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j872 y: j846  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v740 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v740 #falseSuccessor: v739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j846 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j846  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: v909 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: v909 stateAfter: - lastLocationAccess: - #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid j851 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j846 
y: j790 
=== Succesors ===
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j846 y: j790  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v903 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j840 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v727 
values: j851 j846 
=== Succesors ===
=== Usages ===
v965 j845 j834 v876 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v727 values: j851 j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v726 v744 
=== Succesors ===
next: v747 
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v726 v744 #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid j875 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j626 
y: j822 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j822  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j875 
y: j840 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j875 y: j840  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v876 
=== Succesors ===
trueSuccessor: v746 
falseSuccessor: v745 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v876 #trueSuccessor: v746 #falseSuccessor: v745  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j840 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j840  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: v908 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: v908 stateAfter: - lastLocationAccess: - #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid j845 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j840 
y: j768 
=== Succesors ===
=== Usages ===
j834 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j840 y: j768  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v730 
values: j845 j840 
=== Succesors ===
=== Usages ===
v964 v879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v730 values: j845 j840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v729 v750 
=== Succesors ===
next: v753 
=== Usages ===
j834 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v729 v750 #next: v753  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j626 
y: j826 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j878 
y: j834 
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j878 y: j834  <|@  <|@
f <@*|@fixed>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v879 
=== Succesors ===
trueSuccessor: v752 
falseSuccessor: v751 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v879 #trueSuccessor: v752 #falseSuccessor: v751  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v756  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
v752 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j834 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
value: i449 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v964 value: i449 stateAfter: - lastLocationAccess: - #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
v698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v716 v732 v756 
=== Succesors ===
next: a499 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v716 v732 v756 #next: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a574 
=== Succesors ===
next: v281 
=== Usages ===
a193 a280 
=== Predecessor ===
v717 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a574 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid a280 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: Compress
stamp: n! -
=== Inputs ===
value: a499 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
value: a280 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j610 
=== Usages ===
=== Predecessor ===
a499 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v930 value: a280 stateAfter: - lastLocationAccess: - #next: j610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v616 
=== Usages ===
j612 
=== Predecessor ===
v281 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j610 
y: i611 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j610 y: i611  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j612 
index: j615 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j615  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: i617 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
j610 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: i617 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B10" "B70" "B21" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a193 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v94 
values: a268 a499 a268 
=== Succesors ===
=== Usages ===
?142 v972 ?148 ?113 ?162 v934 v937 v938 v940 v935 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v94 values: a268 a499 a268  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v94 
values: i31 i203 i218 
=== Succesors ===
=== Usages ===
?34 ?182 v306 v317 i112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v94 values: i31 i203 i218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v95 v96 v226 
=== Succesors ===
next: v972 
=== Usages ===
a193 i204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v95 v96 v226 #next: v972  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - i204 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - i204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?34 
object: a193 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?34 object: a193 #next: v100  <|@  <|@
tid ?182 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 - - i204 
=== Succesors ===
=== Usages ===
?162 ?113 ?142 ?148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 - - i204  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.02208605257476881
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4582023092649756032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:440) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606983485323725780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v104 
values: i2 i102 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i2 i102  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v104 
values: i11 i101 
=== Succesors ===
=== Usages ===
v171 ?113 ?148 ?162 ?142 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i11 i101  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v104 
values: i449 i450 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i449 i450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v103 v105 
=== Succesors ===
next: i924 
=== Usages ===
i106 i107 i451 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v103 v105 #next: i924  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a193 
index: - 
=== Succesors ===
=== Usages ===
i924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i924 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
=== Succesors ===
next: v109 
=== Usages ===
v332 v345 v297 v308 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v937 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i179 i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 i158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
i924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B92" 
    successors "B76" "B89" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607291006849916395
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v110 
values: i106 i189 
=== Succesors ===
=== Usages ===
?113 v115 i146 i195 i132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v110 values: i106 i189  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v110 
values: i204 i179 
=== Succesors ===
=== Usages ===
?113 i147 i134 i179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v110 values: i204 i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0241113906394002
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v109 
=== Succesors ===
next: v121 
=== Usages ===
i111 i112 v116 v143 v445 v435 v440 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v109 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i114 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i111 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9764562811625928
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v116 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v110 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v110 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B85" 
    successors "B78" "B87" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v145 
values: i111 i152 
=== Succesors ===
=== Usages ===
?148 i150 i157 ?162 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v145 values: i111 i152  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v145 
values: i112 i158 
=== Succesors ===
=== Usages ===
?148 i158 i387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v145 values: i112 i158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.2758614963049073
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v144 
=== Succesors ===
next: v422 
=== Usages ===
i146 i147 v165 v168 v426 v421 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v144 #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i146 
y: i149 
=== Succesors ===
=== Usages ===
i152 v164 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i146 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i150 
y: i151 
=== Succesors ===
=== Usages ===
i146 i154 i155 ?162 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i150 y: i151  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i152 
y: i153 
=== Succesors ===
=== Usages ===
i156 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i152 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i152 
y: i20 
=== Succesors ===
=== Usages ===
i156 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i152 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i154 
y: i155 
=== Succesors ===
=== Usages ===
i157 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i154 y: i155  <|@  <|@
f <@~|@floating>@ <|@
tid i157 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i146 
y: i156 
=== Succesors ===
=== Usages ===
v933 ?162 v283 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i146 y: i156  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i157 
y: i282 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i157 y: i282  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v421 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v418 #falseSuccessor: v421  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B86" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
i925 
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i147 
y: i133 
=== Succesors ===
=== Usages ===
i147 v934 ?162 v297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i147 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i158 
y: i924 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i158 y: i924  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v423 #falseSuccessor: v426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i925 
=== Usages ===
v305 
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i925  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a159 
index: i157 
=== Succesors ===
=== Usages ===
i925 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a159 index: i157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i925 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v418 
address: v933 
=== Succesors ===
next: v305 
=== Usages ===
v305 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v418 address: v933 #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a193 
index: i158 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: i158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v423 
address: v934 
value: i925 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
i925 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v423 address: v934 value: i925 stateAfter: - lastLocationAccess: - #next: v170  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?182 
values: i146 - a193 i152 i157 i158 i107 
=== Succesors ===
=== Usages ===
v384 v429 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?182 values: i146 - a193 i152 i157 i158 i107  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
x: i150 
y: i163 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i150 y: i163  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.43939404995585263
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v145 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v145 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i11 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i107 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9779119300489093
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:676) [bci: 57]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
value: i204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v929 value: i204 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i147 
y: i178 
=== Succesors ===
=== Usages ===
v935 v308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i147 y: i178  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i924 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i387 y: i924  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v428 #falseSuccessor: v430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
v316 
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a193 
index: i387 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: i387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v428 
address: v935 
value: i451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v428 address: v935 value: i451 stateAfter: - lastLocationAccess: - #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:676) [bci: 57]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
value: i204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v929 value: i204 stateAfter: - lastLocationAccess: - #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 309
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?162 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?162  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608424788531982056
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?162 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?162 #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v145 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v145 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i542 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -76315
stableDimension: 0
stamp: i32 [-76315] ⇊00000000fffed5e5 ⇈00000000fffed5e5
stampKind: i32
value: int[-76315|0xfffffffffffed5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v145 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v145 #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i537 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72731
stableDimension: 0
stamp: i32 [-72731] ⇊00000000fffee3e5 ⇈00000000fffee3e5
stampKind: i32
value: int[-72731|0xfffffffffffee3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i538 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-76315 - -72731] ⇊00000000fffec1e5 ⇈00000000fffef7e5
valueDescription: i32
=== Inputs ===
merge: v535 
values: i537 i542 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v535 values: i537 i542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v536 v541 
=== Succesors ===
next: v540 
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v536 v541 #next: v540  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: ?182 
values: i146 - a193 - - i147 i107 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?182 values: i146 - a193 - - i147 i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?148 
actionAndReason: i538 
speculation: a516 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?148 actionAndReason: i538 speculation: a516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:445) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i111 
y: i187 
=== Succesors ===
=== Usages ===
i189 i970 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i111 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 34]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i195 
y: i126 
=== Succesors ===
=== Usages ===
?142 i111 i125 ?142 i130 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i195 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i189 
y: i124 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i189 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i970 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i195 
y: i969 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i195 y: i969  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i125 
y: i970 
=== Succesors ===
=== Usages ===
i131 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i125 y: i970  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i189 
y: i129 
=== Succesors ===
=== Usages ===
i131 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i189 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 40]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i128 
y: i130 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 41]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i111 
y: i131 
=== Succesors ===
=== Usages ===
v939 ?142 v319 v936 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i111 y: i131  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i318 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i318  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v432 #falseSuccessor: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
i927 i926 
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i112 
y: i133 
=== Succesors ===
=== Usages ===
v938 v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i112 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i134 
y: i924 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i134 y: i924  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v437 #falseSuccessor: v440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
v340 
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i112 
y: i178 
=== Succesors ===
=== Usages ===
i112 v940 ?142 v345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i112 y: i178  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i924 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i179 y: i924  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v345 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v345 #trueSuccessor: v442 #falseSuccessor: v445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B75" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i926 
=== Usages ===
v353 
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i926  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a135 
index: i132 
=== Succesors ===
=== Usages ===
i926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i926 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v432 
address: v936 
=== Succesors ===
next: v340 
=== Usages ===
v340 
=== Predecessor ===
v442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v432 address: v936 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a193 
index: i134 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v437 
address: v938 
value: i926 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i927 
=== Usages ===
=== Predecessor ===
i926 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v437 address: v938 value: i926 stateAfter: - lastLocationAccess: - #next: i927  <|@  <|@
f <@~|@floating>@ <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a139 
index: i132 
=== Succesors ===
=== Usages ===
i927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 70]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v432 
address: v939 
=== Succesors ===
next: v353 
=== Usages ===
v353 
=== Predecessor ===
v340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v432 address: v939 #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a193 
index: i179 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v442 
address: v940 
value: i927 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
i927 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v442 address: v940 value: i927 stateAfter: - lastLocationAccess: - #next: v383  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rethrowException: false
sourceFile: Integer.java
sourceLine: 450
stackSize: 0
=== Inputs ===
outerFrameState: ?182 
values: i189 - a193 i189 i132 i179 i107 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?182 values: i189 - a193 i189 i132 i179 i107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?142 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?142 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v110 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v110 
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v110 #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88603
stableDimension: 0
stamp: i32 [-88603] ⇊00000000fffea5e5 ⇈00000000fffea5e5
stampKind: i32
value: int[-88603|0xfffffffffffea5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v110 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v110 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85275
stableDimension: 0
stamp: i32 [-85275] ⇊00000000fffeb2e5 ⇈00000000fffeb2e5
stampKind: i32
value: int[-85275|0xfffffffffffeb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v110 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v110 #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81947
stableDimension: 0
stamp: i32 [-81947] ⇊00000000fffebfe5 ⇈00000000fffebfe5
stampKind: i32
value: int[-81947|0xfffffffffffebfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i528 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-88603 - -81947] ⇊00000000fffea0e5 ⇈00000000fffebfe5
valueDescription: i32
=== Inputs ===
merge: v525 
values: i527 i532 i534 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v525 values: i527 i532 i534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v526 v531 v533 
=== Succesors ===
next: v530 
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v526 v531 v533 #next: v530  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 444
stackSize: 0
=== Inputs ===
outerFrameState: ?182 
values: i111 - a193 - - i112 i107 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?182 values: i111 - a193 - - i112 i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?113 
actionAndReason: i528 
speculation: a516 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?113 actionAndReason: i528 speculation: a516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v640 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v44 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v44 #next: v406  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 259
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?46  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid a516 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a518 v530 v540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?448 ?42 v7 ?75 ?59 v228 v929 ?93 ?34 ?201 ?86 v274 v930 ?182 j610 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i106 v9 i102 v97 ?75 v49 ?59 ?201 ?34 ?46 ?93 i911 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[-2147483648|0xffffffff80000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v390 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1de48d3b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
result int[-60435|0xffffffffffff13ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -60435
stableDimension: 0
stamp: i32 [-60435] ⇊00000000ffff13ed ⇈00000000ffff13ed
stampKind: i32
value: int[-60435|0xffffffffffff13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-60435|0xffffffffffff13ed], Object[null]] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i912 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i912  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i912 v317 v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i912 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
=== Succesors ===
next: a913 
=== Usages ===
i31 i218 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v929 #next: a913  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a913 v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a913 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
=== Succesors ===
next: v15 
=== Usages ===
v269 a268 v931 v941 v971 
=== Predecessor ===
i912 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v930 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid a268 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a913 
=== Succesors ===
=== Usages ===
?86 a193 a193 ?448 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a913  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a913 
=== Succesors ===
=== Usages ===
i915 i917 i918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a913  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
value: a913 
=== Succesors ===
=== Usages ===
v404 v395 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a913  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i451 v899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a522 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@2084224759
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@2084224759]
=== Inputs ===
=== Succesors ===
=== Usages ===
a518 a518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 24]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 i546 i57 i71 i155 v222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 208
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?75 ?59 ?201 ?34 ?182 ?93 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid a47 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 3]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: int[10]{9, 99, 999, 9999, 99999, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[10]{9, 99, 999, 9999, 99999, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v932 v928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 v258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 i45 i62 v456 v97 i107 a570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i11 
=== Succesors ===
=== Usages ===
v100 v15 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.01965058868211167
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
a913 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01965058868211167 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 19]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v394 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
result int[-65035|0xffffffffffff01f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -65035
stableDimension: 0
stamp: i32 [-65035] ⇊00000000ffff01f5 ⇈00000000ffff01f5
stampKind: i32
value: int[-65035|0xffffffffffff01f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-65035|0xffffffffffff01f5], v5|QWORD[.]] destination: B4 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 671
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
?63 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i911 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:440) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
?63 v65 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i62 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v61 
values: i11 i71 
=== Succesors ===
=== Usages ===
?63 v928 i186 i71 v238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v61 values: i11 i71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.7169880105877717
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v60 
=== Succesors ===
next: v400 
=== Usages ===
i62 v67 v72 v399 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v60 #next: v400  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?75 
values: i911 i62 
=== Succesors ===
=== Usages ===
v382 v397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?75 values: i911 i62  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i237 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v399 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v396 #falseSuccessor: v399  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i914 
=== Usages ===
i914 
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i914  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
result [v6|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a47 
index: i62 
=== Succesors ===
=== Usages ===
i914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i914 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v396 
address: v928 
=== Succesors ===
next: v70 
=== Usages ===
v65 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v396 address: v928 #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i914 
y: i911 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i914 y: i911  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.6319453762390111
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i914 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v6|QWORD[.] + v8|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4585023242285552828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?63 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?63 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i62 
y: i20 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i62 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v61 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 21, 2] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v61 
=== Succesors ===
next: i915 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v61 #next: i915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i915 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
=== Succesors ===
next: v82 
=== Usages ===
i78 
=== Predecessor ===
v67 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i62 
y: i129 
=== Succesors ===
=== Usages ===
i215 i31 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i62 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i186 
y: i912 
=== Succesors ===
=== Usages ===
i203 i204 i78 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i186 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i31 
y: i915 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i31 y: i915  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i20 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9528794572946029
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
i915 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v80 #falseSuccessor: v81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: [v3|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B71" 
    xhandlers
    flags 
    probability 4581054232095786184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v80 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.], v11|DWORD] destination: B10 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561679571434303217
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD, v10|DWORD] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v61 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v61 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 239
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?63 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -61211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:2, 21, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 29]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v403 #falseSuccessor: v401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
result int[-69131|0xfffffffffffef1f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69131
stableDimension: 0
stamp: i32 [-69131] ⇊00000000fffef1f5 ⇈00000000fffef1f5
stampKind: i32
value: int[-69131|0xfffffffffffef1f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69131|0xfffffffffffef1f5], v5|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i517 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-69131 - -60435] ⇊00000000fffe01e5 ⇈00000000fffff3fd
valueDescription: i32
=== Inputs ===
merge: v513 
values: i515 i521 i524 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v513 values: i515 i521 i524  <|@  <|@
f <@~|@floating>@ <|@
tid a518 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v513 
values: a516 a522 a522 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v513 values: a516 a522 a522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v514 v520 v523 
=== Succesors ===
next: v519 
=== Usages ===
i517 a518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v514 v520 v523 #next: v519  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.append(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 208
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i517 
speculation: a518 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i517 speculation: a518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD, v14|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v14|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 672
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
?46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B98" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i45 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v44 
values: i11 i57 
=== Succesors ===
=== Usages ===
?46 v932 i57 v258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v44 values: i11 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.7169880105877717
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v43 
=== Succesors ===
next: v409 
=== Usages ===
i45 v51 v56 v408 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v43 #next: v409  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?59 
values: i2 i45 
=== Succesors ===
=== Usages ===
v381 v406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: i2 i45  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i237 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i45 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v408 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v405 #falseSuccessor: v408  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i916 
=== Usages ===
i916 
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i916  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
result [v6|QWORD[.] + v15|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a47 
index: i45 
=== Succesors ===
=== Usages ===
i916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i916 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v405 
address: v932 
=== Succesors ===
next: v54 
=== Usages ===
v49 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v405 address: v932 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i916 
y: i2 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i916 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i45 
y: i20 
=== Succesors ===
=== Usages ===
i215 i218 i45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i45 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.6319453762390111
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
i916 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v50 #falseSuccessor: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v6|QWORD[.] + v15|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610259495073274661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?46 #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v15|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 30, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v44 
=== Succesors ===
next: i917 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v44 #next: i917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i917 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
=== Succesors ===
next: v225 
=== Usages ===
i221 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i57 
y: i912 
=== Succesors ===
=== Usages ===
i221 i204 i203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i57 y: i912  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i218 
y: i917 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i218 y: i917  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i221 
y: i20 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i221 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9528794572946029
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v223 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
i917 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v223 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: [v3|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B71" 
    xhandlers
    flags 
    probability 4606589338098898294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.], v17|DWORD] destination: B21 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4586818163969976452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, v16|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i203 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v199 
values: i31 i218 
=== Succesors ===
=== Usages ===
?93 i204 v274 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i31 i218  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v199 
values: i186 i57 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i186 i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 
=== Succesors ===
next: v971 
=== Usages ===
i203 i215 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 #next: v971  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 672
stackSize: 1
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - - i215 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - - i215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?201 
object: a913 
=== Succesors ===
next: i85 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?201 object: a913 #next: i85  <|@  <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@62cb930d
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1 i203 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i203  <|@  <|@
tid ?93 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 674
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - i203 
=== Succesors ===
=== Usages ===
?86 ?448 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - i203  <|@  <|@
tid ?448 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?93 
values: - - a1 a268 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?93 values: - - a1 a268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i85 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v274 
stateDuring: ?448 
=== Succesors ===
next: v462 
=== Usages ===
?86 v555 j621 i546 v597 v456 v470 i492 a570 
=== Predecessor ===
v971 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v274 stateDuring: ?448 #next: v462  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?93 
values: - - a1 a268 i85 
=== Succesors ===
=== Usages ===
a570 v468 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?93 values: - - a1 a268 i85  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i11 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
i85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v461 #falseSuccessor: v457  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: v20|DWORD 
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:33, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v0|QWORD[.] v4|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: v0|QWORD[.] v1|DWORD - v19|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 43, 2] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -119905 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v0|QWORD[.] v4|QWORD[.] v21|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: v0|QWORD[.] v1|DWORD - v19|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j549 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j549 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j594 
=== Usages ===
v943 v944 
=== Predecessor ===
v457 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j594  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j549 
index: - 
=== Succesors ===
=== Usages ===
j594 v596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j594 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
=== Succesors ===
next: j595 
=== Usages ===
j553 v945 v946 a569 v951 v947 v948 v949 v950 
=== Predecessor ===
j549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v943 #next: j595  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j549 
index: - 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j595 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
=== Succesors ===
next: v558 
=== Usages ===
v559 
=== Predecessor ===
j594 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v944 #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid i554 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i554 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i85 y: i554  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v598 v632 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v556 
=== Usages ===
=== Predecessor ===
j595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v557 #falseSuccessor: v556  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4586272528322596666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i546 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i85 
y: i20 
=== Succesors ===
=== Usages ===
i578 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i85 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i546 
y: i577 
=== Succesors ===
=== Usages ===
i548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i546 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i578 
y: i547 
=== Succesors ===
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i578 y: i547  <|@  <|@
f <@~|@floating>@ <|@
tid j552 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i548 
=== Succesors ===
=== Usages ===
j553 v947 v948 v949 v950 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i548  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i64
=== Inputs ===
x: j552 
y: j594 
=== Succesors ===
=== Usages ===
v559 v596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j552 y: j594  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j553 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j595 y: j553  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v559 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v559 #trueSuccessor: v564 #falseSuccessor: v563  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SHL v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v24|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND v25|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4556458608971307826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4586211411249728644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
value: j553 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v943 value: j553 stateAfter: - lastLocationAccess: - #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
result [v27|QWORD + v22|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: j594 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
address: v947 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v947 #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
result [v27|QWORD + v22|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: j594 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
address: v948 
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v948 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
result [v27|QWORD + v22|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: j594 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
address: v949 
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v949 #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
result [v27|QWORD + v22|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: j594 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
address: v950 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v950 #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
result [v22|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j594 
index: - 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
value: i85 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v945 value: i85 stateAfter: - lastLocationAccess: - #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
result [v22|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j594 
index: - 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
value: j545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v946 value: j545 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
result [v22|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j594 
index: - 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v951 
value: v620 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v951 value: v620 stateAfter: - lastLocationAccess: - #next: v568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a569 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a569 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j594 
=== Succesors ===
next: v571 
=== Usages ===
a574 
=== Predecessor ===
v568 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j594 #next: v571  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
a569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 4572082650853062706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4572571587436006885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v562 
=== Succesors ===
next: a570 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v562 #next: a570  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a570 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?86 
arguments: v544 i85 i11 
=== Succesors ===
next: v573 
=== Usages ===
a574 
=== Predecessor ===
v561 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?86 arguments: v544 i85 i11 #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
a570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v0|QWORD[.] v4|QWORD[.] v21|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: v0|QWORD[.] v1|DWORD - v19|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 43, 2] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a574 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v572 
values: a569 a570 
=== Succesors ===
=== Usages ===
v953 a499 v942 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: a569 a570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v571 v573 
=== Succesors ===
next: v762 
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v571 v573 #next: v762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i918 
=== Usages ===
j763 j765 
=== Predecessor ===
v572 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i918 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
=== Succesors ===
next: v635 
=== Usages ===
i492 v470 
=== Predecessor ===
v762 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v931 #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i918 
y: i85 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i918 y: i85  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v470 
trueValue: i918 
falseValue: i85 
=== Succesors ===
=== Usages ===
j622 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v470 trueValue: i918 falseValue: i85  <|@  <|@
f <@~|@floating>@ <|@
tid j622 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i492 
=== Succesors ===
=== Usages ===
j827 v953 j626 v632 v759 j809 j815 j819 j823 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i492  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j622 
y: j545 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j622 y: j545  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j827 j878 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j782 j845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j822 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j823 j875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j790 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j791 j851 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j819 j872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j600 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j857 j799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j815 j869 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j863 j807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j808 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j809 j864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j581 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j852 v865 j792 j800 v810 j858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v633 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
i918 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v633 #falseSuccessor: v634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = CMOVE (falseValue: v21|DWORD, ~trueValue: v33|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j622 
y: j808 
=== Succesors ===
=== Usages ===
v810 v812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j808  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j809 
y: j581 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j809 y: j581  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
result [v32|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a574 
index: - 
=== Succesors ===
=== Usages ===
j765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v762 
address: v942 
=== Succesors ===
=== Usages ===
v954 v956 v958 v960 v962 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v762 address: v942  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a913 
=== Succesors ===
=== Usages ===
j763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a913  <|@  <|@
f <@~|@floating>@ <|@
tid j763 <|@
result v38|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v762 
address: v941 
=== Succesors ===
=== Usages ===
v955 v957 v959 v961 v963 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v762 address: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v810 
=== Succesors ===
trueSuccessor: v636 
falseSuccessor: v637 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v810 #trueSuccessor: v636 #falseSuccessor: v637  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = LEA [v32|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
v636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B97" 
    successors "B37" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j800 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v640 
values: j581 j807 
=== Succesors ===
=== Usages ===
v963 j807 v962 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v640 values: j581 j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v639 
=== Succesors ===
next: v919 
=== Usages ===
v919 v644 v645 j800 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v639 #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [v38|QWORD[*] + v39|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j800 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v919 <|@
result v40|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v640 
address: v963 
=== Succesors ===
next: v896 
=== Usages ===
v896 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v640 address: v963 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v37|QWORD[.] + v39|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j800 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: v919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: v919 stateAfter: - lastLocationAccess: - #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j800 
y: j243 
=== Succesors ===
=== Usages ===
j792 j800 v812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j809 
y: j807 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j809 y: j807  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v812 
=== Succesors ===
trueSuccessor: v644 
falseSuccessor: v646 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v812 #trueSuccessor: v644 #falseSuccessor: v646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V256_WORD = H [v38|QWORD[*] + v39|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v39|QWORD * 2], input: v40|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v39|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v640 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v640 #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
v644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j792 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v649 
values: j581 j807 
=== Succesors ===
=== Usages ===
v961 j799 j783 v816 v960 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v649 values: j581 j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v648 v650 
=== Succesors ===
next: v672 
=== Usages ===
j792 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v648 v650 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j622 
y: j814 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j815 
y: j792 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j815 y: j792  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v671 
falseSuccessor: v670 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v671 #falseSuccessor: v670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v920 
=== Usages ===
v920 
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v920  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v38|QWORD[*] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j792 
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
result v44|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v670 
address: v961 
=== Succesors ===
next: v894 
=== Usages ===
v894 
=== Predecessor ===
v670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v670 address: v961 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [v37|QWORD[.] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j792 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
value: v920 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v960 value: v920 stateAfter: - lastLocationAccess: - #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j792 
y: j600 
=== Succesors ===
=== Usages ===
j783 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j792 y: j600  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|V128_WORD = H [v38|QWORD[*] + v42|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v42|QWORD * 2], input: v44|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j783 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v660 
values: j799 j792 
=== Succesors ===
=== Usages ===
v959 j791 j775 v820 v958 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v660 values: j799 j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v659 v675 
=== Succesors ===
next: v678 
=== Usages ===
j783 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v659 v675 #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j622 
y: j818 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j819 
y: j783 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j819 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v677 
falseSuccessor: v676 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v677 #falseSuccessor: v676  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v35|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
v921 
=== Predecessor ===
v678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [v38|QWORD[*] + v46|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j783 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
result v48|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v676 
address: v959 
=== Succesors ===
next: v892 
=== Usages ===
v892 
=== Predecessor ===
v676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v676 address: v959 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [v37|QWORD[.] + v46|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j783 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: v921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: v921 stateAfter: - lastLocationAccess: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid j791 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j783 
y: j790 
=== Succesors ===
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j783 y: j790  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|V64_WORD = H [v38|QWORD[*] + v46|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v46|QWORD * 2], input: v48|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j775 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v664 
values: j791 j783 
=== Succesors ===
=== Usages ===
v957 j782 j766 v824 v956 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: j791 j783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v681 
=== Succesors ===
next: v684 
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v681 #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid j823 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j622 
y: j822 
=== Succesors ===
=== Usages ===
v824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j822  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j823 
y: j775 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j823 y: j775  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v682 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v683 #falseSuccessor: v682  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v35|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
v922 
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [v38|QWORD[*] + v50|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j775 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v922 <|@
result v52|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v682 
address: v957 
=== Succesors ===
next: v890 
=== Usages ===
v890 
=== Predecessor ===
v682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v682 address: v957 #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [v37|QWORD[.] + v50|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j775 
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: v922 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: v922 stateAfter: - lastLocationAccess: - #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid j782 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j775 
y: j768 
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j775 y: j768  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V32_WORD = H [v38|QWORD[*] + v50|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v50|QWORD * 2], input: v52|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j766 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v667 
values: j782 j775 
=== Succesors ===
=== Usages ===
v955 v828 v954 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v667 values: j782 j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v666 v687 
=== Succesors ===
next: v690 
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v666 v687 #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j622 
y: j826 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j827 
y: j766 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j827 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v688 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v689 #falseSuccessor: v688  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v35|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i923 
=== Usages ===
i923 
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i923  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [v38|QWORD[*] + v54|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j763 
index: j766 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i923 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v688 
address: v955 
=== Succesors ===
next: v888 
=== Usages ===
v888 
=== Predecessor ===
v688 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v688 address: v955 #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [v37|QWORD[.] + v54|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j765 
index: j766 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j765 index: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
value: i923 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
i923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v954 value: i923 stateAfter: - lastLocationAccess: - #next: v669  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVSX [v38|QWORD[*] + v54|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + v54|QWORD * 2], y: v56|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v652 v669 v693 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v652 v669 v693 #next: v831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v700 
=== Usages ===
j833 
=== Predecessor ===
v653 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i85 
=== Succesors ===
=== Usages ===
j626 v759 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i85  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j622 
y: j621 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j622 y: j621  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v699 #falseSuccessor: v698  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result [v32|QWORD[.] + v35|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a574 
index: j622 
=== Succesors ===
=== Usages ===
j833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: j622  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v831 
address: v953 
=== Succesors ===
=== Usages ===
v964 v965 v966 v967 v968 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v831 address: v953  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j621 
y: j622 
=== Succesors ===
=== Usages ===
j878 j864 j869 j872 j875 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j621 y: j622  <|@  <|@
f <@~|@floating>@ <|@
tid j864 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j626 
y: j808 
=== Succesors ===
=== Usages ===
v865 v867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j808  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j581 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j864 y: j581  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v701 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v701 #falseSuccessor: v702  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v32|QWORD[.] + v35|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v57|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v59|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
result v61|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j858 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v705 
values: j581 j863 
=== Succesors ===
=== Usages ===
v968 j863 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v705 values: j581 j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v704 
=== Succesors ===
next: v906 
=== Usages ===
j858 v708 v709 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v704 #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [v58|QWORD[.] + v62|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j858 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: v907 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: v907 stateAfter: - lastLocationAccess: - #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid j863 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j858 
y: j243 
=== Succesors ===
=== Usages ===
j852 j858 v867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j858 y: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j863 
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j864 y: j863  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v867 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v867 #trueSuccessor: v708 #falseSuccessor: v710  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v62|QWORD * 2], input: v61|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v62|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v705 
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v705 #next: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j852 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v713 
values: j581 j863 
=== Succesors ===
=== Usages ===
v967 j857 j846 v870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v713 values: j581 j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v714 
=== Succesors ===
next: v735 
=== Usages ===
j852 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v714 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j626 
y: j814 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j869 
y: j852 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j869 y: j852  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v733 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v734 #falseSuccessor: v733  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [v58|QWORD[.] + v64|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j852 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
result v66|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
value: v910 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 value: v910 stateAfter: - lastLocationAccess: - #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j852 
y: j600 
=== Succesors ===
=== Usages ===
j846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j852 y: j600  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v64|QWORD * 2], input: v66|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v64|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j846 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v724 
values: j857 j852 
=== Succesors ===
=== Usages ===
v966 j851 j840 v873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v724 values: j857 j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v723 v738 
=== Succesors ===
next: v741 
=== Usages ===
j846 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v723 v738 #next: v741  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j626 
y: j818 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j846 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j872 y: j846  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v740 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v740 #falseSuccessor: v739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v59|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [v58|QWORD[.] + v68|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j846 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j846  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
result v70|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: v909 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: v909 stateAfter: - lastLocationAccess: - #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid j851 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j846 
y: j790 
=== Succesors ===
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j846 y: j790  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v903 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v68|QWORD * 2], input: v70|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v68|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j840 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v727 
values: j851 j846 
=== Succesors ===
=== Usages ===
v965 j845 j834 v876 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v727 values: j851 j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v726 v744 
=== Succesors ===
next: v747 
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v726 v744 #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid j875 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j626 
y: j822 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j822  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j875 
y: j840 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j875 y: j840  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v876 
=== Succesors ===
trueSuccessor: v746 
falseSuccessor: v745 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v876 #trueSuccessor: v746 #falseSuccessor: v745  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v59|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v58|QWORD[.] + v72|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j840 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j840  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
result v74|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: v908 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: v908 stateAfter: - lastLocationAccess: - #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid j845 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j840 
y: j768 
=== Succesors ===
=== Usages ===
j834 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j840 y: j768  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v72|QWORD * 2], input: v74|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j834 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v730 
values: j845 j840 
=== Succesors ===
=== Usages ===
v964 v879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v730 values: j845 j840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v729 v750 
=== Succesors ===
next: v753 
=== Usages ===
j834 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v729 v750 #next: v753  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j626 
y: j826 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j878 
y: j834 
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j878 y: j834  <|@  <|@
f <@*|@fixed>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v879 
=== Succesors ===
trueSuccessor: v752 
falseSuccessor: v751 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v879 #trueSuccessor: v752 #falseSuccessor: v751  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = DEC v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v756  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
v752 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [v58|QWORD[.] + v76|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j833 
index: j834 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
value: i449 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v964 value: i449 stateAfter: - lastLocationAccess: - #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v76|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
v698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v716 v732 v756 
=== Succesors ===
next: a499 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v716 v732 v756 #next: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a499 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a574 
=== Succesors ===
next: v281 
=== Usages ===
a193 a280 
=== Predecessor ===
v717 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a574 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid a280 <|@
result v78|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: Compress
stamp: n! -
=== Inputs ===
value: a499 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
value: a280 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j610 
=== Usages ===
=== Predecessor ===
a499 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v930 value: a280 stateAfter: - lastLocationAccess: - #next: j610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j610 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v616 
=== Usages ===
j612 
=== Predecessor ===
v281 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
result v79|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j610 
y: i611 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j610 y: i611  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result [v79|QWORD[*] + v80|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j612 
index: j615 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j612 index: j615  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: i617 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
j610 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: i617 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[.] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v78|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v79|QWORD[*] + v80|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.], v19|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B10" "B70" "B21" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a193 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v94 
values: a268 a499 a268 
=== Succesors ===
=== Usages ===
?142 v972 ?148 ?113 ?162 v934 v937 v938 v940 v935 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v94 values: a268 a499 a268  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v94 
values: i31 i203 i218 
=== Succesors ===
=== Usages ===
?34 ?182 v306 v317 i112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v94 values: i31 i203 i218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v95 v96 v226 
=== Succesors ===
next: v972 
=== Usages ===
a193 i204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v95 v96 v226 #next: v972  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 i2 - i204 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 i2 - i204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?34 
object: a193 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?34 object: a193 #next: v100  <|@  <|@
tid ?182 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: ?42 
values: a1 - - i204 
=== Succesors ===
=== Usages ===
?162 ?113 ?142 ?148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a1 - - i204  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.02208605257476881
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.], v82|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46]
locals: v0|QWORD[.] v1|DWORD - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [v81|QWORD[.]] state [bci:46, 2] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02208605257476881 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4582023092649756032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
result int[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:440) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|DWORD, int[45|0x2d], short[45|0x2d]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606983485323725780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, int[0|0x0], short[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i106 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v104 
values: i2 i102 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i2 i102  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v104 
values: i11 i101 
=== Succesors ===
=== Usages ===
v171 ?113 ?148 ?162 ?142 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i11 i101  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v104 
values: i449 i450 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i449 i450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v103 v105 
=== Succesors ===
next: i924 
=== Usages ===
i106 i107 i451 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v103 v105 #next: i924  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
result [v81|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a193 
index: - 
=== Succesors ===
=== Usages ===
i924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i924 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
=== Succesors ===
next: v109 
=== Usages ===
v332 v345 v297 v308 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v937 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i179 i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 i158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result int[65536|0x10000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
i924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|DWORD, v86|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV [v81|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|DWORD, v82|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B92" 
    successors "B76" "B89" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607291006849916395
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i111 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v110 
values: i106 i189 
=== Succesors ===
=== Usages ===
?113 v115 i146 i195 i132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v110 values: i106 i189  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v110 
values: i204 i179 
=== Succesors ===
=== Usages ===
?113 i147 i134 i179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v110 values: i204 i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0241113906394002
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v109 
=== Succesors ===
next: v121 
=== Usages ===
i111 i112 v116 v143 v445 v435 v440 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v109 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i114 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i111 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9764562811625928
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v116 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD, v89|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9764562811625928 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v110 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v110 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result int[-524288|0xfffffffffff80000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a159 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result int[52429|0xcccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
result int[19|0x13] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result int[36|0x24] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, v89|DWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B85" 
    successors "B78" "B87" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i146 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v145 
values: i111 i152 
=== Succesors ===
=== Usages ===
?148 i150 i157 ?162 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v145 values: i111 i152  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v145 
values: i112 i158 
=== Succesors ===
=== Usages ===
?148 i158 i387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v145 values: i112 i158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.2758614963049073
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v144 
=== Succesors ===
next: v422 
=== Usages ===
i146 i147 v165 v168 v426 v421 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v144 #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i146 
y: i149 
=== Succesors ===
=== Usages ===
i152 v164 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i146 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i150 
y: i151 
=== Succesors ===
=== Usages ===
i146 i154 i155 ?162 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i150 y: i151  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i152 
y: i153 
=== Succesors ===
=== Usages ===
i156 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i152 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i152 
y: i20 
=== Succesors ===
=== Usages ===
i156 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i152 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i154 
y: i155 
=== Succesors ===
=== Usages ===
i157 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i154 y: i155  <|@  <|@
f <@~|@floating>@ <|@
tid i157 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i146 
y: i156 
=== Succesors ===
=== Usages ===
v933 ?162 v283 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i146 y: i156  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i157 
y: i282 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i157 y: i282  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v421 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v418 #falseSuccessor: v421  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD, v92|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = IMUL v91|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = SHR v93|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SHL v94|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SHL v94|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ADD (x: v95|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SUB (x: v91|DWORD, ~y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v98|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B86" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
i925 
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i147 
y: i133 
=== Succesors ===
=== Usages ===
i147 v934 ?162 v297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i147 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i158 
y: i924 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i158 y: i924  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v423 #falseSuccessor: v426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = DEC v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i925 
=== Usages ===
v305 
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i925  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
result [v90|QWORD[.] + v98|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a159 
index: i157 
=== Succesors ===
=== Usages ===
i925 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a159 index: i157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i925 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v418 
address: v933 
=== Succesors ===
next: v305 
=== Usages ===
v305 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v418 address: v933 #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
result [v81|QWORD[.] + v99|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a193 
index: i158 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: i158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v423 
address: v934 
value: i925 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
i925 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v423 address: v934 value: i925 stateAfter: - lastLocationAccess: - #next: v170  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?182 
values: i146 - a193 i152 i157 i158 i107 
=== Succesors ===
=== Usages ===
v384 v429 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?182 values: i146 - a193 i152 i157 i158 i107  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
x: i150 
y: i163 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i150 y: i163  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.43939404995585263
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVSX [v90|QWORD[.] + v98|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v99|DWORD * 2 + 16], y: v100|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v93|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v145 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v145 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i11 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i107 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9779119300489093
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:676) [bci: 57]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
value: i204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v929 value: i204 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i147 
y: i178 
=== Succesors ===
=== Usages ===
v935 v308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i147 y: i178  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i924 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i387 y: i924  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v428 #falseSuccessor: v430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = LEA [v92|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
v316 
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
result [v81|QWORD[.] + v101|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a193 
index: i387 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: i387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v428 
address: v935 
value: i451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v428 address: v935 value: i451 stateAfter: - lastLocationAccess: - #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:676) [bci: 57]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
value: i204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v929 value: i204 stateAfter: - lastLocationAccess: - #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v101|DWORD * 2 + 16], y: v86|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 309
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?162 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?162  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -79131 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v91|DWORD - v81|QWORD[.] v94|DWORD v98|DWORD v99|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:107, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608424788531982056
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?162 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?162 #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v91|DWORD - v81|QWORD[.] v94|DWORD v98|DWORD v99|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 52, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v99|DWORD] destination: B85 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v145 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v145 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i542 <|@
result int[-76315|0xfffffffffffed5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -76315
stableDimension: 0
stamp: i32 [-76315] ⇊00000000fffed5e5 ⇈00000000fffed5e5
stampKind: i32
value: int[-76315|0xfffffffffffed5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-76315|0xfffffffffffed5e5]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v145 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v145 #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i537 <|@
result int[-72731|0xfffffffffffee3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72731
stableDimension: 0
stamp: i32 [-72731] ⇊00000000fffee3e5 ⇈00000000fffee3e5
stampKind: i32
value: int[-72731|0xfffffffffffee3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72731|0xfffffffffffee3e5]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i538 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-76315 - -72731] ⇊00000000fffec1e5 ⇈00000000fffef7e5
valueDescription: i32
=== Inputs ===
merge: v535 
values: i537 i542 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v535 values: i537 i542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v536 v541 
=== Succesors ===
next: v540 
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v536 v541 #next: v540  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: ?182 
values: i146 - a193 - - i147 i107 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?182 values: i146 - a193 - - i147 i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?148 
actionAndReason: i538 
speculation: a516 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?148 actionAndReason: i538 speculation: a516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v91|DWORD - v81|QWORD[.] - - v92|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:75, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:445) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i111 
y: i187 
=== Succesors ===
=== Usages ===
i189 i970 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i111 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 34]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i195 
y: i126 
=== Succesors ===
=== Usages ===
?142 i111 i125 ?142 i130 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i195 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i189 
y: i124 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i189 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
result int[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i970 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i195 
y: i969 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i195 y: i969  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i125 
y: i970 
=== Succesors ===
=== Usages ===
i131 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i125 y: i970  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i189 
y: i129 
=== Succesors ===
=== Usages ===
i131 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i189 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 40]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i128 
y: i130 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 41]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i111 
y: i131 
=== Succesors ===
=== Usages ===
v939 ?142 v319 v936 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i111 y: i131  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i318 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i318  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v432 #falseSuccessor: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SAR v104|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHL v105|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = AND v104|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = ADD (x: v106|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL v105|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v108|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SUB (x: v88|DWORD, ~y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
i927 i926 
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i112 
y: i133 
=== Succesors ===
=== Usages ===
v938 v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i112 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i134 
y: i924 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i134 y: i924  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v437 #falseSuccessor: v440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = DEC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
v340 
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: i32
=== Inputs ===
x: i112 
y: i178 
=== Succesors ===
=== Usages ===
i112 v940 ?142 v345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i112 y: i178  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i924 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i179 y: i924  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v345 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v345 #trueSuccessor: v442 #falseSuccessor: v445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = LEA [v89|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B75" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i926 
=== Usages ===
v353 
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i926  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
result [v114|QWORD[.] + v111|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a135 
index: i132 
=== Succesors ===
=== Usages ===
i926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i926 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v432 
address: v936 
=== Succesors ===
next: v340 
=== Usages ===
v340 
=== Predecessor ===
v442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v432 address: v936 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
result [v81|QWORD[.] + v112|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a193 
index: i134 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v437 
address: v938 
value: i926 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i927 
=== Usages ===
=== Predecessor ===
i926 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v437 address: v938 value: i926 stateAfter: - lastLocationAccess: - #next: i927  <|@  <|@
f <@~|@floating>@ <|@
tid a139 <|@
result v116|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
result [v116|QWORD[.] + v111|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a139 
index: i132 
=== Succesors ===
=== Usages ===
i927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i927 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 70]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v432 
address: v939 
=== Succesors ===
next: v353 
=== Usages ===
v353 
=== Predecessor ===
v340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v432 address: v939 #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
result [v81|QWORD[.] + v113|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a193 
index: i179 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v442 
address: v940 
value: i927 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
i927 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v442 address: v940 value: i927 stateAfter: - lastLocationAccess: - #next: v383  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
rethrowException: false
sourceFile: Integer.java
sourceLine: 450
stackSize: 0
=== Inputs ===
outerFrameState: ?182 
values: i189 - a193 i189 i132 i179 i107 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?182 values: i189 - a193 i189 i132 i179 i107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?142 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?142 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v110 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVSX [v114|QWORD[.] + v111|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v112|DWORD * 2 + 16], y: v115|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVSX [v116|QWORD[.] + v111|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v113|DWORD * 2 + 16], y: v117|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: v105|DWORD - v81|QWORD[.] v105|DWORD v111|DWORD v113|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72, 52, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD, v113|DWORD] destination: B92 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v110 
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v110 #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
result int[-88603|0xfffffffffffea5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88603
stableDimension: 0
stamp: i32 [-88603] ⇊00000000fffea5e5 ⇈00000000fffea5e5
stampKind: i32
value: int[-88603|0xfffffffffffea5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88603|0xfffffffffffea5e5]] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v110 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v110 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
result int[-85275|0xfffffffffffeb2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85275
stableDimension: 0
stamp: i32 [-85275] ⇊00000000fffeb2e5 ⇈00000000fffeb2e5
stampKind: i32
value: int[-85275|0xfffffffffffeb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85275|0xfffffffffffeb2e5]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v110 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v110 #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
result int[-81947|0xfffffffffffebfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81947
stableDimension: 0
stamp: i32 [-81947] ⇊00000000fffebfe5 ⇈00000000fffebfe5
stampKind: i32
value: int[-81947|0xfffffffffffebfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81947|0xfffffffffffebfe5]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i528 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-88603 - -81947] ⇊00000000fffea0e5 ⇈00000000fffebfe5
valueDescription: i32
=== Inputs ===
merge: v525 
values: i527 i532 i534 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v525 values: i527 i532 i534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v526 v531 v533 
=== Succesors ===
next: v530 
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v526 v531 v533 #next: v530  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 444
stackSize: 0
=== Inputs ===
outerFrameState: ?182 
values: i111 - a193 - - i112 i107 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?182 values: i111 - a193 - - i112 i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?113 
actionAndReason: i528 
speculation: a516 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?113 actionAndReason: i528 speculation: a516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: v88|DWORD - v81|QWORD[.] - - v89|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:17, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580750310814092465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v640 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B97 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v44 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v44 #next: v406  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 259
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -66331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v15|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:2, 30, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1de48d3b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01965058868211167 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v6|QWORD[.] + v15|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610259495073274661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v15|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 30, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B98" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: [v3|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B71" 
    xhandlers
    flags 
    probability 4606589338098898294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.], v17|DWORD] destination: B21 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B10" "B70" "B21" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.], v82|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46]
locals: v0|QWORD[.] v1|DWORD - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [v81|QWORD[.]] state [bci:46, 2] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02208605257476881 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606983485323725780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, int[0|0x0], short[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|DWORD, v86|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV [v81|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|DWORD, v82|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SAR v104|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHL v105|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = AND v104|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = ADD (x: v106|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL v105|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v108|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SUB (x: v88|DWORD, ~y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = DEC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = LEA [v89|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B75" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVSX [v114|QWORD[.] + v111|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v112|DWORD * 2 + 16], y: v115|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVSX [v116|QWORD[.] + v111|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v113|DWORD * 2 + 16], y: v117|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: v105|DWORD - v81|QWORD[.] v105|DWORD v111|DWORD v113|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72, 52, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD, v113|DWORD] destination: B92 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B92" 
    successors "B76" "B89" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607291006849916395
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD, v89|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9764562811625928 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, v89|DWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B86" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = DEC v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVSX [v90|QWORD[.] + v98|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v99|DWORD * 2 + 16], y: v100|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v93|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608424788531982056
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v91|DWORD - v81|QWORD[.] v94|DWORD v98|DWORD v99|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 52, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v99|DWORD] destination: B85 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B85" 
    successors "B78" "B87" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD, v92|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = IMUL v91|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = SHR v93|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SHL v94|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SHL v94|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ADD (x: v95|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SUB (x: v91|DWORD, ~y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v98|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4586818163969976452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, v16|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: v20|DWORD 
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:33, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v0|QWORD[.] v4|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: v0|QWORD[.] v1|DWORD - v19|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 43, 2] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4586272528322596666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SHL v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v24|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND v25|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4586211411249728644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = CMOVE (falseValue: v21|DWORD, ~trueValue: v33|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = LEA [v32|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|V128_WORD = H [v38|QWORD[*] + v42|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v42|QWORD * 2], input: v44|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v35|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|V64_WORD = H [v38|QWORD[*] + v46|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v46|QWORD * 2], input: v48|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v35|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V32_WORD = H [v38|QWORD[*] + v50|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v50|QWORD * 2], input: v52|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v35|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVSX [v38|QWORD[*] + v54|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + v54|QWORD * 2], y: v56|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[.] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v78|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v79|QWORD[*] + v80|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.], v19|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v32|QWORD[.] + v35|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v57|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v59|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v64|QWORD * 2], input: v66|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v64|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v59|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v68|QWORD * 2], input: v70|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v68|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v59|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v72|QWORD * 2], input: v74|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = DEC v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v76|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = LEA [v92|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v101|DWORD * 2 + 16], y: v86|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4582023092649756032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|DWORD, int[45|0x2d], short[45|0x2d]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v6|QWORD[.] + v8|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4585023242285552828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 21, 2] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: [v3|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B71" 
    xhandlers
    flags 
    probability 4581054232095786184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.], v11|DWORD] destination: B10 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v62|QWORD * 2], input: v61|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v62|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580750310814092465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B97 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B97" 
    successors "B37" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V256_WORD = H [v38|QWORD[*] + v39|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v39|QWORD * 2], input: v40|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v39|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 4572082650853062706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4572571587436006885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v0|QWORD[.] v4|QWORD[.] v21|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: v0|QWORD[.] v1|DWORD - v19|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 43, 2] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561679571434303217
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD, v10|DWORD] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4556458608971307826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88603|0xfffffffffffea5e5]] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: v88|DWORD - v81|QWORD[.] - - v89|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:17, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -66331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v15|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:2, 30, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81947|0xfffffffffffebfe5]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -79131 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v91|DWORD - v81|QWORD[.] v94|DWORD v98|DWORD v99|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:107, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72731|0xfffffffffffee3e5]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v91|DWORD - v81|QWORD[.] - - v92|DWORD v85|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v82|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:75, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-76315|0xfffffffffffed5e5]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85275|0xfffffffffffeb2e5]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -119905 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v0|QWORD[.] v4|QWORD[.] v21|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: v0|QWORD[.] v1|DWORD - v19|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-60435|0xffffffffffff13ed], Object[null]] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD, v14|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v14|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-65035|0xffffffffffff01f5], v120|QWORD[.]] destination: B4 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -61211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: v0|QWORD[.] v1|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:2, 21, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69131|0xfffffffffffef1f5], v119|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #15         // java.lang.AbstractStringBuilder.append:(int)java.lang.AbstractStringBuilder
     5: pop           
     6: aload_0       
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1de48d3b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMP rdx|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   32  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.01965058868211167 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  160  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction CMP (x: rdx|DWORD, y: [r9|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610259495073274661
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, r11:0, stack:32]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: rdx|DWORD rcx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: rsi|QWORD[.] rdx|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 30, 2] <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B98" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction CMP rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r10|DWORD = ADD (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = SUB (x: r10|DWORD, ~y: [r11|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  180  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B71" 
    xhandlers
    flags 
    probability 4606589338098898294
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B21 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B10" "B70" "B21" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  632  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46]
locals: rsi|QWORD[.] rdx|DWORD - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r8|QWORD[.]] state [bci:46, 2] <|@ <|@
      nr  634  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.02208605257476881 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606983485323725780
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction r9|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  656  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  658  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  666  <|@ instruction rdi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  798  <|@ instruction rax|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr  802  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr  806  <|@ instruction rbp|DWORD = SHL rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  808  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD <|@ <|@
      nr  814  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rdx|DWORD = SUB (x: rbx|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbp|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  826  <|@ instruction CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r13|DWORD = LEA [rdi|DWORD - 2] size: DWORD <|@ <|@
      nr  834  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B75" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  842  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [r8|QWORD[.] + rbp|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  846  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV (x: [r8|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  852  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:32]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: rax|DWORD - r8|QWORD[.] rax|DWORD rdx|DWORD r13|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72, 52, 2] <|@ <|@
      nr  854  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B92 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B92" 
    successors "B76" "B89" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607291006849916395
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  674  <|@ instruction CMP rbx|DWORD y: 65536 size: DWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.9764562811625928 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B86" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  704  <|@ instruction r13|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rbx|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction MOV (x: [r8|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  718  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608424788531982056
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ st <@st|@reference-map: [rax:0, rsi:0, r8:0, stack:32]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:56|DWORD - r8|QWORD[.] rbp|DWORD r14|DWORD r13|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 52, 2] <|@ <|@
      nr  770  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B85 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B85" 
    successors "B78" "B87" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = IMUL rbx|DWORD y: 52429 size: DWORD <|@ <|@
      nr  688  <|@ instruction rbp|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  690  <|@ instruction r13|DWORD = SHL rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  692  <|@ instruction r14|DWORD = SHL rbp|DWORD size: DWORD <|@ <|@
      nr  694  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction r14|DWORD = SUB (x: rbx|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction CMP r14|DWORD y: 36 size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815277
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4586818163969976452
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: rbx|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:33, 2] <|@ <|@
      nr  200  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:56|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  210  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:32|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: stack:32|QWORD[.] stack:36|DWORD - stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 43, 2] <|@ <|@
      nr  212  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4586272528322596666
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  248  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4586211411249728644
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  276  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction r11|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  316  <|@ instruction r10|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction r11|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction r9|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r11|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction xmm0|V128_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  382  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  384  <|@ instruction r11|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r11|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction xmm0|V64_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  406  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  408  <|@ instruction r11|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r11|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction xmm0|V32_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  430  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  432  <|@ instruction r11|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  434  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVSX [r9|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  620  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  622  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  472  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  474  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  508  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  522  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  524  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  546  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  548  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  550  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  570  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  574  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA [rdi|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction CMP (x: rcx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r8|QWORD[.] + rax|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4582023092649756032
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction rdx|DWORD = NEG stack:36|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction r9|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  646  <|@ instruction r11|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rdx|DWORD = NEG stack:36|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rdx|DWORD, y: [r9|QWORD[.] + r11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4585023242285552828
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rsi:0, r9:0, r14:0, stack:16, stack:32]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: rdx|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: rsi|QWORD[.] stack:36|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 21, 2] <|@ <|@
      nr   82  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP r11|DWORD y: 10 size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = ADD (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rdx|DWORD = SUB (x: r10|DWORD, ~y: [r14|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B71" 
    xhandlers
    flags 
    probability 4581054232095786184
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B10 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  488  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580750310814092465
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  494  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  496  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  498  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580750310814092465
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B97 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B97" 
    successors "B37" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  352  <|@ instruction xmm0|V256_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  354  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  356  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 4572082650853062706
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4572571587436006885
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:32|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: stack:32|QWORD[.] stack:36|DWORD - stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 43, 2] <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561679571434303217
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r11|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4556458608971307826
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction r9|DWORD = MOVE input: int[-88603|0xfffffffffffea5e5] <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  880  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  884  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: rbx|DWORD - r8|QWORD[.] - - rdi|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:17, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV [r15|QWORD + 668] y: -66331 size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: rdx|DWORD rcx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: rsi|QWORD[.] rdx|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:2, 30, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r9|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [r15|QWORD + 668] y: -79131 size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:56|DWORD - r8|QWORD[.] rbp|DWORD r14|DWORD r13|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:107, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOVE input: int[-72731|0xfffffffffffee3e5] <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  790  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: rbx|DWORD - r8|QWORD[.] - - rdi|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:75, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r9|DWORD = MOVE input: int[-76315|0xfffffffffffed5e5] <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 668] y: -119905 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rsi|QWORD[.] r8|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: rsi|QWORD[.] stack:36|DWORD - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-60435|0xffffffffffff13ed] <|@ <|@
      nr   18  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  140  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 0]
locals: rsi|QWORD[.] stack:36|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759] <|@ <|@
      nr   52  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction r10|DWORD = MOVE input: int[-65035|0xffffffffffff01f5] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r15|QWORD + 668] y: -61211 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: rdx|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: rsi|QWORD[.] stack:36|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:2, 21, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759] <|@ <|@
      nr  132  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r10|DWORD = MOVE input: int[-69131|0xfffffffffffef1f5] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #15         // java.lang.AbstractStringBuilder.append:(int)java.lang.AbstractStringBuilder
     5: pop           
     6: aload_0       
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1de48d3b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMP rdx|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   32  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.01965058868211167 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  160  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction CMP (x: rdx|DWORD, y: [r9|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610259495073274661
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, r11:0, stack:32]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: rdx|DWORD rcx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: rsi|QWORD[.] rdx|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 30, 2] <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B98" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613180307372083346
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction CMP rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" "B22" 
    xhandlers
    flags 
    probability 4607005422032284670
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r10|DWORD = ADD (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = SUB (x: r10|DWORD, ~y: [r11|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  180  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B20 -> B71 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B10" "B70" "B20" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  632  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46]
locals: rsi|QWORD[.] rdx|DWORD - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r8|QWORD[.]] state [bci:46, 2] <|@ <|@
      nr  634  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.02208605257476881 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606983485323725780
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction r9|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  656  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  658  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  666  <|@ instruction rdi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  798  <|@ instruction rax|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr  802  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr  806  <|@ instruction rbp|DWORD = SHL rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  808  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr  810  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD <|@ <|@
      nr  814  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rdx|DWORD = SUB (x: rbx|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbp|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  826  <|@ instruction CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r13|DWORD = LEA [rdi|DWORD - 2] size: DWORD <|@ <|@
      nr  834  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B75" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582606856601959110
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  842  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [r8|QWORD[.] + rbp|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  846  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  848  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV (x: [r8|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  852  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:32]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: rax|DWORD - r8|QWORD[.] rax|DWORD rdx|DWORD r13|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72, 52, 2] <|@ <|@
      nr  854  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B92 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B92" 
    successors "B76" "B89" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607291006849916395
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  668  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction CMP rbx|DWORD y: 65536 size: DWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.9764562811625928 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B86" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  704  <|@ instruction r13|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rbx|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  716  <|@ instruction MOV (x: [r8|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  718  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608424788531982056
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ st <@st|@reference-map: [rax:0, rsi:0, r8:0, stack:32]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:56|DWORD - r8|QWORD[.] rbp|DWORD r14|DWORD r13|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 52, 2] <|@ <|@
      nr  770  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B85 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B85" 
    successors "B78" "B87" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612307203293370228
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = IMUL rbx|DWORD y: 52429 size: DWORD <|@ <|@
      nr  688  <|@ instruction rbp|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  690  <|@ instruction r13|DWORD = SHL rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  692  <|@ instruction r14|DWORD = SHL rbp|DWORD size: DWORD <|@ <|@
      nr  694  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction r14|DWORD = SUB (x: rbx|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction CMP r14|DWORD y: 36 size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815277
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4586818163969976452
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: rbx|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:33, 2] <|@ <|@
      nr  200  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:56|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  210  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:32|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: stack:32|QWORD[.] stack:36|DWORD - stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 43, 2] <|@ <|@
      nr  212  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4586951606910019136
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" "B28" 
    xhandlers
    flags 
    probability 4586272528322596666
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  248  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B30 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4586211411249728644
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  276  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B50" "B33" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction r11|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  316  <|@ instruction r10|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B38" "B36" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction r11|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction r9|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B41" "B40" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r11|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction xmm0|V128_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  382  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  384  <|@ instruction r11|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B44" "B43" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r11|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction xmm0|V64_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  406  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  408  <|@ instruction r11|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r11|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction xmm0|V32_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  430  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  432  <|@ instruction r11|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  434  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVSX [r9|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B31" "B49" "B47" 
    successors "B51" "B70" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B50" "B67" "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 4586951606910019137
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  620  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  622  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  472  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  474  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B54" 
    successors "B59" "B58" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  508  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  522  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  524  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B62" "B61" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  546  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  548  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  550  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B59" 
    successors "B65" "B64" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  570  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  574  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B62" 
    successors "B70" "B67" 
    xhandlers
    flags 
    probability 4582448007282648641
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580750310814092465
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rax|DWORD = LEA [rdi|DWORD - 2] size: DWORD <|@ <|@
      nr  740  <|@ instruction CMP (x: rcx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892128
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction MOV (x: [r8|QWORD[.] + rax|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4582023092649756032
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction rdx|DWORD = NEG stack:36|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction r9|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  646  <|@ instruction r11|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rdx|DWORD = NEG stack:36|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rdx|DWORD, y: [r9|QWORD[.] + r11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4585023242285552828
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rsi:0, r9:0, r14:0, stack:16, stack:32]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: rdx|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: rsi|QWORD[.] stack:36|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 21, 2] <|@ <|@
      nr   82  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4587855190569276636
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP r11|DWORD y: 10 size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4581321117975871552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = ADD (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rdx|DWORD = SUB (x: r10|DWORD, ~y: [r14|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B71" 
    xhandlers
    flags 
    probability 4581054232095786184
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B10 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573440808027907649
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  488  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B54" 
    successors "B56" "B54" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  494  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  496  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  498  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B38" "B36" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582448007282648641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  352  <|@ instruction xmm0|V256_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  354  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  356  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4572571587436006885
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:32|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: stack:32|QWORD[.] stack:36|DWORD - stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 43, 2] <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561679571434303217
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r11|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction r9|DWORD = MOVE input: int[-88603|0xfffffffffffea5e5] <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  880  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  884  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: rbx|DWORD - r8|QWORD[.] - - rdi|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:17, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV [r15|QWORD + 668] y: -66331 size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: rdx|DWORD rcx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: rsi|QWORD[.] rdx|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:2, 30, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r9|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction MOV [r15|QWORD + 668] y: -79131 size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:56|DWORD - r8|QWORD[.] rbp|DWORD r14|DWORD r13|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:107, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOVE input: int[-72731|0xfffffffffffee3e5] <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  790  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: rbx|DWORD - r8|QWORD[.] - - rdi|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rsi|QWORD[.] - - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:75, 52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r9|DWORD = MOVE input: int[-76315|0xfffffffffffed5e5] <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction MOV [r15|QWORD + 668] y: -119905 size: DWORD <|@ <|@
      nr  228  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rsi|QWORD[.] r8|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
locals: rsi|QWORD[.] stack:36|DWORD - r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-60435|0xffffffffffff13ed] <|@ <|@
      nr   18  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  140  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 0]
locals: rsi|QWORD[.] stack:36|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759] <|@ <|@
      nr   52  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction r10|DWORD = MOVE input: int[-65035|0xffffffffffff01f5] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r15|QWORD + 668] y: -61211 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: rdx|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: rsi|QWORD[.] stack:36|DWORD - - 
java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:2, 21, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759] <|@ <|@
      nr  132  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r10|DWORD = MOVE input: int[-69131|0xfffffffffffef1f5] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #15         // java.lang.AbstractStringBuilder.append:(int)java.lang.AbstractStringBuilder
     5: pop           
     6: aload_0       
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242081fa000000800f84c9050000448b560c448b5e10458bc349c1e00349b9addeaddeaddeadde85d20f8c150400004585db0f84f4050000b900000000e9220000006666660f1f8400000000008bd9ffc3413b5489100f8e120000008505000000008bcb83f90a72e4e9e00400004403d3418bc2422b04dd0c00000083f8010f8d4d01000041850085d20f8c9903000041b90000000041bb000000008bc2418b480c418bfae97b0000006666908bc3ba1f85eb51f7ea8bc2c1f8058be8c1e50683e2e003ea8bd0c1e20203ea8bd32bd583fa640f838d0400008befffcd3bcd0f86c3040000448d6ffe413bcd0f864204000048bbaddeaddeaddeadde0fbf5c53106641895c681048bbaddeaddeaddeadde0fbf5c53106643895c6810850500000000418bfd8bd881fb000001000f8d7affffff48b8addeaddeaddeaddee9410000006666660f1f840000000000448bef41ffcd413bcd0f8644040000895c2408420fbf5c70106643895c6810f7c20000f8ff0f8437000000850500000000418bfd8bdd69d3cdcc00008beac1ed13448bed41c1e503448bf541d1e64503ee448bf3452bf54183fe2472a3e9d70300004585db0f85410200004489560c488bc6488b6c24304883c438850500000000c5f877c34c894424108954241c438504dc4c8bce418bd2448954240c44895c24080f1f440000e80000000090448be84585ed0f8caa030000498b4760498b77704181fdffffff000f83ec020000418bd5d1e28d521783e2f84863d2488bca4803c8483bce0f87cf02000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489680c48c70001000000c74008addeadde448b742408468b14f50c000000453bea458bdd450f4fda4d63d34983fa010f8c990000004d8d5af04c8d40104e8d0cf5100000004d85db48c7c1000000000f8d3b0200004d8d5af8493bcb0f8f13000000c4c17a6f0449c4c17a7f04484c8d5908498bcb4d8d5afc493bcb0f8f13000000c4c1f96e0449c4c1f97e04484c8d5904498bcb4d8d5afe493bcb0f8f13000000c4c1796e0449c4c1797e04484c8d5902498bcb4d8bda49ffcb493bcb0f8f0a000000450fbf1c496645891c484d63dd4d3bda0f8f36000000488b7424204c8bd049c1ea03448956104c8bd649c1ea0949bb00e01b17010000004788241a448b54240c4c8bc08b54241ce918fdffff4e8d4450104d2bda4d8d53f04d85d20f8d3301000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f48ffffff6647892448e93effffff8d47fe3bc8488b7424200f86650100006645894c40104489560c488bc6488b6c24304883c438850500000000c5f877c38954241c8b54241cf7da41b92d00000041bb2d000000e958fcffff4c89442410458bf38954241c4585f60f84a60100008b54241cf7da41bb00000000e917000000666690433b5499100f8e1400000085050000000041ffc34183fb0a72e6e988010000418d5b024403d3418bd2422b14f50c00000083fa010f8d850000004c8b4424108b54241ce9d0fbffffc5f9efc049c7c1000000000f1f8000000000660f1f440000c4817e7f04484d8d49104d3bca7ef1e9a8feffff660f1f440000660f1f440000c4c17e6f0449c4c17e7f0448488d4910493bcb7eebe9abfdffff448b74240848baaddeaddeaddeadde488bf2418bd5b900000000e80000000090e947fdffff458bdee9a7fcffff41b9e5a5feff45898f9c0200004d89a7a8020000e8000000009041c7879c020000e5fcfeff4d89a7a8020000e8000000009041b9e5bffeffebcc41c7879c020000e5cafeff4d89a7a8020000e8000000009041b9e5e3feff45898f9c0200004d89a7a8020000e8000000009041b9e5d5feffebe441b9e5b2feffeb8a448b54240c4c8b442410488b74242041c7879c0200009f2bfeff4d89a7a8020000e8000000009049bb000000000000000041baed13ffff8954241c4589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41baf501ffffebd741c7879c020000e510ffff4d89a7a8020000e800000000908954241c49baaddeaddeaddeadde4d8bda41baf5f1feffeba6e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1de48d3b slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 CMP rdx|DWORD y: -2147483648 size: DWORD  <||@
  Comment 59 10 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 65 block B2 null  <||@
  Comment 65 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 24 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 69 26 r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 73 28 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3  <||@
  Comment 80 30 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}]  <||@
  Comment 80 {Object[int[10]{9, 99, 999, 9999, 99999, ...}]}  <||@
  Comment 90 32 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 92 34 BRANCH trueDestinationProbability: 0.01965058868211167 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13  <||@
  Comment 98 block B13 null  <||@
  Comment 98 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 122 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 101 124 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16  <||@
  Comment 107 block B16 null  <||@
  Comment 107 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 107 148 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 112 150 JUMP ~[] destination: B16 -> B17  <||@
  Comment 117 block B18 loop 1 depth 1 header:44|LoopBegin  <||@
  Comment 117 158 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 160 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 132 162 CMP (x: rdx|DWORD, y: [r9|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 137 164 BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 143 block B19 loop 1 depth 1 header:44|LoopBegin  <||@
  Comment 143 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 168 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 30, 2]  <||@
  Comment 143 [rsi:0, r8:0, r9:0, r11:0, stack:32]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |rdx|DWORD  |rcx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30, duringCall: true, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 143 {infopoint: SAFEPOINT}  <||@
  Comment 143 11  <||@
  Comment 149 170 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 151 172 JUMP ~[] destination: B19 -> B17  <||@
  Comment 151 block B17 loop 1 depth 1 header:44|LoopBegin  <||@
  Comment 151 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 151 154 CMP rcx|DWORD y: 10 size: DWORD  <||@
  Comment 154 156 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B98  <||@
  Comment 161 block B20 null  <||@
  Comment 161 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 176 r10|DWORD = ADD (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 164 178 rax|DWORD = SUB (x: r10|DWORD, ~y: [r11|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 175 180 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 178 182 BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B20 -> B71 falseDestination: B20 -> B22  <||@
  Comment 184 block B71 null  <||@
  Comment 184 630 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 184 632 NULLCHECK [r8|QWORD[.]] state [bci:46, 2]  <||@
  Comment 184 [rsi:0, r8:0, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46, duringCall: false, rethrow: false]
              |0             |1          |2  |3         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 184 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 187 634 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 189 636 BRANCH trueDestinationProbability: 0.02208605257476881 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 195 block B73 null  <||@
  Comment 195 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 654 r9|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 201 656 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 207 660 JUMP ~[] destination: B73 -> B74  <||@
  Comment 207 block B74 null  <||@
  Comment 207 662 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 207 658 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 209 664 rcx|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 213 666 rdi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 216 670 JUMP ~[] destination: B74 -> B75  <||@
  Comment 221 block B89 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 221 796 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 224 798 rax|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 226 800 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 231 802 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 233 804 rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 238 806 rbp|DWORD = SHL rax|DWORD y: 6 size: DWORD  <||@
  Comment 243 808 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 246 810 rbp|DWORD = ADD (x: rbp|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 248 812 rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD  <||@
  Comment 253 814 rbp|DWORD = ADD (x: rbp|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 255 816 rdx|DWORD = SUB (x: rbx|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 259 818 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 262 820 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B95  <||@
  Comment 268 block B90 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 268 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 268 824 rbp|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 272 826 CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 274 828 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B94  <||@
  Comment 280 block B91 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 280 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 832 r13|DWORD = LEA [rdi|DWORD - 2] size: DWORD  <||@
  Comment 284 834 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 287 836 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 293 block B92 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 293 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 840 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 293 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 303 842 rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 308 844 MOV (x: [r8|QWORD[.] + rbp|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 314 846 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 314 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 324 848 rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 329 850 MOV (x: [r8|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 335 852 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72, 52, 2]  <||@
  Comment 335 [rsi:0, r8:0, stack:32]at java.lang.Integer.getChars(Integer.java:450) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2            |3          |4          |5          |6         
     locals:  |rax|DWORD  |-  |r8|QWORD[.]  |rax|DWORD  |rdx|DWORD  |r13|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 335 {infopoint: SAFEPOINT}  <||@
  Comment 335 11  <||@
  Comment 341 854 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 344 858 JUMP ~[] destination: B92 -> B75  <||@
  Comment 344 block B75 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 344 672 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 344 668 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 346 674 CMP rbx|DWORD y: 65536 size: DWORD  <||@
  Comment 352 676 BRANCH trueDestinationProbability: 0.9764562811625928 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B89  <||@
  Comment 358 block B76 null  <||@
  Comment 358 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 680 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 358 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 368 682 JUMP ~[] destination: B76 -> B77  <||@
  Comment 373 block B78 loop 5 depth 1 header:145|LoopBegin  <||@
  Comment 373 702 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 384 704 r13|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 390 706 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 393 708 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B86  <||@
  Comment 399 block B79 loop 5 depth 1 header:145|LoopBegin  <||@
  Comment 399 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 712 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 403 714 rbx|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD  <||@
  Comment 409 716 MOV (x: [r8|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 415 718 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 421 720 BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85  <||@
  Comment 427 block B85 loop 5 depth 1 header:145|LoopBegin  <||@
  Comment 427 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 768 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 52, 2]  <||@
  Comment 427 [rax:0, rsi:0, r8:0, stack:32]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2            |3          |4          |5          |6         
     locals:  |stack:56|DWORD  |-  |r8|QWORD[.]  |rbp|DWORD  |r14|DWORD  |r13|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 427 {infopoint: SAFEPOINT}  <||@
  Comment 427 11  <||@
  Comment 433 770 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 436 772 rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 438 774 JUMP ~[] destination: B85 -> B77  <||@
  Comment 438 block B77 loop 5 depth 1 header:145|LoopBegin  <||@
  Comment 438 684 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 438 686 rdx|DWORD = IMUL rbx|DWORD y: 52429 size: DWORD  <||@
  Comment 444 688 rbp|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 449 690 r13|DWORD = SHL rbp|DWORD y: 3 size: DWORD  <||@
  Comment 456 692 r14|DWORD = SHL rbp|DWORD size: DWORD  <||@
  Comment 462 694 r13|DWORD = ADD (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 465 696 r14|DWORD = SUB (x: rbx|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 471 698 CMP r14|DWORD y: 36 size: DWORD  <||@
  Comment 475 700 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B87  <||@
  Comment 482 block B80 null  <||@
  Comment 482 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 724 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 485 726 BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 491 block B81 null  <||@
  Comment 491 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 730 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 495 732 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 498 734 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 507 12  <||@
  Comment 517 block B22 null  <||@
  Comment 517 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 190 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 522 192 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 526 194 JUMP ~[] destination: B22 -> B23  <||@
  Comment 526 block B23 null  <||@
  Comment 526 196 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 526 198 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:33, 2]  <||@
  Comment 526 [rsi:0, r11:0, stack:16, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33, duringCall: false, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |-  |- 
     stack:   |rbx|DWORD     |                |   |  
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 526 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 530 200 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 533 204 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 536 206 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 541 208 stack:56|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 546 210 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 43, 2]  <||@
  Comment 546 9  <||@
  Comment 551 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 556 [stack:8, stack:16, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |-  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 557 212 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 560 214 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 563 216 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 569 block B25 null  <||@
  Comment 569 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 234 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 573 236 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 577 238 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 584 240 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 590 block B26 null  <||@
  Comment 590 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 244 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 595 246 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 598 248 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 601 250 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 604 252 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 610 254 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 613 256 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B30 falseDestination: B26 -> B28  <||@
  Comment 619 block B28 null  <||@
  Comment 619 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 266 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 623 268 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 631 270 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 639 272 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 647 274 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 655 276 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 659 278 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 666 280 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 666 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 673 282 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 673 284 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 678 286 JUMP ~[] destination: B28 -> B31  <||@
  Comment 678 block B31 null  <||@
  Comment 678 308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 678 310 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 686 312 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 689 314 r11|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 696 316 r10|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 699 318 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 703 320 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33  <||@
  Comment 709 block B33 null  <||@
  Comment 709 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 709 328 r11|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 713 330 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 717 332 r9|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 725 334 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 728 340 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 735 336 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 741 block B38 null  <||@
  Comment 741 366 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 741 368 r11|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 745 370 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 748 372 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 754 block B40 null  <||@
  Comment 754 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 380 xmm0|V128_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 760 382 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 766 384 r11|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 770 386 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 773 388 JUMP ~[] destination: B40 -> B41  <||@
  Comment 773 block B41 null  <||@
  Comment 773 390 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 773 392 r11|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 777 394 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 780 396 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 786 block B43 null  <||@
  Comment 786 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 404 xmm0|V64_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 792 406 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 798 408 r11|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 802 410 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 805 412 JUMP ~[] destination: B43 -> B44  <||@
  Comment 805 block B44 null  <||@
  Comment 805 414 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 805 416 r11|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 809 418 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 812 420 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 818 block B46 null  <||@
  Comment 818 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 818 428 xmm0|V32_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 824 430 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 830 432 r11|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 834 434 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 837 436 JUMP ~[] destination: B46 -> B47  <||@
  Comment 837 block B47 null  <||@
  Comment 837 438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 837 440 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 843 442 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 846 444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 852 block B49 null  <||@
  Comment 852 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 852 452 r11|DWORD = MOVSX [r9|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 857 454 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 862 456 JUMP ~[] destination: B49 -> B50  <||@
  Comment 862 block B50 null  <||@
  Comment 862 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 862 460 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 865 462 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 868 464 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70  <||@
  Comment 874 block B70 null  <||@
  Comment 874 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 874 606 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 879 612 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3  <||@
  Comment 886 614 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 890 616 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 897 618 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 907 620 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 911 622 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 916 624 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 919 626 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 923 628 JUMP ~[] destination: B70 -> B71  <||@
  Comment 928 block B51 null  <||@
  Comment 928 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 468 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 933 470 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 936 472 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 940 474 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 943 476 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 949 block B52 null  <||@
  Comment 949 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 480 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 956 482 JUMP ~[] destination: B52 -> B56  <||@
  Comment 956 block B56 null  <||@
  Comment 956 506 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 956 508 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 960 510 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 963 512 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 969 block B58 null  <||@
  Comment 969 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 520 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 973 522 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 979 524 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 983 526 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 986 528 JUMP ~[] destination: B58 -> B59  <||@
  Comment 986 block B59 null  <||@
  Comment 986 530 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 986 532 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 990 534 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 993 536 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 999 block B61 null  <||@
  Comment 999 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 544 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1003 546 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1009 548 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1013 550 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1016 552 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1016 block B62 null  <||@
  Comment 1016 554 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1016 556 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1020 558 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1023 560 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1029 block B64 null  <||@
  Comment 1029 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1029 568 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1033 570 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1039 572 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1043 574 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1046 576 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1046 block B65 null  <||@
  Comment 1046 578 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1046 580 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1049 582 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1052 584 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67  <||@
  Comment 1058 block B67 null  <||@
  Comment 1058 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1058 594 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1063 598 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1068 block B82 null  <||@
  Comment 1068 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 738 rax|DWORD = LEA [rdi|DWORD - 2] size: DWORD  <||@
  Comment 1071 740 CMP (x: rcx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1073 746 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1078 742 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 1084 block B83 null  <||@
  Comment 1084 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1084 748 MOV (x: [r8|QWORD[.] + rax|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 1090 750 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1094 752 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 754 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1106 12  <||@
  Comment 1116 block B72 null  <||@
  Comment 1116 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 640 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1120 642 rdx|DWORD = NEG stack:36|DWORD size: DWORD  <||@
  Comment 1126 644 r9|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 1132 646 r11|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 1138 650 JUMP ~[] destination: B72 -> B74  <||@
  Comment 1143 block B3 null  <||@
  Comment 1143 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1143 38 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 40 r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1151 42 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1155 44 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1158 46 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 1164 block B5 null  <||@
  Comment 1164 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1164 60 rdx|DWORD = NEG stack:36|DWORD size: DWORD  <||@
  Comment 1170 62 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1176 64 JUMP ~[] destination: B5 -> B6  <||@
  Comment 1181 block B7 loop 0 depth 1 header:61|LoopBegin  <||@
  Comment 1181 72 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1184 74 CMP (x: rdx|DWORD, y: [r9|QWORD[.] + r11|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 1189 76 BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 1195 block B8 loop 0 depth 1 header:61|LoopBegin  <||@
  Comment 1195 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 80 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 21, 2]  <||@
  Comment 1195 [rsi:0, r9:0, r14:0, stack:16, stack:32]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |rdx|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1195 {infopoint: SAFEPOINT}  <||@
  Comment 1195 11  <||@
  Comment 1201 82 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1204 84 JUMP ~[] destination: B8 -> B6  <||@
  Comment 1204 block B6 loop 0 depth 1 header:61|LoopBegin  <||@
  Comment 1204 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1204 68 CMP r11|DWORD y: 10 size: DWORD  <||@
  Comment 1208 70 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12  <||@
  Comment 1215 block B9 null  <||@
  Comment 1215 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 88 rbx|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 1219 90 r10|DWORD = ADD (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1222 92 rdx|DWORD = SUB (x: r10|DWORD, ~y: [r14|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1233 94 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 1236 96 BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 1242 block B10 null  <||@
  Comment 1242 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1242 100 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 102 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1251 104 JUMP ~[] destination: B10 -> B71  <||@
  Comment 1256 block B53 null  <||@
  Comment 1256 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1256 486 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1260 488 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1267 490 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1267 block B54 loop 3 depth 1 header:705|LoopBegin  <||@
  Comment 1267 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 494 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1286 496 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1290 498 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1293 500 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54  <||@
  Comment 1300 block B36 loop 2 depth 1 header:640|LoopBegin  <||@
  Comment 1300 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1312 352 xmm0|V256_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1318 354 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1324 356 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1328 358 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1331 360 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1338 block B30 null  <||@
  Comment 1338 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 290 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1343 296 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1343 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1353 298 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1356 300 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1359 302 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1364 304 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 43, 2]  <||@
  Comment 1364 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1369 [r14:0, stack:16, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:32|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |-  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 1370 306 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1375 block B11 null  <||@
  Comment 1375 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 108 r11|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1378 110 JUMP ~[] destination: B11 -> B23  <||@
  Comment 1383 block B93 null  <||@
  Comment 1383 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1383 862 r9|DWORD = MOVE input: int[-88603|0xfffffffffffea5e5]  <||@
  Comment 1389 864 JUMP ~[] destination: B93 -> B96  <||@
  Comment 1389 block B96 null  <||@
  Comment 1389 878 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1389 880 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 1396 882 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1403 884 DEOPT info [bci:17, 52, 2]  <||@
  Comment 1403 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1408 [rsi:0, r8:0]at java.lang.Integer.getChars(Integer.java:444) [bci: 17, duringCall: false, rethrow: false]
              |0          |1  |2            |3  |4  |5          |6         
     locals:  |rbx|DWORD  |-  |r8|QWORD[.]  |-  |-  |rdi|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1409 block B98 null  <||@
  Comment 1409 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1409 892 MOV [r15|QWORD + 668] y: -66331 size: DWORD  <||@
  Comment 1420 894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1427 896 DEOPT info [bci:2, 30, 2]  <||@
  Comment 1427 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1432 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |rdx|DWORD  |rcx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30, duringCall: true, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1433 block B95 null  <||@
  Comment 1433 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1433 874 r9|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5]  <||@
  Comment 1439 876 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1441 block B84 null  <||@
  Comment 1441 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1441 760 MOV [r15|QWORD + 668] y: -79131 size: DWORD  <||@
  Comment 1452 762 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1459 764 DEOPT info [bci:107, 52, 2]  <||@
  Comment 1459 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1464 [rsi:0, r8:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2            |3          |4          |5          |6         
     locals:  |stack:56|DWORD  |-  |r8|QWORD[.]  |rbp|DWORD  |r14|DWORD  |r13|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1465 block B87 null  <||@
  Comment 1465 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1465 784 r9|DWORD = MOVE input: int[-72731|0xfffffffffffee3e5]  <||@
  Comment 1471 786 JUMP ~[] destination: B87 -> B88  <||@
  Comment 1471 block B88 null  <||@
  Comment 1471 788 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1471 790 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 1478 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1485 794 DEOPT info [bci:75, 52, 2]  <||@
  Comment 1485 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1490 [rsi:0, r8:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0          |1  |2            |3  |4  |5          |6         
     locals:  |rbx|DWORD  |-  |r8|QWORD[.]  |-  |-  |rdi|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1491 block B86 null  <||@
  Comment 1491 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 778 r9|DWORD = MOVE input: int[-76315|0xfffffffffffed5e5]  <||@
  Comment 1497 780 JUMP ~[] destination: B86 -> B88  <||@
  Comment 1499 block B94 null  <||@
  Comment 1499 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1499 868 r9|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5]  <||@
  Comment 1505 870 JUMP ~[] destination: B94 -> B96  <||@
  Comment 1507 block B24 null  <||@
  Comment 1507 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 220 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1512 222 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1517 224 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1522 226 MOV [r15|QWORD + 668] y: -119905 size: DWORD  <||@
  Comment 1533 228 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1540 230 DEOPT info [bci:20, 43, 2]  <||@
  Comment 1540 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1545 [rsi:0, r8:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1            |2         
     locals:  |-             |-            |          
     stack:   |rsi|QWORD[.]  |r8|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43, duringCall: true, rethrow: false]
              |0             |1               |2  |3         
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1546 block B1 null  <||@
  Comment 1546 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1546 14 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1556 16 r10|DWORD = MOVE input: int[-60435|0xffffffffffff13ed]  <||@
  Comment 1562 18 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1566 20 JUMP ~[] destination: B1 -> B15  <||@
  Comment 1566 block B15 null  <||@
  Comment 1566 138 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1566 140 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1573 142 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1580 144 DEOPT info [bci:0]  <||@
  Comment 1580 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1585 [rsi:0]at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 0, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1586 block B4 null  <||@
  Comment 1586 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1586 50 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759]  <||@
  Comment 1586 {Object[d.a@2084224759]}  <||@
  Comment 1596 52 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1599 54 r10|DWORD = MOVE input: int[-65035|0xffffffffffff01f5]  <||@
  Comment 1605 56 JUMP ~[] destination: B4 -> B15  <||@
  Comment 1607 block B12 null  <||@
  Comment 1607 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1607 114 MOV [r15|QWORD + 668] y: -61211 size: DWORD  <||@
  Comment 1618 116 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1625 118 DEOPT info [bci:2, 21, 2]  <||@
  Comment 1625 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1630 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |rdx|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1631 block B14 null  <||@
  Comment 1631 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1631 128 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1635 130 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759]  <||@
  Comment 1635 {Object[d.a@2084224759]}  <||@
  Comment 1645 132 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1648 134 r10|DWORD = MOVE input: int[-69131|0xfffffffffffef1f5]  <||@
  Comment 1654 136 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1656 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1656 4  <||@
  Comment 1662 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1662 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8385[java.lang.StringBuilder.append(int)]"
  method "HotSpotCompilation-8385[java.lang.StringBuilder.append(int)]"
  date 1527005179259
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a80fe0 448b560849c1e203493bc20f856f4ed8fe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242081fa000000800f84c9050000448b560c448b5e10458bc349c1e00349b9f8310ac00600000085d20f8c150400004585db0f84f4050000b900000000e9220000006666660f1f8400000000008bd9ffc3413b5489100f8e12000000850591dfe0fc8bcb83f90a72e4e9e00400004403d3418bc2422b04dd0c00000083f8010f8d4d01000041850085d20f8c9903000041b90000000041bb000000008bc2418b480c418bfae97b0000006666908bc3ba1f85eb51f7ea8bc2c1f8058be8c1e50683e2e003ea8bd0c1e20203ea8bd32bd583fa640f838d0400008befffcd3bcd0f86c3040000448d6ffe413bcd0f864204000048bb30320ac0060000000fbf5c53106641895c681048bb08330ac0060000000fbf5c53106643895c68108505d1dee0fc418bfd8bd881fb000001000f8d7affffff48b8e0330ac006000000e9410000006666660f1f840000000000448bef41ffcd413bcd0f8644040000895c2408420fbf5c70106643895c6810f7c20000f8ff0f8437000000850575dee0fc418bfd8bdd69d3cdcc00008beac1ed13448bed41c1e503448bf541d1e64503ee448bf3452bf54183fe2472a3e9d70300004585db0f85410200004489560c488bc6488b6c24304883c438850525dee0fcc5f877c34c894424108954241c438504dc4c8bce418bd2448954240c44895c24080f1f440000e8944ed8fe90448be84585ed0f8caa030000498b4760498b77704181fdffffff000f83ec020000418bd5d1e28d521783e2f84863d2488bca4803c8483bce0f87cf02000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489680c48c70001000000c74008410000f8448b742408468b14f50c000000453bea458bdd450f4fda4d63d34983fa010f8c990000004d8d5af04c8d40104e8d0cf5100000004d85db48c7c1000000000f8d3b0200004d8d5af8493bcb0f8f13000000c4c17a6f0449c4c17a7f04484c8d5908498bcb4d8d5afc493bcb0f8f13000000c4c1f96e0449c4c1f97e04484c8d5904498bcb4d8d5afe493bcb0f8f13000000c4c1796e0449c4c1797e04484c8d5902498bcb4d8bda49ffcb493bcb0f8f0a000000450fbf1c496645891c484d63dd4d3bda0f8f36000000488b7424204c8bd049c1ea03448956104c8bd649c1ea0949bb00e01b17010000004788241a448b54240c4c8bc08b54241ce918fdffff4e8d4450104d2bda4d8d53f04d85d20f8d3301000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f48ffffff6647892448e93effffff8d47fe3bc8488b7424200f86650100006645894c40104489560c488bc6488b6c24304883c4388505cedbe0fcc5f877c38954241c8b54241cf7da41b92d00000041bb2d000000e958fcffff4c89442410458bf38954241c4585f60f84a60100008b54241cf7da41bb00000000e917000000666690433b5499100f8e14000000850575dbe0fc41ffc34183fb0a72e6e988010000418d5b024403d3418bd2422b14f50c00000083fa010f8d850000004c8b4424108b54241ce9d0fbffffc5f9efc049c7c1000000000f1f8000000000660f1f440000c4817e7f04484d8d49104d3bca7ef1e9a8feffff660f1f440000660f1f440000c4c17e6f0449c4c17e7f0448488d4910493bcb7eebe9abfdffff448b74240848ba080200c007000000488bf2418bd5b900000000e8a75851ff90e947fdffff458bdee9a7fcffff41b9e5a5feff45898f9c0200004d89a7a8020000e89e60d8fe9041c7879c020000e5fcfeff4d89a7a8020000e88660d8fe9041b9e5bffeffebcc41c7879c020000e5cafeff4d89a7a8020000e86660d8fe9041b9e5e3feff45898f9c0200004d89a7a8020000e84c60d8fe9041b9e5d5feffebe441b9e5b2feffeb8a448b54240c4c8b442410488b74242041c7879c0200009f2bfeff4d89a7a8020000e81560d8fe9049bb000000000000000041baed13ffff8954241c4589979c0200004d899fa8020000e8ed5fd8fe9049baf84ef8be070000004d8bda41baf501ffffebd741c7879c020000e510ffff4d89a7a8020000e8c05fd8fe908954241c49baf84ef8be070000004d8bda41baf5f1feffeba6e8c38f1cff90e89d5ed8fe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1de48d3b slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 CMP rdx|DWORD y: -2147483648 size: DWORD  <||@
  Comment 59 10 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 65 block B2 null  <||@
  Comment 65 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 24 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 69 26 r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 73 28 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3  <||@
  Comment 80 30 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}]  <||@
  Comment 80 {Object[int[10]{9, 99, 999, 9999, 99999, ...}]}  <||@
  Comment 90 32 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 92 34 BRANCH trueDestinationProbability: 0.01965058868211167 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13  <||@
  Comment 98 block B13 null  <||@
  Comment 98 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 122 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 101 124 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16  <||@
  Comment 107 block B16 null  <||@
  Comment 107 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 107 148 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 112 150 JUMP ~[] destination: B16 -> B17  <||@
  Comment 117 block B18 loop 1 depth 1 header:44|LoopBegin  <||@
  Comment 117 158 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 160 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 132 162 CMP (x: rdx|DWORD, y: [r9|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 137 164 BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 143 block B19 loop 1 depth 1 header:44|LoopBegin  <||@
  Comment 143 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 168 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 30, 2]  <||@
  Comment 143 [rsi:0, r8:0, r9:0, r11:0, stack:32]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |rdx|DWORD  |rcx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30, duringCall: true, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 143 {infopoint: SAFEPOINT}  <||@
  Comment 143 11  <||@
  Comment 149 170 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 151 172 JUMP ~[] destination: B19 -> B17  <||@
  Comment 151 block B17 loop 1 depth 1 header:44|LoopBegin  <||@
  Comment 151 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 151 154 CMP rcx|DWORD y: 10 size: DWORD  <||@
  Comment 154 156 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B98  <||@
  Comment 161 block B20 null  <||@
  Comment 161 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 176 r10|DWORD = ADD (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 164 178 rax|DWORD = SUB (x: r10|DWORD, ~y: [r11|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 175 180 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 178 182 BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B20 -> B71 falseDestination: B20 -> B22  <||@
  Comment 184 block B71 null  <||@
  Comment 184 630 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 184 632 NULLCHECK [r8|QWORD[.]] state [bci:46, 2]  <||@
  Comment 184 [rsi:0, r8:0, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46, duringCall: false, rethrow: false]
              |0             |1          |2  |3         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 184 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 187 634 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 189 636 BRANCH trueDestinationProbability: 0.02208605257476881 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 195 block B73 null  <||@
  Comment 195 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 654 r9|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 201 656 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 207 660 JUMP ~[] destination: B73 -> B74  <||@
  Comment 207 block B74 null  <||@
  Comment 207 662 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 207 658 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 209 664 rcx|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 213 666 rdi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 216 670 JUMP ~[] destination: B74 -> B75  <||@
  Comment 221 block B89 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 221 796 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 224 798 rax|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 226 800 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 231 802 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 233 804 rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 238 806 rbp|DWORD = SHL rax|DWORD y: 6 size: DWORD  <||@
  Comment 243 808 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 246 810 rbp|DWORD = ADD (x: rbp|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 248 812 rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD  <||@
  Comment 253 814 rbp|DWORD = ADD (x: rbp|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 255 816 rdx|DWORD = SUB (x: rbx|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 259 818 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 262 820 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B95  <||@
  Comment 268 block B90 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 268 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 268 824 rbp|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 272 826 CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 274 828 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B94  <||@
  Comment 280 block B91 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 280 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 832 r13|DWORD = LEA [rdi|DWORD - 2] size: DWORD  <||@
  Comment 284 834 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 287 836 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 293 block B92 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 293 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 840 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 293 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 303 842 rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 308 844 MOV (x: [r8|QWORD[.] + rbp|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 314 846 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 314 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 324 848 rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 329 850 MOV (x: [r8|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 335 852 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72, 52, 2]  <||@
  Comment 335 [rsi:0, r8:0, stack:32]at java.lang.Integer.getChars(Integer.java:450) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2            |3          |4          |5          |6         
     locals:  |rax|DWORD  |-  |r8|QWORD[.]  |rax|DWORD  |rdx|DWORD  |r13|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 335 {infopoint: SAFEPOINT}  <||@
  Comment 335 11  <||@
  Comment 341 854 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 344 858 JUMP ~[] destination: B92 -> B75  <||@
  Comment 344 block B75 loop 4 depth 1 header:110|LoopBegin  <||@
  Comment 344 672 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 344 668 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 346 674 CMP rbx|DWORD y: 65536 size: DWORD  <||@
  Comment 352 676 BRANCH trueDestinationProbability: 0.9764562811625928 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B89  <||@
  Comment 358 block B76 null  <||@
  Comment 358 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 680 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 358 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 368 682 JUMP ~[] destination: B76 -> B77  <||@
  Comment 373 block B78 loop 5 depth 1 header:145|LoopBegin  <||@
  Comment 373 702 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 384 704 r13|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 390 706 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 393 708 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B86  <||@
  Comment 399 block B79 loop 5 depth 1 header:145|LoopBegin  <||@
  Comment 399 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 712 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 403 714 rbx|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD  <||@
  Comment 409 716 MOV (x: [r8|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 415 718 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 421 720 BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85  <||@
  Comment 427 block B85 loop 5 depth 1 header:145|LoopBegin  <||@
  Comment 427 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 768 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 52, 2]  <||@
  Comment 427 [rax:0, rsi:0, r8:0, stack:32]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2            |3          |4          |5          |6         
     locals:  |stack:56|DWORD  |-  |r8|QWORD[.]  |rbp|DWORD  |r14|DWORD  |r13|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 427 {infopoint: SAFEPOINT}  <||@
  Comment 427 11  <||@
  Comment 433 770 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 436 772 rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 438 774 JUMP ~[] destination: B85 -> B77  <||@
  Comment 438 block B77 loop 5 depth 1 header:145|LoopBegin  <||@
  Comment 438 684 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 438 686 rdx|DWORD = IMUL rbx|DWORD y: 52429 size: DWORD  <||@
  Comment 444 688 rbp|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 449 690 r13|DWORD = SHL rbp|DWORD y: 3 size: DWORD  <||@
  Comment 456 692 r14|DWORD = SHL rbp|DWORD size: DWORD  <||@
  Comment 462 694 r13|DWORD = ADD (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 465 696 r14|DWORD = SUB (x: rbx|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 471 698 CMP r14|DWORD y: 36 size: DWORD  <||@
  Comment 475 700 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B87  <||@
  Comment 482 block B80 null  <||@
  Comment 482 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 724 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 485 726 BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 491 block B81 null  <||@
  Comment 491 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 730 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 495 732 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 498 734 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 507 12  <||@
  Comment 517 block B22 null  <||@
  Comment 517 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 190 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 522 192 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 526 194 JUMP ~[] destination: B22 -> B23  <||@
  Comment 526 block B23 null  <||@
  Comment 526 196 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 526 198 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:33, 2]  <||@
  Comment 526 [rsi:0, r11:0, stack:16, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33, duringCall: false, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |-  |- 
     stack:   |rbx|DWORD     |                |   |  
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 526 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 530 200 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 533 204 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 536 206 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 541 208 stack:56|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 546 210 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 43, 2]  <||@
  Comment 546 9  <||@
  Comment 551 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 556 [stack:8, stack:16, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |-  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 557 212 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 560 214 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 563 216 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 569 block B25 null  <||@
  Comment 569 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 234 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 573 236 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 577 238 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 584 240 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 590 block B26 null  <||@
  Comment 590 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 244 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 595 246 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 598 248 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 601 250 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 604 252 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 610 254 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 613 256 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B30 falseDestination: B26 -> B28  <||@
  Comment 619 block B28 null  <||@
  Comment 619 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 266 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 623 268 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 631 270 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 639 272 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 647 274 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 655 276 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 659 278 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 666 280 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 666 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 673 282 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 673 284 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 678 286 JUMP ~[] destination: B28 -> B31  <||@
  Comment 678 block B31 null  <||@
  Comment 678 308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 678 310 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 686 312 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 689 314 r11|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 696 316 r10|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 699 318 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 703 320 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33  <||@
  Comment 709 block B33 null  <||@
  Comment 709 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 709 328 r11|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 713 330 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 717 332 r9|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 725 334 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 728 340 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 735 336 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 741 block B38 null  <||@
  Comment 741 366 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 741 368 r11|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 745 370 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 748 372 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 754 block B40 null  <||@
  Comment 754 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 380 xmm0|V128_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 760 382 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 766 384 r11|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 770 386 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 773 388 JUMP ~[] destination: B40 -> B41  <||@
  Comment 773 block B41 null  <||@
  Comment 773 390 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 773 392 r11|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 777 394 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 780 396 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 786 block B43 null  <||@
  Comment 786 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 404 xmm0|V64_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 792 406 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 798 408 r11|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 802 410 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 805 412 JUMP ~[] destination: B43 -> B44  <||@
  Comment 805 block B44 null  <||@
  Comment 805 414 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 805 416 r11|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 809 418 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 812 420 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 818 block B46 null  <||@
  Comment 818 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 818 428 xmm0|V32_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 824 430 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 830 432 r11|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 834 434 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 837 436 JUMP ~[] destination: B46 -> B47  <||@
  Comment 837 block B47 null  <||@
  Comment 837 438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 837 440 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 843 442 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 846 444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 852 block B49 null  <||@
  Comment 852 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 852 452 r11|DWORD = MOVSX [r9|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 857 454 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 862 456 JUMP ~[] destination: B49 -> B50  <||@
  Comment 862 block B50 null  <||@
  Comment 862 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 862 460 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 865 462 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 868 464 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70  <||@
  Comment 874 block B70 null  <||@
  Comment 874 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 874 606 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 879 612 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6781a19f encoding: base: 0 shift: 3  <||@
  Comment 886 614 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 890 616 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 897 618 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 907 620 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 911 622 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 916 624 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 919 626 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 923 628 JUMP ~[] destination: B70 -> B71  <||@
  Comment 928 block B51 null  <||@
  Comment 928 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 468 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 933 470 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 936 472 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 940 474 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 943 476 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 949 block B52 null  <||@
  Comment 949 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 480 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 956 482 JUMP ~[] destination: B52 -> B56  <||@
  Comment 956 block B56 null  <||@
  Comment 956 506 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 956 508 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 960 510 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 963 512 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 969 block B58 null  <||@
  Comment 969 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 520 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 973 522 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 979 524 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 983 526 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 986 528 JUMP ~[] destination: B58 -> B59  <||@
  Comment 986 block B59 null  <||@
  Comment 986 530 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 986 532 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 990 534 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 993 536 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 999 block B61 null  <||@
  Comment 999 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 544 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1003 546 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1009 548 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1013 550 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1016 552 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1016 block B62 null  <||@
  Comment 1016 554 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1016 556 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1020 558 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1023 560 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1029 block B64 null  <||@
  Comment 1029 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1029 568 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1033 570 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1039 572 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1043 574 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1046 576 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1046 block B65 null  <||@
  Comment 1046 578 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1046 580 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1049 582 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1052 584 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67  <||@
  Comment 1058 block B67 null  <||@
  Comment 1058 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1058 594 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1063 598 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1068 block B82 null  <||@
  Comment 1068 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 738 rax|DWORD = LEA [rdi|DWORD - 2] size: DWORD  <||@
  Comment 1071 740 CMP (x: rcx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1073 746 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1078 742 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 1084 block B83 null  <||@
  Comment 1084 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1084 748 MOV (x: [r8|QWORD[.] + rax|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 1090 750 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1094 752 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 754 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1106 12  <||@
  Comment 1116 block B72 null  <||@
  Comment 1116 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 640 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1120 642 rdx|DWORD = NEG stack:36|DWORD size: DWORD  <||@
  Comment 1126 644 r9|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 1132 646 r11|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 1138 650 JUMP ~[] destination: B72 -> B74  <||@
  Comment 1143 block B3 null  <||@
  Comment 1143 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1143 38 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 40 r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1151 42 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1155 44 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1158 46 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 1164 block B5 null  <||@
  Comment 1164 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1164 60 rdx|DWORD = NEG stack:36|DWORD size: DWORD  <||@
  Comment 1170 62 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1176 64 JUMP ~[] destination: B5 -> B6  <||@
  Comment 1181 block B7 loop 0 depth 1 header:61|LoopBegin  <||@
  Comment 1181 72 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1184 74 CMP (x: rdx|DWORD, y: [r9|QWORD[.] + r11|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 1189 76 BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 1195 block B8 loop 0 depth 1 header:61|LoopBegin  <||@
  Comment 1195 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 80 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 21, 2]  <||@
  Comment 1195 [rsi:0, r9:0, r14:0, stack:16, stack:32]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |rdx|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1195 {infopoint: SAFEPOINT}  <||@
  Comment 1195 11  <||@
  Comment 1201 82 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1204 84 JUMP ~[] destination: B8 -> B6  <||@
  Comment 1204 block B6 loop 0 depth 1 header:61|LoopBegin  <||@
  Comment 1204 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1204 68 CMP r11|DWORD y: 10 size: DWORD  <||@
  Comment 1208 70 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12  <||@
  Comment 1215 block B9 null  <||@
  Comment 1215 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 88 rbx|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 1219 90 r10|DWORD = ADD (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1222 92 rdx|DWORD = SUB (x: r10|DWORD, ~y: [r14|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1233 94 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 1236 96 BRANCH trueDestinationProbability: 0.9528794572946029 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 1242 block B10 null  <||@
  Comment 1242 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1242 100 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 102 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1251 104 JUMP ~[] destination: B10 -> B71  <||@
  Comment 1256 block B53 null  <||@
  Comment 1256 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1256 486 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1260 488 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1267 490 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1267 block B54 loop 3 depth 1 header:705|LoopBegin  <||@
  Comment 1267 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 494 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1286 496 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1290 498 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1293 500 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54  <||@
  Comment 1300 block B36 loop 2 depth 1 header:640|LoopBegin  <||@
  Comment 1300 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1312 352 xmm0|V256_WORD = H [r9|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1318 354 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1324 356 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1328 358 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1331 360 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1338 block B30 null  <||@
  Comment 1338 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 290 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1343 296 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1343 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1353 298 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1356 300 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1359 302 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1364 304 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 43, 2]  <||@
  Comment 1364 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1369 [r14:0, stack:16, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:32|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |-  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 1370 306 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1375 block B11 null  <||@
  Comment 1375 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 108 r11|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1378 110 JUMP ~[] destination: B11 -> B23  <||@
  Comment 1383 block B93 null  <||@
  Comment 1383 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1383 862 r9|DWORD = MOVE input: int[-88603|0xfffffffffffea5e5]  <||@
  Comment 1389 864 JUMP ~[] destination: B93 -> B96  <||@
  Comment 1389 block B96 null  <||@
  Comment 1389 878 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1389 880 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 1396 882 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1403 884 DEOPT info [bci:17, 52, 2]  <||@
  Comment 1403 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1408 [rsi:0, r8:0]at java.lang.Integer.getChars(Integer.java:444) [bci: 17, duringCall: false, rethrow: false]
              |0          |1  |2            |3  |4  |5          |6         
     locals:  |rbx|DWORD  |-  |r8|QWORD[.]  |-  |-  |rdi|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1409 block B98 null  <||@
  Comment 1409 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1409 892 MOV [r15|QWORD + 668] y: -66331 size: DWORD  <||@
  Comment 1420 894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1427 896 DEOPT info [bci:2, 30, 2]  <||@
  Comment 1427 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1432 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |rdx|DWORD  |rcx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30, duringCall: true, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1433 block B95 null  <||@
  Comment 1433 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1433 874 r9|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5]  <||@
  Comment 1439 876 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1441 block B84 null  <||@
  Comment 1441 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1441 760 MOV [r15|QWORD + 668] y: -79131 size: DWORD  <||@
  Comment 1452 762 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1459 764 DEOPT info [bci:107, 52, 2]  <||@
  Comment 1459 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1464 [rsi:0, r8:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2            |3          |4          |5          |6         
     locals:  |stack:56|DWORD  |-  |r8|QWORD[.]  |rbp|DWORD  |r14|DWORD  |r13|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1465 block B87 null  <||@
  Comment 1465 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1465 784 r9|DWORD = MOVE input: int[-72731|0xfffffffffffee3e5]  <||@
  Comment 1471 786 JUMP ~[] destination: B87 -> B88  <||@
  Comment 1471 block B88 null  <||@
  Comment 1471 788 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1471 790 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 1478 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1485 794 DEOPT info [bci:75, 52, 2]  <||@
  Comment 1485 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1490 [rsi:0, r8:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0          |1  |2            |3  |4  |5          |6         
     locals:  |rbx|DWORD  |-  |r8|QWORD[.]  |-  |-  |rdi|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1491 block B86 null  <||@
  Comment 1491 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 778 r9|DWORD = MOVE input: int[-76315|0xfffffffffffed5e5]  <||@
  Comment 1497 780 JUMP ~[] destination: B86 -> B88  <||@
  Comment 1499 block B94 null  <||@
  Comment 1499 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1499 868 r9|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5]  <||@
  Comment 1505 870 JUMP ~[] destination: B94 -> B96  <||@
  Comment 1507 block B24 null  <||@
  Comment 1507 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 220 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1512 222 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1517 224 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1522 226 MOV [r15|QWORD + 668] y: -119905 size: DWORD  <||@
  Comment 1533 228 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1540 230 DEOPT info [bci:20, 43, 2]  <||@
  Comment 1540 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1545 [rsi:0, r8:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1            |2         
     locals:  |-             |-            |          
     stack:   |rsi|QWORD[.]  |r8|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43, duringCall: true, rethrow: false]
              |0             |1               |2  |3         
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |-  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1546 block B1 null  <||@
  Comment 1546 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1546 14 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1556 16 r10|DWORD = MOVE input: int[-60435|0xffffffffffff13ed]  <||@
  Comment 1562 18 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1566 20 JUMP ~[] destination: B1 -> B15  <||@
  Comment 1566 block B15 null  <||@
  Comment 1566 138 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1566 140 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1573 142 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1580 144 DEOPT info [bci:0]  <||@
  Comment 1580 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1585 [rsi:0]at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 0, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1586 block B4 null  <||@
  Comment 1586 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1586 50 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759]  <||@
  Comment 1586 {Object[d.a@2084224759]}  <||@
  Comment 1596 52 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1599 54 r10|DWORD = MOVE input: int[-65035|0xffffffffffff01f5]  <||@
  Comment 1605 56 JUMP ~[] destination: B4 -> B15  <||@
  Comment 1607 block B12 null  <||@
  Comment 1607 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1607 114 MOV [r15|QWORD + 668] y: -61211 size: DWORD  <||@
  Comment 1618 116 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1625 118 DEOPT info [bci:2, 21, 2]  <||@
  Comment 1625 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1630 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |rdx|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:208) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1631 block B14 null  <||@
  Comment 1631 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1631 128 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1635 130 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2084224759]  <||@
  Comment 1635 {Object[d.a@2084224759]}  <||@
  Comment 1645 132 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1648 134 r10|DWORD = MOVE input: int[-69131|0xfffffffffffef1f5]  <||@
  Comment 1654 136 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1656 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1656 4  <||@
  Comment 1662 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1662 5  <||@
  HexCodeFile>>> <|@
end_nmethod
