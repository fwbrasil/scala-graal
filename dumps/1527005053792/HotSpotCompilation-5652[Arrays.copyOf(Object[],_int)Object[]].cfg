begin_compilation
  name " HotSpotCompilation-5652[java.util.Arrays.copyOf(Object[], int)]"
  method "HotSpotCompilation-5652[java.util.Arrays.copyOf(Object[], int)]"
  date 1527005168923
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v505 v479 v480 v482 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j228 v43 v59 i88 a152 v181 i202 v193 i136 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 3181
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v113 a152 v505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 v219 a152 v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v43 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v43 #trueSuccessor: v48 #falseSuccessor: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid a67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14177
stableDimension: 0
stamp: i32 [-14177] ⇊00000000ffffc89f ⇈00000000ffffc89f
stampKind: i32
value: int[-14177|0xffffffffffffc89f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i115 
speculation: a67 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i115 speculation: a67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j139 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j139 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j178 
=== Usages ===
v483 v484 
=== Predecessor ===
v44 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j178  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j139 
index: - 
=== Succesors ===
=== Usages ===
j178 v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
=== Succesors ===
next: j179 
=== Usages ===
j143 v485 v486 a151 v491 v487 v488 v489 v490 
=== Predecessor ===
j139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v483 #next: j179  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j139 
index: - 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
=== Succesors ===
next: v473 
=== Usages ===
v144 
=== Predecessor ===
j178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v484 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
=== Succesors ===
next: v147 
=== Usages ===
v120 v185 
=== Predecessor ===
j179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v482 #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 i203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2 
y: i135 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i136 
y: i159 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i136 y: i159  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i160 
y: i137 
=== Succesors ===
=== Usages ===
j142 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i160 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i138 
=== Succesors ===
=== Usages ===
j143 v487 v488 v489 v490 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j143 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
=== Inputs ===
x: j142 
y: j178 
=== Succesors ===
=== Usages ===
v144 v180 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j142 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j179 
y: j143 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j179 y: j143  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 j208 v214 v239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v144 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v146 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v144 #trueSuccessor: v145 #falseSuccessor: v146  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a152 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a152  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v473 
=== Succesors ===
=== Usages ===
a152 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v120 i2 i10 
=== Succesors ===
next: v155 
=== Usages ===
a156 
=== Predecessor ===
v145 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v120 i2 i10 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
a152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
value: j143 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v483 value: j143 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: j178 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: v487 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v487 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: j178 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: v488 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v488 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: j178 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: v489 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v489 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: j178 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: v490 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v490 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j178 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j178 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v485 value: i2 stateAfter: - lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j178 
index: - 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j178 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
value: j122 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v486 value: j122 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j178 
index: - 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j178 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
value: v473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v491 value: v473 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a151 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j178 
=== Succesors ===
next: v153 
=== Usages ===
a156 
=== Predecessor ===
v150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j178 #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
a151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v154 
values: a151 a152 
=== Succesors ===
=== Usages ===
v492 a94 v481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v154 values: a151 a152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v153 v155 
=== Succesors ===
next: v351 
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v153 v155 #next: v351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i474 
=== Usages ===
j352 j354 
=== Predecessor ===
v154 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i474  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
=== Succesors ===
next: v242 
=== Usages ===
i88 v59 
=== Predecessor ===
v351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v479 #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i474 
y: i2 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i474 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v59 
trueValue: i474 
falseValue: i2 
=== Succesors ===
=== Usages ===
j229 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v59 trueValue: i474 falseValue: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i88 
=== Succesors ===
=== Usages ===
j403 v492 j233 v239 v348 j390 j396 j400 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j229 
y: j122 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j229 y: j122  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a156 
index: - 
=== Succesors ===
=== Usages ===
j354 j200 j198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a156 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j213 j403 j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j372 j421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j400 j442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j380 j427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j396 j439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j433 j388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j390 j434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j422 v435 j373 j381 v391 j428 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v240 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
i474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v240 #falseSuccessor: v241  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
v240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid j390 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j229 
y: j389 
=== Succesors ===
=== Usages ===
v391 v393 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j229 y: j389  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j390 
y: j163 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j390 y: j163  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v351 
address: v481 
=== Succesors ===
=== Usages ===
v493 v495 v497 v499 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v351 address: v481  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v351 
address: v480 
=== Succesors ===
=== Usages ===
v494 v496 v498 v500 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v351 address: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v244 #falseSuccessor: v245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B45" 
    successors "B11" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v248 
values: j163 j388 
=== Succesors ===
=== Usages ===
v500 j388 v499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v248 values: j163 j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v247 
=== Succesors ===
next: v475 
=== Usages ===
v475 v252 v253 j381 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v247 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j352 
index: j381 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j352 index: j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v248 
address: v500 
=== Succesors ===
next: v460 
=== Usages ===
v460 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v248 address: v500 #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j354 
index: j381 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
value: v475 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v499 value: v475 stateAfter: - lastLocationAccess: - #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j381 
y: j117 
=== Succesors ===
=== Usages ===
j373 j381 v393 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j381 y: j117  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j390 
y: j388 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j390 y: j388  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v393 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v393 #trueSuccessor: v252 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v248 
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v248 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v257 
values: j163 j388 
=== Succesors ===
=== Usages ===
v498 j380 j364 v397 v497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v257 values: j163 j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v256 v258 
=== Succesors ===
next: v276 
=== Usages ===
j373 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v256 v258 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j396 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j229 
y: j395 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j229 y: j395  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j396 
y: j373 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j396 y: j373  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v397 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v397 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v279  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
v476 
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j352 
index: j373 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j352 index: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v274 
address: v498 
=== Succesors ===
next: v458 
=== Usages ===
v458 
=== Predecessor ===
v274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v274 address: v498 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j354 
index: j373 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
value: v476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v497 value: v476 stateAfter: - lastLocationAccess: - #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j373 
y: j357 
=== Succesors ===
=== Usages ===
j364 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j373 y: j357  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v268 
values: j380 j373 
=== Succesors ===
=== Usages ===
v496 j372 j355 v401 v495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v268 values: j380 j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v267 v279 
=== Succesors ===
next: v282 
=== Usages ===
j364 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v267 v279 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j229 
y: j399 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j229 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j400 
y: j364 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j400 y: j364  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v280 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v281 #falseSuccessor: v280  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
v477 
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j352 
index: j364 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j352 index: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v280 
address: v496 
=== Succesors ===
next: v456 
=== Usages ===
v456 
=== Predecessor ===
v280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v280 address: v496 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j354 
index: j364 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
value: v477 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v495 value: v477 stateAfter: - lastLocationAccess: - #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j364 
y: j371 
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j371  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j355 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v271 
values: j372 j364 
=== Succesors ===
=== Usages ===
v494 v404 v493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v271 values: j372 j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v270 v285 
=== Succesors ===
next: v288 
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v270 v285 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid j403 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j229 
y: j212 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j229 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j403 
y: j355 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j403 y: j355  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v287 #falseSuccessor: v286  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
a478 
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a478  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j352 
index: j355 
=== Succesors ===
=== Usages ===
a478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j352 index: j355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v286 
address: v494 
=== Succesors ===
next: v454 
=== Usages ===
v454 
=== Predecessor ===
v286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v286 address: v494 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j354 
index: j355 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: j355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v493 
value: a478 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
a478 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v493 value: a478 stateAfter: - lastLocationAccess: - #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B20" "B19" 
    successors "B22" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v260 v273 v291 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v260 v273 v291 #next: v407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v298 
=== Usages ===
j409 
=== Predecessor ===
v261 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
j233 v348 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j229 
y: j228 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j229 y: j228  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v348 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v296 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v348 #trueSuccessor: v297 #falseSuccessor: v296  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a156 
index: j229 
=== Succesors ===
=== Usages ===
j409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a156 index: j229  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v407 
address: v492 
=== Succesors ===
=== Usages ===
v501 v502 v503 v504 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v407 address: v492  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j228 
y: j229 
=== Succesors ===
=== Usages ===
j445 j434 j439 j442 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j228 y: j229  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j233 
y: j389 
=== Succesors ===
=== Usages ===
v435 v437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j389  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j434 
y: j163 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j434 y: j163  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v299 #falseSuccessor: v300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B36" 
    successors "B26" "B36" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v303 
values: j163 j433 
=== Succesors ===
=== Usages ===
v504 j433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v303 values: j163 j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v302 
=== Succesors ===
next: v468 
=== Usages ===
j428 v306 v307 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v302 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j409 
index: j428 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j409 index: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
value: v469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v504 value: v469 stateAfter: - lastLocationAccess: - #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j428 
y: j117 
=== Succesors ===
=== Usages ===
j422 j428 v437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j428 y: j117  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j434 
y: j433 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j434 y: j433  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v437 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v437 #trueSuccessor: v306 #falseSuccessor: v308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v303 
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v303 #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v311 
values: j163 j433 
=== Succesors ===
=== Usages ===
v503 j427 j416 v440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v311 values: j163 j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v310 v312 
=== Succesors ===
next: v330 
=== Usages ===
j422 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v310 v312 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j233 
y: j395 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j395  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j439 
y: j422 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j439 y: j422  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v329 #falseSuccessor: v328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
v329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j409 
index: j422 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j409 index: j422  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v503 
value: v472 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v503 value: v472 stateAfter: - lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j422 
y: j357 
=== Succesors ===
=== Usages ===
j416 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j422 y: j357  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j416 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v322 
values: j427 j422 
=== Succesors ===
=== Usages ===
v502 j421 j410 v443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v322 values: j427 j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v321 v333 
=== Succesors ===
next: v336 
=== Usages ===
j416 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v321 v333 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid j442 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j233 
y: j399 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j442 
y: j416 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j442 y: j416  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v335 #falseSuccessor: v334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j409 
index: j416 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j409 index: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v502 
value: v471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v502 value: v471 stateAfter: - lastLocationAccess: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j416 
y: j371 
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j416 y: j371  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v325 
values: j421 j416 
=== Succesors ===
=== Usages ===
v501 v446 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: j421 j416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v324 v339 
=== Succesors ===
next: v342 
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v324 v339 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j233 
y: j212 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j445 
y: j410 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j445 y: j410  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v341 #falseSuccessor: v340  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j409 
index: j410 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j409 index: j410  <|@  <|@
f <@~|@floating>@ <|@
tid a470 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v501 
value: a470 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v501 value: a470 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v303 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v314 v327 v345 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v314 v327 v345 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v193 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v193 #trueSuccessor: v194 #falseSuccessor: v195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j198 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v481 
=== Succesors ===
next: j200 
=== Usages ===
j199 
=== Predecessor ===
v195 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v481 #next: j200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v481 
=== Succesors ===
next: v209 
=== Usages ===
j205 
=== Predecessor ===
j198 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v481 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32
=== Inputs ===
x: i2 
y: i201 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i202 
y: i135 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i202 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i203 
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i203  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
=== Inputs ===
x: j200 
y: j204 
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j200 y: j204  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j199 j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j206 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j205 
y: i197 
=== Succesors ===
=== Usages ===
j207 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j205 y: i197  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j198 
y: i197 
=== Succesors ===
=== Usages ===
j207 j222 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j198 y: i197  <|@  <|@
f <@~|@floating>@ <|@
tid j207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j206 
y: j199 
=== Succesors ===
=== Usages ===
j208 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j206 y: j199  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j207 
y: j122 
=== Succesors ===
=== Usages ===
j211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j207 y: j122  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
j200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B42" "B44" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v210 
values: j208 j213 
=== Succesors ===
=== Usages ===
j213 v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v210 values: j208 j213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v209 
=== Succesors ===
next: v217 
=== Usages ===
j211 v215 v220 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v209 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j211 
y: j122 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j211 y: j122  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v215 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v225  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v224 v225 
=== Succesors ===
next: a94 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v224 v225 #next: a94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a156 
=== Succesors ===
next: v27 
=== Usages ===
v27 
=== Predecessor ===
v223 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a156 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 12]
stamp: void
=== Inputs ===
result: a94 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a94 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a94 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
=== Inputs ===
x: j211 
y: j212 
=== Succesors ===
=== Usages ===
j211 j218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j211 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j199 
y: j221 
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j199 y: j221  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
=== Inputs ===
x: j213 
y: j222 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j213 y: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: j218 
value: i10 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j218 value: i10 #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v248 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v248  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v505 v479 v480 v482 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j228 v43 v59 i88 a152 v181 i202 v193 i136 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 3181
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v113 a152 v505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 v219 a152 v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v43 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v43 #trueSuccessor: v48 #falseSuccessor: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f1e99ce slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [v0|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid a67 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result int[-14177|0xffffffffffffc89f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14177
stableDimension: 0
stamp: i32 [-14177] ⇊00000000ffffc89f ⇈00000000ffffc89f
stampKind: i32
value: int[-14177|0xffffffffffffc89f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i115 
speculation: a67 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i115 speculation: a67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -14177 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j139 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j139 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j178 
=== Usages ===
v483 v484 
=== Predecessor ===
v44 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j178  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j139 
index: - 
=== Succesors ===
=== Usages ===
j178 v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j178 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
=== Succesors ===
next: j179 
=== Usages ===
j143 v485 v486 a151 v491 v487 v488 v489 v490 
=== Predecessor ===
j139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v483 #next: j179  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j139 
index: - 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j179 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
=== Succesors ===
next: v473 
=== Usages ===
v144 
=== Predecessor ===
j178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v484 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
=== Succesors ===
next: v147 
=== Usages ===
v120 v185 
=== Predecessor ===
j179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v482 #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 i203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i2 
y: i135 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i136 
y: i159 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i136 y: i159  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i160 
y: i137 
=== Succesors ===
=== Usages ===
j142 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i160 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i138 
=== Succesors ===
=== Usages ===
j143 v487 v488 v489 v490 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j143 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
=== Inputs ===
x: j142 
y: j178 
=== Succesors ===
=== Usages ===
v144 v180 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j142 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j179 
y: j143 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j179 y: j143  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 j208 v214 v239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v144 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v146 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v144 #trueSuccessor: v145 #falseSuccessor: v146  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v1|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA [v5|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AND v6|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a152 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a152  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v473 
=== Succesors ===
=== Usages ===
a152 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a152 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v120 i2 i10 
=== Succesors ===
next: v155 
=== Usages ===
a156 
=== Predecessor ===
v145 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v120 i2 i10 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
a152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@11a5862a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
value: j143 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v483 value: j143 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result [v8|QWORD + v2|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: j178 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: v487 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v487 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
result [v8|QWORD + v2|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: j178 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: v488 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v488 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
result [v8|QWORD + v2|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: j178 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: v489 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v489 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
result [v8|QWORD + v2|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: j178 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: v490 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v490 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
result [v2|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j178 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j178 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v485 value: i2 stateAfter: - lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result [v2|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j178 
index: - 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j178 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
value: j122 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v486 value: j122 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
result [v2|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j178 
index: - 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j178 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
value: v473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v491 value: v473 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a151 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a151 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j178 
=== Succesors ===
next: v153 
=== Usages ===
a156 
=== Predecessor ===
v150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j178 #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
a151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + v2|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + v2|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + v2|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + v2|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD + 8], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a156 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v154 
values: a151 a152 
=== Succesors ===
=== Usages ===
v492 a94 v481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v154 values: a151 a152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v153 v155 
=== Succesors ===
next: v351 
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v153 v155 #next: v351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i474 
=== Usages ===
j352 j354 
=== Predecessor ===
v154 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i474  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i474 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
=== Succesors ===
next: v242 
=== Usages ===
i88 v59 
=== Predecessor ===
v351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v479 #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i474 
y: i2 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i474 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v59 
trueValue: i474 
falseValue: i2 
=== Succesors ===
=== Usages ===
j229 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v59 trueValue: i474 falseValue: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i88 
=== Succesors ===
=== Usages ===
j403 v492 j233 v239 v348 j390 j396 j400 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j229 
y: j122 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j229 y: j122  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
result [v13|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a156 
index: - 
=== Succesors ===
=== Usages ===
j354 j200 j198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a156 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j213 j403 j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j371 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j372 j421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j400 j442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j357 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j380 j427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j396 j439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j433 j388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j390 j434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j163 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j422 v435 j373 j381 v391 j428 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v240 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
i474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v240 #falseSuccessor: v241  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v14|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
v240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid j390 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j229 
y: j389 
=== Succesors ===
=== Usages ===
v391 v393 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j229 y: j389  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j390 
y: j163 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j390 y: j163  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v351 
address: v481 
=== Succesors ===
=== Usages ===
v493 v495 v497 v499 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v351 address: v481  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v351 
address: v480 
=== Succesors ===
=== Usages ===
v494 v496 v498 v500 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v351 address: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v244 #falseSuccessor: v245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = LEA [v13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B45" 
    successors "B11" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j381 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v248 
values: j163 j388 
=== Succesors ===
=== Usages ===
v500 j388 v499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v248 values: j163 j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v247 
=== Succesors ===
next: v475 
=== Usages ===
v475 v252 v253 j381 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v247 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
result [v19|QWORD[.] + v20|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j352 
index: j381 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j352 index: j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
result v21|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v248 
address: v500 
=== Succesors ===
next: v460 
=== Usages ===
v460 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v248 address: v500 #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
result [v18|QWORD[.] + v20|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j354 
index: j381 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
value: v475 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v499 value: v475 stateAfter: - lastLocationAccess: - #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j381 
y: j117 
=== Succesors ===
=== Usages ===
j373 j381 v393 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j381 y: j117  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j390 
y: j388 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j390 y: j388  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v393 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v393 #trueSuccessor: v252 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|V256_DWORD[........] = H [v19|QWORD[.] + v20|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.] + v20|QWORD * 4], input: v21|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v20|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v248 
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v248 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j373 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v257 
values: j163 j388 
=== Succesors ===
=== Usages ===
v498 j380 j364 v397 v497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v257 values: j163 j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v256 v258 
=== Succesors ===
next: v276 
=== Usages ===
j373 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v256 v258 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j396 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j229 
y: j395 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j229 y: j395  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j396 
y: j373 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j396 y: j373  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v397 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v397 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v16|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v279  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
v476 
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
result [v19|QWORD[.] + v23|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j352 
index: j373 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j352 index: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
result v25|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v274 
address: v498 
=== Succesors ===
next: v458 
=== Usages ===
v458 
=== Predecessor ===
v274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v274 address: v498 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
result [v18|QWORD[.] + v23|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j354 
index: j373 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
value: v476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v497 value: v476 stateAfter: - lastLocationAccess: - #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j373 
y: j357 
=== Succesors ===
=== Usages ===
j364 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j373 y: j357  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V128_DWORD[....] = H [v19|QWORD[.] + v23|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.] + v23|QWORD * 4], input: v25|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v23|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j364 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v268 
values: j380 j373 
=== Succesors ===
=== Usages ===
v496 j372 j355 v401 v495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v268 values: j380 j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v267 v279 
=== Succesors ===
next: v282 
=== Usages ===
j364 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v267 v279 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j229 
y: j399 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j229 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j400 
y: j364 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j400 y: j364  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v280 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v281 #falseSuccessor: v280  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v16|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
v477 
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
result [v19|QWORD[.] + v27|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j352 
index: j364 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j352 index: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
result v29|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v280 
address: v496 
=== Succesors ===
next: v456 
=== Usages ===
v456 
=== Predecessor ===
v280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v280 address: v496 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
result [v18|QWORD[.] + v27|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j354 
index: j364 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
value: v477 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v495 value: v477 stateAfter: - lastLocationAccess: - #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j364 
y: j371 
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j371  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V64_DWORD[..] = H [v19|QWORD[.] + v27|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.] + v27|QWORD * 4], input: v29|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j355 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v271 
values: j372 j364 
=== Succesors ===
=== Usages ===
v494 v404 v493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v271 values: j372 j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v270 v285 
=== Succesors ===
next: v288 
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v270 v285 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid j403 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j229 
y: j212 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j229 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j403 
y: j355 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j403 y: j355  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v287 #falseSuccessor: v286  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
a478 
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a478  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
result [v19|QWORD[.] + v31|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j352 
index: j355 
=== Succesors ===
=== Usages ===
a478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j352 index: j355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
result v33|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v286 
address: v494 
=== Succesors ===
next: v454 
=== Usages ===
v454 
=== Predecessor ===
v286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v286 address: v494 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
result [v18|QWORD[.] + v31|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j354 
index: j355 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j354 index: j355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v493 
value: a478 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
a478 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v493 value: a478 stateAfter: - lastLocationAccess: - #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v19|QWORD[.] + v31|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v31|QWORD * 4], y: v33|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B20" "B19" 
    successors "B22" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v260 v273 v291 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v260 v273 v291 #next: v407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v298 
=== Usages ===
j409 
=== Predecessor ===
v261 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
j233 v348 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j229 
y: j228 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j229 y: j228  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v348 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v296 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v348 #trueSuccessor: v297 #falseSuccessor: v296  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
result [v13|QWORD[.] + v16|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a156 
index: j229 
=== Succesors ===
=== Usages ===
j409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a156 index: j229  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v407 
address: v492 
=== Succesors ===
=== Usages ===
v501 v502 v503 v504 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v407 address: v492  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j228 
y: j229 
=== Succesors ===
=== Usages ===
j445 j434 j439 j442 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j228 y: j229  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j233 
y: j389 
=== Succesors ===
=== Usages ===
v435 v437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j389  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j434 
y: j163 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j434 y: j163  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v299 #falseSuccessor: v300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = LEA [v13|QWORD[.] + v16|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v34|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v36|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
result v38|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B36" 
    successors "B26" "B36" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j428 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v303 
values: j163 j433 
=== Succesors ===
=== Usages ===
v504 j433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v303 values: j163 j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v302 
=== Succesors ===
next: v468 
=== Usages ===
j428 v306 v307 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v302 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
result [v35|QWORD[.] + v39|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j409 
index: j428 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j409 index: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
value: v469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v504 value: v469 stateAfter: - lastLocationAccess: - #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j428 
y: j117 
=== Succesors ===
=== Usages ===
j422 j428 v437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j428 y: j117  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j434 
y: j433 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j434 y: j433  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v437 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v437 #trueSuccessor: v306 #falseSuccessor: v308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v39|QWORD * 4], input: v38|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v303 
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v303 #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j422 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v311 
values: j163 j433 
=== Succesors ===
=== Usages ===
v503 j427 j416 v440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v311 values: j163 j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v310 v312 
=== Succesors ===
next: v330 
=== Usages ===
j422 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v310 v312 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j233 
y: j395 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j395  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j439 
y: j422 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j439 y: j422  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v329 #falseSuccessor: v328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v36|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
v329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
result [v35|QWORD[.] + v41|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j409 
index: j422 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j409 index: j422  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
result v43|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v503 
value: v472 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v503 value: v472 stateAfter: - lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j422 
y: j357 
=== Succesors ===
=== Usages ===
j416 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j422 y: j357  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v41|QWORD * 4], input: v43|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j416 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v322 
values: j427 j422 
=== Succesors ===
=== Usages ===
v502 j421 j410 v443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v322 values: j427 j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v321 v333 
=== Succesors ===
next: v336 
=== Usages ===
j416 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v321 v333 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid j442 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j233 
y: j399 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j442 
y: j416 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j442 y: j416  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v335 #falseSuccessor: v334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v36|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
result [v35|QWORD[.] + v45|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j409 
index: j416 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j409 index: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
result v47|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v502 
value: v471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v502 value: v471 stateAfter: - lastLocationAccess: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j416 
y: j371 
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j416 y: j371  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v45|QWORD * 4], input: v47|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j410 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v325 
values: j421 j416 
=== Succesors ===
=== Usages ===
v501 v446 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: j421 j416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v324 v339 
=== Succesors ===
next: v342 
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v324 v339 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j233 
y: j212 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j445 
y: j410 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j445 y: j410  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v341 #falseSuccessor: v340  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = DEC v36|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
result [v35|QWORD[.] + v49|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j409 
index: j410 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j409 index: j410  <|@  <|@
f <@~|@floating>@ <|@
tid a470 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v501 
value: a470 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v501 value: a470 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v49|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v303 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B36 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v314 v327 v345 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v314 v327 v345 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v193 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v193 #trueSuccessor: v194 #falseSuccessor: v195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j198 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j198 <|@
result [v13|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v481 
=== Succesors ===
next: j200 
=== Usages ===
j199 
=== Predecessor ===
v195 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v481 #next: j200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j200 <|@
result [v13|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v481 
=== Succesors ===
next: v209 
=== Usages ===
j205 
=== Predecessor ===
j198 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v481 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32
=== Inputs ===
x: i2 
y: i201 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i202 
y: i135 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i202 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i203 
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i203  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
=== Inputs ===
x: j200 
y: j204 
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j200 y: j204  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j199 j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j206 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j205 
y: i197 
=== Succesors ===
=== Usages ===
j207 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j205 y: i197  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j198 
y: i197 
=== Succesors ===
=== Usages ===
j207 j222 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j198 y: i197  <|@  <|@
f <@~|@floating>@ <|@
tid j207 <|@
result v59|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j206 
y: j199 
=== Succesors ===
=== Usages ===
j208 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j206 y: j199  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
result v60|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j207 
y: j122 
=== Succesors ===
=== Usages ===
j211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j207 y: j122  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
j200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL v51|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVSXD v52|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = ADD (x: v54|QWORD[.], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = SHR v55|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = SHR v58|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = SUB (x: v56|QWORD[*], ~y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = INC v59|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[*]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B42" "B44" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j211 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v210 
values: j208 j213 
=== Succesors ===
=== Usages ===
j213 v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v210 values: j208 j213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v209 
=== Succesors ===
next: v217 
=== Usages ===
j211 v215 v220 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v209 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j211 
y: j122 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j211 y: j122  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v215 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v225  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v224 v225 
=== Succesors ===
next: a94 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v224 v225 #next: a94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a94 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a156 
=== Succesors ===
next: v27 
=== Usages ===
v27 
=== Predecessor ===
v223 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a156 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 12]
stamp: void
=== Inputs ===
result: a94 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a94 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a94 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
result v62|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
=== Inputs ===
x: j211 
y: j212 
=== Succesors ===
=== Usages ===
j211 j218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j211 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
result v64|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j199 
y: j221 
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j199 y: j221  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
result v65|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: i64
=== Inputs ===
x: j213 
y: j222 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j213 y: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
address: j218 
value: i10 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j218 value: i10 #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = DEC v61|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = ADD (x: v57|QWORD[*], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = ADD (x: v64|QWORD[*], y: v62|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v65|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[*]] destination: B44 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v248 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v248  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD] destination: B45 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f1e99ce slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [v0|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v1|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA [v5|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AND v6|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + v2|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + v2|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + v2|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + v2|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD + 8], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = CMOVE (falseValue: v1|DWORD, ~trueValue: v14|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = LEA [v13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v16|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V128_DWORD[....] = H [v19|QWORD[.] + v23|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.] + v23|QWORD * 4], input: v25|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v23|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v16|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V64_DWORD[..] = H [v19|QWORD[.] + v27|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.] + v27|QWORD * 4], input: v29|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v19|QWORD[.] + v31|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v31|QWORD * 4], y: v33|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B20" "B19" 
    successors "B22" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL v51|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVSXD v52|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = ADD (x: v54|QWORD[.], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = SHR v55|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = SHR v58|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = SUB (x: v56|QWORD[*], ~y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = INC v59|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[*]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = DEC v61|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = ADD (x: v57|QWORD[*], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = ADD (x: v64|QWORD[*], y: v62|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v65|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[*]] destination: B44 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B42" "B44" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = LEA [v13|QWORD[.] + v16|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v34|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v36|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v36|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v41|QWORD * 4], input: v43|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v36|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v45|QWORD * 4], input: v47|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = DEC v36|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v49|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B36 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B36" 
    successors "B26" "B36" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v39|QWORD * 4], input: v38|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD] destination: B45 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B45" 
    successors "B11" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|V256_DWORD[........] = H [v19|QWORD[.] + v20|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.] + v20|QWORD * 4], input: v21|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v20|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@11a5862a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -14177 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #32         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #75         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: checkcast     #54         // java.lang.Object[]
    12: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f1e99ce slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction NULLCHECK [r13|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   46  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rax|QWORD + 8], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction xmm0|V128_DWORD[....] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  130  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  132  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction xmm0|V64_DWORD[..] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  152  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  154  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + r11|QWORD * 4] size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [rcx|QWORD[.] + r11|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B20" "B19" 
    successors "B22" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  186  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  306  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  342  <|@ instruction MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B42" "B44" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  328  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  202  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  246  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  268  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B36 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B36" 
    successors "B26" "B36" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  220  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B45 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B45" 
    successors "B11" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  100  <|@ instruction xmm0|V256_DWORD[........] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  102  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  104  <|@ instruction r11|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@11a5862a encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 668] y: -14177 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #32         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #75         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: checkcast     #54         // java.lang.Object[]
    12: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f1e99ce slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction NULLCHECK [r13|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   46  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rax|QWORD + 8], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B21" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B21 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B15" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B12 -> B15 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction xmm0|V128_DWORD[....] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  130  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  132  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B12" 
    successors "B18" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction xmm0|V64_DWORD[..] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  152  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  154  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B21" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + r11|QWORD * 4] size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [rcx|QWORD[.] + r11|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" "B20" "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  186  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B21" "B35" "B33" 
    successors "B43" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B38 -> B43 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  306  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  342  <|@ instruction MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  328  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B41 -> B43 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  202  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B30" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  246  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B33" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  268  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B30" 
    successors "B38" "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B38 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B25" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  218  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  220  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B27 falseDestination: B25 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B12" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  100  <|@ instruction xmm0|V256_DWORD[........] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  102  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  104  <|@ instruction r11|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B10 -> B12 falseDestination: B10 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@11a5862a encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 668] y: -14177 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #32         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #75         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: checkcast     #54         // java.lang.Object[]
    12: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c24104c8bee448bf2418545004585f60f8c31020000498b4760498b7770418b5508418bcec1e1028d491783e1f84863c94c8bd14c03d04c3bd60f87ed0100004d8957600f188401c00000000f188401000100000f188401400100000f188401800100004489700c48c70001000000895008418b750c443bf6418bd60f4fd64863f24883fe010f8c73000000488d56f8488d48104d8d55104885d249c7c3000000000f8d6b010000488d56fc4c3bda0f8f13000000c4817a6f049ac4a17a7f0499498d53044c8bda488d56fe4c3bda0f8f13000000c481f96e049ac4a1f97e0499498d53024c8bda488bd648ffca4c3bda0f8f08000000438b149a428914994963d6483bd60f8f5a0000004585f60f84be00000041ffce41c1e6024963f6488d50104803d648c1ea09488d701048c1ee09482bd648ffc2e91d0000000f1f800000000048ffca48b900e01b17010000004803ce4803ca4488214883fa010f8c6f000000ebde488d4cb010482bd6488d72f84885f60f8d6b00000049c7c200000000488d72fc4c3bd60f8f11000000c5f9efc0c4a17a7f0491498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1f97e0491498d72024c8bd648ffca4c3bd20f8f42ffffff46892491e939ffffff488b6c24104883c418850500000000c5f877c3c5f9efc049c7c200000000666690c4a17e7f04914d8d52084c3bd67ef1e97affffff660f1f440000660f1f440000c4817e6f049ac4a17e7f04994d8d5b084c3bda7eebe97bfeffff48c1e203488bf2418bd6b900000000e80000000090e92bfeffff41c7879c0200009fc8ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f1e99ce slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 NULLCHECK [r13|QWORD[.]] state [bci:0]  <||@
  Comment 22 [r13:0]at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 22 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 26 12 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 29 14 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 35 block B2 null  <||@
  Comment 35 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 35 18 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 39 20 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 43 22 rdx|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 47 24 rcx|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 53 26 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 56 28 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 59 30 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 62 32 r10|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 68 34 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 71 36 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 77 block B4 null  <||@
  Comment 77 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 40 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 81 42 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 89 44 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 97 46 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 105 48 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 113 50 MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 117 52 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 124 54 MOV (x: [rax|QWORD + 8], y: rdx|DWORD) size: DWORD  <||@
  Comment 127 56 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 127 58 JUMP ~[] destination: B4 -> B5  <||@
  Comment 127 block B5 null  <||@
  Comment 127 60 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 127 62 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 131 64 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 134 66 rdx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 140 68 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 143 70 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 147 72 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B21 falseDestination: B5 -> B7  <||@
  Comment 153 block B7 null  <||@
  Comment 153 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 76 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 157 78 rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 161 80 r10|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD  <||@
  Comment 165 82 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 168 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 175 84 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B10  <||@
  Comment 181 block B12 null  <||@
  Comment 181 118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 181 120 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 185 122 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 188 124 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B12 -> B15 falseDestination: B12 -> B14  <||@
  Comment 194 block B14 null  <||@
  Comment 194 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 128 xmm0|V128_DWORD[....] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 200 130 J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 206 132 rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 210 -1 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 213 134 JUMP ~[] destination: B14 -> B15  <||@
  Comment 213 block B15 null  <||@
  Comment 213 140 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 213 142 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 217 144 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 220 146 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17  <||@
  Comment 226 block B17 null  <||@
  Comment 226 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 150 xmm0|V64_DWORD[..] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 232 152 J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 238 154 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 242 -1 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 245 156 JUMP ~[] destination: B17 -> B18  <||@
  Comment 245 block B18 null  <||@
  Comment 245 162 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 245 164 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 251 166 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 254 168 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 260 block B20 null  <||@
  Comment 260 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 260 172 rdx|DWORD[.] = MOV [r10|QWORD[.] + r11|QWORD * 4] size: DWORD  <||@
  Comment 264 174 MOV (x: [rcx|QWORD[.] + r11|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 268 176 JUMP ~[] destination: B20 -> B21  <||@
  Comment 268 block B21 null  <||@
  Comment 268 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 268 184 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 271 186 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 274 188 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B38  <||@
  Comment 280 block B38 null  <||@
  Comment 280 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 298 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 283 300 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B38 -> B43 falseDestination: B38 -> B40  <||@
  Comment 289 block B40 null  <||@
  Comment 289 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 304 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 292 306 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 296 308 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 299 310 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 303 312 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 306 314 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 310 316 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 314 318 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 318 320 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 321 322 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 324 324 JUMP ~[] destination: B40 -> B41  <||@
  Comment 329 block B44 loop 2 depth 1 header:210|LoopBegin  <||@
  Comment 329 332 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 336 334 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 339 336 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 349 338 rcx|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 352 340 rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 355 342 MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 358 344 JUMP ~[] destination: B44 -> B41  <||@
  Comment 358 block B41 loop 2 depth 1 header:210|LoopBegin  <||@
  Comment 358 326 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 358 328 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 362 330 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B41 -> B43 falseDestination: B41 -> B44  <||@
  Comment 370 block B22 null  <||@
  Comment 370 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 196 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD  <||@
  Comment 375 198 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 378 200 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 382 202 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 385 204 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 391 block B23 null  <||@
  Comment 391 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 -1 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 398 208 JUMP ~[] destination: B23 -> B27  <||@
  Comment 398 block B27 null  <||@
  Comment 398 234 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 398 236 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 402 238 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 405 240 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 411 block B29 null  <||@
  Comment 411 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 244 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 415 246 J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 421 248 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 425 -1 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 428 250 JUMP ~[] destination: B29 -> B30  <||@
  Comment 428 block B30 null  <||@
  Comment 428 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 428 258 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 432 260 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 435 262 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 441 block B32 null  <||@
  Comment 441 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 266 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 445 268 J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 451 270 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 455 -1 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 458 272 JUMP ~[] destination: B32 -> B33  <||@
  Comment 458 block B33 null  <||@
  Comment 458 278 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 458 280 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 461 282 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 464 284 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 470 block B35 null  <||@
  Comment 470 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 288 MOV (x: [rcx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 474 290 JUMP ~[] destination: B35 -> B38  <||@
  Comment 479 block B43 null  <||@
  Comment 479 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 358 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 488 12  <||@
  Comment 498 block B24 null  <||@
  Comment 498 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 212 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 502 -1 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 509 214 JUMP ~[] destination: B24 -> B25  <||@
  Comment 509 block B25 loop 1 depth 1 header:303|LoopBegin  <||@
  Comment 509 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 512 218 J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 518 220 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 522 222 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 525 224 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B27 falseDestination: B25 -> B25  <||@
  Comment 532 block B10 loop 0 depth 1 header:248|LoopBegin  <||@
  Comment 532 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 544 100 xmm0|V256_DWORD[........] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 550 102 J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 556 104 r11|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 560 106 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 563 108 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B10 -> B12 falseDestination: B10 -> B10  <||@
  Comment 570 block B3 null  <||@
  Comment 570 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 362 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@11a5862a encoding: base: 0 shift: 3  <||@
  Comment 574 364 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 577 366 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 580 368 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 585 370 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 585 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 590 [r13:0]at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 591 374 JUMP ~[] destination: B3 -> B5  <||@
  Comment 596 block B1 null  <||@
  Comment 596 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 596 378 MOV [r15|QWORD + 668] y: -14177 size: DWORD  <||@
  Comment 607 380 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 614 382 DEOPT info [bci:0]  <||@
  Comment 614 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 619 [r13:0]at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 620 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 620 4  <||@
  Comment 626 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 626 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5652[java.util.Arrays.copyOf(Object[], int)]"
  method "HotSpotCompilation-5652[java.util.Arrays.copyOf(Object[], int)]"
  date 1527005169149
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106964120 89842400c0feff4883ec1848896c24104c8bee448bf2418545004585f60f8c31020000498b4760498b7770418b5508418bcec1e1028d491783e1f84863c94c8bd14c03d04c3bd60f87ed0100004d8957600f188401c00000000f188401000100000f188401400100000f188401800100004489700c48c70001000000895008418b750c443bf6418bd60f4fd64863f24883fe010f8c73000000488d56f8488d48104d8d55104885d249c7c3000000000f8d6b010000488d56fc4c3bda0f8f13000000c4817a6f049ac4a17a7f0499498d53044c8bda488d56fe4c3bda0f8f13000000c481f96e049ac4a1f97e0499498d53024c8bda488bd648ffca4c3bda0f8f08000000438b149a428914994963d6483bd60f8f5a0000004585f60f84be00000041ffce41c1e6024963f6488d50104803d648c1ea09488d701048c1ee09482bd648ffc2e91d0000000f1f800000000048ffca48b900e01b17010000004803ce4803ca4488214883fa010f8c6f000000ebde488d4cb010482bd6488d72f84885f60f8d6b00000049c7c200000000488d72fc4c3bd60f8f11000000c5f9efc0c4a17a7f0491498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1f97e0491498d72024c8bd648ffca4c3bd20f8f42ffffff46892491e939ffffff488b6c24104883c4188505f8acf2fdc5f877c3c5f9efc049c7c200000000666690c4a17e7f04914d8d52084c3bd67ef1e97affffff660f1f440000660f1f440000c4817e6f049ac4a17e7f04994d8d5b084c3bda7eebe97bfeffff48c1e203488bf2418bd6b900000000e8722a630090e92bfeffff41c7879c0200009fc8ffff4d89a7a8020000e87332eaff90e88f622e0090e86931eaff90  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f1e99ce slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 NULLCHECK [r13|QWORD[.]] state [bci:0]  <||@
  Comment 22 [r13:0]at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 22 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 26 12 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 29 14 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 35 block B2 null  <||@
  Comment 35 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 35 18 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 39 20 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 43 22 rdx|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 47 24 rcx|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 53 26 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 56 28 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 59 30 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 62 32 r10|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 68 34 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 71 36 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 77 block B4 null  <||@
  Comment 77 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 40 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 81 42 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 89 44 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 97 46 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 105 48 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 113 50 MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 117 52 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 124 54 MOV (x: [rax|QWORD + 8], y: rdx|DWORD) size: DWORD  <||@
  Comment 127 56 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 127 58 JUMP ~[] destination: B4 -> B5  <||@
  Comment 127 block B5 null  <||@
  Comment 127 60 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 127 62 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 131 64 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 134 66 rdx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 140 68 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 143 70 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 147 72 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B21 falseDestination: B5 -> B7  <||@
  Comment 153 block B7 null  <||@
  Comment 153 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 76 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 157 78 rcx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 161 80 r10|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD  <||@
  Comment 165 82 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 168 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 175 84 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B10  <||@
  Comment 181 block B12 null  <||@
  Comment 181 118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 181 120 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 185 122 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 188 124 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B12 -> B15 falseDestination: B12 -> B14  <||@
  Comment 194 block B14 null  <||@
  Comment 194 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 128 xmm0|V128_DWORD[....] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 200 130 J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 206 132 rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 210 -1 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 213 134 JUMP ~[] destination: B14 -> B15  <||@
  Comment 213 block B15 null  <||@
  Comment 213 140 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 213 142 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 217 144 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 220 146 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17  <||@
  Comment 226 block B17 null  <||@
  Comment 226 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 150 xmm0|V64_DWORD[..] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 232 152 J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 238 154 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 242 -1 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 245 156 JUMP ~[] destination: B17 -> B18  <||@
  Comment 245 block B18 null  <||@
  Comment 245 162 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 245 164 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 251 166 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 254 168 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 260 block B20 null  <||@
  Comment 260 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 260 172 rdx|DWORD[.] = MOV [r10|QWORD[.] + r11|QWORD * 4] size: DWORD  <||@
  Comment 264 174 MOV (x: [rcx|QWORD[.] + r11|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 268 176 JUMP ~[] destination: B20 -> B21  <||@
  Comment 268 block B21 null  <||@
  Comment 268 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 268 184 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 271 186 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 274 188 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B38  <||@
  Comment 280 block B38 null  <||@
  Comment 280 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 298 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 283 300 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B38 -> B43 falseDestination: B38 -> B40  <||@
  Comment 289 block B40 null  <||@
  Comment 289 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 304 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 292 306 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 296 308 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 299 310 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 303 312 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 306 314 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 310 316 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 314 318 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 318 320 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 321 322 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 324 324 JUMP ~[] destination: B40 -> B41  <||@
  Comment 329 block B44 loop 2 depth 1 header:210|LoopBegin  <||@
  Comment 329 332 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 336 334 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 339 336 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 349 338 rcx|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 352 340 rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 355 342 MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 358 344 JUMP ~[] destination: B44 -> B41  <||@
  Comment 358 block B41 loop 2 depth 1 header:210|LoopBegin  <||@
  Comment 358 326 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 358 328 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 362 330 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B41 -> B43 falseDestination: B41 -> B44  <||@
  Comment 370 block B22 null  <||@
  Comment 370 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 196 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD  <||@
  Comment 375 198 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 378 200 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 382 202 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 385 204 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 391 block B23 null  <||@
  Comment 391 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 -1 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 398 208 JUMP ~[] destination: B23 -> B27  <||@
  Comment 398 block B27 null  <||@
  Comment 398 234 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 398 236 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 402 238 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 405 240 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 411 block B29 null  <||@
  Comment 411 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 244 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 415 246 J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 421 248 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 425 -1 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 428 250 JUMP ~[] destination: B29 -> B30  <||@
  Comment 428 block B30 null  <||@
  Comment 428 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 428 258 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 432 260 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 435 262 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 441 block B32 null  <||@
  Comment 441 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 266 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 445 268 J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 451 270 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 455 -1 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 458 272 JUMP ~[] destination: B32 -> B33  <||@
  Comment 458 block B33 null  <||@
  Comment 458 278 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 458 280 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 461 282 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 464 284 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 470 block B35 null  <||@
  Comment 470 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 288 MOV (x: [rcx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 474 290 JUMP ~[] destination: B35 -> B38  <||@
  Comment 479 block B43 null  <||@
  Comment 479 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 358 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 488 12  <||@
  Comment 498 block B24 null  <||@
  Comment 498 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 212 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 502 -1 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 509 214 JUMP ~[] destination: B24 -> B25  <||@
  Comment 509 block B25 loop 1 depth 1 header:303|LoopBegin  <||@
  Comment 509 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 512 218 J (address: [rcx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 518 220 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 522 222 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 525 224 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B27 falseDestination: B25 -> B25  <||@
  Comment 532 block B10 loop 0 depth 1 header:248|LoopBegin  <||@
  Comment 532 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 544 100 xmm0|V256_DWORD[........] = H [r10|QWORD[.] + r11|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 550 102 J (address: [rcx|QWORD[.] + r11|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 556 104 r11|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 560 106 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 563 108 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B10 -> B12 falseDestination: B10 -> B10  <||@
  Comment 570 block B3 null  <||@
  Comment 570 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 362 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@11a5862a encoding: base: 0 shift: 3  <||@
  Comment 574 364 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 577 366 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 580 368 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 585 370 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 585 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 590 [r13:0]at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 591 374 JUMP ~[] destination: B3 -> B5  <||@
  Comment 596 block B1 null  <||@
  Comment 596 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 596 378 MOV [r15|QWORD + 668] y: -14177 size: DWORD  <||@
  Comment 607 380 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 614 382 DEOPT info [bci:0]  <||@
  Comment 614 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 619 [r13:0]at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 620 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 620 4  <||@
  Comment 626 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 626 5  <||@
  HexCodeFile>>> <|@
end_nmethod
