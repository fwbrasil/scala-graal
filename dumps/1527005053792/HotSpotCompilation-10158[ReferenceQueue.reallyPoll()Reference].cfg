begin_compilation
  name " HotSpotCompilation-10158[java.lang.ref.ReferenceQueue.reallyPoll()]"
  method "HotSpotCompilation-10158[java.lang.ref.ReferenceQueue.reallyPoll()]"
  date 1527005243656
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:80) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a224 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a224  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/ref/ReferenceQueue;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 v235 j210 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a224 v109 v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.head
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:80) [bci: 1]
nullCheck: false
stamp: n Ljava/lang/ref/Reference;
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
=== Succesors ===
next: v83 
=== Usages ===
a81 v190 v191 v187 v236 v240 v243 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v235 #next: v83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:80) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
a224 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:81) [bci: 6]
stamp: void
=== Inputs ===
value: a224 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a224  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:81) [bci: 6]
stamp: void
trueSuccessorProbability: 0.022702306847308677
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582200715850535297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:93) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:81) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:93) [bci: 65]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a225 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a225  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a224 
=== Succesors ===
=== Usages ===
a225 v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.next
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/ref/Reference;
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
=== Succesors ===
next: v110 
=== Usages ===
v191 v129 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v236 #next: v110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
a225 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a224 
y: a225 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a224 y: a225  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:80) [bci: 1]
op: Uncompress
stamp: a Ljava/lang/ref/Reference;
=== Inputs ===
value: a224 
=== Succesors ===
=== Usages ===
v53 v52 ?63 j217 j200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a224  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a224 
=== Succesors ===
=== Usages ===
v120 v135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a224  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j227 v185 j229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 v214 v221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j202 j211 j218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 v245 v246 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 30]
rawvalue: Class:java.lang.ref.ReferenceQueue
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.ref.ReferenceQueue]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a112 
index: - 
=== Succesors ===
=== Usages ===
a226 a228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a112 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 15]
stamp: void
trueSuccessorProbability: 0.043836642937429726
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4586334924662625310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a141 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ReferenceQueue.head
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
value: a141 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 value: a141 stateAfter: - lastLocationAccess: - #next: v111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a226 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.NULL
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 30]
nullCheck: false
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
=== Succesors ===
next: v121 
=== Usages ===
v120 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 #next: v121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
a226 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.queue
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
value: a226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j200 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 value: a226 stateAfter: - lastLocationAccess: - #next: j200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a81 
=== Succesors ===
next: v206 
=== Usages ===
j202 
=== Predecessor ===
v120 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a81 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j200 
y: i201 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j200 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j202 
index: j205 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: j205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
j200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v244 value: i207 stateAfter: - lastLocationAccess: - #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j227 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.queueLength
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
=== Succesors ===
next: v64 
=== Usages ===
j188 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v241 #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
j227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606592053122024498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ReferenceQueue.head
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
value: a225 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j210 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 value: a225 stateAfter: - lastLocationAccess: - #next: j210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v214 
=== Usages ===
j211 
=== Predecessor ===
v129 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid j211 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j210 
y: i201 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j210 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j211 
index: j205 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j211 index: j205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
j210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v245 value: i207 stateAfter: - lastLocationAccess: - #next: v131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a228 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.NULL
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 30]
nullCheck: false
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
=== Succesors ===
next: v136 
=== Usages ===
v135 
=== Predecessor ===
v131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 #next: v136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
a228 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.queue
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
value: a228 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j217 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 value: a228 stateAfter: - lastLocationAccess: - #next: j217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a81 
=== Succesors ===
next: v221 
=== Usages ===
j218 
=== Predecessor ===
v135 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a81 #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j217 
y: i201 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j217 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j218 
index: j205 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j218 index: j205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
j217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v246 value: i207 stateAfter: - lastLocationAccess: - #next: v137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.queueLength
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
=== Succesors ===
next: v67 
=== Usages ===
j188 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v241 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
j229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v65 
values: j227 j229 
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v65 values: j227 j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v64 v67 
=== Succesors ===
next: v187 
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v64 v67 #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.next
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:86) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
value: a224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v236 value: a224 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid j32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 47]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j189 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 47]
stamp: i64
=== Inputs ===
x: j188 
y: j32 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j188 y: j32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ReferenceQueue.queueLength
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 48]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
value: j189 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v241 value: j189 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a224 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v243 
=== Succesors ===
next: v231 
=== Usages ===
v242 
=== Predecessor ===
v185 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v243 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v230 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v242 
=== Succesors ===
next: v41 
=== Usages ===
v168 
=== Predecessor ===
v230 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v242 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
rawvalue: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v231 
y: v160 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v231 y: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
stamp: void
trueSuccessorProbability: 0.6920194829524167
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 0]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i232 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid a90 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 0]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
rawvalue: Class:sun.misc.VM
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.VM]
=== Inputs ===
=== Succesors ===
=== Usages ===
v237 v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
displacement: 132
scale: Times1
stamp: void*
=== Inputs ===
base: a90 
index: - 
=== Succesors ===
=== Usages ===
i232 v96 i233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: VM.finalRefCount
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 0]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
=== Succesors ===
next: v95 
=== Usages ===
i62 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v237 #next: v95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 0]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
i232 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 58]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 ?56 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 4]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: i32
=== Inputs ===
x: i232 
y: i42 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i232 y: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VM.finalRefCount
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
value: i62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 value: i62 stateAfter: - lastLocationAccess: - #next: v98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i233 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: VM.finalRefCount
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
=== Succesors ===
next: v101 
=== Usages ===
v59 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v237 #next: v101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
i233 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 11]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i234 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
displacement: 136
scale: Times1
stamp: void*
=== Inputs ===
base: a90 
index: - 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: VM.peakFinalRefCount
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 11]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
=== Succesors ===
next: v157 
=== Usages ===
v59 
=== Predecessor ===
v105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v238 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i233 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i234 y: i233  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
i234 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v156 #falseSuccessor: v154  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<ReferenceQueue.reallyPoll()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReferenceQueue.java
sourceLine: 89
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a81 
=== Succesors ===
=== Usages ===
?56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a81  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<VM.addFinalRefCount(int)>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
rethrowException: false
sourceFile: VM.java
sourceLine: 364
stackSize: 0
=== Inputs ===
outerFrameState: ?63 
values: i42 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?63 values: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 107
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?56 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?56  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 11]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:91) [bci: 62]
stamp: void
=== Inputs ===
result: a81 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a81 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4599093749385058681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:91) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:91) [bci: 62]
stamp: void
=== Inputs ===
result: a81 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a81 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:80) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a224 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a224  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/ref/ReferenceQueue;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 v235 j210 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a224 v109 v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a224 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.head
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:80) [bci: 1]
nullCheck: false
stamp: n Ljava/lang/ref/Reference;
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
=== Succesors ===
next: v83 
=== Usages ===
a81 v190 v191 v187 v236 v240 v243 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v235 #next: v83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:80) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
a224 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:81) [bci: 6]
stamp: void
=== Inputs ===
value: a224 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a224  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:81) [bci: 6]
stamp: void
trueSuccessorProbability: 0.022702306847308677
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67978088 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.022702306847308677 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582200715850535297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:93) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:81) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:93) [bci: 65]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a225 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a225  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
result [v1|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a224 
=== Succesors ===
=== Usages ===
a225 v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a225 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.next
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/ref/Reference;
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
=== Succesors ===
next: v110 
=== Usages ===
v191 v129 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v236 #next: v110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
a225 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a224 
y: a225 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a224 y: a225  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:80) [bci: 1]
op: Uncompress
stamp: a Ljava/lang/ref/Reference;
=== Inputs ===
value: a224 
=== Succesors ===
=== Usages ===
v53 v52 ?63 j217 j200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a224  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a224 
=== Succesors ===
=== Usages ===
v120 v135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a224  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j227 v185 j229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 v214 v221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j202 j211 j218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 v245 v246 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a112 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 30]
rawvalue: Class:java.lang.ref.ReferenceQueue
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.ref.ReferenceQueue]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result [v5|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a112 
index: - 
=== Succesors ===
=== Usages ===
a226 a228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a112 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 15]
stamp: void
trueSuccessorProbability: 0.043836642937429726
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7d287f83 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.043836642937429726 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4586334924662625310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a141 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ReferenceQueue.head
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
value: a141 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 value: a141 stateAfter: - lastLocationAccess: - #next: v111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a226 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.NULL
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 30]
nullCheck: false
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
=== Succesors ===
next: v121 
=== Usages ===
v120 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 #next: v121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
a226 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.queue
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
value: a226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j200 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 value: a226 stateAfter: - lastLocationAccess: - #next: j200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j200 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a81 
=== Succesors ===
next: v206 
=== Usages ===
j202 
=== Predecessor ===
v120 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a81 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
result v7|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j200 
y: i201 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j200 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result [v7|QWORD[*] + v4|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j202 
index: j205 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: j205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
j200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v244 value: i207 stateAfter: - lastLocationAccess: - #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j227 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j227 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.queueLength
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
=== Succesors ===
next: v64 
=== Usages ===
j188 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v241 #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
j227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v5|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606592053122024498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ReferenceQueue.head
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
value: a225 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j210 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 value: a225 stateAfter: - lastLocationAccess: - #next: j210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j210 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v214 
=== Usages ===
j211 
=== Predecessor ===
v129 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid j211 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j210 
y: i201 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j210 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
result [v9|QWORD[*] + v4|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j211 
index: j205 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j211 index: j205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
j210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v245 value: i207 stateAfter: - lastLocationAccess: - #next: v131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:82) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a228 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a228 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.NULL
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 30]
nullCheck: false
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
=== Succesors ===
next: v136 
=== Usages ===
v135 
=== Predecessor ===
v131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 #next: v136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
a228 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.queue
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
value: a228 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j217 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 value: a228 stateAfter: - lastLocationAccess: - #next: j217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j217 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a81 
=== Succesors ===
next: v221 
=== Usages ===
j218 
=== Predecessor ===
v135 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a81 #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
result v11|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j217 
y: i201 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j217 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result [v11|QWORD[*] + v4|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j218 
index: j205 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j218 index: j205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
j217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v246 value: i207 stateAfter: - lastLocationAccess: - #next: v137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:85) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.queueLength
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
=== Succesors ===
next: v67 
=== Usages ===
j188 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v241 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
j229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v5|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j188 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v65 
values: j227 j229 
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v65 values: j227 j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v64 v67 
=== Succesors ===
next: v187 
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v64 v67 #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.next
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:86) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
value: a224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v236 value: a224 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid j32 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 47]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j189 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 47]
stamp: i64
=== Inputs ===
x: j188 
y: j32 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j188 y: j32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ReferenceQueue.queueLength
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:87) [bci: 48]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
value: j189 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v241 value: j189 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
result [v1|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a224 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v243 
=== Succesors ===
next: v231 
=== Usages ===
v242 
=== Predecessor ===
v185 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v243 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result [v15|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v230 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v242 
=== Succesors ===
next: v41 
=== Usages ===
v168 
=== Predecessor ===
v230 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v242 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
rawvalue: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v231 
y: v160 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v231 y: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:88) [bci: 52]
stamp: void
trueSuccessorProbability: 0.6920194829524167
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 20], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = DEC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [v15|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6920194829524167 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 0]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i232 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid a90 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 0]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
rawvalue: Class:sun.misc.VM
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.VM]
=== Inputs ===
=== Succesors ===
=== Usages ===
v237 v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
result [v17|QWORD[.] + 132] <|@
d <@d|@=== Debug Properties ===
displacement: 132
scale: Times1
stamp: void*
=== Inputs ===
base: a90 
index: - 
=== Succesors ===
=== Usages ===
i232 v96 i233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: VM.finalRefCount
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 0]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
=== Succesors ===
next: v95 
=== Usages ===
i62 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v237 #next: v95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 0]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
i232 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 58]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 ?56 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 4]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: i32
=== Inputs ===
x: i232 
y: i42 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i232 y: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VM.finalRefCount
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
value: i62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 value: i62 stateAfter: - lastLocationAccess: - #next: v98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i233 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i233 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: VM.finalRefCount
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
=== Succesors ===
next: v101 
=== Usages ===
v59 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v237 #next: v101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
i233 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 11]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i234 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
result [v17|QWORD[.] + 136] <|@
d <@d|@=== Debug Properties ===
displacement: 136
scale: Times1
stamp: void*
=== Inputs ===
base: a90 
index: - 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i234 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: VM.peakFinalRefCount
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 11]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
=== Succesors ===
next: v157 
=== Usages ===
v59 
=== Predecessor ===
v105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v238 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i233 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i234 y: i233  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
i234 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v156 #falseSuccessor: v154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.VM] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD[.] + 132] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + 132], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v17|QWORD[.] + 132] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: [v17|QWORD[.] + 136]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<ReferenceQueue.reallyPoll()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReferenceQueue.java
sourceLine: 89
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a81 
=== Succesors ===
=== Usages ===
?56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a81  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<VM.addFinalRefCount(int)>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:363) [bci: 5]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
rethrowException: false
sourceFile: VM.java
sourceLine: 364
stackSize: 0
=== Inputs ===
outerFrameState: ?63 
values: i42 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?63 values: i42  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 107
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?56 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?56  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -27411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
locals: int[-1|0xffffffffffffffff] 
java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
locals: - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 14]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 11]
at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:91) [bci: 62]
stamp: void
=== Inputs ===
result: a81 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a81 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4599093749385058681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:91) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:91) [bci: 62]
stamp: void
=== Inputs ===
result: a81 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a81 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67978088 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.022702306847308677 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7d287f83 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.043836642937429726 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606592053122024498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v5|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 20], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = DEC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [v15|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6920194829524167 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.VM] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD[.] + 132] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + 132], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v17|QWORD[.] + 132] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: [v17|QWORD[.] + 136]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4599093749385058681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4586334924662625310
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v5|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = SHR v3|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582200715850535297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -27411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
locals: int[-1|0xffffffffffffffff] 
java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
locals: - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 59] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // head:java.lang.ref.Reference
     4: astore_1      
     5: aload_1       
     6: ifnull        64
     9: aload_0       
    10: aload_1       
    11: getfield      #10         // java.lang.ref.Reference.next:java.lang.ref.Reference
    14: aload_1       
    15: if_acmpne     22
    18: aconst_null   
    19: goto          26
    22: aload_1       
    23: getfield      #10         // java.lang.ref.Reference.next:java.lang.ref.Reference
    26: putfield      #3          // head:java.lang.ref.Reference
    29: aload_1       
    30: getstatic     #6          // NULL:java.lang.ref.ReferenceQueue
    33: putfield      #5          // java.lang.ref.Reference.queue:java.lang.ref.ReferenceQueue
    36: aload_1       
    37: aload_1       
    38: putfield      #10         // java.lang.ref.Reference.next:java.lang.ref.Reference
    41: aload_0       
    42: dup           
    43: getfield      #4          // queueLength:long
    46: lconst_1      
    47: lsub          
    48: putfield      #4          // queueLength:long
    51: aload_1       
    52: instanceof    #14         // java.lang.ref.FinalReference
    55: ifeq          62
    58: iconst_m1     
    59: invokestatic  #11         // sun.misc.VM.addFinalRefCount:(int)void
    62: aload_1       
    63: areturn       
    64: aconst_null   
    65: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67978088 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.022702306847308677 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   18  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7d287f83 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   22  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   24  <|@ instruction CMP (x: rax|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.043836642937429726 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606592053122024498
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   36  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   38  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction rax|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   44  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   46  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 20], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = DEC rax|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>} <|@ <|@
      nr   64  <|@ instruction CMP (x: r10|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.6920194829524167 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.VM] <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 132] size: DWORD <|@ <|@
      nr   74  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV (x: [rax|QWORD[.] + 132], y: r10|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 132] size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP (x: r10|DWORD, y: [rax|QWORD[.] + 136]) size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4599093749385058681
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4586334924662625310
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  102  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  104  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  110  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  112  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  114  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582200715850535297
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV [r15|QWORD + 668] y: -27411 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
locals: int[-1|0xffffffffffffffff] 
java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
locals: - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 59] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // head:java.lang.ref.Reference
     4: astore_1      
     5: aload_1       
     6: ifnull        64
     9: aload_0       
    10: aload_1       
    11: getfield      #10         // java.lang.ref.Reference.next:java.lang.ref.Reference
    14: aload_1       
    15: if_acmpne     22
    18: aconst_null   
    19: goto          26
    22: aload_1       
    23: getfield      #10         // java.lang.ref.Reference.next:java.lang.ref.Reference
    26: putfield      #3          // head:java.lang.ref.Reference
    29: aload_1       
    30: getstatic     #6          // NULL:java.lang.ref.ReferenceQueue
    33: putfield      #5          // java.lang.ref.Reference.queue:java.lang.ref.ReferenceQueue
    36: aload_1       
    37: aload_1       
    38: putfield      #10         // java.lang.ref.Reference.next:java.lang.ref.Reference
    41: aload_0       
    42: dup           
    43: getfield      #4          // queueLength:long
    46: lconst_1      
    47: lsub          
    48: putfield      #4          // queueLength:long
    51: aload_1       
    52: instanceof    #14         // java.lang.ref.FinalReference
    55: ifeq          62
    58: iconst_m1     
    59: invokestatic  #11         // sun.misc.VM.addFinalRefCount:(int)void
    62: aload_1       
    63: areturn       
    64: aconst_null   
    65: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67978088 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.022702306847308677 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   18  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7d287f83 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   22  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   24  <|@ instruction CMP (x: rax|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.043836642937429726 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606592053122024498
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   36  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   38  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction rax|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   44  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   46  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4606977934598701428
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 20], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = DEC rax|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>} <|@ <|@
      nr   64  <|@ instruction CMP (x: r10|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.6920194829524167 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.VM] <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 132] size: DWORD <|@ <|@
      nr   74  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV (x: [rax|QWORD[.] + 132], y: r10|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 132] size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP (x: r10|DWORD, y: [rax|QWORD[.] + 136]) size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604266869865125048
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4599093749385058681
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4586334924662625310
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  102  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  104  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  110  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  112  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  114  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582200715850535297
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV [r15|QWORD + 668] y: -27411 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8]
locals: int[-1|0xffffffffffffffff] 
java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59]
locals: - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 59] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // head:java.lang.ref.Reference
     4: astore_1      
     5: aload_1       
     6: ifnull        64
     9: aload_0       
    10: aload_1       
    11: getfield      #10         // java.lang.ref.Reference.next:java.lang.ref.Reference
    14: aload_1       
    15: if_acmpne     22
    18: aconst_null   
    19: goto          26
    22: aload_1       
    23: getfield      #10         // java.lang.ref.Reference.next:java.lang.ref.Reference
    26: putfield      #3          // head:java.lang.ref.Reference
    29: aload_1       
    30: getstatic     #6          // NULL:java.lang.ref.ReferenceQueue
    33: putfield      #5          // java.lang.ref.Reference.queue:java.lang.ref.ReferenceQueue
    36: aload_1       
    37: aload_1       
    38: putfield      #10         // java.lang.ref.Reference.next:java.lang.ref.Reference
    41: aload_0       
    42: dup           
    43: getfield      #4          // queueLength:long
    46: lconst_1      
    47: lsub          
    48: putfield      #4          // queueLength:long
    51: aload_1       
    52: instanceof    #14         // java.lang.ref.FinalReference
    55: ifeq          62
    58: iconst_m1     
    59: invokestatic  #11         // sun.misc.VM.addFinalRefCount:(int)void
    62: aload_1       
    63: areturn       
    64: aconst_null   
    65: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b56184585d20f841c010000428b04d514000000458bda49c1e30349b800e01b170100000049b9addeaddeaddeadde413bc20f84c2000000894618488bc648c1e80946882400f083042400418b4168428904d510000000498bc348c1e80946882400f083042400488b4610468914d51400000048ffc848894610428b04d50800000049baaddeaddeaddeadde4c3b14c5380000000f854a00000048b8addeaddeaddeadde448b908400000041ffca44899084000000f083042400448b9084000000443b90880000000f8f77000000498bc3488b6c24104883c418850500000000c5f877c3498bc3488b6c24104883c418850500000000c5f877c344896618f083042400418b4168428904d510000000498bc348c1e80946882400f083042400488b4610e943ffffff48b80000000000000000488b6c24104883c418850500000000c5f877c341c7879c020000ed94ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67978088 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 52 10 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 55 12 BRANCH trueDestinationProbability: 0.022702306847308677 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 61 block B2 null  <||@
  Comment 61 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 16 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 69 18 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7d287f83 encoding: base: 0 shift: 3  <||@
  Comment 76 20 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 86 22 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue]  <||@
  Comment 86 {Object[Class:java.lang.ref.ReferenceQueue]}  <||@
  Comment 96 24 CMP (x: rax|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 99 26 BRANCH trueDestinationProbability: 0.043836642937429726 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 105 block B4 null  <||@
  Comment 105 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 30 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 108 32 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 115 34 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 119 36 MEMBAR barriers: 4  <||@
  Comment 124 38 rax|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 128 40 MOV (x: [r10|DWORD[.] * 8 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 136 42 rax|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 143 44 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 147 46 MEMBAR barriers: 4  <||@
  Comment 152 48 rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 156 50 JUMP ~[] destination: B4 -> B5  <||@
  Comment 156 block B5 null  <||@
  Comment 156 52 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 156 54 MOV (x: [r10|DWORD[.] * 8 + 20], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 164 56 rax|QWORD = DEC rax|QWORD size: QWORD  <||@
  Comment 167 58 MOV (x: [rsi|QWORD[.] + 16], y: rax|QWORD) size: QWORD  <||@
  Comment 171 60 rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 179 62 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>}  <||@
  Comment 179 {meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>}}  <||@
  Comment 189 64 CMP (x: r10|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 197 66 BRANCH trueDestinationProbability: 0.6920194829524167 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 203 block B6 null  <||@
  Comment 203 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 70 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.VM]  <||@
  Comment 203 {Object[Class:sun.misc.VM]}  <||@
  Comment 213 72 r10|DWORD = MOV [rax|QWORD[.] + 132] size: DWORD  <||@
  Comment 220 74 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 223 76 MOV (x: [rax|QWORD[.] + 132], y: r10|DWORD) size: DWORD  <||@
  Comment 230 78 MEMBAR barriers: 4  <||@
  Comment 235 80 r10|DWORD = MOV [rax|QWORD[.] + 132] size: DWORD  <||@
  Comment 242 82 CMP (x: r10|DWORD, y: [rax|QWORD[.] + 136]) size: DWORD  <||@
  Comment 249 84 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 255 block B8 null  <||@
  Comment 255 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 255 88 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 258 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 267 12  <||@
  Comment 277 block B9 null  <||@
  Comment 277 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 94 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 280 96 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 289 12  <||@
  Comment 299 block B3 null  <||@
  Comment 299 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 100 MOV (x: [rsi|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 303 102 MEMBAR barriers: 4  <||@
  Comment 308 104 rax|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 312 106 MOV (x: [r10|DWORD[.] * 8 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 320 108 rax|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 327 110 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 331 112 MEMBAR barriers: 4  <||@
  Comment 336 114 rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 340 116 JUMP ~[] destination: B3 -> B5  <||@
  Comment 345 block B1 null  <||@
  Comment 345 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 120 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 355 122 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 364 12  <||@
  Comment 374 block B7 null  <||@
  Comment 374 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 126 MOV [r15|QWORD + 668] y: -27411 size: DWORD  <||@
  Comment 385 128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 392 130 DEOPT info [bci:8, 59]  <||@
  Comment 392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 397 [r11:0]at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8, duringCall: false, rethrow: false]
              |0                          
     locals:  |int[-1|0xffffffffffffffff] 
  at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.]   <||@
  Comment 398 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 398 4  <||@
  Comment 404 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 404 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10158[java.lang.ref.ReferenceQueue.reallyPoll()]"
  method "HotSpotCompilation-10158[java.lang.ref.ReferenceQueue.reallyPoll()]"
  date 1527005243751
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1073e1f60 448b560849c1e203493bc20f85ef3e42ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b56184585d20f841c010000428b04d514000000458bda49c1e30349b800e01b170100000049b9480000c006000000413bc20f84c2000000894618488bc648c1e80946882400f083042400418b4168428904d510000000498bc348c1e80946882400f083042400488b4610468914d51400000048ffc848894610428b04d50800000049ba405f00c0070000004c3b14c5380000000f854a00000048b8f81900c006000000448b908400000041ffca44899084000000f083042400448b9084000000443b90880000000f8f77000000498bc3488b6c24104883c418850595cf4afdc5f877c3498bc3488b6c24104883c41885057fcf4afdc5f877c344896618f083042400418b4168428904d510000000498bc348c1e80946882400f083042400488b4610e943ffffff48b80000000000000000488b6c24104883c418850534cf4afdc5f877c341c7879c020000ed94ffff4d89a7a8020000e8115542ff90e82d8586ff90e8075442ff90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67978088 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 52 10 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 55 12 BRANCH trueDestinationProbability: 0.022702306847308677 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 61 block B2 null  <||@
  Comment 61 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 16 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 69 18 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7d287f83 encoding: base: 0 shift: 3  <||@
  Comment 76 20 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 86 22 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue]  <||@
  Comment 86 {Object[Class:java.lang.ref.ReferenceQueue]}  <||@
  Comment 96 24 CMP (x: rax|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 99 26 BRANCH trueDestinationProbability: 0.043836642937429726 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 105 block B4 null  <||@
  Comment 105 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 30 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 108 32 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 115 34 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 119 36 MEMBAR barriers: 4  <||@
  Comment 124 38 rax|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 128 40 MOV (x: [r10|DWORD[.] * 8 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 136 42 rax|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 143 44 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 147 46 MEMBAR barriers: 4  <||@
  Comment 152 48 rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 156 50 JUMP ~[] destination: B4 -> B5  <||@
  Comment 156 block B5 null  <||@
  Comment 156 52 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 156 54 MOV (x: [r10|DWORD[.] * 8 + 20], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 164 56 rax|QWORD = DEC rax|QWORD size: QWORD  <||@
  Comment 167 58 MOV (x: [rsi|QWORD[.] + 16], y: rax|QWORD) size: QWORD  <||@
  Comment 171 60 rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 179 62 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>}  <||@
  Comment 179 {meta{HotSpotType<Ljava/lang/ref/FinalReference;, resolved>}}  <||@
  Comment 189 64 CMP (x: r10|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 197 66 BRANCH trueDestinationProbability: 0.6920194829524167 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 203 block B6 null  <||@
  Comment 203 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 70 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.VM]  <||@
  Comment 203 {Object[Class:sun.misc.VM]}  <||@
  Comment 213 72 r10|DWORD = MOV [rax|QWORD[.] + 132] size: DWORD  <||@
  Comment 220 74 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 223 76 MOV (x: [rax|QWORD[.] + 132], y: r10|DWORD) size: DWORD  <||@
  Comment 230 78 MEMBAR barriers: 4  <||@
  Comment 235 80 r10|DWORD = MOV [rax|QWORD[.] + 132] size: DWORD  <||@
  Comment 242 82 CMP (x: r10|DWORD, y: [rax|QWORD[.] + 136]) size: DWORD  <||@
  Comment 249 84 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 255 block B8 null  <||@
  Comment 255 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 255 88 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 258 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 267 12  <||@
  Comment 277 block B9 null  <||@
  Comment 277 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 94 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 280 96 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 289 12  <||@
  Comment 299 block B3 null  <||@
  Comment 299 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 100 MOV (x: [rsi|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 303 102 MEMBAR barriers: 4  <||@
  Comment 308 104 rax|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 312 106 MOV (x: [r10|DWORD[.] * 8 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 320 108 rax|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 327 110 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 331 112 MEMBAR barriers: 4  <||@
  Comment 336 114 rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 340 116 JUMP ~[] destination: B3 -> B5  <||@
  Comment 345 block B1 null  <||@
  Comment 345 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 120 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 355 122 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 364 12  <||@
  Comment 374 block B7 null  <||@
  Comment 374 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 126 MOV [r15|QWORD + 668] y: -27411 size: DWORD  <||@
  Comment 385 128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 392 130 DEOPT info [bci:8, 59]  <||@
  Comment 392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 397 [r11:0]at sun.misc.VM.addFinalRefCount(VM.java:364) [bci: 8, duringCall: false, rethrow: false]
              |0                          
     locals:  |int[-1|0xffffffffffffffff] 
  at java.lang.ref.ReferenceQueue.reallyPoll(ReferenceQueue.java:89) [bci: 59, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.]   <||@
  Comment 398 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 398 4  <||@
  Comment 404 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 404 5  <||@
  HexCodeFile>>> <|@
end_nmethod
