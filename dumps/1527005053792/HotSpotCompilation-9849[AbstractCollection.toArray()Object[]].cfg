begin_compilation
  name " HotSpotCompilation-9849[java.util.AbstractCollection.toArray()]"
  method "HotSpotCompilation-9849[java.util.AbstractCollection.toArray()]"
  date 1527005226019
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1274 ?507 v1261 v1259 v1260 v1262 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
=== Succesors ===
next: v730 
=== Usages ===
v1097 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1239 
y: v1096 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1239 y: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid a933 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v965 a935 a935 a935 a935 a935 a935 a935 a935 a935 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
v936 a1014 i1241 i1247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1097 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v729 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1097 #trueSuccessor: v727 #falseSuccessor: v729  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1240 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1240  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
=== Succesors ===
next: i1241 
=== Usages ===
?562 v1284 v1264 v1266 v1269 ?562 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 #next: i1241  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
i1251 i1241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1264 
=== Succesors ===
next: i1242 
=== Usages ===
v120 v274 ?562 
=== Predecessor ===
a1240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1264 #next: i1242  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
=== Succesors ===
next: v738 
=== Usages ===
v120 
=== Predecessor ===
i1241 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1241 
y: i1242 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1241 y: i1242  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v737 
=== Usages ===
=== Predecessor ===
i1242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v735 #falseSuccessor: v737  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1243 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1243 i1250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
=== Succesors ===
next: v742 
=== Usages ===
a1014 v16 v373 v724 v721 j707 v1041 i1061 i990 v999 
=== Predecessor ===
v735 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 v721 v373 v422 a1014 v1077 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i10 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1243 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v373 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
i1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v373 #trueSuccessor: v741 #falseSuccessor: v739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150803
stableDimension: 0
stamp: i32 [-150803] ⇊00000000fffdb2ed ⇈00000000fffdb2ed
stampKind: i32
value: int[-150803|0xfffffffffffdb2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1244 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1244  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1244 i1249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
=== Succesors ===
next: v746 
=== Usages ===
i560 v547 v427 v534 v422 
=== Predecessor ===
v739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 #next: v746  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1244 
y: i10 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1244 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v745 
falseSuccessor: v743 
=== Usages ===
=== Predecessor ===
i1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v745 #falseSuccessor: v743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid i944 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153107
stableDimension: 0
stamp: i32 [-153107] ⇊00000000fffda9ed ⇈00000000fffda9ed
stampKind: i32
value: int[-153107|0xfffffffffffda9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j993 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j993 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1038 
=== Usages ===
v1275 v1276 
=== Predecessor ===
v743 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j993 
index: - 
=== Succesors ===
=== Usages ===
j1038 v1040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j993 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: j1039 
=== Usages ===
j997 v1277 v1278 a1013 v1283 v1279 v1280 v1281 v1282 
=== Predecessor ===
j993 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: j1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j993 
index: - 
=== Succesors ===
=== Usages ===
j1039 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j993 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1039 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1276 
=== Succesors ===
next: v1002 
=== Usages ===
v1003 
=== Predecessor ===
j1038 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1276 #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid i998 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i998 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1243 y: i998  <|@  <|@
f <@~|@floating>@ <|@
tid j989 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1042 j1067 v1072 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1062 i990 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v999 
=== Succesors ===
trueSuccessor: v1001 
falseSuccessor: v1000 
=== Usages ===
=== Predecessor ===
j1039 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v999 #trueSuccessor: v1001 #falseSuccessor: v1000  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid i990 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1243 
y: i609 
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1243 y: i609  <|@  <|@
f <@~|@floating>@ <|@
tid i1021 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1022 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i990 
y: i1021 
=== Succesors ===
=== Usages ===
i992 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i990 y: i1021  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i992 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1022 
y: i991 
=== Succesors ===
=== Usages ===
j996 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1022 y: i991  <|@  <|@
f <@~|@floating>@ <|@
tid j996 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i992 
=== Succesors ===
=== Usages ===
j997 v1279 v1280 v1281 v1282 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i992  <|@  <|@
f <@~|@floating>@ <|@
tid j997 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
=== Inputs ===
x: j996 
y: j1038 
=== Succesors ===
=== Usages ===
v1003 v1040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j996 y: j1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1039 
y: j997 
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1039 y: j997  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1003 
=== Succesors ===
trueSuccessor: v1008 
falseSuccessor: v1007 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1003 #trueSuccessor: v1008 #falseSuccessor: v1007  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1040 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1040  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
value: j997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1275 value: j997 stateAfter: - lastLocationAccess: - #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: j1038 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: v1279 
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1279 #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: j1038 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: v1280 
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1280 #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: j1038 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: v1281 
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1281 #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: j1038 
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: v1282 
=== Succesors ===
next: v1041 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1282 #next: v1041  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1038 
index: - 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1038 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
value: i1243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1277 value: i1243 stateAfter: - lastLocationAccess: - #next: v1042  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1038 
index: - 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1038 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1278 
value: j989 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1278 value: j989 stateAfter: - lastLocationAccess: - #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1038 
index: - 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1038 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
value: v1098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1012 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1283 value: v1098 stateAfter: - lastLocationAccess: - #next: v1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1013 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1038 
=== Succesors ===
next: v1015 
=== Usages ===
a1018 
=== Predecessor ===
v1012 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1038 #next: v1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
a1013 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v1000 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1004 v1006 
=== Succesors ===
next: a1014 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1004 v1006 #next: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1014 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1014 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v988 i1243 i10 
=== Succesors ===
next: v1017 
=== Usages ===
a1018 
=== Predecessor ===
v1005 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v988 i1243 i10 #next: v1017  <|@  <|@
f <@*|@fixed>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
a1014 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1016 
values: a1013 a1014 
=== Succesors ===
=== Usages ===
v1273 a927 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1016 values: a1013 a1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1015 v1017 
=== Succesors ===
next: v1164 
=== Usages ===
a1018 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1015 v1017 #next: v1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1114 
=== Usages ===
j1166 
=== Predecessor ===
v1016 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1018 
index: - 
=== Succesors ===
=== Usages ===
j1166 j1060 j1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1018 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j707 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1243 
=== Succesors ===
=== Usages ===
j711 v713 j1204 j1194 j1200 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j711 j1071 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j707 
y: j710 
=== Succesors ===
=== Usages ===
v713 v1207 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j710  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i33 i249 v547 v724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i32 
=== Succesors ===
=== Usages ===
v1229 v1114 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1243 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v724 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1113 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v724 #trueSuccessor: v1112 #falseSuccessor: v1113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
v1112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid j1166 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1164 
address: v1273 
=== Succesors ===
=== Usages ===
v1286 v1287 v1288 v1289 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1164 address: v1273  <|@  <|@
f <@~|@floating>@ <|@
tid j1193 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j707 
y: j1193 
=== Succesors ===
=== Usages ===
v1195 v1197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j1193  <|@  <|@
f <@~|@floating>@ <|@
tid j1025 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1187 v1195 j1181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1194 
y: j1025 
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1194 y: j1025  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1195 
=== Succesors ===
trueSuccessor: v1115 
falseSuccessor: v1116 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1195 #trueSuccessor: v1115 #falseSuccessor: v1116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
v1115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@~|@floating>@ <|@
tid j984 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
v1116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B76" 
    successors "B18" "B76" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1187 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1119 
values: j1025 j1192 
=== Succesors ===
=== Usages ===
v1289 j1192 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1119 values: j1025 j1192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1118 
=== Succesors ===
next: v1217 
=== Usages ===
j1187 v1123 v1124 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1118 #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1166 
index: j1187 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1166 index: j1187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
value: v1218 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1289 value: v1218 stateAfter: - lastLocationAccess: - #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid j1192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1187 
y: j984 
=== Succesors ===
=== Usages ===
j1181 j1187 v1197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1187 y: j984  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1194 
y: j1192 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1194 y: j1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1197 
=== Succesors ===
trueSuccessor: v1123 
falseSuccessor: v1125 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1197 #trueSuccessor: v1123 #falseSuccessor: v1125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1119 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1119 #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
v1123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1181 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1128 
values: j1025 j1192 
=== Succesors ===
=== Usages ===
v1288 j1186 j1174 v1201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1128 values: j1025 j1192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1127 v1129 
=== Succesors ===
next: v1147 
=== Usages ===
j1181 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1127 v1129 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid j1199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1200 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j707 
y: j1199 
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j1199  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1200 
y: j1181 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1200 y: j1181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1201 
=== Succesors ===
trueSuccessor: v1146 
falseSuccessor: v1145 
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1201 #trueSuccessor: v1146 #falseSuccessor: v1145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
v1146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1216 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1166 
index: j1181 
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1166 index: j1181  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
value: v1221 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1288 value: v1221 stateAfter: - lastLocationAccess: - #next: v1138  <|@  <|@
f <@~|@floating>@ <|@
tid j1169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1181 
y: j1169 
=== Succesors ===
=== Usages ===
j1174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1181 y: j1169  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
v1216 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1174 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1139 
values: j1186 j1181 
=== Succesors ===
=== Usages ===
v1287 j1180 j1167 v1205 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1139 values: j1186 j1181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1138 v1150 
=== Succesors ===
next: v1153 
=== Usages ===
j1174 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1138 v1150 #next: v1153  <|@  <|@
f <@~|@floating>@ <|@
tid j1203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j707 
y: j1203 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1204 
y: j1174 
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1204 y: j1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1205 
=== Succesors ===
trueSuccessor: v1152 
falseSuccessor: v1151 
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1205 #trueSuccessor: v1152 #falseSuccessor: v1151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
v1152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1214 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1166 
index: j1174 
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1166 index: j1174  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
value: v1220 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1287 value: v1220 stateAfter: - lastLocationAccess: - #next: v1141  <|@  <|@
f <@~|@floating>@ <|@
tid j1179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1174 
y: j1179 
=== Succesors ===
=== Usages ===
j1167 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1174 y: j1179  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
v1214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1167 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1142 
values: j1180 j1174 
=== Succesors ===
=== Usages ===
v1286 v1207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1142 values: j1180 j1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1141 v1156 
=== Succesors ===
next: v1159 
=== Usages ===
j1167 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1141 v1156 #next: v1159  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j711 
y: j1167 
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j711 y: j1167  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1207 
=== Succesors ===
trueSuccessor: v1158 
falseSuccessor: v1157 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1207 #trueSuccessor: v1158 #falseSuccessor: v1157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1162 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1162  <|@  <|@
f <@*|@fixed>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
v1158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1212 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1166 
index: j1167 
=== Succesors ===
=== Usages ===
v1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1166 index: j1167  <|@  <|@
f <@~|@floating>@ <|@
tid a1219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
value: a1219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1286 value: a1219 stateAfter: - lastLocationAccess: - #next: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
v1212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1131 v1144 v1162 
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1131 v1144 v1162 #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i10 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1243 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid j1079 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1080 v1285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 16]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 i561 i1061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1057 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1059 j1065 j1089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v1054 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v1054 #falseSuccessor: v1055  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
v1054 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1058 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1273 
=== Succesors ===
next: j1060 
=== Usages ===
j1059 
=== Predecessor ===
v1055 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1273 #next: j1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1273 
=== Succesors ===
next: v1068 
=== Usages ===
j1064 
=== Predecessor ===
j1058 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1273 #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid i1061 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32
=== Inputs ===
x: i1243 
y: i328 
=== Succesors ===
=== Usages ===
i1062 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1243 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i1062 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1061 
y: i609 
=== Succesors ===
=== Usages ===
j1063 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1061 y: i609  <|@  <|@
f <@~|@floating>@ <|@
tid j1063 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i1062 
=== Succesors ===
=== Usages ===
j1064 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1062  <|@  <|@
f <@~|@floating>@ <|@
tid j1064 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
=== Inputs ===
x: j1060 
y: j1063 
=== Succesors ===
=== Usages ===
j1065 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1060 y: j1063  <|@  <|@
f <@~|@floating>@ <|@
tid j1065 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1064 
y: i1057 
=== Succesors ===
=== Usages ===
j1066 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1064 y: i1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1059 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1058 
y: i1057 
=== Succesors ===
=== Usages ===
j1066 j1080 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1058 y: i1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1066 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1065 
y: j1059 
=== Succesors ===
=== Usages ===
j1067 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1065 y: j1059  <|@  <|@
f <@~|@floating>@ <|@
tid j1067 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1066 
y: j989 
=== Succesors ===
=== Usages ===
j1070 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1066 y: j989  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
j1060 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B75" 
    successors "B32" "B75" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1069 
values: j1067 j1071 
=== Succesors ===
=== Usages ===
j1071 v1072 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1069 values: j1067 j1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1068 
=== Succesors ===
next: v1075 
=== Usages ===
j1070 v1073 v1078 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1068 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1070 
y: j989 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1070 y: j989  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1072 
=== Succesors ===
trueSuccessor: v1073 
falseSuccessor: v1074 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1072 #trueSuccessor: v1073 #falseSuccessor: v1074  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1069 
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1069 #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
v1073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1082 v1083 
=== Succesors ===
next: a927 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1082 v1083 #next: a927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1018 
=== Succesors ===
next: v1245 
=== Usages ===
?203 ?15 v1265 v41 ?203 
=== Predecessor ===
v1081 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1018 #next: v1245  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
=== Succesors ===
next: v596 
=== Usages ===
v1263 v1100 v1102 v1104 v1106 v1238 
=== Predecessor ===
a927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1284 #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1245 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
=== Succesors ===
next: v750 
=== Usages ===
v409 
=== Predecessor ===
v1245 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v596 
y: v407 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v596 y: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v409 
=== Succesors ===
trueSuccessor: v747 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v409 #trueSuccessor: v747 #falseSuccessor: v749  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1101 
=== Succesors ===
=== Usages ===
v291 v453 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
a1252 a1258 a1246 i1248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 v1238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.5044648172401477
=== Inputs ===
condition: v1102 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1102 #trueSuccessor: v449 #falseSuccessor: v452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602719034671164925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1246 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: i1247 
=== Usages ===
v1272 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: i1247  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1246 
=== Succesors ===
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1272 
=== Succesors ===
next: v758 
=== Usages ===
v534 
=== Predecessor ===
a1246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1272 #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1247 
y: i1244 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1247 y: i1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v757 
falseSuccessor: v755 
=== Usages ===
=== Predecessor ===
i1247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v757 #falseSuccessor: v755  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid i950 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171539
stableDimension: 0
stamp: i32 [-171539] ⇊00000000fffd61ed ⇈00000000fffd61ed
stampKind: i32
value: int[-171539|0xfffffffffffd61ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v757 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B46" 
    xhandlers
    flags 
    probability 4602719034671164925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v755 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4602598388175610886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1103 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1103  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.525228255646324
=== Inputs ===
condition: v1104 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v461 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1104 #trueSuccessor: v458 #falseSuccessor: v461  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4598360210838459274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1244 
y: i32 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1244 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v761 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v759 #falseSuccessor: v761  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B46" 
    xhandlers
    flags 
    probability 4598360210838459274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171795
stableDimension: 0
stamp: i32 [-171795] ⇊00000000fffd60ed ⇈00000000fffd60ed
stampKind: i32
value: int[-171795|0xfffffffffffd60ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B73" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1099 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1238 
=== Succesors ===
trueSuccessor: v763 
falseSuccessor: v765 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1238 #trueSuccessor: v763 #falseSuccessor: v765  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1248 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: v770 
=== Usages ===
v427 
=== Predecessor ===
v763 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1248 
y: i1244 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1248 y: i1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v767 
=== Usages ===
=== Predecessor ===
i1248 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v769 #falseSuccessor: v767  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid i952 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -172819
stableDimension: 0
stamp: i32 [-172819] ⇊00000000fffd5ced ⇈00000000fffd5ced
stampKind: i32
value: int[-172819|0xfffffffffffd5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B37" "B40" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v527 v530 v546 
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v527 v530 v546 #next: v1229  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v724 
=== Succesors ===
trueSuccessor: v1225 
falseSuccessor: v1228 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v724 #trueSuccessor: v1225 #falseSuccessor: v1228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j711 
y: j707 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j711 y: j707  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v1236 
falseSuccessor: v1233 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v1236 #falseSuccessor: v1233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1224  <|@  <|@
f <@*|@fixed>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1223 v1224 
=== Succesors ===
next: v12 
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1223 v1224 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i1093 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a497 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@724f57db
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?507 ?203 ?15 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a501 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@204a1cd0
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/AbstractList$ListItr;
type: HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?334 ?562 ?507 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?507 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a497 
values: - a501 a1 
=== Succesors ===
=== Usages ===
?15 ?916 ?917 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a497 values: - a501 a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v1222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" 
    successors "B52" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4616949226768443987
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i10 i33 
=== Succesors ===
=== Usages ===
?15 v16 i33 ?203 ?203 v1265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i10 i33  <|@  <|@
f <@~|@floating>@ <|@
tid i560 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i1244 i249 
=== Succesors ===
=== Usages ===
?562 v641 ?916 ?334 i327 i561 i154 i249 v623 v1271 v1268 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i1244 i249  <|@  <|@
f <@~|@floating>@ <|@
tid i561 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i328 i560 
=== Succesors ===
=== Usages ===
?562 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i328 i560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.6746680669117096
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v12 
=== Succesors ===
next: i1249 
=== Usages ===
i14 v19 v34 i560 i561 v793 v808 v778 v783 v803 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v12 #next: i1249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
=== Succesors ===
next: i1250 
=== Usages ===
i154 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 #next: i1250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
=== Succesors ===
next: v21 
=== Usages ===
v144 
=== Predecessor ===
i1249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
stamp: i32
=== Inputs ===
x: i560 
y: i1249 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i560 y: i1249  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i1250 
=== Succesors ===
=== Usages ===
v818 v779 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i154 y: i1250  <|@  <|@
tid ?562 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a501 
values: i560 i561 i1241 a1240 a1240 
=== Succesors ===
=== Usages ===
?15 ?917 ?916 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a501 values: i560 i561 i1241 a1240 a1240  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a927 a497 i14 
virtualObjectMappings: ?507 ?562 
=== Succesors ===
=== Usages ===
v965 i1253 i1256 v1290 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a927 a497 i14 virtualObjectMappings: ?507 ?562  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i14 
y: i1243 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i14 y: i1243  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
stamp: void
trueSuccessorProbability: 0.7860810680702205
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
i1250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
v719 
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v144 
=== Succesors ===
trueSuccessor: v775 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v144 #trueSuccessor: v775 #falseSuccessor: v778  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1251 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
=== Succesors ===
next: v784 
=== Usages ===
v274 
=== Predecessor ===
v775 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1241 
y: i1251 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1241 y: i1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v274 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v783 
=== Usages ===
=== Predecessor ===
i1251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v274 #trueSuccessor: v780 #falseSuccessor: v783  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v1102 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v290 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1102 #trueSuccessor: v284 #falseSuccessor: v290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1252 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: i1253 
=== Usages ===
a617 v1267 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: i1253  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1252 
=== Succesors ===
=== Usages ===
i1253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1267 
=== Succesors ===
next: v794 
=== Usages ===
v623 
=== Predecessor ===
a1252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1267 #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i560 
y: i1253 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i560 y: i1253  <|@  <|@
f <@*|@fixed>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v623 
=== Succesors ===
trueSuccessor: v790 
falseSuccessor: v793 
=== Usages ===
=== Predecessor ===
i1253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v623 #trueSuccessor: v790 #falseSuccessor: v793  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1254 
=== Usages ===
a1254 
=== Predecessor ===
v794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1254  <|@  <|@
f <@~|@floating>@ <|@
tid a617 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1252 
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a617 
index: i560 
=== Succesors ===
=== Usages ===
a1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a617 index: i560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1254 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v790 
address: v1268 
=== Succesors ===
next: v520 
=== Usages ===
a919 
=== Predecessor ===
v790 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v790 address: v1268 #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
a1254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid i973 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -159771
stableDimension: 0
stamp: i32 [-159771] ⇊00000000fffd8fe5 ⇈00000000fffd8fe5
stampKind: i32
value: int[-159771|0xfffffffffffd8fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598272646833805590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1099 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 0.9931451844203517
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v296 #falseSuccessor: v299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1255 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
a1255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
=== Succesors ===
next: i1256 
=== Usages ===
a635 v1270 
=== Predecessor ===
v296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 #next: i1256  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1255 
=== Succesors ===
=== Usages ===
i1256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1256 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1270 
=== Succesors ===
next: v804 
=== Usages ===
v641 
=== Predecessor ===
a1255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1270 #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i560 
y: i1256 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i560 y: i1256  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v803 
=== Usages ===
=== Predecessor ===
i1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v800 #falseSuccessor: v803  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1257 
=== Usages ===
a1257 
=== Predecessor ===
v804 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1257  <|@  <|@
f <@~|@floating>@ <|@
tid a635 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a1255 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a635 
index: i560 
=== Succesors ===
=== Usages ===
a1257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a635 index: i560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v800 
address: v1271 
=== Succesors ===
next: v559 
=== Usages ===
a919 
=== Predecessor ===
v800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v800 address: v1271 #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
a1257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164379
stableDimension: 0
stamp: i32 [-164379] ⇊00000000fffd7de5 ⇈00000000fffd7de5
stampKind: i32
value: int[-164379|0xfffffffffffd7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v803 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1105 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1105  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1106 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1106 #trueSuccessor: v805 #falseSuccessor: v808  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1258 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: v1290 
=== Usages ===
a653 v1290 
=== Predecessor ===
v805 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: v1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
object: a1258 
=== Succesors ===
next: i325 
=== Usages ===
=== Predecessor ===
a1258 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?15 object: a1258 #next: i325  <|@  <|@
f <@~|@floating>@ <|@
tid a653 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1258 
=== Succesors ===
=== Usages ===
?916 v658 v657 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1258  <|@  <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@51c107a0
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a653 
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a653  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 39
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 141
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a927 a497 i14 a927 i14 
=== Succesors ===
=== Usages ===
?253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a927 a497 i14 a927 i14  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: - 
=== Succesors ===
=== Usages ===
?334 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: -  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?253 
values: a501 i560 - 
=== Succesors ===
=== Usages ===
?917 ?916 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?253 values: a501 i560 -  <|@  <|@
tid ?916 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<ReversedList.get(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?334 
values: - i560 a653 
virtualObjectMappings: ?507 ?562 
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?334 values: - i560 a653 virtualObjectMappings: ?507 ?562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v657 
stateDuring: ?916 
=== Succesors ===
next: a331 
=== Usages ===
i327 
=== Predecessor ===
v1290 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v657 stateDuring: ?916 #next: a331  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 14]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: i32
=== Inputs ===
x: i325 
y: i560 
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i325 y: i560  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 16]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: i32
=== Inputs ===
x: i327 
y: i328 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i327 y: i328  <|@  <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@395ea31
stamp: void
targetMethod: HotSpotMethod<List.get(int)>
=== Inputs ===
arguments: a653 i329 
=== Succesors ===
=== Usages ===
a331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a653 i329  <|@  <|@
tid ?917 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<ReversedList.get(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?334 
values: - - 
virtualObjectMappings: ?507 ?562 
=== Succesors ===
=== Usages ===
a331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?334 values: - - virtualObjectMappings: ?507 ?562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a331 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#List.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v658 
stateDuring: ?917 
=== Succesors ===
next: v517 
=== Usages ===
a918 
=== Predecessor ===
i325 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v658 stateDuring: ?917 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid a918 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
op: Compress
stamp: n -
=== Inputs ===
value: a331 
=== Succesors ===
=== Usages ===
a919 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a331  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
a331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B56" "B60" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a919 <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v518 
values: a918 a1254 a1257 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v518 values: a918 a1254 a1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v517 v520 v559 
=== Succesors ===
next: v614 
=== Usages ===
a919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v517 v520 v559 #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1222 v17 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1222 v17  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a927 
index: i14 
=== Succesors ===
=== Usages ===
v614 j1088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a927 index: i14  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v719 
address: v1265 
value: a919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1088 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v719 address: v1265 value: a919 stateAfter: - lastLocationAccess: - #next: j1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1265 
=== Succesors ===
next: v1092 
=== Usages ===
j1089 
=== Predecessor ===
v614 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1265 #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1088 
y: i1057 
=== Succesors ===
=== Usages ===
v1285 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1088 y: i1057  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1089 
index: j1079 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1089 index: j1079  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
value: i1093 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
j1088 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1285 value: i1093 stateAfter: - lastLocationAccess: - #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: i32
=== Inputs ===
x: i560 
y: i32 
=== Succesors ===
=== Usages ===
i560 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i560 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
stamp: i32
=== Inputs ===
x: i14 
y: i32 
=== Succesors ===
=== Usages ===
i14 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i14 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166451
stableDimension: 0
stamp: i32 [-166451] ⇊00000000fffd75cd ⇈00000000fffd75cd
stampKind: i32
value: int[-166451|0xfffffffffffd75cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154643
stableDimension: 0
stamp: i32 [-154643] ⇊00000000fffda3ed ⇈00000000fffda3ed
stampKind: i32
value: int[-154643|0xfffffffffffda3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v966 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v966  <|@  <|@
f <@~|@floating>@ <|@
tid i967 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153875
stableDimension: 0
stamp: i32 [-153875] ⇊00000000fffda6ed ⇈00000000fffda6ed
stampKind: i32
value: int[-153875|0xfffffffffffda6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B69" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v144 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v815 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v144 #trueSuccessor: v817 #falseSuccessor: v815  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid i962 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -169235
stableDimension: 0
stamp: i32 [-169235] ⇊00000000fffd6aed ⇈00000000fffd6aed
stampKind: i32
value: int[-169235|0xfffffffffffd6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v817 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" "B57" "B61" "B65" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i963 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-169235 - -153875] ⇊00000000fffd00c5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v960 
values: i962 i967 i969 i973 i977 i979 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v960 values: i962 i967 i969 i973 i977 i979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v961 v966 v968 v972 v976 v978 
=== Succesors ===
next: v965 
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v961 v966 v968 v972 v976 v978 #next: v965  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i963 
speculation: a933 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i963 speculation: a933  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 69]
stamp: void
=== Inputs ===
result: a927 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a927 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid a959 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@590649397
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@590649397]
=== Inputs ===
=== Succesors ===
=== Usages ===
a935 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i958 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155163
stableDimension: 0
stamp: i32 [-155163] ⇊00000000fffda1e5 ⇈00000000fffda1e5
stampKind: i32
value: int[-155163|0xfffffffffffda1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v1233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -172083
stableDimension: 0
stamp: i32 [-172083] ⇊00000000fffd5fcd ⇈00000000fffd5fcd
stampKind: i32
value: int[-172083|0xfffffffffffd5fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v765 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152883
stableDimension: 0
stamp: i32 [-152883] ⇊00000000fffdaacd ⇈00000000fffdaacd
stampKind: i32
value: int[-152883|0xfffffffffffdaacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@~|@floating>@ <|@
tid j1071 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
=== Inputs ===
x: j1070 
y: j710 
=== Succesors ===
=== Usages ===
j1070 j1076 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1070 y: j710  <|@  <|@
f <@~|@floating>@ <|@
tid j1080 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1059 
y: j1079 
=== Succesors ===
=== Usages ===
j1076 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1059 y: j1079  <|@  <|@
f <@~|@floating>@ <|@
tid j1076 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
=== Inputs ===
x: j1071 
y: j1080 
=== Succesors ===
=== Usages ===
v1077 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1071 y: j1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: j1076 
value: i10 
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1076 value: i10 #next: v1078  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v1069 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1069  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1124 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1124  <|@  <|@
f <@*|@fixed>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1119 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid i942 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149011
stableDimension: 0
stamp: i32 [-149011] ⇊00000000fffdb9ed ⇈00000000fffdb9ed
stampKind: i32
value: int[-149011|0xfffffffffffdb9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid i938 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145715
stableDimension: 0
stamp: i32 [-145715] ⇊00000000fffdc6cd ⇈00000000fffdc6cd
stampKind: i32
value: int[-145715|0xfffffffffffdc6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B3" "B77" "B5" "B74" "B36" "B44" "B41" "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i934 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-172819 - -145715] ⇊00000000fffd00c5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v930 
values: i938 i940 i942 i944 i948 i950 i952 i954 i956 i958 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v930 values: i938 i940 i942 i944 i948 i950 i952 i954 i956 i958  <|@  <|@
f <@~|@floating>@ <|@
tid a935 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v930 
values: a933 a933 a933 a933 a933 a933 a933 a933 a933 a959 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v930 values: a933 a933 a933 a933 a933 a933 a933 a933 a933 a959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v937 v939 v941 v943 v947 v949 v951 v953 v955 v957 
=== Succesors ===
next: v936 
=== Usages ===
i934 a935 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v937 v939 v941 v943 v947 v949 v951 v953 v955 v957 #next: v936  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i934 
speculation: a935 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i934 speculation: a935  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1274 ?507 v1261 v1259 v1260 v1262 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1239 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
=== Succesors ===
next: v730 
=== Usages ===
v1097 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
result meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1239 
y: v1096 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1239 y: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid a933 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v965 a935 a935 a935 a935 a935 a935 a935 a935 a935 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
v936 a1014 i1241 i1247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1097 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v729 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1097 #trueSuccessor: v727 #falseSuccessor: v729  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@713bf958 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1240 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1240  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1240 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
=== Succesors ===
next: i1241 
=== Usages ===
?562 v1284 v1264 v1266 v1269 ?562 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 #next: i1241  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
i1251 i1241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1241 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1264 
=== Succesors ===
next: i1242 
=== Usages ===
v120 v274 ?562 
=== Predecessor ===
a1240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1264 #next: i1242  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1242 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
=== Succesors ===
next: v738 
=== Usages ===
v120 
=== Predecessor ===
i1241 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1241 
y: i1242 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1241 y: i1242  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v737 
=== Usages ===
=== Predecessor ===
i1242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v735 #falseSuccessor: v737  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1243 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1243 i1250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1243 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
=== Succesors ===
next: v742 
=== Usages ===
a1014 v16 v373 v724 v721 j707 v1041 i1061 i990 v999 
=== Predecessor ===
v735 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 v721 v373 v422 a1014 v1077 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i10 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1243 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v373 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
i1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v373 #trueSuccessor: v741 #falseSuccessor: v739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid i940 <|@
result int[-150803|0xfffffffffffdb2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150803
stableDimension: 0
stamp: i32 [-150803] ⇊00000000fffdb2ed ⇈00000000fffdb2ed
stampKind: i32
value: int[-150803|0xfffffffffffdb2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150803|0xfffffffffffdb2ed], Object[null]] destination: B3 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1244 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1244  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1244 i1249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1244 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
=== Succesors ===
next: v746 
=== Usages ===
i560 v547 v427 v534 v422 
=== Predecessor ===
v739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 #next: v746  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1244 
y: i10 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1244 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v745 
falseSuccessor: v743 
=== Usages ===
=== Predecessor ===
i1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v745 #falseSuccessor: v743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid i944 <|@
result int[-153107|0xfffffffffffda9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153107
stableDimension: 0
stamp: i32 [-153107] ⇊00000000fffda9ed ⇈00000000fffda9ed
stampKind: i32
value: int[-153107|0xfffffffffffda9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153107|0xfffffffffffda9ed], Object[null]] destination: B5 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j993 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j993 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1038 
=== Usages ===
v1275 v1276 
=== Predecessor ===
v743 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j993 
index: - 
=== Succesors ===
=== Usages ===
j1038 v1040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j993 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1038 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: j1039 
=== Usages ===
j997 v1277 v1278 a1013 v1283 v1279 v1280 v1281 v1282 
=== Predecessor ===
j993 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: j1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j993 
index: - 
=== Succesors ===
=== Usages ===
j1039 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j993 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1039 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1276 
=== Succesors ===
next: v1002 
=== Usages ===
v1003 
=== Predecessor ===
j1038 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1276 #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid i998 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i998 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1243 y: i998  <|@  <|@
f <@~|@floating>@ <|@
tid j989 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1042 j1067 v1072 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1062 i990 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v999 
=== Succesors ===
trueSuccessor: v1001 
falseSuccessor: v1000 
=== Usages ===
=== Predecessor ===
j1039 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v999 #trueSuccessor: v1001 #falseSuccessor: v1000  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid i990 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1243 
y: i609 
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1243 y: i609  <|@  <|@
f <@~|@floating>@ <|@
tid i1021 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1022 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i990 
y: i1021 
=== Succesors ===
=== Usages ===
i992 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i990 y: i1021  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i992 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1022 
y: i991 
=== Succesors ===
=== Usages ===
j996 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1022 y: i991  <|@  <|@
f <@~|@floating>@ <|@
tid j996 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i992 
=== Succesors ===
=== Usages ===
j997 v1279 v1280 v1281 v1282 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i992  <|@  <|@
f <@~|@floating>@ <|@
tid j997 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
=== Inputs ===
x: j996 
y: j1038 
=== Succesors ===
=== Usages ===
v1003 v1040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j996 y: j1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1039 
y: j997 
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1039 y: j997  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1003 
=== Succesors ===
trueSuccessor: v1008 
falseSuccessor: v1007 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1003 #trueSuccessor: v1008 #falseSuccessor: v1007  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND v9|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1040 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1040  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
value: j997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1275 value: j997 stateAfter: - lastLocationAccess: - #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
result [v11|QWORD + v6|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: j1038 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: v1279 
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1279 #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
result [v11|QWORD + v6|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: j1038 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: v1280 
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1280 #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
result [v11|QWORD + v6|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: j1038 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: v1281 
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1281 #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
result [v11|QWORD + v6|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: j1038 
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: v1282 
=== Succesors ===
next: v1041 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1282 #next: v1041  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1038 
index: - 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1038 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
value: i1243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1277 value: i1243 stateAfter: - lastLocationAccess: - #next: v1042  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1038 
index: - 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1038 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1278 
value: j989 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1278 value: j989 stateAfter: - lastLocationAccess: - #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1038 
index: - 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1038 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
value: v1098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1012 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1283 value: v1098 stateAfter: - lastLocationAccess: - #next: v1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1013 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1013 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1038 
=== Succesors ===
next: v1015 
=== Usages ===
a1018 
=== Predecessor ===
v1012 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1038 #next: v1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
a1013 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v1000 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1004 v1006 
=== Succesors ===
next: a1014 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1004 v1006 #next: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1014 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1014 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v988 i1243 i10 
=== Succesors ===
next: v1017 
=== Usages ===
a1018 
=== Predecessor ===
v1005 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v988 i1243 i10 #next: v1017  <|@  <|@
f <@*|@fixed>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
a1014 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1018 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1016 
values: a1013 a1014 
=== Succesors ===
=== Usages ===
v1273 a927 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1016 values: a1013 a1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1015 v1017 
=== Succesors ===
next: v1164 
=== Usages ===
a1018 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1015 v1017 #next: v1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1114 
=== Usages ===
j1166 
=== Predecessor ===
v1016 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
result [v16|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1018 
index: - 
=== Succesors ===
=== Usages ===
j1166 j1060 j1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1018 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j707 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1243 
=== Succesors ===
=== Usages ===
j711 v713 j1204 j1194 j1200 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j711 j1071 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j707 
y: j710 
=== Succesors ===
=== Usages ===
v713 v1207 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j710  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i33 i249 v547 v724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i32 
=== Succesors ===
=== Usages ===
v1229 v1114 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1243 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v724 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1113 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v724 #trueSuccessor: v1112 #falseSuccessor: v1113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = DEC v17|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
v1112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid j1166 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1164 
address: v1273 
=== Succesors ===
=== Usages ===
v1286 v1287 v1288 v1289 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1164 address: v1273  <|@  <|@
f <@~|@floating>@ <|@
tid j1193 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1194 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j707 
y: j1193 
=== Succesors ===
=== Usages ===
v1195 v1197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j1193  <|@  <|@
f <@~|@floating>@ <|@
tid j1025 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1187 v1195 j1181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1194 
y: j1025 
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1194 y: j1025  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1195 
=== Succesors ===
trueSuccessor: v1115 
falseSuccessor: v1116 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1195 #trueSuccessor: v1115 #falseSuccessor: v1116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
v1115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@~|@floating>@ <|@
tid j984 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
result v21|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
v1116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B76" 
    successors "B18" "B76" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1187 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1119 
values: j1025 j1192 
=== Succesors ===
=== Usages ===
v1289 j1192 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1119 values: j1025 j1192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1118 
=== Succesors ===
next: v1217 
=== Usages ===
j1187 v1123 v1124 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1118 #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
result [v19|QWORD[.] + v22|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1166 
index: j1187 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1166 index: j1187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
value: v1218 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1289 value: v1218 stateAfter: - lastLocationAccess: - #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid j1192 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1187 
y: j984 
=== Succesors ===
=== Usages ===
j1181 j1187 v1197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1187 y: j984  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1194 
y: j1192 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1194 y: j1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1197 
=== Succesors ===
trueSuccessor: v1123 
falseSuccessor: v1125 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1197 #trueSuccessor: v1123 #falseSuccessor: v1125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v22|QWORD * 4], input: v21|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1119 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1119 #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
v1123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1181 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1128 
values: j1025 j1192 
=== Succesors ===
=== Usages ===
v1288 j1186 j1174 v1201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1128 values: j1025 j1192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1127 v1129 
=== Succesors ===
next: v1147 
=== Usages ===
j1181 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1127 v1129 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid j1199 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1200 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j707 
y: j1199 
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j1199  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1200 
y: j1181 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1200 y: j1181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1201 
=== Succesors ===
trueSuccessor: v1146 
falseSuccessor: v1145 
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1201 #trueSuccessor: v1146 #falseSuccessor: v1145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v17|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
v1146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1216 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
result [v19|QWORD[.] + v24|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1166 
index: j1181 
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1166 index: j1181  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
result v26|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
value: v1221 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1288 value: v1221 stateAfter: - lastLocationAccess: - #next: v1138  <|@  <|@
f <@~|@floating>@ <|@
tid j1169 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1186 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1181 
y: j1169 
=== Succesors ===
=== Usages ===
j1174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1181 y: j1169  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
v1216 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v24|QWORD * 4], input: v26|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1174 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1139 
values: j1186 j1181 
=== Succesors ===
=== Usages ===
v1287 j1180 j1167 v1205 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1139 values: j1186 j1181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1138 v1150 
=== Succesors ===
next: v1153 
=== Usages ===
j1174 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1138 v1150 #next: v1153  <|@  <|@
f <@~|@floating>@ <|@
tid j1203 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1204 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j707 
y: j1203 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1204 
y: j1174 
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1204 y: j1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1205 
=== Succesors ===
trueSuccessor: v1152 
falseSuccessor: v1151 
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1205 #trueSuccessor: v1152 #falseSuccessor: v1151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v17|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
v1152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1214 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
result [v19|QWORD[.] + v28|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1166 
index: j1174 
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1166 index: j1174  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
result v30|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
value: v1220 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1287 value: v1220 stateAfter: - lastLocationAccess: - #next: v1141  <|@  <|@
f <@~|@floating>@ <|@
tid j1179 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1180 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1174 
y: j1179 
=== Succesors ===
=== Usages ===
j1167 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1174 y: j1179  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
v1214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v28|QWORD * 4], input: v30|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1167 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1142 
values: j1180 j1174 
=== Succesors ===
=== Usages ===
v1286 v1207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1142 values: j1180 j1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1141 v1156 
=== Succesors ===
next: v1159 
=== Usages ===
j1167 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1141 v1156 #next: v1159  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j711 
y: j1167 
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j711 y: j1167  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1207 
=== Succesors ===
trueSuccessor: v1158 
falseSuccessor: v1157 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1207 #trueSuccessor: v1158 #falseSuccessor: v1157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1162 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1162  <|@  <|@
f <@*|@fixed>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
v1158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1212 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
result [v19|QWORD[.] + v32|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1166 
index: j1167 
=== Succesors ===
=== Usages ===
v1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1166 index: j1167  <|@  <|@
f <@~|@floating>@ <|@
tid a1219 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
value: a1219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1286 value: a1219 stateAfter: - lastLocationAccess: - #next: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
v1212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v32|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1131 v1144 v1162 
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1131 v1144 v1162 #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i10 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1243 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid j1079 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1080 v1285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 16]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 i561 i1061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1057 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1059 j1065 j1089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v1054 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v1054 #falseSuccessor: v1055  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
v1054 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1058 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1058 <|@
result [v16|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1273 
=== Succesors ===
next: j1060 
=== Usages ===
j1059 
=== Predecessor ===
v1055 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1273 #next: j1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1060 <|@
result [v16|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1273 
=== Succesors ===
next: v1068 
=== Usages ===
j1064 
=== Predecessor ===
j1058 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1273 #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid i1061 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32
=== Inputs ===
x: i1243 
y: i328 
=== Succesors ===
=== Usages ===
i1062 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1243 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i1062 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1061 
y: i609 
=== Succesors ===
=== Usages ===
j1063 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1061 y: i609  <|@  <|@
f <@~|@floating>@ <|@
tid j1063 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i1062 
=== Succesors ===
=== Usages ===
j1064 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1062  <|@  <|@
f <@~|@floating>@ <|@
tid j1064 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
=== Inputs ===
x: j1060 
y: j1063 
=== Succesors ===
=== Usages ===
j1065 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1060 y: j1063  <|@  <|@
f <@~|@floating>@ <|@
tid j1065 <|@
result v39|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1064 
y: i1057 
=== Succesors ===
=== Usages ===
j1066 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1064 y: i1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1059 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1058 
y: i1057 
=== Succesors ===
=== Usages ===
j1066 j1080 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1058 y: i1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1066 <|@
result v42|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1065 
y: j1059 
=== Succesors ===
=== Usages ===
j1067 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1065 y: j1059  <|@  <|@
f <@~|@floating>@ <|@
tid j1067 <|@
result v43|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1066 
y: j989 
=== Succesors ===
=== Usages ===
j1070 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1066 y: j989  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
j1060 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL v34|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = ADD (x: v37|QWORD[.], y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = SHR v38|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = SHR v41|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SUB (x: v39|QWORD[*], ~y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = INC v42|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[*]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B75" 
    successors "B32" "B75" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1070 <|@
result v44|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1069 
values: j1067 j1071 
=== Succesors ===
=== Usages ===
j1071 v1072 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1069 values: j1067 j1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1068 
=== Succesors ===
next: v1075 
=== Usages ===
j1070 v1073 v1078 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1068 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1070 
y: j989 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1070 y: j989  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1072 
=== Succesors ===
trueSuccessor: v1073 
falseSuccessor: v1074 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1072 #trueSuccessor: v1073 #falseSuccessor: v1074  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v44|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1069 
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1069 #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
v1073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1082 v1083 
=== Succesors ===
next: a927 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1082 v1083 #next: a927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a927 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1018 
=== Succesors ===
next: v1245 
=== Usages ===
?203 ?15 v1265 v41 ?203 
=== Predecessor ===
v1081 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1018 #next: v1245  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
result [v2|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1245 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
=== Succesors ===
next: v596 
=== Usages ===
v1263 v1100 v1102 v1104 v1106 v1238 
=== Predecessor ===
a927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1284 #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
result [v45|DWORD * 8 + 696] <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1245 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
=== Succesors ===
next: v750 
=== Usages ===
v409 
=== Predecessor ===
v1245 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v596 
y: v407 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v596 y: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v409 
=== Succesors ===
trueSuccessor: v747 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v409 #trueSuccessor: v747 #falseSuccessor: v749  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v45|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1101 
=== Succesors ===
=== Usages ===
v291 v453 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
a1252 a1258 a1246 i1248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 v1238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.5044648172401477
=== Inputs ===
condition: v1102 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1102 #trueSuccessor: v449 #falseSuccessor: v452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602719034671164925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1246 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1246 <|@
result v47|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: i1247 
=== Usages ===
v1272 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: i1247  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
result [v47|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1246 
=== Succesors ===
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1247 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1272 
=== Succesors ===
next: v758 
=== Usages ===
v534 
=== Predecessor ===
a1246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1272 #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1247 
y: i1244 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1247 y: i1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v757 
falseSuccessor: v755 
=== Usages ===
=== Predecessor ===
i1247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v757 #falseSuccessor: v755  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v47|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid i950 <|@
result int[-171539|0xfffffffffffd61ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171539
stableDimension: 0
stamp: i32 [-171539] ⇊00000000fffd61ed ⇈00000000fffd61ed
stampKind: i32
value: int[-171539|0xfffffffffffd61ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v757 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171539|0xfffffffffffd61ed], Object[null]] destination: B36 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B46" 
    xhandlers
    flags 
    probability 4602719034671164925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v755 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4602598388175610886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
result meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1103 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1103  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.525228255646324
=== Inputs ===
condition: v1104 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v461 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1104 #trueSuccessor: v458 #falseSuccessor: v461  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4598360210838459274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1244 
y: i32 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1244 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v761 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v759 #falseSuccessor: v761  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B46" 
    xhandlers
    flags 
    probability 4598360210838459274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
result int[-171795|0xfffffffffffd60ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171795
stableDimension: 0
stamp: i32 [-171795] ⇊00000000fffd60ed ⇈00000000fffd60ed
stampKind: i32
value: int[-171795|0xfffffffffffd60ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171795|0xfffffffffffd60ed], Object[null]] destination: B41 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B73" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1099 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1238 
=== Succesors ===
trueSuccessor: v763 
falseSuccessor: v765 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1238 #trueSuccessor: v763 #falseSuccessor: v765  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1248 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1248 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: v770 
=== Usages ===
v427 
=== Predecessor ===
v763 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1248 
y: i1244 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1248 y: i1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v767 
=== Usages ===
=== Predecessor ===
i1248 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v769 #falseSuccessor: v767  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: [v2|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid i952 <|@
result int[-172819|0xfffffffffffd5ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -172819
stableDimension: 0
stamp: i32 [-172819] ⇊00000000fffd5ced ⇈00000000fffd5ced
stampKind: i32
value: int[-172819|0xfffffffffffd5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-172819|0xfffffffffffd5ced], Object[null]] destination: B44 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B37" "B40" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v527 v530 v546 
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v527 v530 v546 #next: v1229  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v724 
=== Succesors ===
trueSuccessor: v1225 
falseSuccessor: v1228 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v724 #trueSuccessor: v1225 #falseSuccessor: v1228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j711 
y: j707 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j711 y: j707  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v1236 
falseSuccessor: v1233 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v1236 #falseSuccessor: v1233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1224  <|@  <|@
f <@*|@fixed>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1223 v1224 
=== Succesors ===
next: v12 
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1223 v1224 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i1093 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a497 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@724f57db
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?507 ?203 ?15 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a501 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@204a1cd0
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/AbstractList$ListItr;
type: HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?334 ?562 ?507 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?507 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a497 
values: - a501 a1 
=== Succesors ===
=== Usages ===
?15 ?916 ?917 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a497 values: - a501 a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v1222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v5|DWORD, int[-1|0xffffffffffffffff]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" 
    successors "B52" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4616949226768443987
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i14 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i10 i33 
=== Succesors ===
=== Usages ===
?15 v16 i33 ?203 ?203 v1265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i10 i33  <|@  <|@
f <@~|@floating>@ <|@
tid i560 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i1244 i249 
=== Succesors ===
=== Usages ===
?562 v641 ?916 ?334 i327 i561 i154 i249 v623 v1271 v1268 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i1244 i249  <|@  <|@
f <@~|@floating>@ <|@
tid i561 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i328 i560 
=== Succesors ===
=== Usages ===
?562 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i328 i560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.6746680669117096
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v12 
=== Succesors ===
next: i1249 
=== Usages ===
i14 v19 v34 i560 i561 v793 v808 v778 v783 v803 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v12 #next: i1249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1249 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
=== Succesors ===
next: i1250 
=== Usages ===
i154 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 #next: i1250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1250 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 22]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
=== Succesors ===
next: v21 
=== Usages ===
v144 
=== Predecessor ===
i1249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
stamp: i32
=== Inputs ===
x: i560 
y: i1249 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i560 y: i1249  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i1250 
=== Succesors ===
=== Usages ===
v818 v779 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i154 y: i1250  <|@  <|@
tid ?562 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a501 
values: i560 i561 i1241 a1240 a1240 
=== Succesors ===
=== Usages ===
?15 ?917 ?916 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a501 values: i560 i561 i1241 a1240 a1240  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a927 a497 i14 
virtualObjectMappings: ?507 ?562 
=== Succesors ===
=== Usages ===
v965 i1253 i1256 v1290 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a927 a497 i14 virtualObjectMappings: ?507 ?562  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i14 
y: i1243 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i14 y: i1243  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 18]
stamp: void
trueSuccessorProbability: 0.7860810680702205
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
i1250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|DWORD, v50|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SUB (x: v49|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7860810680702205 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
v719 
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v144 
=== Succesors ===
trueSuccessor: v775 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v144 #trueSuccessor: v775 #falseSuccessor: v778  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1251 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1251 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
=== Succesors ===
next: v784 
=== Usages ===
v274 
=== Predecessor ===
v775 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1241 
y: i1251 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1241 y: i1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v274 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v783 
=== Usages ===
=== Predecessor ===
i1251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v274 #trueSuccessor: v780 #falseSuccessor: v783  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v2|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v1102 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v290 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1102 #trueSuccessor: v284 #falseSuccessor: v290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1252 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1252 <|@
result v54|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: i1253 
=== Usages ===
a617 v1267 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: i1253  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
result [v54|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1252 
=== Succesors ===
=== Usages ===
i1253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1253 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1267 
=== Succesors ===
next: v794 
=== Usages ===
v623 
=== Predecessor ===
a1252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1267 #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i560 
y: i1253 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i560 y: i1253  <|@  <|@
f <@*|@fixed>@ <|@
tid v794 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v623 
=== Succesors ===
trueSuccessor: v790 
falseSuccessor: v793 
=== Usages ===
=== Predecessor ===
i1253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v623 #trueSuccessor: v790 #falseSuccessor: v793  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v16|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
>@ <|@ instruction CMP (x: v49|DWORD, y: [v54|DWORD[.] * 8 + 12]) size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1254 
=== Usages ===
a1254 
=== Predecessor ===
v794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1254  <|@  <|@
f <@~|@floating>@ <|@
tid a617 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1252 
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
result [v55|QWORD[.] + v49|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a617 
index: i560 
=== Succesors ===
=== Usages ===
a1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a617 index: i560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1254 <|@
result v56|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v790 
address: v1268 
=== Succesors ===
next: v520 
=== Usages ===
a919 
=== Predecessor ===
v790 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v790 address: v1268 #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
a1254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v55|QWORD[.] + v49|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD[.]] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid i973 <|@
result int[-159771|0xfffffffffffd8fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -159771
stableDimension: 0
stamp: i32 [-159771] ⇊00000000fffd8fe5 ⇈00000000fffd8fe5
stampKind: i32
value: int[-159771|0xfffffffffffd8fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159771|0xfffffffffffd8fe5]] destination: B57 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598272646833805590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1099 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 0.9931451844203517
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v296 #falseSuccessor: v299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203517 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1255 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
result [v2|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
a1255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1255 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
=== Succesors ===
next: i1256 
=== Usages ===
a635 v1270 
=== Predecessor ===
v296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 #next: i1256  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
result [v57|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1255 
=== Succesors ===
=== Usages ===
i1256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1256 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1270 
=== Succesors ===
next: v804 
=== Usages ===
v641 
=== Predecessor ===
a1255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1270 #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i560 
y: i1256 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i560 y: i1256  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v803 
=== Usages ===
=== Predecessor ===
i1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v800 #falseSuccessor: v803  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v2|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v16|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
>@ <|@ instruction CMP (x: v49|DWORD, y: [v57|DWORD[.] * 8 + 12]) size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1257 
=== Usages ===
a1257 
=== Predecessor ===
v804 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1257  <|@  <|@
f <@~|@floating>@ <|@
tid a635 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a1255 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
result [v58|QWORD[.] + v49|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a635 
index: i560 
=== Succesors ===
=== Usages ===
a1257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a635 index: i560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1257 <|@
result v59|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v800 
address: v1271 
=== Succesors ===
next: v559 
=== Usages ===
a919 
=== Predecessor ===
v800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v800 address: v1271 #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
a1257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v58|QWORD[.] + v49|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD[.]] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
result int[-164379|0xfffffffffffd7de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164379
stableDimension: 0
stamp: i32 [-164379] ⇊00000000fffd7de5 ⇈00000000fffd7de5
stampKind: i32
value: int[-164379|0xfffffffffffd7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v803 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164379|0xfffffffffffd7de5]] destination: B61 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v1105 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1245 
y: v1105 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1245 y: v1105  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1106 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1106 #trueSuccessor: v805 #falseSuccessor: v808  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1258 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1258 <|@
result v60|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: v1290 
=== Usages ===
a653 v1290 
=== Predecessor ===
v805 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: v1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
object: a1258 
=== Succesors ===
next: i325 
=== Usages ===
=== Predecessor ===
a1258 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?15 object: a1258 #next: i325  <|@  <|@
f <@~|@floating>@ <|@
tid a653 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1258 
=== Succesors ===
=== Usages ===
?916 v658 v657 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1258  <|@  <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@51c107a0
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a653 
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a653  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 39
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 141
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a927 a497 i14 a927 i14 
=== Succesors ===
=== Usages ===
?253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a927 a497 i14 a927 i14  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: - 
=== Succesors ===
=== Usages ===
?334 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: -  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?253 
values: a501 i560 - 
=== Succesors ===
=== Usages ===
?917 ?916 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?253 values: a501 i560 -  <|@  <|@
tid ?916 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<ReversedList.get(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?334 
values: - i560 a653 
virtualObjectMappings: ?507 ?562 
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?334 values: - i560 a653 virtualObjectMappings: ?507 ?562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i325 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v657 
stateDuring: ?916 
=== Succesors ===
next: a331 
=== Usages ===
i327 
=== Predecessor ===
v1290 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v657 stateDuring: ?916 #next: a331  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 14]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: i32
=== Inputs ===
x: i325 
y: i560 
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i325 y: i560  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 16]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: i32
=== Inputs ===
x: i327 
y: i328 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i327 y: i328  <|@  <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@395ea31
stamp: void
targetMethod: HotSpotMethod<List.get(int)>
=== Inputs ===
arguments: a653 i329 
=== Succesors ===
=== Usages ===
a331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a653 i329  <|@  <|@
tid ?917 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<ReversedList.get(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?334 
values: - - 
virtualObjectMappings: ?507 ?562 
=== Succesors ===
=== Usages ===
a331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?334 values: - - virtualObjectMappings: ?507 ?562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a331 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#List.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v658 
stateDuring: ?917 
=== Succesors ===
next: v517 
=== Usages ===
a918 
=== Predecessor ===
i325 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v658 stateDuring: ?917 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid a918 <|@
result v66|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
op: Compress
stamp: n -
=== Inputs ===
value: a331 
=== Succesors ===
=== Usages ===
a919 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a331  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
a331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v16|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v60|DWORD[.] * 8] state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
stack: v61|QWORD[.] 
locals: - v49|DWORD 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v49|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: v16|QWORD[.] v48|DWORD 
locals: - v16|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 11, 39] <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = DEC v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
locals: - - 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v49|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: v16|QWORD[.] v48|DWORD 
locals: - v16|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 11, 39] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = COMPRESSPOINTER (input: v65|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B56" "B60" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a919 <|@
result v67|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v518 
values: a918 a1254 a1257 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v518 values: a918 a1254 a1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v517 v520 v559 
=== Succesors ===
next: v614 
=== Usages ===
a919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v517 v520 v559 #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1222 v17 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1222 v17  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
result [v16|QWORD[.] + v48|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a927 
index: i14 
=== Succesors ===
=== Usages ===
v614 j1088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a927 index: i14  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v719 
address: v1265 
value: a919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1088 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v719 address: v1265 value: a919 stateAfter: - lastLocationAccess: - #next: j1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1088 <|@
result [v16|QWORD[.] + v48|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1265 
=== Succesors ===
next: v1092 
=== Usages ===
j1089 
=== Predecessor ===
v614 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1265 #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
result v68|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1088 
y: i1057 
=== Succesors ===
=== Usages ===
v1285 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1088 y: i1057  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
result [v68|QWORD[*] + v33|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1089 
index: j1079 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1089 index: j1079  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
value: i1093 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
j1088 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1285 value: i1093 stateAfter: - lastLocationAccess: - #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: i32
=== Inputs ===
x: i560 
y: i32 
=== Succesors ===
=== Usages ===
i560 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i560 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 45]
stamp: i32
=== Inputs ===
x: i14 
y: i32 
=== Succesors ===
=== Usages ===
i14 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i14 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD[.] + v48|DWORD * 4 + 16], y: v67|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v16|QWORD[.] + v48|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|QWORD[*] + v33|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = INC v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v70|DWORD, v49|DWORD] destination: B64 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
result int[-166451|0xfffffffffffd75cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166451
stableDimension: 0
stamp: i32 [-166451] ⇊00000000fffd75cd ⇈00000000fffd75cd
stampKind: i32
value: int[-166451|0xfffffffffffd75cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166451|0xfffffffffffd75cd]] destination: B65 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
result int[-154643|0xfffffffffffda3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154643
stableDimension: 0
stamp: i32 [-154643] ⇊00000000fffda3ed ⇈00000000fffda3ed
stampKind: i32
value: int[-154643|0xfffffffffffda3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154643|0xfffffffffffda3ed]] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:139) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v966 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v966  <|@  <|@
f <@~|@floating>@ <|@
tid i967 <|@
result int[-153875|0xfffffffffffda6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153875
stableDimension: 0
stamp: i32 [-153875] ⇊00000000fffda6ed ⇈00000000fffda6ed
stampKind: i32
value: int[-153875|0xfffffffffffda6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153875|0xfffffffffffda6ed]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B69" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v144 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v815 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v144 #trueSuccessor: v817 #falseSuccessor: v815  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid i962 <|@
result int[-169235|0xfffffffffffd6aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -169235
stableDimension: 0
stamp: i32 [-169235] ⇊00000000fffd6aed ⇈00000000fffd6aed
stampKind: i32
value: int[-169235|0xfffffffffffd6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v817 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-169235|0xfffffffffffd6aed]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" "B57" "B61" "B65" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i963 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-169235 - -153875] ⇊00000000fffd00c5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v960 
values: i962 i967 i969 i973 i977 i979 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v960 values: i962 i967 i969 i973 i977 i979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v961 v966 v968 v972 v976 v978 
=== Succesors ===
next: v965 
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v961 v966 v968 v972 v976 v978 #next: v965  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i963 
speculation: a933 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i963 speculation: a933  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v16|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:143) [bci: 69]
stamp: void
=== Inputs ===
result: a927 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a927 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid a959 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@590649397
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@590649397]
=== Inputs ===
=== Succesors ===
=== Usages ===
a935 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i958 <|@
result int[-155163|0xfffffffffffda1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155163
stableDimension: 0
stamp: i32 [-155163] ⇊00000000fffda1e5 ⇈00000000fffda1e5
stampKind: i32
value: int[-155163|0xfffffffffffda1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v1233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@590649397] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155163|0xfffffffffffda1e5], v73|QWORD[.]] destination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
result int[-172083|0xfffffffffffd5fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -172083
stableDimension: 0
stamp: i32 [-172083] ⇊00000000fffd5fcd ⇈00000000fffd5fcd
stampKind: i32
value: int[-172083|0xfffffffffffd5fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v765 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-172083|0xfffffffffffd5fcd], Object[null]] destination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:137) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
result int[-152883|0xfffffffffffdaacd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152883
stableDimension: 0
stamp: i32 [-152883] ⇊00000000fffdaacd ⇈00000000fffdaacd
stampKind: i32
value: int[-152883|0xfffffffffffdaacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152883|0xfffffffffffdaacd], Object[null]] destination: B74 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@~|@floating>@ <|@
tid j1071 <|@
result v74|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
=== Inputs ===
x: j1070 
y: j710 
=== Succesors ===
=== Usages ===
j1070 j1076 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1070 y: j710  <|@  <|@
f <@~|@floating>@ <|@
tid j1080 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1059 
y: j1079 
=== Succesors ===
=== Usages ===
j1076 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1059 y: j1079  <|@  <|@
f <@~|@floating>@ <|@
tid j1076 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: i64
=== Inputs ===
x: j1071 
y: j1080 
=== Succesors ===
=== Usages ===
v1077 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1071 y: j1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
address: j1076 
value: i10 
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1076 value: i10 #next: v1078  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v1069 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1069  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[*] = DEC v44|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v40|QWORD[*], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = ADD (x: v75|QWORD[*], y: v74|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v76|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[*]] destination: B75 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1124 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1124  <|@  <|@
f <@*|@fixed>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1119 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B76 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid i942 <|@
result int[-149011|0xfffffffffffdb9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149011
stableDimension: 0
stamp: i32 [-149011] ⇊00000000fffdb9ed ⇈00000000fffdb9ed
stampKind: i32
value: int[-149011|0xfffffffffffdb9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149011|0xfffffffffffdb9ed], Object[null]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid i938 <|@
result int[-145715|0xfffffffffffdc6cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145715
stableDimension: 0
stamp: i32 [-145715] ⇊00000000fffdc6cd ⇈00000000fffdc6cd
stampKind: i32
value: int[-145715|0xfffffffffffdc6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145715|0xfffffffffffdc6cd], Object[null]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B3" "B77" "B5" "B74" "B36" "B44" "B41" "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i934 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-172819 - -145715] ⇊00000000fffd00c5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v930 
values: i938 i940 i942 i944 i948 i950 i952 i954 i956 i958 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v930 values: i938 i940 i942 i944 i948 i950 i952 i954 i956 i958  <|@  <|@
f <@~|@floating>@ <|@
tid a935 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v930 
values: a933 a933 a933 a933 a933 a933 a933 a933 a933 a959 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v930 values: a933 a933 a933 a933 a933 a933 a933 a933 a933 a959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v937 v939 v941 v943 v947 v949 v951 v953 v955 v957 
=== Succesors ===
next: v936 
=== Usages ===
i934 a935 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v937 v939 v941 v943 v947 v949 v951 v953 v955 v957 #next: v936  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i934 
speculation: a935 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i934 speculation: a935  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD, v78|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@713bf958 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND v9|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = DEC v17|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v17|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v24|QWORD * 4], input: v26|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v17|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v28|QWORD * 4], input: v30|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v32|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL v34|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = ADD (x: v37|QWORD[.], y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = SHR v38|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = SHR v41|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SUB (x: v39|QWORD[*], ~y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = INC v42|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[*]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[*] = DEC v44|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v40|QWORD[*], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = ADD (x: v75|QWORD[*], y: v74|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v76|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[*]] destination: B75 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B75" 
    successors "B32" "B75" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v44|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v45|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602719034671164925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v47|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B46" 
    xhandlers
    flags 
    probability 4602719034671164925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B37" "B40" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v5|DWORD, int[-1|0xffffffffffffffff]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v2|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v16|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
>@ <|@ instruction CMP (x: v49|DWORD, y: [v54|DWORD[.] * 8 + 12]) size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v55|QWORD[.] + v49|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD[.]] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B56" "B60" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD[.] + v48|DWORD * 4 + 16], y: v67|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v16|QWORD[.] + v48|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|QWORD[*] + v33|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = INC v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v70|DWORD, v49|DWORD] destination: B64 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" 
    successors "B52" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4616949226768443987
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|DWORD, v50|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SUB (x: v49|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7860810680702205 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598272646833805590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203517 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v2|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v16|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
>@ <|@ instruction CMP (x: v49|DWORD, y: [v57|DWORD[.] * 8 + 12]) size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v58|QWORD[.] + v49|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD[.]] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v16|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v60|DWORD[.] * 8] state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
stack: v61|QWORD[.] 
locals: - v49|DWORD 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v49|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: v16|QWORD[.] v48|DWORD 
locals: - v16|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 11, 39] <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = DEC v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
locals: - - 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v49|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: v16|QWORD[.] v48|DWORD 
locals: - v16|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 11, 39] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = COMPRESSPOINTER (input: v65|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B69" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4602598388175610886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4598360210838459274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B46" 
    xhandlers
    flags 
    probability 4598360210838459274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B73" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: [v2|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B76 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B76" 
    successors "B18" "B76" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v22|QWORD * 4], input: v21|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166451|0xfffffffffffd75cd]] destination: B65 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" "B57" "B61" "B65" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - v16|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} v48|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]},this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} v0|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=v49|DWORD,lastRet=v50|DWORD,expectedModCount=v3|DWORD,this$0=v2|DWORD[.],this$0=v2|DWORD[.]} Ljava/util/AbstractList$ListItr; v49|DWORD v50|DWORD v3|DWORD v2|DWORD[.] v2|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-172083|0xfffffffffffd5fcd], Object[null]] destination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B3" "B77" "B5" "B74" "B36" "B44" "B41" "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD, v78|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153875|0xfffffffffffda6ed]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-172819|0xfffffffffffd5ced], Object[null]] destination: B44 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171539|0xfffffffffffd61ed], Object[null]] destination: B36 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@590649397] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155163|0xfffffffffffda1e5], v73|QWORD[.]] destination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-169235|0xfffffffffffd6aed]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152883|0xfffffffffffdaacd], Object[null]] destination: B74 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159771|0xfffffffffffd8fe5]] destination: B57 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171795|0xfffffffffffd60ed], Object[null]] destination: B41 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154643|0xfffffffffffda3ed]] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150803|0xfffffffffffdb2ed], Object[null]] destination: B3 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153107|0xfffffffffffda9ed], Object[null]] destination: B5 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164379|0xfffffffffffd7de5]] destination: B61 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149011|0xfffffffffffdb9ed], Object[null]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145715|0xfffffffffffdc6cd], Object[null]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: anewarray     #8          // java.lang.Object
     7: astore_1      
     8: aload_0       
     9: invokevirtual #2          // iterator:()java.util.Iterator
    12: astore_2      
    13: iconst_0      
    14: istore_3      
    15: iload_3       
    16: aload_1       
    17: arraylength   
    18: if_icmpge     51
    21: aload_2       
    22: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    27: ifne          36
    30: aload_1       
    31: iload_3       
    32: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    35: areturn       
    36: aload_1       
    37: iload_3       
    38: aload_2       
    39: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    44: aastore       
    45: iinc          
    48: goto          15
    51: aload_2       
    52: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    57: ifeq          68
    60: aload_1       
    61: aload_2       
    62: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
    65: goto          69
    68: aload_1       
    69: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@713bf958 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   18  <|@ instruction stack:36|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r14|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   66  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r8|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr   76  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  152  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  166  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  214  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  216  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  218  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  226  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  238  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  240  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  248  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  266  <|@ instruction stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction r8|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  284  <|@ instruction r9|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction r9|QWORD[.] = ADD (x: r9|QWORD[.], y: r8|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD[*] = SUB (x: r9|QWORD[*], ~y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[*] = INC r9|QWORD[*] size: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  720  <|@ instruction r9|QWORD[*] = DEC r9|QWORD[*] size: QWORD <|@ <|@
      nr  722  <|@ instruction rcx|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr  724  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  726  <|@ instruction MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B75 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B75" 
    successors "B32" "B75" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction CMP r9|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  314  <|@ instruction stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  318  <|@ instruction CMP (x: r9|QWORD, y: [r8|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602719034671164925
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:40, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r9|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B46" 
    xhandlers
    flags 
    probability 4602719034671164925
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B37 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B37" "B40" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction stack:72|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  430  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  452  <|@ instruction CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction CMP (x: rcx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r13:0, stack:40, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - rax|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]} r10|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} rsi|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/AbstractList$ListItr; r9|DWORD stack:72|DWORD rcx|DWORD r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD state [bci:15] <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[.] = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B56" "B60" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = LEA [rax|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  594  <|@ instruction rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  596  <|@ instruction MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  598  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  602  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction r9|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B64 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" 
    successors "B52" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4616949226768443987
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rdi|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  444  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.7860810680702205 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598272646833805590
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203517 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r13:0, stack:40, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - rax|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]} r10|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} rsi|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/AbstractList$ListItr; r9|DWORD stack:72|DWORD rcx|DWORD r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD state [bci:15] <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction rbx|DWORD[.] = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [rdi:0, r13:0, stack:40, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - stack:56|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]} stack:80|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} stack:32|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/AbstractList$ListItr; stack:76|DWORD stack:72|DWORD stack:40|DWORD r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:15] <|@ <|@
      nr  546  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [stack:8, stack:40, stack:60, stack:64]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
stack: stack:88|QWORD[.] 
locals: - stack:76|DWORD 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} stack:76|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: stack:56|QWORD[.] stack:80|DWORD 
locals: - stack:56|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]} stack:80|DWORD 
vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} Ljava/util/AbstractList$ListItr; stack:76|DWORD stack:72|DWORD stack:40|DWORD stack:36|DWORD[.] stack:36|DWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 11, 39] <|@ <|@
      nr  554  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: stack:76|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [stack:40, stack:60, stack:64]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
locals: - - 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} stack:76|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: stack:56|QWORD[.] stack:80|DWORD 
locals: - stack:56|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]} stack:80|DWORD 
vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} Ljava/util/AbstractList$ListItr; stack:76|DWORD stack:72|DWORD stack:40|DWORD stack:36|DWORD[.] stack:36|DWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 11, 39] <|@ <|@
      nr  564  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr  566  <|@ instruction rbx|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r14|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction r13|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B69" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4602598388175610886
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4598360210838459274
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B46" 
    xhandlers
    flags 
    probability 4598360210838459274
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B40 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B73" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP (x: r9|DWORD, y: [r13|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  180  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B76 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B76" 
    successors "B18" "B76" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  186  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  188  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  138  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [r13:0, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction r10|DWORD = MOVE input: int[-166451|0xfffffffffffd75cd] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B65 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" "B57" "B61" "B65" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  674  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - rax|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]} r8|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} stack:32|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/AbstractList$ListItr; r9|DWORD r11|DWORD r14|DWORD r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  702  <|@ instruction r10|DWORD = MOVE input: int[-172083|0xfffffffffffd5fcd] <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B3" "B77" "B5" "B74" "B36" "B44" "B41" "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  756  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction r10|DWORD = MOVE input: int[-153875|0xfffffffffffda6ed] <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-172819|0xfffffffffffd5ced] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B44 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  342  <|@ instruction r10|DWORD = MOVE input: int[-171539|0xfffffffffffd61ed] <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B36 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@590649397] <|@ <|@
      nr  690  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-155163|0xfffffffffffda1e5] <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r10|DWORD = MOVE input: int[-169235|0xfffffffffffd6aed] <|@ <|@
      nr  658  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction r8|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r13|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-152883|0xfffffffffffdaacd] <|@ <|@
      nr  714  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B74 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[-159771|0xfffffffffffd8fe5] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B57 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-171795|0xfffffffffffd60ed] <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B41 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   42  <|@ instruction r10|DWORD = MOVE input: int[-150803|0xfffffffffffdb2ed] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B3 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-164379|0xfffffffffffd7de5] <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B61 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-149011|0xfffffffffffdb9ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  746  <|@ instruction r10|DWORD = MOVE input: int[-145715|0xfffffffffffdc6cd] <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: anewarray     #8          // java.lang.Object
     7: astore_1      
     8: aload_0       
     9: invokevirtual #2          // iterator:()java.util.Iterator
    12: astore_2      
    13: iconst_0      
    14: istore_3      
    15: iload_3       
    16: aload_1       
    17: arraylength   
    18: if_icmpge     51
    21: aload_2       
    22: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    27: ifne          36
    30: aload_1       
    31: iload_3       
    32: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    35: areturn       
    36: aload_1       
    37: iload_3       
    38: aload_2       
    39: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    44: aastore       
    45: iinc          
    48: goto          15
    51: aload_2       
    52: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    57: ifeq          68
    60: aload_1       
    61: aload_2       
    62: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
    65: goto          69
    68: aload_1       
    69: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@713bf958 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   18  <|@ instruction stack:36|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r14|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   66  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B9" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r8|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr   76  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  110  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B28" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  152  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B28 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  166  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B22" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  214  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  216  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  218  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B25" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  226  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  238  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  240  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B22" 
    successors "B28" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  248  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B12" "B27" "B25" 
    successors "B33" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  266  <|@ instruction stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B33 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction r8|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  284  <|@ instruction r9|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction r9|QWORD[.] = ADD (x: r9|QWORD[.], y: r8|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD[*] = SUB (x: r9|QWORD[*], ~y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[*] = INC r9|QWORD[*] size: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  720  <|@ instruction r9|QWORD[*] = DEC r9|QWORD[*] size: QWORD <|@ <|@
      nr  722  <|@ instruction rcx|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr  724  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  726  <|@ instruction MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B75 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B75" 
    successors "B33" "B75" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction CMP r9|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B33 falseDestination: B31 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B34" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  314  <|@ instruction stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  318  <|@ instruction CMP (x: r9|QWORD, y: [r8|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  330  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B46" 
    xhandlers
    flags 
    probability 4602719034671164925
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rcx|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:40, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r9|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B43" "B35" "B39" 
    successors "B50" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B50 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B50 falseDestination: B48 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction stack:72|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  430  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  452  <|@ instruction CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction CMP (x: rcx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r13:0, stack:40, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - rax|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]} r10|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} rsi|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/AbstractList$ListItr; r9|DWORD stack:72|DWORD rcx|DWORD r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD state [bci:15] <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614881907303956867
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[.] = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B56" "B60" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4615457035668444326
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = LEA [rax|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  594  <|@ instruction rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  596  <|@ instruction MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  598  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  602  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction r9|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B64 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" 
    successors "B52" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4616949226768443987
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rdi|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  444  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.7860810680702205 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598272646833805590
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203517 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r13:0, stack:40, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - rax|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]} r10|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} rsi|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/AbstractList$ListItr; r9|DWORD stack:72|DWORD rcx|DWORD r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD state [bci:15] <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4598241107642820100
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction rbx|DWORD[.] = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4565716855791227436
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [rdi:0, r13:0, stack:40, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - stack:56|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]} stack:80|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} stack:32|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/AbstractList$ListItr; stack:76|DWORD stack:72|DWORD stack:40|DWORD r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:15] <|@ <|@
      nr  546  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [stack:8, stack:40, stack:60, stack:64]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
stack: stack:88|QWORD[.] 
locals: - stack:76|DWORD 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} stack:76|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: stack:56|QWORD[.] stack:80|DWORD 
locals: - stack:56|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]} stack:80|DWORD 
vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} Ljava/util/AbstractList$ListItr; stack:76|DWORD stack:72|DWORD stack:40|DWORD stack:36|DWORD[.] stack:36|DWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 11, 39] <|@ <|@
      nr  554  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: stack:76|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [stack:40, stack:60, stack:64]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
locals: - - 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} stack:76|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39]
stack: stack:56|QWORD[.] stack:80|DWORD 
locals: - stack:56|QWORD[.] vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]} stack:80|DWORD 
vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} Ljava/util/AbstractList$ListItr; stack:76|DWORD stack:72|DWORD stack:40|DWORD stack:36|DWORD[.] stack:36|DWORD[.] 
vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]} stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 11, 39] <|@ <|@
      nr  564  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3 <|@ <|@
      nr  566  <|@ instruction rbx|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r14|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction r13|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B69" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4602598388175610886
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B46" "B41" 
    xhandlers
    flags 
    probability 4598360210838459274
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B39 -> B46 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B73" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B46" 
    xhandlers
    flags 
    probability 4597644374964838647
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP (x: r9|DWORD, y: [r13|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  180  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B17" 
    successors "B19" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  186  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  188  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  138  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [r13:0, stack:60, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction r10|DWORD = MOVE input: int[-166451|0xfffffffffffd75cd] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B65 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" "B57" "B61" "B65" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  674  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15]
locals: - rax|QWORD[.] vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]} r8|DWORD 
vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} stack:32|QWORD[.] 
vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/AbstractList$ListItr; r9|DWORD r11|DWORD r14|DWORD r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  702  <|@ instruction r10|DWORD = MOVE input: int[-172083|0xfffffffffffd5fcd] <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B3" "B77" "B5" "B74" "B36" "B44" "B41" "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  756  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction r10|DWORD = MOVE input: int[-153875|0xfffffffffffda6ed] <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-172819|0xfffffffffffd5ced] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B44 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  342  <|@ instruction r10|DWORD = MOVE input: int[-171539|0xfffffffffffd61ed] <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B36 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@590649397] <|@ <|@
      nr  690  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE input: int[-155163|0xfffffffffffda1e5] <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r10|DWORD = MOVE input: int[-169235|0xfffffffffffd6aed] <|@ <|@
      nr  658  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction r8|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r13|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-152883|0xfffffffffffdaacd] <|@ <|@
      nr  714  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B74 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[-159771|0xfffffffffffd8fe5] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B57 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-171795|0xfffffffffffd60ed] <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B41 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   42  <|@ instruction r10|DWORD = MOVE input: int[-150803|0xfffffffffffdb2ed] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B3 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOVE input: int[-164379|0xfffffffffffd7de5] <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B61 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-149011|0xfffffffffffdb9ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  746  <|@ instruction r10|DWORD = MOVE input: int[-145715|0xfffffffffffdc6cd] <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: anewarray     #8          // java.lang.Object
     7: astore_1      
     8: aload_0       
     9: invokevirtual #2          // iterator:()java.util.Iterator
    12: astore_2      
    13: iconst_0      
    14: istore_3      
    15: iload_3       
    16: aload_1       
    17: arraylength   
    18: if_icmpge     51
    21: aload_2       
    22: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    27: ifne          36
    30: aload_1       
    31: iload_3       
    32: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    35: areturn       
    36: aload_1       
    37: iload_3       
    38: aload_2       
    39: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    44: aastore       
    45: iinc          
    48: goto          15
    51: aload_2       
    52: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    57: ifeq          68
    60: aload_1       
    61: aload_2       
    62: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
    65: goto          69
    68: aload_1       
    69: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424408b560881faaddeadde0f859f050000448b6e1844896c243c468b34ed0c0000004489742438443b760c0f856a050000448b561444895424344585d20f8c18050000448b5e104585db0f8c20050000498b5760498b4f704181faffffff000f839c030000458bc241c1e002458d40174183e0f84d63c04d8bc84c03ca4c3bc90f877b0300004d894f60410f188410c0000000410f18841000010000410f18841040010000410f188410800100004489520c48c70201000000c74208addeadde488bc244895c2430458bf248894424284963f64c8bd649ffca4183fe010f8c610000004c8d58104c8d46f84d85c00f8de302000049c7c1000000004c8d46fc4d3bc80f8f11000000c5f9efc0c4817a7f048b4d8d41044d8bc84c8d46fe4d3bc80f8f11000000c5f9efc0c481f97e048b4d8d41024d8bc84d3bca0f8f040000004789248b49bb00e01b17010000004c895c24204585f60f8446000000458bc641ffc841c1e0024d63c04c8d48104d03c849c1e9094c8d401049c1e8094d2bc849ffc1e915000000660f1f44000049ffc9498bc84903cb4903c94488214983f9017deb468b04ed08000000448944241c49b9addeaddeaddeadde4e3b0cc5b80200000f85340300004181f8addeadde448b4c24300f85c2010000428b0ced10000000443b0ccd0c0000000f8fb20200004183fe010f8c09000000493bf20f86b6020000c7442418ffffffff41ba000000008b4c2438488b742440e9730000000f1f8400000000000f1f80000000003bd50f8e42020000423b0ced0c0000000f85020300004181f8addeadde0f8556000000428b3ced10000000443b0cfd0c0000000f83af02000048c1e703428b5c8f1042895c90104a8d5c901048c1eb094688241b418bd9ffc341ffc244894c2418448bcb8b7e108b5614418be92bef453bf27f8ce9cb0000004181f8addeadde0f8521000000428b3ced1c000000443b0cfd0c0000000f83bc02000048c1e703428b5c8f10eb9b4181f8addeadde0f854801000044894c24144489542410428b3ced10000000418504fc48c1e703488bf748897c240848b8ffffffffffffffff0f1f8000000000e800000000902b442414ffc8488b7424088bd048b8ffffffffffffffff666690e8000000009048c1e8038bd8448b4c2414448b542410448b44241c4c8b5c2420488b442428448b7424348b4c2438448b6c243c488b742440e9fefeffff44894c241444895424103bd50f8f4f010000488b442428488b6c24504883c458850500000000c5f877c34181f8addeadde0f850f0000004183f9010f8c3dfeffffe9740100004181f8addeadde0f858a000000463b0ced100000000f8e1dfeffffe9b3000000c5f9efc049c7c1000000006666660f1f840000000000c4817e7f048b4d8d49084d3bc87ef1e9fafcffff44895c243048baaddeaddeaddeadde488bf2418bd2b900000000458bf2e80000000090e9a2fcffff448b5c2418458bc2448bf141bacd75fdff4589979c0200004d89a7a8020000e8000000009049bb000000000000000041bacd5ffdff488b7424404589979c0200004d899fa8020000e80000000090448b5c2418458bc2448bf141baeda6fdffebb049bb000000000000000041baed5cfdff488b742440ebc249bb000000000000000041baed61fdff488b742440ebab49baaddeaddeaddeadde4d8bda41bae5a1fdff488b742440eb9141baed6afdff448b5c2418448b4c2414448b442410488b442428448b742438448b6c243ce93fffffff49bb000000000000000041bacdaafdff488b742440e94effffff448b5c2418458bc2448bf141bae58ffdffe90fffffff49bb000000000000000041baed60fdff488b742440e91effffff448b5c2418458bc2448bf141baeda3fdffe9dffeffff49bb000000000000000041baedb2fdffe9f3feffff49bb000000000000000041baeda9fdffe9defeffff448b5c2418458bc2448bf141bae57dfdffe99ffeffff49bb000000000000000041baedb9fdffe9b3feffff49bb000000000000000041bacdc6fdffe99efeffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@713bf958 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 rdx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 56 10 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 56 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 62 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B78  <||@
  Comment 68 block B1 null  <||@
  Comment 68 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 16 r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 72 18 stack:36|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 77 20 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 77 [rsi:0, r13:0, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 22 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 90 24 CMP (x: r14|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 94 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B77  <||@
  Comment 100 block B2 null  <||@
  Comment 100 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 30 r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 104 32 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 109 34 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 112 36 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 118 block B4 null  <||@
  Comment 118 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 48 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 122 50 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 125 52 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 131 block B6 null  <||@
  Comment 131 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 131 64 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 135 66 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 139 68 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 146 70 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11  <||@
  Comment 152 block B7 null  <||@
  Comment 152 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 74 r8|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 159 76 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 163 78 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 167 80 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 170 82 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 176 84 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 179 86 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9  <||@
  Comment 185 block B9 null  <||@
  Comment 185 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 96 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 189 98 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 198 100 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 207 102 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 216 104 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 225 106 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 229 108 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 236 110 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 236 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 243 112 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 243 114 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 246 116 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 251 118 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 254 120 JUMP ~[] destination: B9 -> B12  <||@
  Comment 254 block B12 null  <||@
  Comment 254 144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 254 146 stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 259 148 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 262 150 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 268 152 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 272 154 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B28 falseDestination: B12 -> B14  <||@
  Comment 278 block B14 null  <||@
  Comment 278 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 162 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 282 164 r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 286 166 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 289 168 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 295 block B15 null  <||@
  Comment 295 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 295 172 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 302 174 JUMP ~[] destination: B15 -> B19  <||@
  Comment 302 block B19 null  <||@
  Comment 302 198 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 302 200 r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 306 202 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 309 204 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 315 block B21 null  <||@
  Comment 315 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 212 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 319 214 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 325 216 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 329 218 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 332 220 JUMP ~[] destination: B21 -> B22  <||@
  Comment 332 block B22 null  <||@
  Comment 332 222 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 332 224 r8|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 336 226 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 339 228 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 345 block B24 null  <||@
  Comment 345 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 236 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 349 238 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 355 240 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 359 242 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 362 244 JUMP ~[] destination: B24 -> B25  <||@
  Comment 362 block B25 null  <||@
  Comment 362 246 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 362 248 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 365 250 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 371 block B27 null  <||@
  Comment 371 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 371 258 MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 375 260 JUMP ~[] destination: B27 -> B28  <||@
  Comment 375 block B28 null  <||@
  Comment 375 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 264 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 385 266 stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 390 268 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 393 270 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B33 falseDestination: B28 -> B30  <||@
  Comment 399 block B30 null  <||@
  Comment 399 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 278 r8|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 405 280 r8|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 409 282 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 412 284 r9|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 416 286 r9|QWORD[.] = ADD (x: r9|QWORD[.], y: r8|QWORD) size: QWORD  <||@
  Comment 419 288 r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD  <||@
  Comment 423 290 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 427 292 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 431 294 r9|QWORD[*] = SUB (x: r9|QWORD[*], ~y: r8|QWORD[*]) size: QWORD  <||@
  Comment 434 296 r9|QWORD[*] = INC r9|QWORD[*] size: QWORD  <||@
  Comment 437 298 JUMP ~[] destination: B30 -> B31  <||@
  Comment 442 block B75 loop 1 depth 1 header:1069|LoopBegin  <||@
  Comment 442 718 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 720 r9|QWORD[*] = DEC r9|QWORD[*] size: QWORD  <||@
  Comment 451 722 rcx|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 457 724 rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: r9|QWORD[*]) size: QWORD  <||@
  Comment 460 726 MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 463 728 JUMP ~[] destination: B75 -> B31  <||@
  Comment 463 block B31 loop 1 depth 1 header:1069|LoopBegin  <||@
  Comment 463 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 463 302 CMP r9|QWORD[*] y: 1 size: QWORD  <||@
  Comment 467 304 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B33 falseDestination: B31 -> B75  <||@
  Comment 469 block B33 null  <||@
  Comment 469 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 312 r8|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 477 314 stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 482 316 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 482 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 492 318 CMP (x: r9|QWORD, y: [r8|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 500 320 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B74  <||@
  Comment 506 block B34 null  <||@
  Comment 506 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 506 324 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 506 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 513 330 r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 518 326 BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38  <||@
  Comment 524 block B35 null  <||@
  Comment 524 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 524 332 rcx|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 532 334 CMP (x: r9|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 532 [rax:0, r13:0, stack:40, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 532 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 540 336 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B46  <||@
  Comment 546 block B46 null  <||@
  Comment 546 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 408 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 550 410 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B50 falseDestination: B46 -> B48  <||@
  Comment 556 block B48 null  <||@
  Comment 556 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 418 CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 559 420 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B50 falseDestination: B48 -> B72  <||@
  Comment 565 block B50 null  <||@
  Comment 565 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 428 stack:72|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 573 430 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 579 432 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 583 434 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 588 436 JUMP ~[] destination: B50 -> B51  <||@
  Comment 593 block B52 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 593 450 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 452 CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 610 454 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B67  <||@
  Comment 616 block B53 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 616 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 616 458 CMP (x: rcx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 624 460 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B66  <||@
  Comment 630 block B54 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 630 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 464 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 630 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 637 466 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58  <||@
  Comment 643 block B55 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 643 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 470 rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 651 472 CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD state [bci:15]  <||@
  Comment 651 [rax:0, rsi:0, rdi:0, r13:0, stack:40, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1             |2                                                                                                                                                                                                          |3         
     locals:  |-  |rax|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]}  |r10|DWORD   <||@
  Comment 651 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 659 474 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 665 block B56 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 665 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 478 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3  <||@
  Comment 669 480 rbx|DWORD[.] = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 674 482 JUMP ~[] destination: B56 -> B64  <||@
  Comment 674 block B64 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 674 588 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 674 590 MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 679 592 rbx|QWORD[.] = LEA [rax|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 684 594 rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 688 596 MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 692 598 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 697 600 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 700 602 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 705 604 r9|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 708 606 JUMP ~[] destination: B64 -> B51  <||@
  Comment 708 block B51 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 708 438 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 708 440 rdi|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 711 442 rdx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 714 444 rbp|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 719 446 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 722 448 BRANCH trueDestinationProbability: 0.7860810680702205 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B68  <||@
  Comment 729 block B58 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 729 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 729 498 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 729 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 736 500 BRANCH trueDestinationProbability: 0.9931451844203517 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62  <||@
  Comment 742 block B59 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 742 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 742 504 rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 750 506 CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD state [bci:15]  <||@
  Comment 750 [rax:0, rsi:0, rdi:0, r13:0, stack:40, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1             |2                                                                                                                                                                                                          |3         
     locals:  |-  |rax|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]}  |r10|DWORD   <||@
  Comment 750 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 758 508 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 764 block B60 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 764 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 764 512 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3  <||@
  Comment 768 514 rbx|DWORD[.] = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 773 516 JUMP ~[] destination: B60 -> B64  <||@
  Comment 775 block B62 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 775 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 775 532 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 775 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 782 534 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B65  <||@
  Comment 788 block B63 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 788 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 538 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 793 540 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 798 542 rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 806 544 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:15]  <||@
  Comment 806 [rdi:0, r13:0, stack:40, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1                  |2                                                                                                                                                                                                                          |3              
     locals:  |-  |stack:56|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]}  |stack:80|DWORD   <||@
  Comment 806 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 810 546 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3  <||@
  Comment 814 548 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 817 550 stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 822 552 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 11, 39]  <||@
  Comment 822 6  <||@
  Comment 839 {HotSpotMethod<List.size()>}  <||@
  Comment 844 [stack:8, stack:40, stack:60, stack:64]at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |-                  |stack:76|DWORD 
     stack:   |stack:88|QWORD[.]  |               
  at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                                                                                                                                                               |1               |2 
     locals:  |vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]}  |stack:76|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39, duringCall: true, rethrow: false]
              |0                  |1                  |2                                                                                                                                                                                                                                    |3              
     locals:  |-                  |stack:56|QWORD[.]  |vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]}  |stack:80|DWORD 
     stack:   |stack:56|QWORD[.]  |stack:80|DWORD     |                                                                                                                                                                                                                                     |                 <||@
  Comment 845 554 rax|DWORD = SUB (x: rax|DWORD, ~y: stack:76|DWORD) size: DWORD  <||@
  Comment 849 556 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 851 558 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 856 560 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 858 562 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 11, 39]  <||@
  Comment 858 6  <||@
  Comment 871 {HotSpotMethod<List.get(int)>}  <||@
  Comment 876 [stack:40, stack:60, stack:64]at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                                                                                                                                                               |1               |2 
     locals:  |vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]}  |stack:76|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39, duringCall: true, rethrow: false]
              |0                  |1                  |2                                                                                                                                                                                                                                    |3              
     locals:  |-                  |stack:56|QWORD[.]  |vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]}  |stack:80|DWORD 
     stack:   |stack:56|QWORD[.]  |stack:80|DWORD     |                                                                                                                                                                                                                                     |                 <||@
  Comment 877 564 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3  <||@
  Comment 881 566 rbx|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 883 568 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 888 570 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 893 572 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 898 574 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 903 576 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 908 578 r14|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 913 580 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 917 582 r13|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 922 584 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 927 586 JUMP ~[] destination: B63 -> B64  <||@
  Comment 932 block B68 null  <||@
  Comment 932 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 932 646 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 937 648 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 942 650 CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 944 652 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B71  <||@
  Comment 950 block B71 null  <||@
  Comment 950 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 682 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 955 684 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 964 12  <||@
  Comment 974 block B38 null  <||@
  Comment 974 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 356 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 974 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 981 358 BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 987 block B39 null  <||@
  Comment 987 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 987 362 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 991 364 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B39 -> B46 falseDestination: B39 -> B41  <||@
  Comment 1002 block B42 null  <||@
  Comment 1002 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1002 382 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1002 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1009 384 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B73  <||@
  Comment 1015 block B43 null  <||@
  Comment 1015 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1015 388 CMP (x: r9|DWORD, y: [r13|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1023 390 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B46  <||@
  Comment 1034 block B16 null  <||@
  Comment 1034 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1034 178 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1038 180 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1045 182 JUMP ~[] destination: B16 -> B17  <||@
  Comment 1045 block B17 loop 0 depth 1 header:1119|LoopBegin  <||@
  Comment 1045 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1056 186 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1062 188 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1066 190 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1069 192 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B17  <||@
  Comment 1076 block B11 null  <||@
  Comment 1076 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1076 124 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1081 130 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 1081 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 1091 132 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1094 134 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1097 136 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1102 138 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1105 140 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1105 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1110 [r13:0, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1111 142 JUMP ~[] destination: B11 -> B12  <||@
  Comment 1116 block B65 null  <||@
  Comment 1116 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 610 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1121 612 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1124 614 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1127 616 r10|DWORD = MOVE input: int[-166451|0xfffffffffffd75cd]  <||@
  Comment 1133 618 JUMP ~[] destination: B65 -> B70  <||@
  Comment 1133 block B70 null  <||@
  Comment 1133 672 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1133 674 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1140 676 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1147 678 DEOPT info [bci:15]  <||@
  Comment 1147 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1152 [rax:0, r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1             |2                                                                                                                                                                                                          |3        
     locals:  |-  |rax|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]}  |r8|DWORD   <||@
  Comment 1153 block B73 null  <||@
  Comment 1153 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1153 700 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1163 702 r10|DWORD = MOVE input: int[-172083|0xfffffffffffd5fcd]  <||@
  Comment 1169 704 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1174 706 JUMP ~[] destination: B73 -> B79  <||@
  Comment 1174 block B79 null  <||@
  Comment 1174 750 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1174 752 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1181 754 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1188 756 DEOPT info [bci:0]  <||@
  Comment 1188 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1193 [rsi:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1194 block B67 null  <||@
  Comment 1194 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 634 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1199 636 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1202 638 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1205 640 r10|DWORD = MOVE input: int[-153875|0xfffffffffffda6ed]  <||@
  Comment 1211 642 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1213 block B44 null  <||@
  Comment 1213 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1213 394 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1223 396 r10|DWORD = MOVE input: int[-172819|0xfffffffffffd5ced]  <||@
  Comment 1229 398 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1234 400 JUMP ~[] destination: B44 -> B79  <||@
  Comment 1236 block B36 null  <||@
  Comment 1236 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1236 340 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1246 342 r10|DWORD = MOVE input: int[-171539|0xfffffffffffd61ed]  <||@
  Comment 1252 344 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1257 346 JUMP ~[] destination: B36 -> B79  <||@
  Comment 1259 block B72 null  <||@
  Comment 1259 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1259 688 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@590649397]  <||@
  Comment 1259 {Object[d.a@590649397]}  <||@
  Comment 1269 690 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1272 692 r10|DWORD = MOVE input: int[-155163|0xfffffffffffda1e5]  <||@
  Comment 1278 694 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1283 696 JUMP ~[] destination: B72 -> B79  <||@
  Comment 1285 block B69 null  <||@
  Comment 1285 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1285 656 r10|DWORD = MOVE input: int[-169235|0xfffffffffffd6aed]  <||@
  Comment 1291 658 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1296 660 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1301 662 r8|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1306 664 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1311 666 r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1316 668 r13|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1321 670 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1326 block B74 null  <||@
  Comment 1326 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1326 710 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1336 712 r10|DWORD = MOVE input: int[-152883|0xfffffffffffdaacd]  <||@
  Comment 1342 714 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1347 716 JUMP ~[] destination: B74 -> B79  <||@
  Comment 1352 block B57 null  <||@
  Comment 1352 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1352 486 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1357 488 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1360 490 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1363 492 r10|DWORD = MOVE input: int[-159771|0xfffffffffffd8fe5]  <||@
  Comment 1369 494 JUMP ~[] destination: B57 -> B70  <||@
  Comment 1374 block B41 null  <||@
  Comment 1374 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1374 372 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1384 374 r10|DWORD = MOVE input: int[-171795|0xfffffffffffd60ed]  <||@
  Comment 1390 376 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 378 JUMP ~[] destination: B41 -> B79  <||@
  Comment 1400 block B66 null  <||@
  Comment 1400 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1400 622 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1405 624 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1408 626 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1411 628 r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed]  <||@
  Comment 1417 630 JUMP ~[] destination: B66 -> B70  <||@
  Comment 1422 block B3 null  <||@
  Comment 1422 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 40 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1432 42 r10|DWORD = MOVE input: int[-150803|0xfffffffffffdb2ed]  <||@
  Comment 1438 44 JUMP ~[] destination: B3 -> B79  <||@
  Comment 1443 block B5 null  <||@
  Comment 1443 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1443 56 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1453 58 r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed]  <||@
  Comment 1459 60 JUMP ~[] destination: B5 -> B79  <||@
  Comment 1464 block B61 null  <||@
  Comment 1464 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1464 520 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1469 522 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1472 524 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1475 526 r10|DWORD = MOVE input: int[-164379|0xfffffffffffd7de5]  <||@
  Comment 1481 528 JUMP ~[] destination: B61 -> B70  <||@
  Comment 1486 block B77 null  <||@
  Comment 1486 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 736 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1496 738 r10|DWORD = MOVE input: int[-149011|0xfffffffffffdb9ed]  <||@
  Comment 1502 740 JUMP ~[] destination: B77 -> B79  <||@
  Comment 1507 block B78 null  <||@
  Comment 1507 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 744 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1517 746 r10|DWORD = MOVE input: int[-145715|0xfffffffffffdc6cd]  <||@
  Comment 1523 748 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1528 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1528 4  <||@
  Comment 1534 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1534 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9849[java.util.AbstractCollection.toArray()]"
  method "HotSpotCompilation-9849[java.util.AbstractCollection.toArray()]"
  date 1527005226342
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c3cee0 448b560849c1e203493bc20f856f8fbcfe900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424408b560881fa7dee01f80f859f050000448b6e1844896c243c468b34ed0c0000004489742438443b760c0f856a050000448b561444895424344585d20f8c18050000448b5e104585db0f8c20050000498b5760498b4f704181faffffff000f839c030000458bc241c1e002458d40174183e0f84d63c04d8bc84c03ca4c3bc90f877b0300004d894f60410f188410c0000000410f18841000010000410f18841040010000410f188410800100004489520c48c70201000000c74208f52200f8488bc244895c2430458bf248894424284963f64c8bd649ffca4183fe010f8c610000004c8d58104c8d46f84d85c00f8de302000049c7c1000000004c8d46fc4d3bc80f8f11000000c5f9efc0c4817a7f048b4d8d41044d8bc84c8d46fe4d3bc80f8f11000000c5f9efc0c481f97e048b4d8d41024d8bc84d3bca0f8f040000004789248b49bb00e01b17010000004c895c24204585f60f8446000000458bc641ffc841c1e0024d63c04c8d48104d03c849c1e9094c8d401049c1e8094d2bc849ffc1e915000000660f1f44000049ffc9498bc84903cb4903c94488214983f9017deb468b04ed08000000448944241c49b900e8dd23010000004e3b0cc5b80200000f85340300004181f88faf00f8448b4c24300f85c2010000428b0ced10000000443b0ccd0c0000000f8fb20200004183fe010f8c09000000493bf20f86b6020000c7442418ffffffff41ba000000008b4c2438488b742440e9730000000f1f8400000000000f1f80000000003bd50f8e42020000423b0ced0c0000000f85020300004181f88faf00f80f8556000000428b3ced10000000443b0cfd0c0000000f83af02000048c1e703428b5c8f1042895c90104a8d5c901048c1eb094688241b418bd9ffc341ffc244894c2418448bcb8b7e108b5614418be92bef453bf27f8ce9cb0000004181f8c8b101f80f8521000000428b3ced1c000000443b0cfd0c0000000f83bc02000048c1e703428b5c8f10eb9b4181f8e0c905f80f854801000044894c24144489542410428b3ced10000000418504fc48c1e703488bf748897c240848b8ffffffffffffffff0f1f8000000000e8b490bcfe902b442414ffc8488b7424088bd048b8ffffffffffffffff666690e89490bcfe9048c1e8038bd8448b4c2414448b542410448b44241c4c8b5c2420488b442428448b7424348b4c2438448b6c243c488b742440e9fefeffff44894c241444895424103bd50f8f4f010000488b442428488b6c24504883c45885055c1dc5fcc5f877c34181f83b3100f80f850f0000004183f9010f8c3dfeffffe9740100004181f8c8b101f80f858a000000463b0ced100000000f8e1dfeffffe9b3000000c5f9efc049c7c1000000006666660f1f840000000000c4817e7f048b4d8d49084d3bc87ef1e9fafcffff44895c243048baa81701c007000000488bf2418bd2b900000000458bf2e8aa9a35ff90e9a2fcffff448b5c2418458bc2448bf141bacd75fdff4589979c0200004d89a7a8020000e89ea2bcfe9049bb000000000000000041bacd5ffdff488b7424404589979c0200004d899fa8020000e875a2bcfe90448b5c2418458bc2448bf141baeda6fdffebb049bb000000000000000041baed5cfdff488b742440ebc249bb000000000000000041baed61fdff488b742440ebab49ba100e8abd070000004d8bda41bae5a1fdff488b742440eb9141baed6afdff448b5c2418448b4c2414448b442410488b442428448b742438448b6c243ce93fffffff49bb000000000000000041bacdaafdff488b742440e94effffff448b5c2418458bc2448bf141bae58ffdffe90fffffff49bb000000000000000041baed60fdff488b742440e91effffff448b5c2418458bc2448bf141baeda3fdffe9dffeffff49bb000000000000000041baedb2fdffe9f3feffff49bb000000000000000041baeda9fdffe9defeffff448b5c2418458bc2448bf141bae57dfdffe99ffeffff49bb000000000000000041baedb9fdffe9b3feffff49bb000000000000000041bacdc6fdffe99efeffffe843d100ff90e81da0bcfe90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@713bf958 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 rdx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 56 10 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 56 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 62 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B78  <||@
  Comment 68 block B1 null  <||@
  Comment 68 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 16 r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 72 18 stack:36|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 77 20 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 77 [rsi:0, r13:0, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 22 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 90 24 CMP (x: r14|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 94 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B77  <||@
  Comment 100 block B2 null  <||@
  Comment 100 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 30 r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 104 32 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 109 34 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 112 36 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 118 block B4 null  <||@
  Comment 118 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 48 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 122 50 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 125 52 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 131 block B6 null  <||@
  Comment 131 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 131 64 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 135 66 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 139 68 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 146 70 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11  <||@
  Comment 152 block B7 null  <||@
  Comment 152 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 74 r8|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 159 76 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 163 78 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 167 80 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 170 82 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 176 84 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 179 86 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9  <||@
  Comment 185 block B9 null  <||@
  Comment 185 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 96 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 189 98 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 198 100 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 207 102 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 216 104 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 225 106 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 229 108 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 236 110 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 236 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 243 112 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 243 114 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 246 116 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 251 118 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 254 120 JUMP ~[] destination: B9 -> B12  <||@
  Comment 254 block B12 null  <||@
  Comment 254 144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 254 146 stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 259 148 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 262 150 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 268 152 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 272 154 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B28 falseDestination: B12 -> B14  <||@
  Comment 278 block B14 null  <||@
  Comment 278 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 162 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 282 164 r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 286 166 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 289 168 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 295 block B15 null  <||@
  Comment 295 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 295 172 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 302 174 JUMP ~[] destination: B15 -> B19  <||@
  Comment 302 block B19 null  <||@
  Comment 302 198 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 302 200 r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 306 202 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 309 204 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 315 block B21 null  <||@
  Comment 315 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 212 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 319 214 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 325 216 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 329 218 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 332 220 JUMP ~[] destination: B21 -> B22  <||@
  Comment 332 block B22 null  <||@
  Comment 332 222 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 332 224 r8|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 336 226 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 339 228 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 345 block B24 null  <||@
  Comment 345 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 236 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 349 238 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 355 240 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 359 242 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 362 244 JUMP ~[] destination: B24 -> B25  <||@
  Comment 362 block B25 null  <||@
  Comment 362 246 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 362 248 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 365 250 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 371 block B27 null  <||@
  Comment 371 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 371 258 MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 375 260 JUMP ~[] destination: B27 -> B28  <||@
  Comment 375 block B28 null  <||@
  Comment 375 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 264 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 385 266 stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 390 268 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 393 270 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B33 falseDestination: B28 -> B30  <||@
  Comment 399 block B30 null  <||@
  Comment 399 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 278 r8|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 405 280 r8|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 409 282 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 412 284 r9|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 416 286 r9|QWORD[.] = ADD (x: r9|QWORD[.], y: r8|QWORD) size: QWORD  <||@
  Comment 419 288 r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD  <||@
  Comment 423 290 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 427 292 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 431 294 r9|QWORD[*] = SUB (x: r9|QWORD[*], ~y: r8|QWORD[*]) size: QWORD  <||@
  Comment 434 296 r9|QWORD[*] = INC r9|QWORD[*] size: QWORD  <||@
  Comment 437 298 JUMP ~[] destination: B30 -> B31  <||@
  Comment 442 block B75 loop 1 depth 1 header:1069|LoopBegin  <||@
  Comment 442 718 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 720 r9|QWORD[*] = DEC r9|QWORD[*] size: QWORD  <||@
  Comment 451 722 rcx|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 457 724 rcx|QWORD[*] = ADD (x: rcx|QWORD[*], y: r9|QWORD[*]) size: QWORD  <||@
  Comment 460 726 MOVB (x: [rcx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 463 728 JUMP ~[] destination: B75 -> B31  <||@
  Comment 463 block B31 loop 1 depth 1 header:1069|LoopBegin  <||@
  Comment 463 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 463 302 CMP r9|QWORD[*] y: 1 size: QWORD  <||@
  Comment 467 304 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B33 falseDestination: B31 -> B75  <||@
  Comment 469 block B33 null  <||@
  Comment 469 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 312 r8|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 477 314 stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 482 316 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 482 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 492 318 CMP (x: r9|QWORD, y: [r8|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 500 320 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B74  <||@
  Comment 506 block B34 null  <||@
  Comment 506 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 506 324 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 506 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 513 330 r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 518 326 BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38  <||@
  Comment 524 block B35 null  <||@
  Comment 524 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 524 332 rcx|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 532 334 CMP (x: r9|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 532 [rax:0, r13:0, stack:40, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 532 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 540 336 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B46  <||@
  Comment 546 block B46 null  <||@
  Comment 546 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 408 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 550 410 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B50 falseDestination: B46 -> B48  <||@
  Comment 556 block B48 null  <||@
  Comment 556 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 418 CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 559 420 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B50 falseDestination: B48 -> B72  <||@
  Comment 565 block B50 null  <||@
  Comment 565 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 428 stack:72|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 573 430 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 579 432 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 583 434 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 588 436 JUMP ~[] destination: B50 -> B51  <||@
  Comment 593 block B52 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 593 450 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 452 CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 610 454 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B67  <||@
  Comment 616 block B53 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 616 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 616 458 CMP (x: rcx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 624 460 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B66  <||@
  Comment 630 block B54 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 630 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 464 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 630 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 637 466 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58  <||@
  Comment 643 block B55 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 643 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 470 rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 651 472 CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD state [bci:15]  <||@
  Comment 651 [rax:0, rsi:0, rdi:0, r13:0, stack:40, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1             |2                                                                                                                                                                                                          |3         
     locals:  |-  |rax|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]}  |r10|DWORD   <||@
  Comment 651 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 659 474 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 665 block B56 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 665 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 478 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3  <||@
  Comment 669 480 rbx|DWORD[.] = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 674 482 JUMP ~[] destination: B56 -> B64  <||@
  Comment 674 block B64 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 674 588 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 674 590 MOV (x: [rax|QWORD[.] + r10|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 679 592 rbx|QWORD[.] = LEA [rax|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 684 594 rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 688 596 MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 692 598 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 697 600 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 700 602 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 705 604 r9|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 708 606 JUMP ~[] destination: B64 -> B51  <||@
  Comment 708 block B51 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 708 438 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 708 440 rdi|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 711 442 rdx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 714 444 rbp|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 719 446 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 722 448 BRANCH trueDestinationProbability: 0.7860810680702205 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B68  <||@
  Comment 729 block B58 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 729 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 729 498 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 729 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 736 500 BRANCH trueDestinationProbability: 0.9931451844203517 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62  <||@
  Comment 742 block B59 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 742 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 742 504 rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 750 506 CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD state [bci:15]  <||@
  Comment 750 [rax:0, rsi:0, rdi:0, r13:0, stack:40, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1             |2                                                                                                                                                                                                          |3         
     locals:  |-  |rax|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=stack:72|DWORD,expectedModCount=rcx|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=rsi|QWORD[.]}  |r10|DWORD   <||@
  Comment 750 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 758 508 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 764 block B60 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 764 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 764 512 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3  <||@
  Comment 768 514 rbx|DWORD[.] = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 773 516 JUMP ~[] destination: B60 -> B64  <||@
  Comment 775 block B62 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 775 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 775 532 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 775 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 782 534 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B65  <||@
  Comment 788 block B63 loop 2 depth 1 header:13|LoopBegin  <||@
  Comment 788 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 538 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 793 540 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 798 542 rdi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 806 544 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:15]  <||@
  Comment 806 [rdi:0, r13:0, stack:40, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1                  |2                                                                                                                                                                                                                          |3              
     locals:  |-  |stack:56|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]}  |stack:80|DWORD   <||@
  Comment 806 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 810 546 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3  <||@
  Comment 814 548 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 817 550 stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 822 552 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 11, 39]  <||@
  Comment 822 6  <||@
  Comment 839 {HotSpotMethod<List.size()>}  <||@
  Comment 844 [stack:8, stack:40, stack:60, stack:64]at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |-                  |stack:76|DWORD 
     stack:   |stack:88|QWORD[.]  |               
  at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                                                                                                                                                               |1               |2 
     locals:  |vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]}  |stack:76|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39, duringCall: true, rethrow: false]
              |0                  |1                  |2                                                                                                                                                                                                                                    |3              
     locals:  |-                  |stack:56|QWORD[.]  |vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]}  |stack:80|DWORD 
     stack:   |stack:56|QWORD[.]  |stack:80|DWORD     |                                                                                                                                                                                                                                     |                 <||@
  Comment 845 554 rax|DWORD = SUB (x: rax|DWORD, ~y: stack:76|DWORD) size: DWORD  <||@
  Comment 849 556 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 851 558 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 856 560 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 858 562 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 11, 39]  <||@
  Comment 858 6  <||@
  Comment 871 {HotSpotMethod<List.get(int)>}  <||@
  Comment 876 [stack:40, stack:60, stack:64]at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                                                                                                                                                               |1               |2 
     locals:  |vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]}  |stack:76|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:141) [bci: 39, duringCall: true, rethrow: false]
              |0                  |1                  |2                                                                                                                                                                                                                                    |3              
     locals:  |-                  |stack:56|QWORD[.]  |vobject:SubList$1:1{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:0{cursor=stack:76|DWORD,lastRet=stack:72|DWORD,expectedModCount=stack:40|DWORD,this$0=stack:36|DWORD[.],this$0=stack:36|DWORD[.]},this$0=stack:32|QWORD[.]}  |stack:80|DWORD 
     stack:   |stack:56|QWORD[.]  |stack:80|DWORD     |                                                                                                                                                                                                                                     |                 <||@
  Comment 877 564 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@38474aa encoding: base: 0 shift: 3  <||@
  Comment 881 566 rbx|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 883 568 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 888 570 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 893 572 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 898 574 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 903 576 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 908 578 r14|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 913 580 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 917 582 r13|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 922 584 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 927 586 JUMP ~[] destination: B63 -> B64  <||@
  Comment 932 block B68 null  <||@
  Comment 932 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 932 646 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 937 648 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 942 650 CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 944 652 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B71  <||@
  Comment 950 block B71 null  <||@
  Comment 950 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 682 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 955 684 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 964 12  <||@
  Comment 974 block B38 null  <||@
  Comment 974 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 356 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 974 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 981 358 BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 987 block B39 null  <||@
  Comment 987 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 987 362 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 991 364 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B39 -> B46 falseDestination: B39 -> B41  <||@
  Comment 1002 block B42 null  <||@
  Comment 1002 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1002 382 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1002 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1009 384 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B73  <||@
  Comment 1015 block B43 null  <||@
  Comment 1015 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1015 388 CMP (x: r9|DWORD, y: [r13|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1023 390 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B46  <||@
  Comment 1034 block B16 null  <||@
  Comment 1034 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1034 178 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1038 180 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1045 182 JUMP ~[] destination: B16 -> B17  <||@
  Comment 1045 block B17 loop 0 depth 1 header:1119|LoopBegin  <||@
  Comment 1045 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1056 186 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1062 188 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1066 190 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1069 192 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B17  <||@
  Comment 1076 block B11 null  <||@
  Comment 1076 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1076 124 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1081 130 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 1081 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 1091 132 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1094 134 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1097 136 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1102 138 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1105 140 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1105 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1110 [r13:0, stack:60, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1111 142 JUMP ~[] destination: B11 -> B12  <||@
  Comment 1116 block B65 null  <||@
  Comment 1116 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 610 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1121 612 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1124 614 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1127 616 r10|DWORD = MOVE input: int[-166451|0xfffffffffffd75cd]  <||@
  Comment 1133 618 JUMP ~[] destination: B65 -> B70  <||@
  Comment 1133 block B70 null  <||@
  Comment 1133 672 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1133 674 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1140 676 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1147 678 DEOPT info [bci:15]  <||@
  Comment 1147 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1152 [rax:0, r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:138) [bci: 15, duringCall: false, rethrow: false]
              |0  |1             |2                                                                                                                                                                                                          |3        
     locals:  |-  |rax|QWORD[.]  |vobject:SubList$1:0{val$index=int[0|0x0],i=vobject:AbstractList$ListItr:1{cursor=r9|DWORD,lastRet=r11|DWORD,expectedModCount=r14|DWORD,this$0=r13|DWORD[.],this$0=r13|DWORD[.]},this$0=stack:32|QWORD[.]}  |r8|DWORD   <||@
  Comment 1153 block B73 null  <||@
  Comment 1153 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1153 700 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1163 702 r10|DWORD = MOVE input: int[-172083|0xfffffffffffd5fcd]  <||@
  Comment 1169 704 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1174 706 JUMP ~[] destination: B73 -> B79  <||@
  Comment 1174 block B79 null  <||@
  Comment 1174 750 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1174 752 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1181 754 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1188 756 DEOPT info [bci:0]  <||@
  Comment 1188 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1193 [rsi:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:136) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1194 block B67 null  <||@
  Comment 1194 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 634 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1199 636 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1202 638 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1205 640 r10|DWORD = MOVE input: int[-153875|0xfffffffffffda6ed]  <||@
  Comment 1211 642 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1213 block B44 null  <||@
  Comment 1213 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1213 394 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1223 396 r10|DWORD = MOVE input: int[-172819|0xfffffffffffd5ced]  <||@
  Comment 1229 398 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1234 400 JUMP ~[] destination: B44 -> B79  <||@
  Comment 1236 block B36 null  <||@
  Comment 1236 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1236 340 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1246 342 r10|DWORD = MOVE input: int[-171539|0xfffffffffffd61ed]  <||@
  Comment 1252 344 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1257 346 JUMP ~[] destination: B36 -> B79  <||@
  Comment 1259 block B72 null  <||@
  Comment 1259 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1259 688 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@590649397]  <||@
  Comment 1259 {Object[d.a@590649397]}  <||@
  Comment 1269 690 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1272 692 r10|DWORD = MOVE input: int[-155163|0xfffffffffffda1e5]  <||@
  Comment 1278 694 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1283 696 JUMP ~[] destination: B72 -> B79  <||@
  Comment 1285 block B69 null  <||@
  Comment 1285 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1285 656 r10|DWORD = MOVE input: int[-169235|0xfffffffffffd6aed]  <||@
  Comment 1291 658 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1296 660 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1301 662 r8|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1306 664 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1311 666 r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1316 668 r13|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1321 670 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1326 block B74 null  <||@
  Comment 1326 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1326 710 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1336 712 r10|DWORD = MOVE input: int[-152883|0xfffffffffffdaacd]  <||@
  Comment 1342 714 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1347 716 JUMP ~[] destination: B74 -> B79  <||@
  Comment 1352 block B57 null  <||@
  Comment 1352 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1352 486 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1357 488 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1360 490 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1363 492 r10|DWORD = MOVE input: int[-159771|0xfffffffffffd8fe5]  <||@
  Comment 1369 494 JUMP ~[] destination: B57 -> B70  <||@
  Comment 1374 block B41 null  <||@
  Comment 1374 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1374 372 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1384 374 r10|DWORD = MOVE input: int[-171795|0xfffffffffffd60ed]  <||@
  Comment 1390 376 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 378 JUMP ~[] destination: B41 -> B79  <||@
  Comment 1400 block B66 null  <||@
  Comment 1400 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1400 622 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1405 624 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1408 626 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1411 628 r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed]  <||@
  Comment 1417 630 JUMP ~[] destination: B66 -> B70  <||@
  Comment 1422 block B3 null  <||@
  Comment 1422 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 40 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1432 42 r10|DWORD = MOVE input: int[-150803|0xfffffffffffdb2ed]  <||@
  Comment 1438 44 JUMP ~[] destination: B3 -> B79  <||@
  Comment 1443 block B5 null  <||@
  Comment 1443 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1443 56 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1453 58 r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed]  <||@
  Comment 1459 60 JUMP ~[] destination: B5 -> B79  <||@
  Comment 1464 block B61 null  <||@
  Comment 1464 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1464 520 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1469 522 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1472 524 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1475 526 r10|DWORD = MOVE input: int[-164379|0xfffffffffffd7de5]  <||@
  Comment 1481 528 JUMP ~[] destination: B61 -> B70  <||@
  Comment 1486 block B77 null  <||@
  Comment 1486 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 736 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1496 738 r10|DWORD = MOVE input: int[-149011|0xfffffffffffdb9ed]  <||@
  Comment 1502 740 JUMP ~[] destination: B77 -> B79  <||@
  Comment 1507 block B78 null  <||@
  Comment 1507 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 744 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1517 746 r10|DWORD = MOVE input: int[-145715|0xfffffffffffdc6cd]  <||@
  Comment 1523 748 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1528 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1528 4  <||@
  Comment 1534 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1534 5  <||@
  HexCodeFile>>> <|@
end_nmethod
