begin_compilation
  name " HotSpotCompilation-9902[java.util.Formatter$FormatSpecifier.checkCharacter()]"
  method "HotSpotCompilation-9902[java.util.Formatter$FormatSpecifier.checkCharacter()]"
  date 1527005231376
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i429 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i429  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v440 v441 v449 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.precision
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
=== Succesors ===
next: v367 
=== Usages ===
v5 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v440 #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] â‡Š00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i429 
y: i4 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i429 y: i4  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.checkCharacter()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2972
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v410 i431 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
i429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v364 #falseSuccessor: v366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a430 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a430  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 9]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v441 
=== Succesors ===
next: i431 
=== Usages ===
v442 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v441 #next: i431  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a430 
=== Succesors ===
=== Usages ===
i431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v442 
=== Succesors ===
next: i432 
=== Usages ===
i119 i148 i178 i208 i238 i268 i73 
=== Predecessor ===
a430 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v442 #next: i432  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 28]
rawvalue: Formatter.Flags@408825476
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@408825476]
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a10 
index: - 
=== Succesors ===
=== Usages ===
i432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a10 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
=== Succesors ===
next: v375 
=== Usages ===
i119 v121 
=== Predecessor ===
i431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v443 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i432 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i432  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i432 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i119 y: i432  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
i432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v374 #falseSuccessor: v372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243] â‡Š00000000fffeb6ed â‡ˆ00000000fffeb6ed
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i433 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i433  <|@  <|@
f <@~|@floating>@ <|@
tid a14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 34]
rawvalue: Formatter.Flags@859099015
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@859099015]
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a14 
index: - 
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a14 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v444 
=== Succesors ===
next: v379 
=== Usages ===
i148 v150 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v444 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i433 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i433  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i433 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i148 y: i433  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v378 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
i433 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v378 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85011
stableDimension: 0
stamp: i32 [-85011] â‡Š00000000fffeb3ed â‡ˆ00000000fffeb3ed
stampKind: i32
value: int[-85011|0xfffffffffffeb3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i434 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i434  <|@  <|@
f <@~|@floating>@ <|@
tid a18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 40]
rawvalue: Formatter.Flags@2009893684
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@2009893684]
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a18 
index: - 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a18 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v445 
=== Succesors ===
next: v383 
=== Usages ===
i178 v180 
=== Predecessor ===
v376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v445 #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i434 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i434  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i434 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i178 y: i434  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
i434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v382 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85779
stableDimension: 0
stamp: i32 [-85779] â‡Š00000000fffeb0ed â‡ˆ00000000fffeb0ed
stampKind: i32
value: int[-85779|0xfffffffffffeb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i435 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i435  <|@  <|@
f <@~|@floating>@ <|@
tid a22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 46]
rawvalue: Formatter.Flags@271681927
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@271681927]
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a22 
index: - 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a22 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v446 
=== Succesors ===
next: v387 
=== Usages ===
i208 v210 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v446 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i435 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i435  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i208 
y: i435 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i208 y: i435  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v386 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
i435 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v386 #falseSuccessor: v384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86547
stableDimension: 0
stamp: i32 [-86547] â‡Š00000000fffeaded â‡ˆ00000000fffeaded
stampKind: i32
value: int[-86547|0xfffffffffffeaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i436 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i436  <|@  <|@
f <@~|@floating>@ <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 52]
rawvalue: Formatter.Flags@1952837958
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1952837958]
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
i436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v447 
=== Succesors ===
next: v391 
=== Usages ===
i238 v240 
=== Predecessor ===
v384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v447 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i436 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i436  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i238 
y: i436 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i238 y: i436  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
i436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v390 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -87315
stableDimension: 0
stamp: i32 [-87315] â‡Š00000000fffeaaed â‡ˆ00000000fffeaaed
stampKind: i32
value: int[-87315|0xfffffffffffeaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i437 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i437  <|@  <|@
f <@~|@floating>@ <|@
tid a30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 58]
rawvalue: Formatter.Flags@1921891745
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1921891745]
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a30 
index: - 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a30 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v448 
=== Succesors ===
next: v395 
=== Usages ===
i268 v270 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v448 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i437 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i437  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i437 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i268 y: i437  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
i437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v394 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88083
stableDimension: 0
stamp: i32 [-88083] â‡Š00000000fffea7ed â‡ˆ00000000fffea7ed
stampKind: i32
value: int[-88083|0xfffffffffffea7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i438 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i438  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.width
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 66]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
=== Succesors ===
next: v399 
=== Usages ===
v37 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v449 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i438 
y: i4 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i438 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 70]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
i438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v396 #falseSuccessor: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: i439 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i439  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 77]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a40 
index: - 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a40 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 80]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v450 
=== Succesors ===
next: v403 
=== Usages ===
i73 v75 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v450 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 80]
stamp: i32
=== Inputs ===
x: i431 
y: i439 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i439  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 80]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i439 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i73 y: i439  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 83]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
i439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v402 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89875
stableDimension: 0
stamp: i32 [-89875] â‡Š00000000fffea0ed â‡ˆ00000000fffea0ed
stampKind: i32
value: int[-89875|0xfffffffffffea0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2979) [bci: 98]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89107
stableDimension: 0
stamp: i32 [-89107] â‡Š00000000fffea3ed â‡ˆ00000000fffea3ed
stampKind: i32
value: int[-89107|0xfffffffffffea3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i412 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81427
stableDimension: 0
stamp: i32 [-81427] â‡Š00000000fffec1ed â‡ˆ00000000fffec1ed
stampKind: i32
value: int[-81427|0xfffffffffffec1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B2" "B4" "B6" "B8" "B10" "B12" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i408 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-89875 - -81427] â‡Š00000000fffe80e5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v404 
values: i412 i414 i416 i418 i420 i422 i424 i426 i428 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v404 values: i412 i414 i416 i418 i420 i422 i424 i426 i428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v411 v413 v415 v417 v419 v421 v423 v425 v427 
=== Succesors ===
next: v410 
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v411 v413 v415 v417 v419 v421 v423 v425 v427 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid a407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i408 
speculation: a407 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i408 speculation: a407  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i429 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i429  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v440 v441 v449 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i429 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.precision
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
=== Succesors ===
next: v367 
=== Usages ===
v5 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v440 #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] â‡Š00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i429 
y: i4 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i429 y: i4  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.checkCharacter()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2972
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v410 i431 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
i429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v364 #falseSuccessor: v366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60acb463 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a430 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a430  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a430 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 9]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v441 
=== Succesors ===
next: i431 
=== Usages ===
v442 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v441 #next: i431  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a430 
=== Succesors ===
=== Usages ===
i431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i431 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v442 
=== Succesors ===
next: i432 
=== Usages ===
i119 i148 i178 i208 i238 i268 i73 
=== Predecessor ===
a430 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v442 #next: i432  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 28]
rawvalue: Formatter.Flags@408825476
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@408825476]
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
result [v4|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a10 
index: - 
=== Succesors ===
=== Usages ===
i432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a10 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i432 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
=== Succesors ===
next: v375 
=== Usages ===
i119 v121 
=== Predecessor ===
i431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v443 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i432 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i432  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i432 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i119 y: i432  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
i432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v374 #falseSuccessor: v372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@408825476] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
result int[-84243|0xfffffffffffeb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243] â‡Š00000000fffeb6ed â‡ˆ00000000fffeb6ed
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed]] destination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i433 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i433  <|@  <|@
f <@~|@floating>@ <|@
tid a14 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 34]
rawvalue: Formatter.Flags@859099015
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@859099015]
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
result [v7|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a14 
index: - 
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a14 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i433 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v444 
=== Succesors ===
next: v379 
=== Usages ===
i148 v150 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v444 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i433 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i433  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i433 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i148 y: i433  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v378 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
i433 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v378 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
result int[-85011|0xfffffffffffeb3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85011
stableDimension: 0
stamp: i32 [-85011] â‡Š00000000fffeb3ed â‡ˆ00000000fffeb3ed
stampKind: i32
value: int[-85011|0xfffffffffffeb3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85011|0xfffffffffffeb3ed]] destination: B4 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i434 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i434  <|@  <|@
f <@~|@floating>@ <|@
tid a18 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 40]
rawvalue: Formatter.Flags@2009893684
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@2009893684]
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
result [v10|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a18 
index: - 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a18 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i434 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v445 
=== Succesors ===
next: v383 
=== Usages ===
i178 v180 
=== Predecessor ===
v376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v445 #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i434 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i434  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i434 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i178 y: i434  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
i434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v382 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND (x: v3|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result int[-85779|0xfffffffffffeb0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85779
stableDimension: 0
stamp: i32 [-85779] â‡Š00000000fffeb0ed â‡ˆ00000000fffeb0ed
stampKind: i32
value: int[-85779|0xfffffffffffeb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85779|0xfffffffffffeb0ed]] destination: B6 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i435 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i435  <|@  <|@
f <@~|@floating>@ <|@
tid a22 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 46]
rawvalue: Formatter.Flags@271681927
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@271681927]
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
result [v13|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a22 
index: - 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a22 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i435 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v446 
=== Succesors ===
next: v387 
=== Usages ===
i208 v210 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v446 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i435 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i435  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i208 
y: i435 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i208 y: i435  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v386 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
i435 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v386 #falseSuccessor: v384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND (x: v3|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result int[-86547|0xfffffffffffeaded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86547
stableDimension: 0
stamp: i32 [-86547] â‡Š00000000fffeaded â‡ˆ00000000fffeaded
stampKind: i32
value: int[-86547|0xfffffffffffeaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86547|0xfffffffffffeaded]] destination: B8 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i436 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i436  <|@  <|@
f <@~|@floating>@ <|@
tid a26 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 52]
rawvalue: Formatter.Flags@1952837958
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1952837958]
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
result [v16|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
i436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i436 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v447 
=== Succesors ===
next: v391 
=== Usages ===
i238 v240 
=== Predecessor ===
v384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v447 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i436 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i436  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i238 
y: i436 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i238 y: i436  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
i436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v390 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND (x: v3|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
result int[-87315|0xfffffffffffeaaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -87315
stableDimension: 0
stamp: i32 [-87315] â‡Š00000000fffeaaed â‡ˆ00000000fffeaaed
stampKind: i32
value: int[-87315|0xfffffffffffeaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87315|0xfffffffffffeaaed]] destination: B10 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i437 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i437  <|@  <|@
f <@~|@floating>@ <|@
tid a30 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 58]
rawvalue: Formatter.Flags@1921891745
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1921891745]
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
result [v19|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a30 
index: - 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a30 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i437 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v448 
=== Succesors ===
next: v395 
=== Usages ===
i268 v270 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v448 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: i32
=== Inputs ===
x: i431 
y: i437 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i437  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i437 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i268 y: i437  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
i437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v394 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result int[-88083|0xfffffffffffea7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88083
stableDimension: 0
stamp: i32 [-88083] â‡Š00000000fffea7ed â‡ˆ00000000fffea7ed
stampKind: i32
value: int[-88083|0xfffffffffffea7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88083|0xfffffffffffea7ed]] destination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2974) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i438 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i438  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i438 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.width
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 66]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
=== Succesors ===
next: v399 
=== Usages ===
v37 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v449 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i438 
y: i4 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i438 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 70]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
i438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v396 #falseSuccessor: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: i439 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i439  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 77]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
result [v22|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a40 
index: - 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a40 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 80]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v450 
=== Succesors ===
next: v403 
=== Usages ===
i73 v75 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v450 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 80]
stamp: i32
=== Inputs ===
x: i431 
y: i439 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i431 y: i439  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 80]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i439 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i73 y: i439  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 83]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
i439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v402 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v22|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v3|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
result int[-89875|0xfffffffffffea0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89875
stableDimension: 0
stamp: i32 [-89875] â‡Š00000000fffea0ed â‡ˆ00000000fffea0ed
stampKind: i32
value: int[-89875|0xfffffffffffea0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89875|0xfffffffffffea0ed]] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2979) [bci: 98]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2977) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result int[-89107|0xfffffffffffea3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89107
stableDimension: 0
stamp: i32 [-89107] â‡Š00000000fffea3ed â‡ˆ00000000fffea3ed
stampKind: i32
value: int[-89107|0xfffffffffffea3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89107|0xfffffffffffea3ed]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i412 <|@
result int[-81427|0xfffffffffffec1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81427
stableDimension: 0
stamp: i32 [-81427] â‡Š00000000fffec1ed â‡ˆ00000000fffec1ed
stampKind: i32
value: int[-81427|0xfffffffffffec1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81427|0xfffffffffffec1ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B2" "B4" "B6" "B8" "B10" "B12" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i408 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-89875 - -81427] â‡Š00000000fffe80e5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v404 
values: i412 i414 i416 i418 i420 i422 i424 i426 i428 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v404 values: i412 i414 i416 i418 i420 i422 i424 i426 i428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v411 v413 v415 v417 v419 v421 v423 v425 v427 
=== Succesors ===
next: v410 
=== Usages ===
i408 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v411 v413 v415 v417 v419 v421 v423 v425 v427 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid a407 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i408 
speculation: a407 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i408 speculation: a407  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60acb463 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@408825476] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND (x: v3|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND (x: v3|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND (x: v3|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v22|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v3|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81427|0xfffffffffffec1ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B2" "B4" "B6" "B8" "B10" "B12" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85011|0xfffffffffffeb3ed]] destination: B4 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88083|0xfffffffffffea7ed]] destination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89875|0xfffffffffffea0ed]] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87315|0xfffffffffffeaaed]] destination: B10 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89107|0xfffffffffffea3ed]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86547|0xfffffffffffeaded]] destination: B8 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84243|0xfffffffffffeb6ed]] destination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85779|0xfffffffffffeb0ed]] destination: B6 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #12         // precision:int
     4: iconst_m1     
     5: if_icmpeq     20
     8: new           #18         // java.util.IllegalFormatPrecisionException
    11: dup           
    12: aload_0       
    13: getfield      #12         // precision:int
    16: invokespecial #14         // java.util.IllegalFormatPrecisionException.<init>:(int)void
    19: athrow        
    20: aload_0       
    21: bipush        6
    23: anewarray     #142        // java.util.Formatter$Flags
    26: dup           
    27: iconst_0      
    28: getstatic     #91         // java.util.Formatter$Flags.ALTERNATE:java.util.Formatter$Flags
    31: aastore       
    32: dup           
    33: iconst_1      
    34: getstatic     #113        // java.util.Formatter$Flags.PLUS:java.util.Formatter$Flags
    37: aastore       
    38: dup           
    39: iconst_2      
    40: getstatic     #114        // java.util.Formatter$Flags.LEADING_SPACE:java.util.Formatter$Flags
    43: aastore       
    44: dup           
    45: iconst_3      
    46: getstatic     #115        // java.util.Formatter$Flags.ZERO_PAD:java.util.Formatter$Flags
    49: aastore       
    50: dup           
    51: iconst_4      
    52: getstatic     #116        // java.util.Formatter$Flags.GROUP:java.util.Formatter$Flags
    55: aastore       
    56: dup           
    57: iconst_5      
    58: getstatic     #117        // java.util.Formatter$Flags.PARENTHESES:java.util.Formatter$Flags
    61: aastore       
    62: invokespecial #118        // checkBadFlags:(java.util.Formatter$Flags[])void
    65: aload_0       
    66: getfield      #10         // width:int
    69: iconst_m1     
    70: if_icmpne     98
    73: aload_0       
    74: getfield      #7          // f:java.util.Formatter$Flags
    77: getstatic     #101        // java.util.Formatter$Flags.LEFT_JUSTIFY:java.util.Formatter$Flags
    80: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    83: ifeq          98
    86: new           #139        // java.util.MissingFormatWidthException
    89: dup           
    90: aload_0       
    91: invokevirtual #111        // toString:()java.lang.String
    94: invokespecial #112        // java.util.MissingFormatWidthException.<init>:(java.lang.String)void
    97: athrow        
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60acb463 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP r10|DWORD y: -1 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@408825476] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   46  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   60  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958] <|@ <|@
      nr   70  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   84  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr  100  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-81427|0xfffffffffffec1ed] // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B2" "B4" "B6" "B8" "B10" "B12" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-85011|0xfffffffffffeb3ed] // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B4 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-88083|0xfffffffffffea7ed] // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-89875|0xfffffffffffea0ed] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B10 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-89107|0xfffffffffffea3ed] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-86547|0xfffffffffffeaded] // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B8 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B6 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #12         // precision:int
     4: iconst_m1     
     5: if_icmpeq     20
     8: new           #18         // java.util.IllegalFormatPrecisionException
    11: dup           
    12: aload_0       
    13: getfield      #12         // precision:int
    16: invokespecial #14         // java.util.IllegalFormatPrecisionException.<init>:(int)void
    19: athrow        
    20: aload_0       
    21: bipush        6
    23: anewarray     #142        // java.util.Formatter$Flags
    26: dup           
    27: iconst_0      
    28: getstatic     #91         // java.util.Formatter$Flags.ALTERNATE:java.util.Formatter$Flags
    31: aastore       
    32: dup           
    33: iconst_1      
    34: getstatic     #113        // java.util.Formatter$Flags.PLUS:java.util.Formatter$Flags
    37: aastore       
    38: dup           
    39: iconst_2      
    40: getstatic     #114        // java.util.Formatter$Flags.LEADING_SPACE:java.util.Formatter$Flags
    43: aastore       
    44: dup           
    45: iconst_3      
    46: getstatic     #115        // java.util.Formatter$Flags.ZERO_PAD:java.util.Formatter$Flags
    49: aastore       
    50: dup           
    51: iconst_4      
    52: getstatic     #116        // java.util.Formatter$Flags.GROUP:java.util.Formatter$Flags
    55: aastore       
    56: dup           
    57: iconst_5      
    58: getstatic     #117        // java.util.Formatter$Flags.PARENTHESES:java.util.Formatter$Flags
    61: aastore       
    62: invokespecial #118        // checkBadFlags:(java.util.Formatter$Flags[])void
    65: aload_0       
    66: getfield      #10         // width:int
    69: iconst_m1     
    70: if_icmpne     98
    73: aload_0       
    74: getfield      #7          // f:java.util.Formatter$Flags
    77: getstatic     #101        // java.util.Formatter$Flags.LEFT_JUSTIFY:java.util.Formatter$Flags
    80: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    83: ifeq          98
    86: new           #139        // java.util.MissingFormatWidthException
    89: dup           
    90: aload_0       
    91: invokevirtual #111        // toString:()java.lang.String
    94: invokespecial #112        // java.util.MissingFormatWidthException.<init>:(java.lang.String)void
    97: athrow        
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60acb463 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP r10|DWORD y: -1 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@408825476] <|@ <|@
      nr   22  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   46  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   60  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958] <|@ <|@
      nr   70  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   84  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr  100  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-81427|0xfffffffffffec1ed] // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B2" "B4" "B6" "B8" "B10" "B12" "B15" "B17" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-85011|0xfffffffffffeb3ed] // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B4 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-88083|0xfffffffffffea7ed] // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-89875|0xfffffffffffea0ed] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B10 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-89107|0xfffffffffffea3ed] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-86547|0xfffffffffffeaded] // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B8 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B6 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #12         // precision:int
     4: iconst_m1     
     5: if_icmpeq     20
     8: new           #18         // java.util.IllegalFormatPrecisionException
    11: dup           
    12: aload_0       
    13: getfield      #12         // precision:int
    16: invokespecial #14         // java.util.IllegalFormatPrecisionException.<init>:(int)void
    19: athrow        
    20: aload_0       
    21: bipush        6
    23: anewarray     #142        // java.util.Formatter$Flags
    26: dup           
    27: iconst_0      
    28: getstatic     #91         // java.util.Formatter$Flags.ALTERNATE:java.util.Formatter$Flags
    31: aastore       
    32: dup           
    33: iconst_1      
    34: getstatic     #113        // java.util.Formatter$Flags.PLUS:java.util.Formatter$Flags
    37: aastore       
    38: dup           
    39: iconst_2      
    40: getstatic     #114        // java.util.Formatter$Flags.LEADING_SPACE:java.util.Formatter$Flags
    43: aastore       
    44: dup           
    45: iconst_3      
    46: getstatic     #115        // java.util.Formatter$Flags.ZERO_PAD:java.util.Formatter$Flags
    49: aastore       
    50: dup           
    51: iconst_4      
    52: getstatic     #116        // java.util.Formatter$Flags.GROUP:java.util.Formatter$Flags
    55: aastore       
    56: dup           
    57: iconst_5      
    58: getstatic     #117        // java.util.Formatter$Flags.PARENTHESES:java.util.Formatter$Flags
    61: aastore       
    62: invokespecial #118        // checkBadFlags:(java.util.Formatter$Flags[])void
    65: aload_0       
    66: getfield      #10         // width:int
    69: iconst_m1     
    70: if_icmpne     98
    73: aload_0       
    74: getfield      #7          // f:java.util.Formatter$Flags
    77: getstatic     #101        // java.util.Formatter$Flags.LEFT_JUSTIFY:java.util.Formatter$Flags
    80: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    83: ifeq          98
    86: new           #139        // java.util.MissingFormatWidthException
    89: dup           
    90: aload_0       
    91: invokevirtual #111        // toString:()java.lang.String
    94: invokespecial #112        // java.util.MissingFormatWidthException.<init>:(java.lang.String)void
    97: athrow        
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b56144183faff0f85f1000000448b561c468b14d50c00000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f841201000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f84c500000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f84e000000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f84b300000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f848600000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f8459000000837e10ff0f856700000049bbaddeaddeaddeadde458b5b0c4523d3453bda0f843d000000488b6c24104883c418850500000000c5f877c341baedc1feff4589979c0200004d89a7a8020000e8000000009041baedb3feffebe441baeda7feffebdc41baeda0feffebd441baedaafeffebcc41baeda3feffebc441baedadfeffebbc41baedb6feffebb441baedb0feffebace80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60acb463 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 52 10 CMP r10|DWORD y: -1 size: DWORD  <||@
  Comment 56 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18  <||@
  Comment 62 block B1 null  <||@
  Comment 62 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 62 16 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 66 18 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 66 [rsi:0]at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 66 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 74 20 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@408825476]  <||@
  Comment 74 {Object[Formatter.Flags@408825476]}  <||@
  Comment 84 22 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 88 24 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 94 26 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015]  <||@
  Comment 103 {Object[Formatter.Flags@859099015]}  <||@
  Comment 113 34 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 117 36 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 123 38 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 126 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 132 block B5 null  <||@
  Comment 132 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 44 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684]  <||@
  Comment 132 {Object[Formatter.Flags@2009893684]}  <||@
  Comment 142 46 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 146 48 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 152 50 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 155 52 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 161 block B7 null  <||@
  Comment 161 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 56 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927]  <||@
  Comment 161 {Object[Formatter.Flags@271681927]}  <||@
  Comment 171 58 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 175 60 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 181 62 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 184 64 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 190 block B9 null  <||@
  Comment 190 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 68 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958]  <||@
  Comment 190 {Object[Formatter.Flags@1952837958]}  <||@
  Comment 200 70 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 204 72 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 210 74 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 213 76 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 219 block B11 null  <||@
  Comment 219 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 80 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745]  <||@
  Comment 219 {Object[Formatter.Flags@1921891745]}  <||@
  Comment 229 82 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 233 84 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 239 86 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 242 88 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 248 block B13 null  <||@
  Comment 248 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 92 CMP [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 252 94 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 258 block B14 null  <||@
  Comment 258 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 98 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 258 {Object[Formatter.Flags@122446495]}  <||@
  Comment 268 100 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 272 102 r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 275 104 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 278 106 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 284 block B16 null  <||@
  Comment 284 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 110 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 293 12  <||@
  Comment 303 block B18 null  <||@
  Comment 303 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 -1 r10|DWORD = MOVE input: int[-81427|0xfffffffffffec1ed]  <||@
  Comment 309 114 JUMP ~[] destination: B18 -> B19  <||@
  Comment 309 block B19 null  <||@
  Comment 309 148 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 309 150 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 316 152 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 323 154 DEOPT info [bci:0]  <||@
  Comment 323 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 328 [rsi:0]at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 329 block B4 null  <||@
  Comment 329 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 -1 r10|DWORD = MOVE input: int[-85011|0xfffffffffffeb3ed]  <||@
  Comment 335 118 JUMP ~[] destination: B4 -> B19  <||@
  Comment 337 block B12 null  <||@
  Comment 337 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 337 -1 r10|DWORD = MOVE input: int[-88083|0xfffffffffffea7ed]  <||@
  Comment 343 122 JUMP ~[] destination: B12 -> B19  <||@
  Comment 345 block B15 null  <||@
  Comment 345 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 -1 r10|DWORD = MOVE input: int[-89875|0xfffffffffffea0ed]  <||@
  Comment 351 126 JUMP ~[] destination: B15 -> B19  <||@
  Comment 353 block B10 null  <||@
  Comment 353 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 353 -1 r10|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed]  <||@
  Comment 359 130 JUMP ~[] destination: B10 -> B19  <||@
  Comment 361 block B17 null  <||@
  Comment 361 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 -1 r10|DWORD = MOVE input: int[-89107|0xfffffffffffea3ed]  <||@
  Comment 367 134 JUMP ~[] destination: B17 -> B19  <||@
  Comment 369 block B8 null  <||@
  Comment 369 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 369 -1 r10|DWORD = MOVE input: int[-86547|0xfffffffffffeaded]  <||@
  Comment 375 138 JUMP ~[] destination: B8 -> B19  <||@
  Comment 377 block B2 null  <||@
  Comment 377 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 -1 r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 383 142 JUMP ~[] destination: B2 -> B19  <||@
  Comment 385 block B6 null  <||@
  Comment 385 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 -1 r10|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed]  <||@
  Comment 391 146 JUMP ~[] destination: B6 -> B19  <||@
  Comment 393 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 393 4  <||@
  Comment 399 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 399 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9902[java.util.Formatter$FormatSpecifier.checkCharacter()]"
  method "HotSpotCompilation-9902[java.util.Formatter$FormatSpecifier.checkCharacter()]"
  date 1527005231470
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c8fee0 448b560849c1e203493bc20f856f5fb7fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b56144183faff0f85f1000000448b561c468b14d50c00000049bb48711ac006000000458b5b0c458bc24523c3453bd80f841201000049bb68711ac006000000458b5b0c458bc24523c3453bd80f84c500000049bb78711ac006000000458b5b0c458bc24523c3453bd80f84e000000049bb88711ac006000000458b5b0c458bc24523c3453bd80f84b300000049bb98711ac006000000458b5b0c458bc24523c3453bd80f848600000049bba8711ac006000000458b5b0c458bc24523c3453bd80f8459000000837e10ff0f856700000049bb58711ac006000000458b5b0c4523d3453bda0f843d000000488b6c24104883c4188505fbefbffcc5f877c341baedc1feff4589979c0200004d89a7a8020000e8d675b7fe9041baedb3feffebe441baeda7feffebdc41baeda0feffebd441baedaafeffebcc41baeda3feffebc441baedadfeffebbc41baedb6feffebb441baedb0feffebace8b2a5fbfe90e88c74b7fe90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60acb463 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 52 10 CMP r10|DWORD y: -1 size: DWORD  <||@
  Comment 56 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18  <||@
  Comment 62 block B1 null  <||@
  Comment 62 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 62 16 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 66 18 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 66 [rsi:0]at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 66 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 74 20 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@408825476]  <||@
  Comment 74 {Object[Formatter.Flags@408825476]}  <||@
  Comment 84 22 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 88 24 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 94 26 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015]  <||@
  Comment 103 {Object[Formatter.Flags@859099015]}  <||@
  Comment 113 34 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 117 36 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 123 38 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 126 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 132 block B5 null  <||@
  Comment 132 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 44 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684]  <||@
  Comment 132 {Object[Formatter.Flags@2009893684]}  <||@
  Comment 142 46 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 146 48 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 152 50 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 155 52 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 161 block B7 null  <||@
  Comment 161 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 56 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927]  <||@
  Comment 161 {Object[Formatter.Flags@271681927]}  <||@
  Comment 171 58 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 175 60 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 181 62 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 184 64 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 190 block B9 null  <||@
  Comment 190 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 68 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958]  <||@
  Comment 190 {Object[Formatter.Flags@1952837958]}  <||@
  Comment 200 70 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 204 72 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 210 74 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 213 76 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 219 block B11 null  <||@
  Comment 219 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 80 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745]  <||@
  Comment 219 {Object[Formatter.Flags@1921891745]}  <||@
  Comment 229 82 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 233 84 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 239 86 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 242 88 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 248 block B13 null  <||@
  Comment 248 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 92 CMP [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 252 94 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 258 block B14 null  <||@
  Comment 258 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 98 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 258 {Object[Formatter.Flags@122446495]}  <||@
  Comment 268 100 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 272 102 r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 275 104 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 278 106 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 284 block B16 null  <||@
  Comment 284 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 110 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 293 12  <||@
  Comment 303 block B18 null  <||@
  Comment 303 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 -1 r10|DWORD = MOVE input: int[-81427|0xfffffffffffec1ed]  <||@
  Comment 309 114 JUMP ~[] destination: B18 -> B19  <||@
  Comment 309 block B19 null  <||@
  Comment 309 148 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 309 150 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 316 152 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 323 154 DEOPT info [bci:0]  <||@
  Comment 323 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 328 [rsi:0]at java.util.Formatter$FormatSpecifier.checkCharacter(Formatter.java:2972) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 329 block B4 null  <||@
  Comment 329 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 -1 r10|DWORD = MOVE input: int[-85011|0xfffffffffffeb3ed]  <||@
  Comment 335 118 JUMP ~[] destination: B4 -> B19  <||@
  Comment 337 block B12 null  <||@
  Comment 337 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 337 -1 r10|DWORD = MOVE input: int[-88083|0xfffffffffffea7ed]  <||@
  Comment 343 122 JUMP ~[] destination: B12 -> B19  <||@
  Comment 345 block B15 null  <||@
  Comment 345 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 -1 r10|DWORD = MOVE input: int[-89875|0xfffffffffffea0ed]  <||@
  Comment 351 126 JUMP ~[] destination: B15 -> B19  <||@
  Comment 353 block B10 null  <||@
  Comment 353 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 353 -1 r10|DWORD = MOVE input: int[-87315|0xfffffffffffeaaed]  <||@
  Comment 359 130 JUMP ~[] destination: B10 -> B19  <||@
  Comment 361 block B17 null  <||@
  Comment 361 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 -1 r10|DWORD = MOVE input: int[-89107|0xfffffffffffea3ed]  <||@
  Comment 367 134 JUMP ~[] destination: B17 -> B19  <||@
  Comment 369 block B8 null  <||@
  Comment 369 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 369 -1 r10|DWORD = MOVE input: int[-86547|0xfffffffffffeaded]  <||@
  Comment 375 138 JUMP ~[] destination: B8 -> B19  <||@
  Comment 377 block B2 null  <||@
  Comment 377 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 -1 r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 383 142 JUMP ~[] destination: B2 -> B19  <||@
  Comment 385 block B6 null  <||@
  Comment 385 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 -1 r10|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed]  <||@
  Comment 391 146 JUMP ~[] destination: B6 -> B19  <||@
  Comment 393 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 393 4  <||@
  Comment 399 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 399 5  <||@
  HexCodeFile>>> <|@
end_nmethod
