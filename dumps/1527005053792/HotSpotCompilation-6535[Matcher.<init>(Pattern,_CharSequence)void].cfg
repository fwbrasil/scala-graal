begin_compilation
  name " HotSpotCompilation-6535[java.util.regex.Matcher.<init>(Pattern, CharSequence)]"
  method "HotSpotCompilation-6535[java.util.regex.Matcher.<init>(Pattern, CharSequence)]"
  date 1527005195969
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i952 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i952  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v958 ?61 v959 v968 v960 ?43 v961 v971 v962 v970 v963 ?37 v964 v974 v965 v966 j360 j436 j496 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v112 v1000 ?37 a158 v972 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 219
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a957 a3 - 
=== Succesors ===
=== Usages ===
i952 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a957 a3 -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Pattern;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v967 a154 v969 ?43 ?37 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.capturingGroupCount
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 50]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v967 
=== Succesors ===
next: v133 
=== Usages ===
v28 i128 i124 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v967 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:143) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 v139 v145 v904 v200 i328 v327 a465 v910 a396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:143) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
i952 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: i5 stateAfter: - lastLocationAccess: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:151) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 v142 v892 v898 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.first
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:151) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: i8 stateAfter: - lastLocationAccess: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:151) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v960 value: i5 stateAfter: - lastLocationAccess: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.oldLast
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:156) [bci: 21]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: i8 stateAfter: - lastLocationAccess: - #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.lastAppendPosition
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:161) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: i5 stateAfter: - lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 46
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:202) [bci: 31]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 v366 v440 v500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.transparentBounds
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:202) [bci: 31]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: i213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: i213 stateAfter: - lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 47
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:208) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i8 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.anchoringBounds
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:208) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
value: i214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v964 value: i214 stateAfter: - lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
op: Compress
stamp: n# Ljava/util/regex/Pattern;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Matcher.parentPattern
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: a154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j360 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: a154 stateAfter: - lastLocationAccess: - #next: j360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v366 
=== Usages ===
j362 
=== Predecessor ===
v157 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j362 j437 j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j362 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j360 
y: i361 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j360 y: i361  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 v989 v999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j362 
index: j365 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j362 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: i213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: i213 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a158 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:221) [bci: 46]
op: Compress
stamp: n -
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Matcher.text
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:221) [bci: 46]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: a158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: a158 stateAfter: - lastLocationAccess: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 53]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 i124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i952 
y: i27 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i952 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j314 j244 j772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:208) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 i128 v258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
trueSuccessorProbability: 0.26497513822504587
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4598444987652996969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid j315 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 19
stableDimension: 0
stamp: i64 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i64
value: long[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
j316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 70]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i32 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i32
value: int[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604795734932471884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 62]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i952 
y: i19 
=== Succesors ===
=== Usages ===
i130 j312 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i952 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i128 
=== Succesors ===
=== Usages ===
j313 j314 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i128  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j312 
y: j233 
=== Succesors ===
=== Usages ===
j316 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j312 y: j233  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: i32 [10 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v34 
values: i952 i27 
=== Succesors ===
=== Usages ===
?38 ?43 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v34 values: i952 i27  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v34 
values: i128 i129 
=== Succesors ===
=== Usages ===
a396 i328 v258 v381 j509 v327 v423 i372 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v34 values: i128 i129  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v34 
values: j312 j173 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v34 values: j312 j173  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
valueDescription: i64
=== Inputs ===
merge: v34 
values: j314 j315 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v34 values: j314 j315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v33 v35 
=== Succesors ===
next: v927 
=== Usages ===
i124 i130 j313 j316 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v33 v35 #next: v927  <|@  <|@
tid ?37 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
rethrowException: false
sourceFile: Matcher.java
sourceLine: 224
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - 
=== Succesors ===
=== Usages ===
?38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 -  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?37 
values: - - i124 
=== Succesors ===
=== Usages ===
a396 v272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?37 values: - - i124  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i19 
=== Succesors ===
=== Usages ===
v927 v517 v626 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i130 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v926 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v923 #falseSuccessor: v926  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j316 
y: j313 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j316 y: j313  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v236 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v236 #trueSuccessor: v934 #falseSuccessor: v931  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v921 v922 
=== Succesors ===
next: j375 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v921 v922 #next: j375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j420 
=== Usages ===
v980 v981 
=== Predecessor ===
v920 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j420  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j375 
index: - 
=== Succesors ===
=== Usages ===
j420 v422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j375 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
=== Succesors ===
next: j421 
=== Usages ===
j379 v982 v983 a395 v988 v984 v985 v986 v987 
=== Predecessor ===
j375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v980 #next: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j375 
index: - 
=== Succesors ===
=== Usages ===
j421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j375 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
=== Succesors ===
next: v384 
=== Usages ===
v385 
=== Predecessor ===
j420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v981 #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i380 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i130 y: i380  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a396 a465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 v488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j370 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 v485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i372 i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 i472 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i374 i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
j421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v383 #falseSuccessor: v382  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i130 
y: i371 
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i130 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i372 
y: i403 
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i372 y: i403  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i404 
y: i373 
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i404 y: i373  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i374 
=== Succesors ===
=== Usages ===
j379 v984 v985 v986 v987 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i374  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: i64
=== Inputs ===
x: j378 
y: j420 
=== Succesors ===
=== Usages ===
v385 v422 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j378 y: j420  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j421 
y: j379 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j421 y: j379  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v390 #falseSuccessor: v389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
value: j379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v980 value: j379 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j378 
index: j420 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
address: v984 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v984 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j378 
index: j420 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
address: v985 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v985 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j378 
index: j420 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
address: v986 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v986 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j378 
index: j420 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
address: v987 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v987 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
value: i130 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v982 value: i130 stateAfter: - lastLocationAccess: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
value: j370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 value: j370 stateAfter: - lastLocationAccess: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
value: v506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v988 value: v506 stateAfter: - lastLocationAccess: - #next: v394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j420 
=== Succesors ===
next: v397 
=== Usages ===
a400 
=== Predecessor ===
v394 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j420 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v386 v388 
=== Succesors ===
next: a396 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v386 v388 #next: a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a396 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?38 
arguments: v369 i130 i5 
=== Succesors ===
next: v399 
=== Usages ===
a400 
=== Predecessor ===
v387 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?38 arguments: v369 i130 i5 #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v398 
values: a395 a396 
=== Succesors ===
=== Usages ===
v977 a334 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v398 values: a395 a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v399 
=== Succesors ===
next: v817 
=== Usages ===
a400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v399 #next: v817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v626 
=== Usages ===
j819 
=== Predecessor ===
v398 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i130 
=== Succesors ===
=== Usages ===
j772 j769 j759 j765 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i130  <|@  <|@
f <@~|@floating>@ <|@
tid j772 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j509 
y: j233 
=== Succesors ===
=== Usages ===
v773 v850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j509 y: j233  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j769 j811 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j769 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j509 
y: j768 
=== Succesors ===
=== Usages ===
v770 v848 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j509 y: j768  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j765 j808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j509 
y: j764 
=== Succesors ===
=== Usages ===
v766 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j509 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid j758 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j759 j803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j759 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j509 
y: j758 
=== Succesors ===
=== Usages ===
v760 v762 v844 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j509 y: j758  <|@  <|@
f <@~|@floating>@ <|@
tid j407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j832 j838 j874 j746 j752 v760 j868 j791 j797 v804 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j759 
y: j407 
=== Succesors ===
=== Usages ===
v629 v520 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j759 y: j407  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j745 j790 j831 j867 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 v911 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j734 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j751 j796 j837 j873 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 v912 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j879 j843 j802 j757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 v909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v624 #falseSuccessor: v625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a400 
index: - 
=== Succesors ===
=== Usages ===
j819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a400 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v817 
address: v977 
=== Succesors ===
=== Usages ===
v1009 v1010 v1011 v1012 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v817 address: v977  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v760 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v760 #trueSuccessor: v627 #falseSuccessor: v628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B99" 
    successors "B19" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v631 
values: j407 j843 
=== Succesors ===
=== Usages ===
v1012 j843 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v631 values: j407 j843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v630 
=== Succesors ===
next: v909 
=== Usages ===
j838 v634 v635 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v630 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j819 
index: j838 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
value: v917 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1012 value: v917 stateAfter: - lastLocationAccess: - #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid j843 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j838 
y: j426 
=== Succesors ===
=== Usages ===
j832 j838 v844 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j838 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j759 
y: j843 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j759 y: j843  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v634 #falseSuccessor: v636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v631 
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v631 #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j832 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v639 
values: j407 j843 
=== Succesors ===
=== Usages ===
v1011 j837 j826 v846 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: j407 j843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v638 v640 
=== Succesors ===
next: v658 
=== Usages ===
j832 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v638 v640 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j832 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j765 y: j832  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v846 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v846 #trueSuccessor: v657 #falseSuccessor: v656  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v661  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j819 
index: j832 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
value: v919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1011 value: v919 stateAfter: - lastLocationAccess: - #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j832 
y: j734 
=== Succesors ===
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j832 y: j734  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v650 
values: j837 j832 
=== Succesors ===
=== Usages ===
v1010 j831 j820 v848 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v650 values: j837 j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v649 v661 
=== Succesors ===
next: v664 
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v649 v661 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j769 
y: j826 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j769 y: j826  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v848 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v662 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v848 #trueSuccessor: v663 #falseSuccessor: v662  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v663 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j819 
index: j826 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
value: v918 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1010 value: v918 stateAfter: - lastLocationAccess: - #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j826 
y: j744 
=== Succesors ===
=== Usages ===
j820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j826 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j820 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v653 
values: j831 j826 
=== Succesors ===
=== Usages ===
v1009 v850 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v653 values: j831 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v652 v667 
=== Succesors ===
next: v670 
=== Usages ===
j820 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v652 v667 #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j772 
y: j820 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j772 y: j820  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v669 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v669 #falseSuccessor: v668  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v669 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j819 
index: j820 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1009 value: i5 stateAfter: - lastLocationAccess: - #next: v655  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B14" "B28" "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v642 v655 v673 
=== Succesors ===
next: a334 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v642 v655 v673 #next: a334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a400 
=== Succesors ===
next: v172 
=== Usages ===
a169 v975 
=== Predecessor ===
v643 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a400 #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a169 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
op: Compress
stamp: n! -
=== Inputs ===
value: a334 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: a169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
a334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: a169 stateAfter: - lastLocationAccess: - #next: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v440 
=== Usages ===
j437 
=== Predecessor ===
v172 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j436 
y: i361 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j436 y: i361  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j437 
index: j365 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: i213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j445 
=== Usages ===
=== Predecessor ===
j436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: i213 stateAfter: - lastLocationAccess: - #next: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j481 
=== Usages ===
v990 v991 
=== Predecessor ===
v440 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j481  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j481 v483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
=== Succesors ===
next: j482 
=== Usages ===
j449 v992 v993 a464 v998 v994 v995 v996 v997 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v990 #next: j482  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
=== Succesors ===
next: i953 
=== Usages ===
v454 
=== Predecessor ===
j481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v991 #next: i953  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.localCount
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 70]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
=== Succesors ===
next: v453 
=== Usages ===
a465 v450 v264 i443 j243 v484 
=== Predecessor ===
j482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i953 
y: i380 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i953 y: i380  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i953 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v452 #falseSuccessor: v451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i953 
y: i371 
=== Succesors ===
=== Usages ===
i472 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i953 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i443 
y: i403 
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i443 y: i403  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i472 
y: i373 
=== Succesors ===
=== Usages ===
j448 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i472 y: i373  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i444 
=== Succesors ===
=== Usages ===
j449 v994 v995 v996 v997 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i444  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: i64
=== Inputs ===
x: j448 
y: j481 
=== Succesors ===
=== Usages ===
v454 v483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j448 y: j481  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j482 
y: j449 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j482 y: j449  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v459 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v459 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
value: j449 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 value: j449 stateAfter: - lastLocationAccess: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j448 
index: j481 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j448 index: j481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
address: v994 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v994 #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j448 
index: j481 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j448 index: j481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
address: v995 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v995 #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j448 
index: j481 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j448 index: j481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
address: v996 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v996 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j448 
index: j481 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j448 index: j481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
address: v997 
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v997 #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j481 
index: - 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
value: i953 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v992 value: i953 stateAfter: - lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j481 
index: - 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: j370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: j370 stateAfter: - lastLocationAccess: - #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j481 
index: - 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: v506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: v506 stateAfter: - lastLocationAccess: - #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a464 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j481 
=== Succesors ===
next: v466 
=== Usages ===
a469 
=== Predecessor ===
v463 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j481 #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
a464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v455 v457 
=== Succesors ===
next: a465 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v455 v457 #next: a465  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
rethrowException: false
sourceFile: Matcher.java
sourceLine: 226
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i124 
=== Succesors ===
=== Usages ===
a465 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a465 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?43 
arguments: v369 i953 i5 
=== Succesors ===
next: v468 
=== Usages ===
a469 
=== Predecessor ===
v456 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?43 arguments: v369 i953 i5 #next: v468  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
a465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v467 
values: a464 a465 
=== Succesors ===
=== Usages ===
v978 a338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v467 values: a464 a465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v466 v468 
=== Succesors ===
next: v853 
=== Usages ===
a469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v466 v468 #next: v853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v680 
=== Usages ===
j855 
=== Predecessor ===
v467 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i953 
=== Succesors ===
=== Usages ===
j244 v246 j811 j808 j803 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i953  <|@  <|@
f <@~|@floating>@ <|@
tid j244 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j243 
y: j233 
=== Succesors ===
=== Usages ===
v246 v814 v886 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j233  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j243 
y: j768 
=== Succesors ===
=== Usages ===
v812 v884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j768  <|@  <|@
f <@~|@floating>@ <|@
tid j808 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j243 
y: j764 
=== Succesors ===
=== Usages ===
v809 v882 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid j803 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j243 
y: j758 
=== Succesors ===
=== Usages ===
v804 v806 v880 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j758  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j803 
y: j407 
=== Succesors ===
=== Usages ===
v683 v575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j803 y: j407  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i953 
y: i19 
=== Succesors ===
=== Usages ===
v943 v572 v680 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i953 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v678 #falseSuccessor: v679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a469 
index: - 
=== Succesors ===
=== Usages ===
j855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a469 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j855 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v853 
address: v978 
=== Succesors ===
=== Usages ===
v1013 v1014 v1015 v1016 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v853 address: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v681 
falseSuccessor: v682 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v681 #falseSuccessor: v682  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B98" 
    successors "B41" "B98" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j874 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v685 
values: j407 j879 
=== Succesors ===
=== Usages ===
v1016 j879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v685 values: j407 j879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v684 
=== Succesors ===
next: v913 
=== Usages ===
j874 v688 v689 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v684 #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j855 
index: j874 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: j874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
value: v917 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 value: v917 stateAfter: - lastLocationAccess: - #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid j879 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j874 
y: j426 
=== Succesors ===
=== Usages ===
j868 j874 v880 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j874 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j803 
y: j879 
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j803 y: j879  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v690 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v688 #falseSuccessor: v690  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v685 
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v685 #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v693 
values: j407 j879 
=== Succesors ===
=== Usages ===
v1015 j873 j862 v882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v693 values: j407 j879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v692 v694 
=== Succesors ===
next: v712 
=== Usages ===
j868 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v692 v694 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j808 
y: j868 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j808 y: j868  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v882 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v882 #trueSuccessor: v711 #falseSuccessor: v710  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j855 
index: j868 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
value: v919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1015 value: v919 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid j873 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j868 
y: j734 
=== Succesors ===
=== Usages ===
j862 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j868 y: j734  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j862 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v704 
values: j873 j868 
=== Succesors ===
=== Usages ===
v1014 j867 j856 v884 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: j873 j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v703 v715 
=== Succesors ===
next: v718 
=== Usages ===
j862 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v703 v715 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j811 
y: j862 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j811 y: j862  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v884 
=== Succesors ===
trueSuccessor: v717 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v884 #trueSuccessor: v717 #falseSuccessor: v716  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j855 
index: j862 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: j862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
value: v918 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1014 value: v918 stateAfter: - lastLocationAccess: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid j867 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j862 
y: j744 
=== Succesors ===
=== Usages ===
j856 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j862 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j856 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v707 
values: j867 j862 
=== Succesors ===
=== Usages ===
v1013 v886 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v707 values: j867 j862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v706 v721 
=== Succesors ===
next: v724 
=== Usages ===
j856 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v706 v721 #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j244 
y: j856 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j244 y: j856  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v886 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v886 #trueSuccessor: v723 #falseSuccessor: v722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j855 
index: j856 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: j856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1013 value: i5 stateAfter: - lastLocationAccess: - #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B36" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v696 v709 v727 
=== Succesors ===
next: a338 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v696 v709 v727 #next: a338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a469 
=== Succesors ===
next: v180 
=== Usages ===
a177 v976 
=== Predecessor ===
v697 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a469 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
op: Compress
stamp: n! -
=== Inputs ===
value: a338 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
value: a177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j496 
=== Usages ===
=== Predecessor ===
a338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v970 value: a177 stateAfter: - lastLocationAccess: - #next: j496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v500 
=== Usages ===
j497 
=== Predecessor ===
v180 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j496 
y: i361 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j496 y: i361  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j497 
index: j365 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j497 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: i213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
j496 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: i213 stateAfter: - lastLocationAccess: - #next: v729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v517 
=== Usages ===
j731 
=== Predecessor ===
v500 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32>
value: SIMD<-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v894 v899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1,-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32,i32,i32>
value: SIMD<-1,-1,-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v896 v900 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1,-1,-1,-1,-1,-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 v897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v515 
falseSuccessor: v516 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v515 #falseSuccessor: v516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B67" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a334 
index: - 
=== Succesors ===
=== Usages ===
j731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a334 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j731 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v729 
address: v975 
=== Succesors ===
=== Usages ===
v1001 v1002 v1003 v1004 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v729 address: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v760 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v760 #trueSuccessor: v518 #falseSuccessor: v519  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B97" 
    successors "B57" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j752 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v522 
values: j407 j757 
=== Succesors ===
=== Usages ===
v1004 j757 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: j407 j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v521 
=== Succesors ===
next: v897 
=== Usages ===
j752 v526 v527 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v521 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j731 
index: j752 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j731 index: j752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
value: v914 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1004 value: v914 stateAfter: - lastLocationAccess: - #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j752 
y: j426 
=== Succesors ===
=== Usages ===
j746 j752 v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j752 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j759 
y: j757 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j759 y: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v526 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v526 #falseSuccessor: v528  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v522 
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v522 #next: v532  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j746 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v531 
values: j407 j757 
=== Succesors ===
=== Usages ===
v1003 j751 j739 v766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v531 values: j407 j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v530 v532 
=== Succesors ===
next: v550 
=== Usages ===
j746 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v530 v532 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j746 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j765 y: j746  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v549 #falseSuccessor: v548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
v549 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j731 
index: j746 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j731 index: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
value: v916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1003 value: v916 stateAfter: - lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j746 
y: j734 
=== Succesors ===
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j746 y: j734  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
v896 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v542 
values: j751 j746 
=== Succesors ===
=== Usages ===
v1002 j745 j732 v770 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v542 values: j751 j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v541 v553 
=== Succesors ===
next: v556 
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v541 v553 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j769 
y: j739 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j769 y: j739  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v555 #falseSuccessor: v554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v894 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j731 
index: j739 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j731 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
value: v915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1002 value: v915 stateAfter: - lastLocationAccess: - #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j739 
y: j744 
=== Succesors ===
=== Usages ===
j732 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j739 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j732 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v545 
values: j745 j739 
=== Succesors ===
=== Usages ===
v1001 v773 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v545 values: j745 j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v544 v559 
=== Succesors ===
next: v562 
=== Usages ===
j732 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v544 v559 #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j772 
y: j732 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j772 y: j732  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v773 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v560 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v773 #trueSuccessor: v561 #falseSuccessor: v560  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j731 
index: j732 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j731 index: j732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 value: i8 stateAfter: - lastLocationAccess: - #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B52" "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v534 v547 v565 
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v534 v547 v565 #next: v943  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v939 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v939 #falseSuccessor: v942  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B95" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j244 
y: j243 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j244 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v950 #falseSuccessor: v947  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v937 v938 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v937 v938 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1094223698
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1094223698]
=== Inputs ===
=== Succesors ===
=== Usages ===
a346 a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v281 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51467
stableDimension: 0
stamp: i32 [-51467] ⇊00000000ffff36f5 ⇈00000000ffff36f5
stampKind: i32
value: int[-51467|0xffffffffffff36f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
=== Succesors ===
next: v286 
=== Usages ===
v508 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1000 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v954 
y: v507 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v954 y: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v508 
=== Succesors ===
trueSuccessor: v283 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v508 #trueSuccessor: v283 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: a955 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a955  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a955 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
=== Succesors ===
next: v290 
=== Usages ===
v973 v206 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v972 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
value: a955 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a955  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v206 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
a955 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v206 #trueSuccessor: v289 #falseSuccessor: v287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53003
stableDimension: 0
stamp: i32 [-53003] ⇊00000000ffff30f5 ⇈00000000ffff30f5
stampKind: i32
value: int[-53003|0xffffffffffff30f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v572 
=== Usages ===
j778 
=== Predecessor ===
v287 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v571 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v570 #falseSuccessor: v571  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B92" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a338 
index: - 
=== Succesors ===
=== Usages ===
j778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a338 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j778 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v776 
address: v976 
=== Succesors ===
=== Usages ===
v1005 v1006 v1007 v1008 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v776 address: v976  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v573 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v573 #falseSuccessor: v574  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
v573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B93" 
    successors "B82" "B93" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j797 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v577 
values: j407 j802 
=== Succesors ===
=== Usages ===
v1008 j802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v577 values: j407 j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v576 
=== Succesors ===
next: v901 
=== Usages ===
j797 v580 v581 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v576 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j797 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
value: v914 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1008 value: v914 stateAfter: - lastLocationAccess: - #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j797 
y: j426 
=== Succesors ===
=== Usages ===
j791 j797 v806 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j797 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j803 
y: j802 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j803 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v806 
=== Succesors ===
trueSuccessor: v580 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v806 #trueSuccessor: v580 #falseSuccessor: v582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v577 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v577 #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
v580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j791 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v585 
values: j407 j802 
=== Succesors ===
=== Usages ===
v1007 j796 j785 v809 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: j407 j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v584 v586 
=== Succesors ===
next: v604 
=== Usages ===
j791 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v584 v586 #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j808 
y: j791 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j808 y: j791  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v809 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v602 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v809 #trueSuccessor: v603 #falseSuccessor: v602  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j791 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
value: v916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1007 value: v916 stateAfter: - lastLocationAccess: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j796 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j791 
y: j734 
=== Succesors ===
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j791 y: j734  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j785 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v596 
values: j796 j791 
=== Succesors ===
=== Usages ===
v1006 j790 j779 v812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v596 values: j796 j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v595 v607 
=== Succesors ===
next: v610 
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v595 v607 #next: v610  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j811 
y: j785 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j811 y: j785  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v812 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v812 #trueSuccessor: v609 #falseSuccessor: v608  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j785 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
value: v915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1006 value: v915 stateAfter: - lastLocationAccess: - #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid j790 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j785 
y: j744 
=== Succesors ===
=== Usages ===
j779 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j785 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j779 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v599 
values: j790 j785 
=== Succesors ===
=== Usages ===
v1005 v814 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v599 values: j790 j785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v598 v613 
=== Succesors ===
next: v616 
=== Usages ===
j779 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v598 v613 #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j244 
y: j779 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j244 y: j779  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v615 #falseSuccessor: v614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j779 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1005 value: i8 stateAfter: - lastLocationAccess: - #next: v601  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
v898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B77" "B91" "B90" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v588 v601 v619 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v588 v601 v619 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.from
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:308) [bci: 70]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i956 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v971 value: i5 stateAfter: - lastLocationAccess: - #next: i956  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a955 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
=== Succesors ===
next: v212 
=== Usages ===
v212 
=== Predecessor ===
v200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v973 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.to
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 78]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: i956 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
i956 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: i956 stateAfter: - lastLocationAccess: - #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:230) [bci: 83]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B81" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v577 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v577  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid a355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@39746881
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@39746881]
=== Inputs ===
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51763
stableDimension: 0
stamp: i32 [-51763] ⇊00000000ffff35cd ⇈00000000ffff35cd
stampKind: i32
value: int[-51763|0xffffffffffff35cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid a350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1610516575
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1610516575]
=== Inputs ===
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -48923
stableDimension: 0
stamp: i32 [-48923] ⇊00000000ffff40e5 ⇈00000000ffff40e5
stampKind: i32
value: int[-48923|0xffffffffffff40e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v947 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" "B95" "B75" "B94" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-53003 - -48923] ⇊00000000ffff00c5 ⇈00000000ffff77fd
valueDescription: i32
=== Inputs ===
merge: v341 
values: i343 i349 i352 i354 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v341 values: i343 i349 i352 i354  <|@  <|@
f <@~|@floating>@ <|@
tid a346 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v341 
values: a344 a350 a344 a355 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v341 values: a344 a350 a344 a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v342 v348 v351 v353 
=== Succesors ===
next: v347 
=== Usages ===
i345 a346 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v342 v348 v351 v353 #next: v347  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 229
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?61 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i5 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i130 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483646] ⇈000000007ffffffe
=== Inputs ===
condition: v327 
trueValue: i5 
falseValue: i130 
=== Succesors ===
=== Usages ===
?61 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v327 trueValue: i5 falseValue: i130  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Matcher.reset()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 303
stackSize: 0
=== Inputs ===
outerFrameState: ?102 
values: a1 i328 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: a1 i328  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?61 
actionAndReason: i345 
speculation: a346 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?61 actionAndReason: i345 speculation: a346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v522 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v685 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v685  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v631 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v631  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 182
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
reason: BoundsCheckException
speculation: Object[d.a@191256587]
stamp: void
=== Inputs ===
stateBefore: ?38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?38  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i952 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i952  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v958 ?61 v959 v968 v960 ?43 v961 v971 v962 v970 v963 ?37 v964 v974 v965 v966 j360 j436 j496 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v112 v1000 ?37 a158 v972 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 219
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a957 a3 - 
=== Succesors ===
=== Usages ===
i952 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a957 a3 -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Pattern;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v967 a154 v969 ?43 ?37 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i952 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.capturingGroupCount
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 50]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v967 
=== Succesors ===
next: v133 
=== Usages ===
v28 i128 i124 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v967 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:143) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 v139 v145 v904 v200 i328 v327 a465 v910 a396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:143) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
i952 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: i5 stateAfter: - lastLocationAccess: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:151) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 v142 v892 v898 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.first
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:151) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: i8 stateAfter: - lastLocationAccess: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:151) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v960 value: i5 stateAfter: - lastLocationAccess: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.oldLast
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:156) [bci: 21]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: i8 stateAfter: - lastLocationAccess: - #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.lastAppendPosition
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:161) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: i5 stateAfter: - lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [v0|QWORD[.] + 46] <|@
d <@d|@=== Debug Properties ===
displacement: 46
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:202) [bci: 31]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 v366 v440 v500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.transparentBounds
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:202) [bci: 31]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: i213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: i213 stateAfter: - lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [v0|QWORD[.] + 47] <|@
d <@d|@=== Debug Properties ===
displacement: 47
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result byte[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:208) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i8 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.anchoringBounds
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:208) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
value: i214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v964 value: i214 stateAfter: - lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v0|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
op: Compress
stamp: n# Ljava/util/regex/Pattern;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Matcher.parentPattern
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: a154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j360 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: a154 stateAfter: - lastLocationAccess: - #next: j360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v366 
=== Usages ===
j362 
=== Predecessor ===
v157 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j362 j437 j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j362 <|@
result v5|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j360 
y: i361 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j360 y: i361  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 v989 v999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v5|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j362 
index: j365 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j362 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:220) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: i213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: i213 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a158 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:221) [bci: 46]
op: Compress
stamp: n -
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Matcher.text
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:221) [bci: 46]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: a158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: a158 stateAfter: - lastLocationAccess: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 53]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 i124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i952 
y: i27 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i952 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j314 j244 j772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:208) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 i128 v258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
trueSuccessorProbability: 0.26497513822504587
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e614c22 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:219) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 46], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 47] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26497513822504587 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4598444987652996969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid j315 <|@
result long[19|0x13] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 19
stableDimension: 0
stamp: i64 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i64
value: long[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
j316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 70]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result int[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i32 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i32
value: int[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa], int[20|0x14], long[20|0x14], long[19|0x13]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604795734932471884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 62]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i952 
y: i19 
=== Succesors ===
=== Usages ===
i130 j312 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i952 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i128 
=== Succesors ===
=== Usages ===
j313 j314 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i128  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j312 
y: j233 
=== Succesors ===
=== Usages ===
j316 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j312 y: j233  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = DEC v9|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v8|DWORD, v9|QWORD, v10|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i124 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: i32 [10 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v34 
values: i952 i27 
=== Succesors ===
=== Usages ===
?38 ?43 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v34 values: i952 i27  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v34 
values: i128 i129 
=== Succesors ===
=== Usages ===
a396 i328 v258 v381 j509 v327 v423 i372 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v34 values: i128 i129  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v34 
values: j312 j173 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v34 values: j312 j173  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
valueDescription: i64
=== Inputs ===
merge: v34 
values: j314 j315 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v34 values: j314 j315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v33 v35 
=== Succesors ===
next: v927 
=== Usages ===
i124 i130 j313 j316 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v33 v35 #next: v927  <|@  <|@
tid ?37 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
rethrowException: false
sourceFile: Matcher.java
sourceLine: 224
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - 
=== Succesors ===
=== Usages ===
?38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 -  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?37 
values: - - i124 
=== Succesors ===
=== Usages ===
a396 v272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?37 values: - - i124  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i19 
=== Succesors ===
=== Usages ===
v927 v517 v626 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i130 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v926 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v923 #falseSuccessor: v926  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD, v13|QWORD, v14|QWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j316 
y: j313 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j316 y: j313  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v236 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v236 #trueSuccessor: v934 #falseSuccessor: v931  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v921 v922 
=== Succesors ===
next: j375 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v921 v922 #next: j375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j420 
=== Usages ===
v980 v981 
=== Predecessor ===
v920 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j420  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j375 
index: - 
=== Succesors ===
=== Usages ===
j420 v422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j375 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j420 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
=== Succesors ===
next: j421 
=== Usages ===
j379 v982 v983 a395 v988 v984 v985 v986 v987 
=== Predecessor ===
j375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v980 #next: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j375 
index: - 
=== Succesors ===
=== Usages ===
j421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j375 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j421 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
=== Succesors ===
next: v384 
=== Usages ===
v385 
=== Predecessor ===
j420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v981 #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i380 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i130 y: i380  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a396 a465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 v488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j370 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 v485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i372 i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 i472 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i374 i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
j421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v383 #falseSuccessor: v382  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i130 
y: i371 
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i130 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i372 
y: i403 
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i372 y: i403  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i404 
y: i373 
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i404 y: i373  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i374 
=== Succesors ===
=== Usages ===
j379 v984 v985 v986 v987 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i374  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: i64
=== Inputs ===
x: j378 
y: j420 
=== Succesors ===
=== Usages ===
v385 v422 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j378 y: j420  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j421 
y: j379 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j421 y: j379  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v390 #falseSuccessor: v389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL v12|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA [v18|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AND v19|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = ADD (x: v21|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
value: j379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v980 value: j379 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v21|QWORD + v15|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j378 
index: j420 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
address: v984 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v984 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v21|QWORD + v15|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j378 
index: j420 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
address: v985 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v985 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v21|QWORD + v15|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j378 
index: j420 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
address: v986 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v986 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v21|QWORD + v15|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j378 
index: j420 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
address: v987 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v987 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [v15|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
value: i130 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v982 value: i130 stateAfter: - lastLocationAccess: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v15|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
value: j370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 value: j370 stateAfter: - lastLocationAccess: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v15|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
value: v506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v988 value: v506 stateAfter: - lastLocationAccess: - #next: v394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j420 
=== Succesors ===
next: v397 
=== Usages ===
a400 
=== Predecessor ===
v394 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j420 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v15|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v15|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v15|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v15|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v386 v388 
=== Succesors ===
next: a396 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v386 v388 #next: a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a396 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?38 
arguments: v369 i130 i5 
=== Succesors ===
next: v399 
=== Usages ===
a400 
=== Predecessor ===
v387 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?38 arguments: v369 i130 i5 #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v11|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a400 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v398 
values: a395 a396 
=== Succesors ===
=== Usages ===
v977 a334 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v398 values: a395 a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v399 
=== Succesors ===
next: v817 
=== Usages ===
a400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v399 #next: v817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v626 
=== Usages ===
j819 
=== Predecessor ===
v398 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i130 
=== Succesors ===
=== Usages ===
j772 j769 j759 j765 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i130  <|@  <|@
f <@~|@floating>@ <|@
tid j772 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j509 
y: j233 
=== Succesors ===
=== Usages ===
v773 v850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j509 y: j233  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j769 j811 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j769 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j509 
y: j768 
=== Succesors ===
=== Usages ===
v770 v848 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j509 y: j768  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j765 j808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j509 
y: j764 
=== Succesors ===
=== Usages ===
v766 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j509 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid j758 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j759 j803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j759 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j509 
y: j758 
=== Succesors ===
=== Usages ===
v760 v762 v844 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j509 y: j758  <|@  <|@
f <@~|@floating>@ <|@
tid j407 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j832 j838 j874 j746 j752 v760 j868 j791 j797 v804 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j759 
y: j407 
=== Succesors ===
=== Usages ===
v629 v520 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j759 y: j407  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j745 j790 j831 j867 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
result v31|V64_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 v911 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j734 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j751 j796 j837 j873 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
result v32|V128_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 v912 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j879 j843 j802 j757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
result v33|V256_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 v909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v624 #falseSuccessor: v625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = DEC v26|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v32|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v33|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [v25|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a400 
index: - 
=== Succesors ===
=== Usages ===
j819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a400 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v817 
address: v977 
=== Succesors ===
=== Usages ===
v1009 v1010 v1011 v1012 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v817 address: v977  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v760 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v760 #trueSuccessor: v627 #falseSuccessor: v628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = LEA [v25|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B99" 
    successors "B19" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j838 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v631 
values: j407 j843 
=== Succesors ===
=== Usages ===
v1012 j843 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v631 values: j407 j843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v630 
=== Succesors ===
next: v909 
=== Usages ===
j838 v634 v635 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v630 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
result [v34|QWORD[.] + v35|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j819 
index: j838 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
value: v917 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1012 value: v917 stateAfter: - lastLocationAccess: - #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid j843 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j838 
y: j426 
=== Succesors ===
=== Usages ===
j832 j838 v844 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j838 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j759 
y: j843 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j759 y: j843  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v634 #falseSuccessor: v636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v34|QWORD[.] + v35|QWORD * 4], input: v33|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v631 
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v631 #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j832 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v639 
values: j407 j843 
=== Succesors ===
=== Usages ===
v1011 j837 j826 v846 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: j407 j843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v638 v640 
=== Succesors ===
next: v658 
=== Usages ===
j832 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v638 v640 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j832 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j765 y: j832  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v846 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v846 #trueSuccessor: v657 #falseSuccessor: v656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v661  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
result [v34|QWORD[.] + v37|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j819 
index: j832 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
value: v919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1011 value: v919 stateAfter: - lastLocationAccess: - #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j832 
y: j734 
=== Succesors ===
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j832 y: j734  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v34|QWORD[.] + v37|QWORD * 4], input: v32|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j826 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v650 
values: j837 j832 
=== Succesors ===
=== Usages ===
v1010 j831 j820 v848 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v650 values: j837 j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v649 v661 
=== Succesors ===
next: v664 
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v649 v661 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j769 
y: j826 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j769 y: j826  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v848 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v662 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v848 #trueSuccessor: v663 #falseSuccessor: v662  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v663 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
result [v34|QWORD[.] + v39|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j819 
index: j826 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
value: v918 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1010 value: v918 stateAfter: - lastLocationAccess: - #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j826 
y: j744 
=== Succesors ===
=== Usages ===
j820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j826 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v34|QWORD[.] + v39|QWORD * 4], input: v31|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j820 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v653 
values: j831 j826 
=== Succesors ===
=== Usages ===
v1009 v850 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v653 values: j831 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v652 v667 
=== Succesors ===
next: v670 
=== Usages ===
j820 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v652 v667 #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j772 
y: j820 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j772 y: j820  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v669 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v669 #falseSuccessor: v668  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v669 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
result [v34|QWORD[.] + v41|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j819 
index: j820 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1009 value: i5 stateAfter: - lastLocationAccess: - #next: v655  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[.] + v41|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B14" "B28" "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v642 v655 v673 
=== Succesors ===
next: a334 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v642 v655 v673 #next: a334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a334 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a400 
=== Succesors ===
next: v172 
=== Usages ===
a169 v975 
=== Predecessor ===
v643 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a400 #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a169 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
op: Compress
stamp: n! -
=== Inputs ===
value: a334 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: a169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
a334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: a169 stateAfter: - lastLocationAccess: - #next: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v440 
=== Usages ===
j437 
=== Predecessor ===
v172 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
result v43|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j436 
y: i361 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j436 y: i361  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v43|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j437 
index: j365 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: i213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j445 
=== Usages ===
=== Predecessor ===
j436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: i213 stateAfter: - lastLocationAccess: - #next: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j481 
=== Usages ===
v990 v991 
=== Predecessor ===
v440 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j481  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j481 v483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j481 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
=== Succesors ===
next: j482 
=== Usages ===
j449 v992 v993 a464 v998 v994 v995 v996 v997 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v990 #next: j482  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
=== Succesors ===
next: i953 
=== Usages ===
v454 
=== Predecessor ===
j481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v991 #next: i953  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i953 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.localCount
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 70]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
=== Succesors ===
next: v453 
=== Usages ===
a465 v450 v264 i443 j243 v484 
=== Predecessor ===
j482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i953 
y: i380 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i953 y: i380  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i953 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v452 #falseSuccessor: v451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = COMPRESSPOINTER (input: v25|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v43|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i953 
y: i371 
=== Succesors ===
=== Usages ===
i472 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i953 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i443 
y: i403 
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i443 y: i403  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i472 
y: i373 
=== Succesors ===
=== Usages ===
j448 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i472 y: i373  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i444 
=== Succesors ===
=== Usages ===
j449 v994 v995 v996 v997 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i444  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: i64
=== Inputs ===
x: j448 
y: j481 
=== Succesors ===
=== Usages ===
v454 v483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j448 y: j481  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j482 
y: j449 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j482 y: j449  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v459 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v459 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL v46|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = LEA [v47|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = AND v48|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v49|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = ADD (x: v50|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
value: j449 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 value: j449 stateAfter: - lastLocationAccess: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v50|QWORD + v44|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j448 
index: j481 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j448 index: j481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
address: v994 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v994 #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result [v50|QWORD + v44|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j448 
index: j481 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j448 index: j481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
address: v995 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v995 #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result [v50|QWORD + v44|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j448 
index: j481 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j448 index: j481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
address: v996 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v996 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
result [v50|QWORD + v44|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j448 
index: j481 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j448 index: j481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
address: v997 
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v997 #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v44|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j481 
index: - 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
value: i953 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v992 value: i953 stateAfter: - lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v44|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j481 
index: - 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: j370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: j370 stateAfter: - lastLocationAccess: - #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
result [v44|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j481 
index: - 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: v506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: v506 stateAfter: - lastLocationAccess: - #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a464 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j481 
=== Succesors ===
next: v466 
=== Usages ===
a469 
=== Predecessor ===
v463 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j481 #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
a464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + v44|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + v44|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + v44|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + v44|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 12], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v455 v457 
=== Succesors ===
next: a465 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v455 v457 #next: a465  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 65]
rethrowException: false
sourceFile: Matcher.java
sourceLine: 226
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i124 
=== Succesors ===
=== Usages ===
a465 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a465 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?43 
arguments: v369 i953 i5 
=== Succesors ===
next: v468 
=== Usages ===
a469 
=== Predecessor ===
v456 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?43 arguments: v369 i953 i5 #next: v468  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
a465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v46|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a469 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v467 
values: a464 a465 
=== Succesors ===
=== Usages ===
v978 a338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v467 values: a464 a465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v466 v468 
=== Succesors ===
next: v853 
=== Usages ===
a469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v466 v468 #next: v853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v680 
=== Usages ===
j855 
=== Predecessor ===
v467 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i953 
=== Succesors ===
=== Usages ===
j244 v246 j811 j808 j803 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i953  <|@  <|@
f <@~|@floating>@ <|@
tid j244 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j243 
y: j233 
=== Succesors ===
=== Usages ===
v246 v814 v886 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j233  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j243 
y: j768 
=== Succesors ===
=== Usages ===
v812 v884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j768  <|@  <|@
f <@~|@floating>@ <|@
tid j808 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j243 
y: j764 
=== Succesors ===
=== Usages ===
v809 v882 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid j803 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j243 
y: j758 
=== Succesors ===
=== Usages ===
v804 v806 v880 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j758  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j803 
y: j407 
=== Succesors ===
=== Usages ===
v683 v575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j803 y: j407  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i953 
y: i19 
=== Succesors ===
=== Usages ===
v943 v572 v680 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i953 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v678 #falseSuccessor: v679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v46|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = DEC v55|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v54|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a469 
index: - 
=== Succesors ===
=== Usages ===
j855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a469 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j855 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v853 
address: v978 
=== Succesors ===
=== Usages ===
v1013 v1014 v1015 v1016 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v853 address: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v681 
falseSuccessor: v682 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v681 #falseSuccessor: v682  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B98" 
    successors "B41" "B98" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j874 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v685 
values: j407 j879 
=== Succesors ===
=== Usages ===
v1016 j879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v685 values: j407 j879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v684 
=== Succesors ===
next: v913 
=== Usages ===
j874 v688 v689 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v684 #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
result [v60|QWORD[.] + v61|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j855 
index: j874 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: j874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
value: v917 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 value: v917 stateAfter: - lastLocationAccess: - #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid j879 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j874 
y: j426 
=== Succesors ===
=== Usages ===
j868 j874 v880 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j874 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j803 
y: j879 
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j803 y: j879  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v690 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v688 #falseSuccessor: v690  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v61|QWORD * 4], input: v33|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v61|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v685 
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v685 #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j868 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v693 
values: j407 j879 
=== Succesors ===
=== Usages ===
v1015 j873 j862 v882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v693 values: j407 j879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v692 v694 
=== Succesors ===
next: v712 
=== Usages ===
j868 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v692 v694 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j808 
y: j868 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j808 y: j868  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v882 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v882 #trueSuccessor: v711 #falseSuccessor: v710  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
result [v60|QWORD[.] + v63|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j855 
index: j868 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
value: v919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1015 value: v919 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid j873 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j868 
y: j734 
=== Succesors ===
=== Usages ===
j862 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j868 y: j734  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v63|QWORD * 4], input: v32|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j862 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v704 
values: j873 j868 
=== Succesors ===
=== Usages ===
v1014 j867 j856 v884 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: j873 j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v703 v715 
=== Succesors ===
next: v718 
=== Usages ===
j862 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v703 v715 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j811 
y: j862 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j811 y: j862  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v884 
=== Succesors ===
trueSuccessor: v717 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v884 #trueSuccessor: v717 #falseSuccessor: v716  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
result [v60|QWORD[.] + v65|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j855 
index: j862 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: j862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
value: v918 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1014 value: v918 stateAfter: - lastLocationAccess: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid j867 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j862 
y: j744 
=== Succesors ===
=== Usages ===
j856 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j862 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v65|QWORD * 4], input: v31|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j856 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v707 
values: j867 j862 
=== Succesors ===
=== Usages ===
v1013 v886 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v707 values: j867 j862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v706 v721 
=== Succesors ===
next: v724 
=== Usages ===
j856 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v706 v721 #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j244 
y: j856 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j244 y: j856  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v886 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v886 #trueSuccessor: v723 #falseSuccessor: v722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
result [v60|QWORD[.] + v67|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j855 
index: j856 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j855 index: j856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1013 value: i5 stateAfter: - lastLocationAccess: - #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[.] + v67|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B36" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v696 v709 v727 
=== Succesors ===
next: a338 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v696 v709 v727 #next: a338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a338 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a469 
=== Succesors ===
next: v180 
=== Usages ===
a177 v976 
=== Predecessor ===
v697 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a469 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
result v68|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
op: Compress
stamp: n! -
=== Inputs ===
value: a338 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
value: a177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j496 
=== Usages ===
=== Predecessor ===
a338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v970 value: a177 stateAfter: - lastLocationAccess: - #next: j496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j496 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v500 
=== Usages ===
j497 
=== Predecessor ===
v180 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
result v69|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j496 
y: i361 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j496 y: i361  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
result [v69|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j497 
index: j365 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j497 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: i213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
j496 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: i213 stateAfter: - lastLocationAccess: - #next: v729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v517 
=== Usages ===
j731 
=== Predecessor ===
v500 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
result v70|V64_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32>
value: SIMD<-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v894 v899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
result v71|V128_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1,-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32,i32,i32>
value: SIMD<-1,-1,-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v896 v900 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
result v72|V256_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1,-1,-1,-1,-1,-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 v897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v515 
falseSuccessor: v516 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v515 #falseSuccessor: v516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v70|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr   -1  <|@ instruction v71|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction v72|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B67" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result [v25|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a334 
index: - 
=== Succesors ===
=== Usages ===
j731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a334 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j731 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v729 
address: v975 
=== Succesors ===
=== Usages ===
v1001 v1002 v1003 v1004 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v729 address: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v760 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v760 #trueSuccessor: v518 #falseSuccessor: v519  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LEA [v25|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B97" 
    successors "B57" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j752 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v522 
values: j407 j757 
=== Succesors ===
=== Usages ===
v1004 j757 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: j407 j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v521 
=== Succesors ===
next: v897 
=== Usages ===
j752 v526 v527 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v521 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
result [v73|QWORD[.] + v74|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j731 
index: j752 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j731 index: j752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
value: v914 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1004 value: v914 stateAfter: - lastLocationAccess: - #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j752 
y: j426 
=== Succesors ===
=== Usages ===
j746 j752 v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j752 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j759 
y: j757 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j759 y: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v526 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v526 #falseSuccessor: v528  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v73|QWORD[.] + v74|QWORD * 4], input: v72|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v74|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v522 
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v522 #next: v532  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j746 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v531 
values: j407 j757 
=== Succesors ===
=== Usages ===
v1003 j751 j739 v766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v531 values: j407 j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v530 v532 
=== Succesors ===
next: v550 
=== Usages ===
j746 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v530 v532 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j746 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j765 y: j746  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v549 #falseSuccessor: v548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
v549 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
result [v73|QWORD[.] + v76|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j731 
index: j746 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j731 index: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
value: v916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1003 value: v916 stateAfter: - lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j746 
y: j734 
=== Succesors ===
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j746 y: j734  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
v896 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v73|QWORD[.] + v76|QWORD * 4], input: v71|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j739 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v542 
values: j751 j746 
=== Succesors ===
=== Usages ===
v1002 j745 j732 v770 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v542 values: j751 j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v541 v553 
=== Succesors ===
next: v556 
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v541 v553 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j769 
y: j739 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j769 y: j739  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v555 #falseSuccessor: v554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v894 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
result [v73|QWORD[.] + v78|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j731 
index: j739 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j731 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
value: v915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1002 value: v915 stateAfter: - lastLocationAccess: - #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j739 
y: j744 
=== Succesors ===
=== Usages ===
j732 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j739 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v73|QWORD[.] + v78|QWORD * 4], input: v70|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j732 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v545 
values: j745 j739 
=== Succesors ===
=== Usages ===
v1001 v773 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v545 values: j745 j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v544 v559 
=== Succesors ===
next: v562 
=== Usages ===
j732 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v544 v559 #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j772 
y: j732 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j772 y: j732  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v773 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v560 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v773 #trueSuccessor: v561 #falseSuccessor: v560  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
result [v73|QWORD[.] + v80|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j731 
index: j732 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j731 index: j732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 value: i8 stateAfter: - lastLocationAccess: - #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v73|QWORD[.] + v80|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B52" "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v534 v547 v565 
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v534 v547 v565 #next: v943  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v939 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v939 #falseSuccessor: v942  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B95" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j244 
y: j243 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j244 y: j243  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v950 #falseSuccessor: v947  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v937 v938 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v937 v938 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1094223698
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1094223698]
=== Inputs ===
=== Succesors ===
=== Usages ===
a346 a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v281 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
result int[-51467|0xffffffffffff36f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51467
stableDimension: 0
stamp: i32 [-51467] ⇊00000000ffff36f5 ⇈00000000ffff36f5
stampKind: i32
value: int[-51467|0xffffffffffff36f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51467|0xffffffffffff36f5], v81|QWORD[.]] destination: B72 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
=== Succesors ===
next: v286 
=== Usages ===
v508 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1000 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v954 
y: v507 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v954 y: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v508 
=== Succesors ===
trueSuccessor: v283 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v508 #trueSuccessor: v283 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: a955 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a955  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a955 <|@
result v82|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
=== Succesors ===
next: v290 
=== Usages ===
v973 v206 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v972 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
value: a955 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a955  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v206 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
a955 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v206 #trueSuccessor: v289 #falseSuccessor: v287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD[.], y: v82|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
result int[-53003|0xffffffffffff30f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53003
stableDimension: 0
stamp: i32 [-53003] ⇊00000000ffff30f5 ⇈00000000ffff30f5
stampKind: i32
value: int[-53003|0xffffffffffff30f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53003|0xffffffffffff30f5], v81|QWORD[.]] destination: B75 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v572 
=== Usages ===
j778 
=== Predecessor ===
v287 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v571 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v570 #falseSuccessor: v571  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B92" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result [v54|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a338 
index: - 
=== Succesors ===
=== Usages ===
j778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a338 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j778 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v776 
address: v976 
=== Succesors ===
=== Usages ===
v1005 v1006 v1007 v1008 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v776 address: v976  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v573 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v573 #falseSuccessor: v574  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
v573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B93" 
    successors "B82" "B93" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j797 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v577 
values: j407 j802 
=== Succesors ===
=== Usages ===
v1008 j802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v577 values: j407 j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v576 
=== Succesors ===
next: v901 
=== Usages ===
j797 v580 v581 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v576 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
result [v83|QWORD[.] + v84|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j797 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
value: v914 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1008 value: v914 stateAfter: - lastLocationAccess: - #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j797 
y: j426 
=== Succesors ===
=== Usages ===
j791 j797 v806 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j797 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j803 
y: j802 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j803 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v806 
=== Succesors ===
trueSuccessor: v580 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v806 #trueSuccessor: v580 #falseSuccessor: v582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v84|QWORD * 4], input: v72|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v84|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B81 -> B82 falseDestination: B81 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v577 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v577 #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
v580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j791 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v585 
values: j407 j802 
=== Succesors ===
=== Usages ===
v1007 j796 j785 v809 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: j407 j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v584 v586 
=== Succesors ===
next: v604 
=== Usages ===
j791 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v584 v586 #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j808 
y: j791 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j808 y: j791  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v809 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v602 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v809 #trueSuccessor: v603 #falseSuccessor: v602  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
result [v83|QWORD[.] + v86|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j791 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
value: v916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1007 value: v916 stateAfter: - lastLocationAccess: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j796 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j791 
y: j734 
=== Succesors ===
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j791 y: j734  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v86|QWORD * 4], input: v71|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j785 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v596 
values: j796 j791 
=== Succesors ===
=== Usages ===
v1006 j790 j779 v812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v596 values: j796 j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v595 v607 
=== Succesors ===
next: v610 
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v595 v607 #next: v610  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j811 
y: j785 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j811 y: j785  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v812 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v812 #trueSuccessor: v609 #falseSuccessor: v608  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
result [v83|QWORD[.] + v88|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j785 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
value: v915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1006 value: v915 stateAfter: - lastLocationAccess: - #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid j790 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j785 
y: j744 
=== Succesors ===
=== Usages ===
j779 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j785 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v88|QWORD * 4], input: v70|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v88|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j779 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v599 
values: j790 j785 
=== Succesors ===
=== Usages ===
v1005 v814 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v599 values: j790 j785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v598 v613 
=== Succesors ===
next: v616 
=== Usages ===
j779 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v598 v613 #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j244 
y: j779 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j244 y: j779  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v615 #falseSuccessor: v614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
result [v83|QWORD[.] + v90|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j779 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1005 value: i8 stateAfter: - lastLocationAccess: - #next: v601  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
v898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v83|QWORD[.] + v90|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B77" "B91" "B90" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v588 v601 v619 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v588 v601 v619 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.from
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:308) [bci: 70]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i956 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v971 value: i5 stateAfter: - lastLocationAccess: - #next: i956  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result [v82|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a955 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i956 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
=== Succesors ===
next: v212 
=== Usages ===
v212 
=== Predecessor ===
v200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v973 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.to
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 78]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: i956 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
i956 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: i956 stateAfter: - lastLocationAccess: - #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:230) [bci: 83]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v82|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B81" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v577 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v577  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B93 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid a355 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@39746881
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@39746881]
=== Inputs ===
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
result int[-51763|0xffffffffffff35cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51763
stableDimension: 0
stamp: i32 [-51763] ⇊00000000ffff35cd ⇈00000000ffff35cd
stampKind: i32
value: int[-51763|0xffffffffffff35cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@39746881] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51763|0xffffffffffff35cd], v92|QWORD[.]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid a350 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1610516575
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1610516575]
=== Inputs ===
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result int[-48923|0xffffffffffff40e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -48923
stableDimension: 0
stamp: i32 [-48923] ⇊00000000ffff40e5 ⇈00000000ffff40e5
stampKind: i32
value: int[-48923|0xffffffffffff40e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v947 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1610516575] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-48923|0xffffffffffff40e5], v93|QWORD[.]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" "B95" "B75" "B94" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i345 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-53003 - -48923] ⇊00000000ffff00c5 ⇈00000000ffff77fd
valueDescription: i32
=== Inputs ===
merge: v341 
values: i343 i349 i352 i354 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v341 values: i343 i349 i352 i354  <|@  <|@
f <@~|@floating>@ <|@
tid a346 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v341 
values: a344 a350 a344 a355 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v341 values: a344 a350 a344 a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v342 v348 v351 v353 
=== Succesors ===
next: v347 
=== Usages ===
i345 a346 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v342 v348 v351 v353 #next: v347  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 229
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?61 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i5 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i130 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483646] ⇈000000007ffffffe
=== Inputs ===
condition: v327 
trueValue: i5 
falseValue: i130 
=== Succesors ===
=== Usages ===
?61 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v327 trueValue: i5 falseValue: i130  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Matcher.reset()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 303
stackSize: 0
=== Inputs ===
outerFrameState: ?102 
values: a1 i328 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: a1 i328  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?61 
actionAndReason: i345 
speculation: a346 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?61 actionAndReason: i345 speculation: a346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v97|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17]
locals: v0|QWORD[.] v96|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:17, 79] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v522 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B97 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v685 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v685  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B98 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v631 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v631  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B99 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 182
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
reason: BoundsCheckException
speculation: Object[d.a@191256587]
stamp: void
=== Inputs ===
stateBefore: ?38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@191256587] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -46619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v98|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v11|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 55] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e614c22 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:219) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 46], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 47] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26497513822504587 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604795734932471884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = DEC v9|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v8|DWORD, v9|QWORD, v10|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD, v13|QWORD, v14|QWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL v12|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA [v18|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AND v19|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = ADD (x: v21|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v15|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v15|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v15|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v15|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = DEC v26|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = LEA [v25|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v34|QWORD[.] + v37|QWORD * 4], input: v104|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v34|QWORD[.] + v39|QWORD * 4], input: v102|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[.] + v41|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B14" "B28" "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = COMPRESSPOINTER (input: v25|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v43|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL v46|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = LEA [v47|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = AND v48|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v49|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = ADD (x: v50|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + v44|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + v44|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + v44|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + v44|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 12], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v46|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = DEC v55|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v63|QWORD * 4], input: v103|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v65|QWORD * 4], input: v101|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[.] + v67|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B36" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LEA [v25|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction J (address: [v73|QWORD[.] + v76|QWORD * 4], input: v110|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr   -1  <|@ instruction J (address: [v73|QWORD[.] + v78|QWORD * 4], input: v108|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v73|QWORD[.] + v80|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B52" "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B95" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD[.], y: v82|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v86|QWORD * 4], input: v109|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v88|QWORD * 4], input: v107|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v88|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v83|QWORD[.] + v90|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B77" "B91" "B90" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v82|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B92" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B67" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4598444987652996969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa], int[20|0x14], long[20|0x14], long[19|0x13]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B99 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B99" 
    successors "B19" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v34|QWORD[.] + v35|QWORD * 4], input: v106|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B81" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B93 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B93" 
    successors "B82" "B93" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v84|QWORD * 4], input: v111|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v84|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B81 -> B82 falseDestination: B81 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B98 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B98" 
    successors "B41" "B98" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v61|QWORD * 4], input: v105|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v61|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B97 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B97" 
    successors "B57" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v73|QWORD[.] + v74|QWORD * 4], input: v112|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v74|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v100|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v11|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v99|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v46|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@39746881] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51763|0xffffffffffff35cd], v92|QWORD[.]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" "B95" "B75" "B94" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v97|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17]
locals: v0|QWORD[.] v96|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:17, 79] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1610516575] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-48923|0xffffffffffff40e5], v93|QWORD[.]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53003|0xffffffffffff30f5], v113|QWORD[.]] destination: B75 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@191256587] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -46619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v98|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v11|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 55] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51467|0xffffffffffff36f5], v114|QWORD[.]] destination: B72 -> B96 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: invokevirtual #15         // reset:()java.util.regex.Matcher
    82: pop           
    83: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e614c22 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:219) [bci: 0]
locals: r13|QWORD[.] Object[null] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [r13|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction MOV (x: [r13|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   20  <|@ instruction MOV [r13|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [r13|QWORD[.] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   24  <|@ instruction MOVB (x: [r13|QWORD[.] + 46], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   26  <|@ instruction MOVB [r13|QWORD[.] + 47] y: 1 size: BYTE <|@ <|@
      nr   28  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction MOV (x: [r13|QWORD[.] + 48], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   34  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   36  <|@ instruction MOVB (x: [rdx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   38  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r13|QWORD[.] + 56], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP rsi|DWORD y: 10 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.26497513822504587 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604795734932471884
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rdx|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   94  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   96  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r9|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr  104  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr  108  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  134  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction r11|QWORD[.] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  178  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  182  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  184  <|@ instruction r9|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  186  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  202  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  236  <|@ instruction CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  248  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  256  <|@ instruction CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  268  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP (x: rdx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction MOV (x: [rsi|QWORD[.] + rdx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  294  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B14" "B28" "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction MOV (x: [r13|QWORD[.] + 52], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  306  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOV [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  314  <|@ instruction CMP rbp|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = SHL rbp|DWORD y: 2 size: DWORD <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  330  <|@ instruction r14|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction CMP (x: r14|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction MOV (x: [r15|QWORD + 96], y: r14|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  358  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  362  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  368  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction r14|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  420  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  422  <|@ instruction r8|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  426  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rbx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  476  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  488  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  496  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  508  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  510  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  516  <|@ instruction CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  530  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B36" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  538  <|@ instruction MOV (x: [r13|QWORD[.] + 60], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  540  <|@ instruction rdi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  544  <|@ instruction CMP stack:52|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction rbx|QWORD[.] = LEA [rdi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  560  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  594  <|@ instruction CMP (x: rdi|QWORD, y: stack:72|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr  606  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  608  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  614  <|@ instruction CMP (x: rdi|QWORD, y: stack:80|QWORD) size: QWORD <|@ <|@
      nr  616  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction xmm0|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr  626  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  628  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  634  <|@ instruction CMP (x: rdi|QWORD, y: stack:88|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction MOV [rbx|QWORD[.] + rdi|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B52" "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B95" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  700  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  764  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr  776  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  778  <|@ instruction r9|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  780  <|@ instruction rdi|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  786  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction xmm0|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr  798  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  800  <|@ instruction r8|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  808  <|@ instruction CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction MOV [rbx|QWORD[.] + rdi|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B77" "B91" "B90" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  194  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B14 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B92" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B77 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B36 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B67" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B52 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4598444987652996969
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[19|0x13] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = MOVE input: int[20|0x14] <|@ <|@
      nr   54  <|@ instruction stack:36|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B99 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B99" 
    successors "B19" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  224  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  226  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  284  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr  744  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B81" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B93 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B93" 
    successors "B82" "B93" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  750  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B81 -> B82 falseDestination: B81 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B98 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B98" 
    successors "B41" "B98" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  464  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B97 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B97" 
    successors "B57" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  582  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  584  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  168  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [r13:0, stack:48, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:36|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: r13|QWORD[.] stack:32|QWORD[.] stack:48|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  406  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  410  <|@ instruction r14|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ st <@st|@reference-map: [r13:0, stack:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 68]
locals: r13|QWORD[.] stack:32|QWORD[.] - stack:36|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@39746881] <|@ <|@
      nr  840  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction r10|DWORD = MOVE input: int[-51763|0xffffffffffff35cd] <|@ <|@
      nr  844  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" "B95" "B75" "B94" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  862  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  872  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17]
locals: r13|QWORD[.] rdx|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:17, 79] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1610516575] <|@ <|@
      nr  852  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r10|DWORD = MOVE input: int[-48923|0xffffffffffff40e5] <|@ <|@
      nr  856  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698] <|@ <|@
      nr  708  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-53003|0xffffffffffff30f5] <|@ <|@
      nr  712  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B75 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@191256587] <|@ <|@
      nr  894  <|@ instruction MOV [r15|QWORD + 668] y: -46619 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: r11|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: r13|QWORD[.] r14|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 55] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698] <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-51467|0xffffffffffff36f5] <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B72 -> B96 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: invokevirtual #15         // reset:()java.util.regex.Matcher
    82: pop           
    83: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e614c22 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:219) [bci: 0]
locals: r13|QWORD[.] Object[null] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV [r13|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   18  <|@ instruction MOV (x: [r13|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   20  <|@ instruction MOV [r13|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [r13|QWORD[.] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   24  <|@ instruction MOVB (x: [r13|QWORD[.] + 46], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   26  <|@ instruction MOVB [r13|QWORD[.] + 47] y: 1 size: BYTE <|@ <|@
      nr   28  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction MOV (x: [r13|QWORD[.] + 48], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   34  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   36  <|@ instruction MOVB (x: [rdx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   38  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [r13|QWORD[.] + 56], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP rsi|DWORD y: 10 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.26497513822504587 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604795734932471884
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rdx|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B3 -> B7 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   94  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   96  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r9|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr  104  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr  106  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr  108  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  134  <|@ instruction MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction r11|QWORD[.] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B29" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  178  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  182  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  184  <|@ instruction r9|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  186  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B29 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  202  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B23" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  236  <|@ instruction CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  248  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  256  <|@ instruction CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  268  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP (x: rdx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction MOV (x: [rsi|QWORD[.] + rdx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B13" "B28" "B26" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  194  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction MOV (x: [r13|QWORD[.] + 52], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  306  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOV [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  314  <|@ instruction CMP rbp|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = SHL rbp|DWORD y: 2 size: DWORD <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  330  <|@ instruction r14|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction CMP (x: r14|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction MOV (x: [r15|QWORD + 96], y: r14|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  358  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  360  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  362  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  368  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction r14|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B51" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  420  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  422  <|@ instruction r8|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  424  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  426  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B51 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rbx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  476  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  488  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" 
    successors "B48" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  496  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  508  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  510  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B45" 
    successors "B51" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  516  <|@ instruction CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B51 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B35" "B50" "B48" 
    successors "B67" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  536  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  538  <|@ instruction MOV (x: [r13|QWORD[.] + 60], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  540  <|@ instruction rdi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  544  <|@ instruction CMP stack:52|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B51 -> B67 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction rbx|QWORD[.] = LEA [rdi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  560  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B61" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  594  <|@ instruction CMP (x: rdi|QWORD, y: stack:72|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B61 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr  606  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  608  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B58" 
    successors "B64" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  614  <|@ instruction CMP (x: rdi|QWORD, y: stack:80|QWORD) size: QWORD <|@ <|@
      nr  616  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B64 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction xmm0|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr  626  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  628  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" 
    successors "B67" "B66" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  634  <|@ instruction CMP (x: rdi|QWORD, y: stack:88|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction MOV [rbx|QWORD[.] + rdi|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B64" 
    successors "B71" "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B71 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B95" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B71 falseDestination: B69 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  700  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B92" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B92 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" "B81" 
    successors "B86" "B85" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  764  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B86 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr  776  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  778  <|@ instruction r9|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  780  <|@ instruction rdi|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B83" 
    successors "B89" "B88" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  786  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B89 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction xmm0|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr  798  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  800  <|@ instruction r8|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B86" 
    successors "B92" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  808  <|@ instruction CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B92 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction MOV [rbx|QWORD[.] + rdi|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B76" "B91" "B89" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4598444987652996969
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[19|0x13] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = MOVE input: int[20|0x14] <|@ <|@
      nr   54  <|@ instruction stack:36|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  222  <|@ instruction J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  224  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  226  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr  744  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B81" 
    successors "B83" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  750  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B81 -> B83 falseDestination: B81 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  462  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  464  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B42 falseDestination: B40 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" "B56" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  580  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  582  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  584  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B58 falseDestination: B56 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  168  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [r13:0, stack:48, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:36|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: r13|QWORD[.] stack:32|QWORD[.] stack:48|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  406  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  410  <|@ instruction r14|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ st <@st|@reference-map: [r13:0, stack:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 68]
locals: r13|QWORD[.] stack:32|QWORD[.] - stack:36|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@39746881] <|@ <|@
      nr  840  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction r10|DWORD = MOVE input: int[-51763|0xffffffffffff35cd] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" "B95" "B75" "B94" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  872  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17]
locals: r13|QWORD[.] rdx|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:17, 79] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1610516575] <|@ <|@
      nr  852  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r10|DWORD = MOVE input: int[-48923|0xffffffffffff40e5] <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698] <|@ <|@
      nr  708  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-53003|0xffffffffffff30f5] <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B75 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@191256587] <|@ <|@
      nr  894  <|@ instruction MOV [r15|QWORD + 668] y: -46619 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: r11|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: r13|QWORD[.] r14|QWORD[.] r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 55] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698] <|@ <|@
      nr  682  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-51467|0xffffffffffff36f5] <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B72 -> B96 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: invokevirtual #15         // reset:()java.util.regex.Matcher
    82: pop           
    83: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee4c8bf24c89742440418b76104589651841c7451cffffffff4589652041c74524ffffffff458965284588652e41c6452f01498bd648c1ea0341895530498bd548c1ea0949ba00e01b170100000046882412488bd148c1ea034189553883fe0a0f8c740300008bd6d1e24c63da4d8bc349ffc88974243c83fa010f8c090000004d3bd80f86d70400004d8b5f604d8b477081faffffff000f83e4030000448bca41c1e102458d49174183e1f84d63c9498bd94903db493bd80f87c303000049895f60430f188419c0000000430f18841900010000430f18841940010000430f188419800100004189530c49c7030100000041c74308addeadde498bc348894c2430448bf24963f64c8bd649ffca4c8d5efe4c8d46fc4c8d4ef84183fe010f8c4e000000488d70104d85c90f8dca02000048c7c200000000493bd00f8f0d000000c5f9efc0c5fa7f0496488d5204493bd30f8f0e000000c5f9efc0c4e1f97e0496488d5202493bd20f8f040000004489249648bb00e01b1701000000488b7c2440488bf048c1ee0341897534498bf548c1ee094488241e498b7760498b57708b6f1481fdffffff000f83fc020000448974242c8bcdc1e1028d491783e1f84863c94c8bf14c03f64c3bf20f87160300004d8977600f188431c00000000f188431000100000f188431400100000f18843180010000896e0c48c70601000000c74608addeadde448bf54c894c24204c894424184c895c24104c8954240848890424488bc64d63d64d8bda49ffcb4d8d42fe4d8d4afc498d4af84183fe010f8c4e000000488d58104885c90f8df301000048c7c700000000493bf90f8f0d000000c5f9efc0c5fa7f04bb488d7f04493bf80f8f0e000000c5f9efc0c4e1f97e04bb488d7f02493bfb0f8f04000000448924bb48bb00e01b1701000000488bf848c1ef0341897d3c498bfd48c1ef094488241f837c242c010f8c60000000488b542420488b3c24488d5f104885d20f8d9101000048c7c700000000483b7c24180f8f0d000000c5f976c0c5fa7f04bb488d7f04483b7c24100f8f0e000000c5f976c0c4e1f97e04bb488d7f02483b7c24080f8f07000000c704bbffffffff4183fe010f8c090000004d3bd30f86090200004c8b5424304d85d20f844f02000041817a08addeadde0f85b6010000458b520c4585d20f84f50100004183fe010f8c57000000488d58104885c90f8db400000048c7c700000000493bf90f8f10000000c5f976c0c5fa7f04bb4c8d4f04498bf9493bf80f8f11000000c5f976c0c4e1f97e04bb4c8d4702498bf8493bfb0f8f07000000c704bbffffffff4589650c468b14d50c00000045895510488b6c24504883c458850500000000c5f877c349c7c01300000049c7c314000000ba14000000c744243c0a000000e97dfcffffc5f9efc048c7c200000000660f1f840000000000c5fe7f0496488d5208493bd17ef2e916fdffffc5fd76c048c7c7000000006690c5fe7f04bb488d7f08483bf97ef2e933ffffffc5f9efc048c7c7000000006690c5fe7f04bb488d7f08483bf97ef2e9f4fdffffc5fd76c048c7c7000000006690c5fe7f04bb488d7f08483bfa7ef2e956feffff48894c243049bbaddeaddeaddeadde498bf3448bdab900000000458bf3e80000000090e95bfcffff4c894c24204c894424184c895c24104c8954240848890424448974242c48beaddeaddeaddeadde8bd5b900000000448bf5e80000000090e93dfdffff4c894c24204c894424184c895c24104c8954240848890424ebc749baaddeaddeaddeadde4d8bda41bacd35ffff8b54242c85d241b800000000410f4cd04589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bae540ffffebc749baaddeaddeaddeadde4d8bda41baf530ffffebb2448b5c243c4c8bd149b8addeaddeaddeadde41c7879c020000e549ffff4d8987a8020000e8000000009049baaddeaddeaddeadde4d8bda41baf536ffffe970ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e614c22 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 59 12 rsi|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 59 [rcx:0, r13:0, r14:0, stack:64]at java.util.regex.Matcher.<init>(Matcher.java:219) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3 
     locals:  |r13|QWORD[.]  |Object[null]  |rcx|QWORD[.]  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 14 MOV (x: [r13|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 67 16 MOV [r13|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 75 18 MOV (x: [r13|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 79 20 MOV [r13|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 87 22 MOV (x: [r13|QWORD[.] + 40], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 91 24 MOVB (x: [r13|QWORD[.] + 46], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 95 26 MOVB [r13|QWORD[.] + 47] y: 1 size: BYTE  <||@
  Comment 100 28 rdx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3  <||@
  Comment 107 30 MOV (x: [r13|QWORD[.] + 48], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 111 32 rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 118 34 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 128 36 MOVB (x: [rdx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 132 38 rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3  <||@
  Comment 139 40 MOV (x: [r13|QWORD[.] + 56], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 143 42 CMP rsi|DWORD y: 10 size: DWORD  <||@
  Comment 146 44 BRANCH trueDestinationProbability: 0.26497513822504587 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 152 block B2 null  <||@
  Comment 152 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 60 rdx|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 156 62 r11|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 159 64 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 165 66 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 169 68 JUMP ~[] destination: B2 -> B3  <||@
  Comment 169 block B3 null  <||@
  Comment 169 70 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 169 72 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 172 74 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B3 -> B7 falseDestination: B3 -> B5  <||@
  Comment 178 block B5 null  <||@
  Comment 178 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 178 82 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 181 84 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B100  <||@
  Comment 187 block B7 null  <||@
  Comment 187 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 92 r11|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 191 94 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 195 96 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 201 98 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 207 block B8 null  <||@
  Comment 207 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 102 r9|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 214 104 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 218 106 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 222 108 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 225 110 rbx|QWORD = ADD (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 231 112 CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 234 114 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 240 block B10 null  <||@
  Comment 240 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 124 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 244 126 AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 192] instr: 0  <||@
  Comment 253 128 AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 256] instr: 0  <||@
  Comment 262 130 AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 320] instr: 0  <||@
  Comment 271 132 AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 384] instr: 0  <||@
  Comment 280 134 MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 284 136 MOV [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 291 138 MOV [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 291 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 299 140 r11|QWORD[.] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 299 142 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 302 144 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 307 146 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 310 148 JUMP ~[] destination: B10 -> B13  <||@
  Comment 310 block B13 null  <||@
  Comment 310 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 310 176 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 313 178 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 319 180 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 323 182 r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 327 184 r9|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 331 186 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 335 188 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B29 falseDestination: B13 -> B15  <||@
  Comment 341 block B15 null  <||@
  Comment 341 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 200 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 345 202 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 348 204 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 354 block B16 null  <||@
  Comment 354 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 354 208 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 361 210 JUMP ~[] destination: B16 -> B20  <||@
  Comment 361 block B20 null  <||@
  Comment 361 234 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 361 236 CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 364 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 370 block B22 null  <||@
  Comment 370 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 246 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 374 248 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 379 250 rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 383 252 JUMP ~[] destination: B22 -> B23  <||@
  Comment 383 block B23 null  <||@
  Comment 383 254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 383 256 CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 386 258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 392 block B25 null  <||@
  Comment 392 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 266 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 396 268 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 402 270 rdx|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 406 272 JUMP ~[] destination: B25 -> B26  <||@
  Comment 406 block B26 null  <||@
  Comment 406 274 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 406 276 CMP (x: rdx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 409 278 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 415 block B28 null  <||@
  Comment 415 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 290 MOV (x: [rsi|QWORD[.] + rdx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 419 296 JUMP ~[] destination: B28 -> B29  <||@
  Comment 419 block B29 null  <||@
  Comment 419 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 419 192 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 429 194 rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 434 300 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3  <||@
  Comment 441 302 MOV (x: [r13|QWORD[.] + 52], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 445 304 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 452 306 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 456 308 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 460 310 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 464 312 rbp|DWORD = MOV [rdi|QWORD[.] + 20] size: DWORD  <||@
  Comment 467 314 CMP rbp|DWORD y: 16777215 size: DWORD  <||@
  Comment 473 316 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33  <||@
  Comment 479 block B30 null  <||@
  Comment 479 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 320 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 484 322 rcx|DWORD = SHL rbp|DWORD y: 2 size: DWORD  <||@
  Comment 489 324 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 492 326 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 495 328 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 498 330 r14|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 504 332 CMP (x: r14|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 507 334 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 513 block B32 null  <||@
  Comment 513 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 352 MOV (x: [r15|QWORD + 96], y: r14|QWORD) size: QWORD  <||@
  Comment 517 354 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 525 356 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 533 358 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 541 360 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 549 362 MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 552 364 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 559 366 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 559 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 566 368 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 566 370 r14|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 569 372 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 574 374 stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 579 376 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 584 378 stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 589 380 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 593 382 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 596 384 JUMP ~[] destination: B32 -> B35  <||@
  Comment 596 block B35 null  <||@
  Comment 596 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 596 418 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 599 420 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 605 422 r8|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 609 424 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 613 426 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 617 428 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 621 430 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B51 falseDestination: B35 -> B37  <||@
  Comment 627 block B37 null  <||@
  Comment 627 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 627 440 rbx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 631 442 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 634 444 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 640 block B38 null  <||@
  Comment 640 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 448 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 647 450 JUMP ~[] destination: B38 -> B42  <||@
  Comment 647 block B42 null  <||@
  Comment 647 474 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 647 476 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 650 478 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 656 block B44 null  <||@
  Comment 656 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 486 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 660 488 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 665 490 rdi|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 669 492 JUMP ~[] destination: B44 -> B45  <||@
  Comment 669 block B45 null  <||@
  Comment 669 494 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 669 496 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 672 498 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47  <||@
  Comment 678 block B47 null  <||@
  Comment 678 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 506 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 682 508 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 688 510 rdi|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 692 512 JUMP ~[] destination: B47 -> B48  <||@
  Comment 692 block B48 null  <||@
  Comment 692 514 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 692 516 CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 695 518 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B51 falseDestination: B48 -> B50  <||@
  Comment 701 block B50 null  <||@
  Comment 701 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 701 528 MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 705 532 JUMP ~[] destination: B50 -> B51  <||@
  Comment 705 block B51 null  <||@
  Comment 705 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 705 434 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 715 536 rdi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3  <||@
  Comment 722 538 MOV (x: [r13|QWORD[.] + 60], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 726 540 rdi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 733 542 MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 737 544 CMP stack:52|DWORD y: 1 size: DWORD  <||@
  Comment 742 546 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B51 -> B67 falseDestination: B51 -> B53  <||@
  Comment 748 block B53 null  <||@
  Comment 748 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 748 554 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 753 556 rdi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 757 558 rbx|QWORD[.] = LEA [rdi|QWORD[.] + 16] size: QWORD  <||@
  Comment 761 560 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 764 562 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 770 block B54 null  <||@
  Comment 770 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 770 566 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 777 568 JUMP ~[] destination: B54 -> B58  <||@
  Comment 777 block B58 null  <||@
  Comment 777 592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 777 594 CMP (x: rdi|QWORD, y: stack:72|QWORD) size: QWORD  <||@
  Comment 782 596 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B61 falseDestination: B58 -> B60  <||@
  Comment 788 block B60 null  <||@
  Comment 788 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 604 xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1>  <||@
  Comment 792 606 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 797 608 rdi|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 801 610 JUMP ~[] destination: B60 -> B61  <||@
  Comment 801 block B61 null  <||@
  Comment 801 612 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 801 614 CMP (x: rdi|QWORD, y: stack:80|QWORD) size: QWORD  <||@
  Comment 806 616 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B64 falseDestination: B61 -> B63  <||@
  Comment 812 block B63 null  <||@
  Comment 812 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 812 624 xmm0|V64_DWORD = F nX: SIMD<-1,-1>  <||@
  Comment 816 626 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 822 628 rdi|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 826 630 JUMP ~[] destination: B63 -> B64  <||@
  Comment 826 block B64 null  <||@
  Comment 826 632 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 826 634 CMP (x: rdi|QWORD, y: stack:88|QWORD) size: QWORD  <||@
  Comment 831 636 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66  <||@
  Comment 837 block B66 null  <||@
  Comment 837 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 837 644 MOV [rbx|QWORD[.] + rdi|QWORD * 4] y: -1 size: DWORD  <||@
  Comment 844 646 JUMP ~[] destination: B66 -> B67  <||@
  Comment 844 block B67 null  <||@
  Comment 844 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 844 650 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 848 652 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B71 falseDestination: B67 -> B69  <||@
  Comment 854 block B69 null  <||@
  Comment 854 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 662 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 857 664 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B71 falseDestination: B69 -> B95  <||@
  Comment 863 block B71 null  <||@
  Comment 863 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 863 656 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 868 674 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 871 676 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 877 block B73 null  <||@
  Comment 877 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 692 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 877 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 885 694 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B94  <||@
  Comment 891 block B74 null  <||@
  Comment 891 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 891 698 r10|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 895 700 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 898 702 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 904 block B76 null  <||@
  Comment 904 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 904 718 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 908 720 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B92 falseDestination: B76 -> B78  <||@
  Comment 914 block B78 null  <||@
  Comment 914 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 728 rbx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 918 730 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 921 732 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 927 block B79 null  <||@
  Comment 927 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 736 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 934 738 JUMP ~[] destination: B79 -> B83  <||@
  Comment 934 block B83 null  <||@
  Comment 934 762 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 934 764 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 937 766 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B86 falseDestination: B83 -> B85  <||@
  Comment 943 block B85 null  <||@
  Comment 943 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 774 xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1>  <||@
  Comment 947 776 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 952 778 r9|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 956 780 rdi|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 959 782 JUMP ~[] destination: B85 -> B86  <||@
  Comment 959 block B86 null  <||@
  Comment 959 784 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 959 786 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 962 788 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B89 falseDestination: B86 -> B88  <||@
  Comment 968 block B88 null  <||@
  Comment 968 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 968 796 xmm0|V64_DWORD = F nX: SIMD<-1,-1>  <||@
  Comment 972 798 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 978 800 r8|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 982 802 rdi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 985 804 JUMP ~[] destination: B88 -> B89  <||@
  Comment 985 block B89 null  <||@
  Comment 985 806 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 985 808 CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 988 810 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B92 falseDestination: B89 -> B91  <||@
  Comment 994 block B91 null  <||@
  Comment 994 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 818 MOV [rbx|QWORD[.] + rdi|QWORD * 4] y: -1 size: DWORD  <||@
  Comment 1001 820 JUMP ~[] destination: B91 -> B92  <||@
  Comment 1001 block B92 null  <||@
  Comment 1001 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1001 824 MOV (x: [r13|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1005 826 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1013 828 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1017 830 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1026 12  <||@
  Comment 1036 block B1 null  <||@
  Comment 1036 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 48 r8|QWORD = MOVE input: long[19|0x13]  <||@
  Comment 1043 50 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1050 52 rdx|DWORD = MOVE input: int[20|0x14]  <||@
  Comment 1055 54 stack:36|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1063 56 JUMP ~[] destination: B1 -> B3  <||@
  Comment 1068 block B17 null  <||@
  Comment 1068 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 214 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1072 216 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1079 218 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1079 block B18 loop 0 depth 1 header:631|LoopBegin  <||@
  Comment 1079 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1088 222 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1093 224 rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 1097 226 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1100 228 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 1107 block B80 null  <||@
  Comment 1107 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1107 742 xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>  <||@
  Comment 1111 744 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1118 746 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1118 block B81 loop 3 depth 1 header:577|LoopBegin  <||@
  Comment 1118 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1120 750 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1125 752 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1129 754 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1132 756 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B81 -> B83 falseDestination: B81 -> B81  <||@
  Comment 1139 block B39 null  <||@
  Comment 1139 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1139 454 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1143 456 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1150 458 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1150 block B40 loop 1 depth 1 header:685|LoopBegin  <||@
  Comment 1150 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1152 462 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1157 464 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1161 466 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1164 468 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B42 falseDestination: B40 -> B40  <||@
  Comment 1171 block B55 null  <||@
  Comment 1171 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1171 572 xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>  <||@
  Comment 1175 574 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1182 576 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1182 block B56 loop 2 depth 1 header:522|LoopBegin  <||@
  Comment 1182 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1184 580 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1189 582 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1193 584 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1196 586 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B58 falseDestination: B56 -> B56  <||@
  Comment 1203 block B12 null  <||@
  Comment 1203 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 152 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 158 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1208 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1218 160 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1221 162 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1224 166 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1229 168 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1232 170 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55]  <||@
  Comment 1232 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1237 [r13:0, stack:48, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:36|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0             |1                  |2                  |3 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-   <||@
  Comment 1238 172 JUMP ~[] destination: B12 -> B13  <||@
  Comment 1243 block B33 null  <||@
  Comment 1243 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 388 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1248 390 stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1253 392 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1258 394 stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1263 396 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1267 398 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1272 400 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1272 block B34 null  <||@
  Comment 1272 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 404 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1272 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1282 406 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1284 408 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1289 410 r14|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1292 412 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 1292 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1297 [r13:0, stack:0, stack:48, stack:64]at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 68, duringCall: false, rethrow: false]
              |0             |1                  |2  |3              
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:36|DWORD   <||@
  Comment 1298 414 JUMP ~[] destination: B34 -> B35  <||@
  Comment 1303 block B31 null  <||@
  Comment 1303 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 338 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1308 340 stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1313 342 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1318 344 stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1323 346 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1327 348 JUMP ~[] destination: B31 -> B34  <||@
  Comment 1329 block B94 null  <||@
  Comment 1329 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1329 838 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@39746881]  <||@
  Comment 1329 {Object[d.a@39746881]}  <||@
  Comment 1339 840 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1342 842 r10|DWORD = MOVE input: int[-51763|0xffffffffffff35cd]  <||@
  Comment 1348 846 JUMP ~[] destination: B94 -> B96  <||@
  Comment 1348 block B96 null  <||@
  Comment 1348 860 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1348 686 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1352 862 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1354 864 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1360 866 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r8|DWORD) condition: <  <||@
  Comment 1364 868 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1371 870 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1378 872 DEOPT info [bci:17, 79]  <||@
  Comment 1378 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1383 [r13:0]at java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |rdx|DWORD 
  at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1384 block B95 null  <||@
  Comment 1384 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 850 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1610516575]  <||@
  Comment 1384 {Object[d.a@1610516575]}  <||@
  Comment 1394 852 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1397 854 r10|DWORD = MOVE input: int[-48923|0xffffffffffff40e5]  <||@
  Comment 1403 858 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1405 block B75 null  <||@
  Comment 1405 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1405 706 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698]  <||@
  Comment 1405 {Object[d.a@1094223698]}  <||@
  Comment 1415 708 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1418 710 r10|DWORD = MOVE input: int[-53003|0xffffffffffff30f5]  <||@
  Comment 1424 714 JUMP ~[] destination: B75 -> B96  <||@
  Comment 1426 block B100 null  <||@
  Comment 1426 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1426 888 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1431 890 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1434 892 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@191256587]  <||@
  Comment 1434 {Object[d.a@191256587]}  <||@
  Comment 1444 894 MOV [r15|QWORD + 668] y: -46619 size: DWORD  <||@
  Comment 1455 896 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1462 898 DEOPT info [bci:10, 55]  <||@
  Comment 1462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1467 [r10:0, r13:0, r14:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r11|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0             |1             |2             |3 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 1468 block B72 null  <||@
  Comment 1468 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1468 680 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698]  <||@
  Comment 1468 {Object[d.a@1094223698]}  <||@
  Comment 1478 682 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 684 r10|DWORD = MOVE input: int[-51467|0xffffffffffff36f5]  <||@
  Comment 1487 688 JUMP ~[] destination: B72 -> B96  <||@
  Comment 1492 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1492 4  <||@
  Comment 1498 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1498 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6535[java.util.regex.Matcher.<init>(Pattern, CharSequence)]"
  method "HotSpotCompilation-6535[java.util.regex.Matcher.<init>(Pattern, CharSequence)]"
  date 1527005196368
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106ae0600 448b560849c1e203493bc20f854f58d2ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee4c8bf24c89742440418b76104589651841c7451cffffffff4589652041c74524ffffffff458965284588652e41c6452f01498bd648c1ea0341895530498bd548c1ea0949ba00e01b170100000046882412488bd148c1ea034189553883fe0a0f8c740300008bd6d1e24c63da4d8bc349ffc88974243c83fa010f8c090000004d3bd80f86d70400004d8b5f604d8b477081faffffff000f83e4030000448bca41c1e102458d49174183e1f84d63c9498bd94903db493bd80f87c303000049895f60430f188419c0000000430f18841900010000430f18841940010000430f188419800100004189530c49c7030100000041c743086d0100f8498bc348894c2430448bf24963f64c8bd649ffca4c8d5efe4c8d46fc4c8d4ef84183fe010f8c4e000000488d70104d85c90f8dca02000048c7c200000000493bd00f8f0d000000c5f9efc0c5fa7f0496488d5204493bd30f8f0e000000c5f9efc0c4e1f97e0496488d5202493bd20f8f040000004489249648bb00e01b1701000000488b7c2440488bf048c1ee0341897534498bf548c1ee094488241e498b7760498b57708b6f1481fdffffff000f83fc020000448974242c8bcdc1e1028d491783e1f84863c94c8bf14c03f64c3bf20f87160300004d8977600f188431c00000000f188431000100000f188431400100000f18843180010000896e0c48c70601000000c746086d0100f8448bf54c894c24204c894424184c895c24104c8954240848890424488bc64d63d64d8bda49ffcb4d8d42fe4d8d4afc498d4af84183fe010f8c4e000000488d58104885c90f8df301000048c7c700000000493bf90f8f0d000000c5f9efc0c5fa7f04bb488d7f04493bf80f8f0e000000c5f9efc0c4e1f97e04bb488d7f02493bfb0f8f04000000448924bb48bb00e01b1701000000488bf848c1ef0341897d3c498bfd48c1ef094488241f837c242c010f8c60000000488b542420488b3c24488d5f104885d20f8d9101000048c7c700000000483b7c24180f8f0d000000c5f976c0c5fa7f04bb488d7f04483b7c24100f8f0e000000c5f976c0c4e1f97e04bb488d7f02483b7c24080f8f07000000c704bbffffffff4183fe010f8c090000004d3bd30f86090200004c8b5424304d85d20f844f02000041817a08da0200f80f85b6010000458b520c4585d20f84f50100004183fe010f8c57000000488d58104885c90f8db400000048c7c700000000493bf90f8f10000000c5f976c0c5fa7f04bb4c8d4f04498bf9493bf80f8f11000000c5f976c0c4e1f97e04bb4c8d4702498bf8493bfb0f8f07000000c704bbffffffff4589650c468b14d50c00000045895510488b6c24504883c4588505fee5dafdc5f877c349c7c01300000049c7c314000000ba14000000c744243c0a000000e97dfcffffc5f9efc048c7c200000000660f1f840000000000c5fe7f0496488d5208493bd17ef2e916fdffffc5fd76c048c7c7000000006690c5fe7f04bb488d7f08483bf97ef2e933ffffffc5f9efc048c7c7000000006690c5fe7f04bb488d7f08483bf97ef2e9f4fdffffc5fd76c048c7c7000000006690c5fe7f04bb488d7f08483bfa7ef2e956feffff48894c243049bb680b00c007000000498bf3448bdab900000000458bf3e80b634b0090e95bfcffff4c894c24204c894424184c895c24104c8954240848890424448974242c48be680b00c0070000008bd5b900000000448bf5e8cf624b0090e93dfdffff4c894c24204c894424184c895c24104c8954240848890424ebc749bad08768bc070000004d8bda41bacd35ffff8b54242c85d241b800000000410f4cd04589979c0200004d899fa8020000e8976ad2ff9049ba408768bc070000004d8bda41bae540ffffebc749baa08768bc070000004d8bda41baf530ffffebb2448b5c243c4c8bd149b8108768bc0700000041c7879c020000e549ffff4d8987a8020000e8436ad2ff9049baa08768bc070000004d8bda41baf536ffffe970ffffffe8479a160090e82169d2ff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e614c22 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 59 12 rsi|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 59 [rcx:0, r13:0, r14:0, stack:64]at java.util.regex.Matcher.<init>(Matcher.java:219) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3 
     locals:  |r13|QWORD[.]  |Object[null]  |rcx|QWORD[.]  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 14 MOV (x: [r13|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 67 16 MOV [r13|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 75 18 MOV (x: [r13|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 79 20 MOV [r13|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 87 22 MOV (x: [r13|QWORD[.] + 40], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 91 24 MOVB (x: [r13|QWORD[.] + 46], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 95 26 MOVB [r13|QWORD[.] + 47] y: 1 size: BYTE  <||@
  Comment 100 28 rdx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3  <||@
  Comment 107 30 MOV (x: [r13|QWORD[.] + 48], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 111 32 rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 118 34 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 128 36 MOVB (x: [rdx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 132 38 rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3  <||@
  Comment 139 40 MOV (x: [r13|QWORD[.] + 56], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 143 42 CMP rsi|DWORD y: 10 size: DWORD  <||@
  Comment 146 44 BRANCH trueDestinationProbability: 0.26497513822504587 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 152 block B2 null  <||@
  Comment 152 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 60 rdx|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 156 62 r11|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 159 64 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 165 66 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 169 68 JUMP ~[] destination: B2 -> B3  <||@
  Comment 169 block B3 null  <||@
  Comment 169 70 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 169 72 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 172 74 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B3 -> B7 falseDestination: B3 -> B5  <||@
  Comment 178 block B5 null  <||@
  Comment 178 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 178 82 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 181 84 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B100  <||@
  Comment 187 block B7 null  <||@
  Comment 187 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 92 r11|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 191 94 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 195 96 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 201 98 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 207 block B8 null  <||@
  Comment 207 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 102 r9|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 214 104 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 218 106 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 222 108 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 225 110 rbx|QWORD = ADD (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 231 112 CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 234 114 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 240 block B10 null  <||@
  Comment 240 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 124 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 244 126 AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 192] instr: 0  <||@
  Comment 253 128 AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 256] instr: 0  <||@
  Comment 262 130 AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 320] instr: 0  <||@
  Comment 271 132 AMD64PREFETCH ~[r9|QWORD + r11|QWORD * 1 + 384] instr: 0  <||@
  Comment 280 134 MOV (x: [r11|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 284 136 MOV [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 291 138 MOV [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 291 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 299 140 r11|QWORD[.] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 299 142 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 302 144 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 307 146 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 310 148 JUMP ~[] destination: B10 -> B13  <||@
  Comment 310 block B13 null  <||@
  Comment 310 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 310 176 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 313 178 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 319 180 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 323 182 r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 327 184 r9|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 331 186 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 335 188 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B29 falseDestination: B13 -> B15  <||@
  Comment 341 block B15 null  <||@
  Comment 341 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 200 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 345 202 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 348 204 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 354 block B16 null  <||@
  Comment 354 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 354 208 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 361 210 JUMP ~[] destination: B16 -> B20  <||@
  Comment 361 block B20 null  <||@
  Comment 361 234 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 361 236 CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 364 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 370 block B22 null  <||@
  Comment 370 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 246 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 374 248 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 379 250 rdx|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 383 252 JUMP ~[] destination: B22 -> B23  <||@
  Comment 383 block B23 null  <||@
  Comment 383 254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 383 256 CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 386 258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 392 block B25 null  <||@
  Comment 392 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 266 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 396 268 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 402 270 rdx|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 406 272 JUMP ~[] destination: B25 -> B26  <||@
  Comment 406 block B26 null  <||@
  Comment 406 274 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 406 276 CMP (x: rdx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 409 278 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 415 block B28 null  <||@
  Comment 415 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 290 MOV (x: [rsi|QWORD[.] + rdx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 419 296 JUMP ~[] destination: B28 -> B29  <||@
  Comment 419 block B29 null  <||@
  Comment 419 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 419 192 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 429 194 rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 434 300 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3  <||@
  Comment 441 302 MOV (x: [r13|QWORD[.] + 52], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 445 304 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 452 306 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 456 308 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 460 310 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 464 312 rbp|DWORD = MOV [rdi|QWORD[.] + 20] size: DWORD  <||@
  Comment 467 314 CMP rbp|DWORD y: 16777215 size: DWORD  <||@
  Comment 473 316 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33  <||@
  Comment 479 block B30 null  <||@
  Comment 479 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 320 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 484 322 rcx|DWORD = SHL rbp|DWORD y: 2 size: DWORD  <||@
  Comment 489 324 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 492 326 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 495 328 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 498 330 r14|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 504 332 CMP (x: r14|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 507 334 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 513 block B32 null  <||@
  Comment 513 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 352 MOV (x: [r15|QWORD + 96], y: r14|QWORD) size: QWORD  <||@
  Comment 517 354 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 525 356 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 533 358 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 541 360 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 549 362 MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 552 364 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 559 366 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 559 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 566 368 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 566 370 r14|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 569 372 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 574 374 stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 579 376 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 584 378 stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 589 380 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 593 382 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 596 384 JUMP ~[] destination: B32 -> B35  <||@
  Comment 596 block B35 null  <||@
  Comment 596 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 596 418 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 599 420 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 605 422 r8|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 609 424 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 613 426 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 617 428 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 621 430 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B51 falseDestination: B35 -> B37  <||@
  Comment 627 block B37 null  <||@
  Comment 627 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 627 440 rbx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 631 442 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 634 444 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 640 block B38 null  <||@
  Comment 640 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 448 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 647 450 JUMP ~[] destination: B38 -> B42  <||@
  Comment 647 block B42 null  <||@
  Comment 647 474 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 647 476 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 650 478 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 656 block B44 null  <||@
  Comment 656 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 486 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 660 488 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 665 490 rdi|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 669 492 JUMP ~[] destination: B44 -> B45  <||@
  Comment 669 block B45 null  <||@
  Comment 669 494 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 669 496 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 672 498 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47  <||@
  Comment 678 block B47 null  <||@
  Comment 678 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 506 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 682 508 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 688 510 rdi|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 692 512 JUMP ~[] destination: B47 -> B48  <||@
  Comment 692 block B48 null  <||@
  Comment 692 514 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 692 516 CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 695 518 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B51 falseDestination: B48 -> B50  <||@
  Comment 701 block B50 null  <||@
  Comment 701 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 701 528 MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 705 532 JUMP ~[] destination: B50 -> B51  <||@
  Comment 705 block B51 null  <||@
  Comment 705 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 705 434 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 715 536 rdi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@257681c1 encoding: base: 0 shift: 3  <||@
  Comment 722 538 MOV (x: [r13|QWORD[.] + 60], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 726 540 rdi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 733 542 MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 737 544 CMP stack:52|DWORD y: 1 size: DWORD  <||@
  Comment 742 546 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B51 -> B67 falseDestination: B51 -> B53  <||@
  Comment 748 block B53 null  <||@
  Comment 748 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 748 554 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 753 556 rdi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 757 558 rbx|QWORD[.] = LEA [rdi|QWORD[.] + 16] size: QWORD  <||@
  Comment 761 560 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 764 562 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 770 block B54 null  <||@
  Comment 770 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 770 566 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 777 568 JUMP ~[] destination: B54 -> B58  <||@
  Comment 777 block B58 null  <||@
  Comment 777 592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 777 594 CMP (x: rdi|QWORD, y: stack:72|QWORD) size: QWORD  <||@
  Comment 782 596 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B61 falseDestination: B58 -> B60  <||@
  Comment 788 block B60 null  <||@
  Comment 788 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 604 xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1>  <||@
  Comment 792 606 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 797 608 rdi|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 801 610 JUMP ~[] destination: B60 -> B61  <||@
  Comment 801 block B61 null  <||@
  Comment 801 612 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 801 614 CMP (x: rdi|QWORD, y: stack:80|QWORD) size: QWORD  <||@
  Comment 806 616 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B64 falseDestination: B61 -> B63  <||@
  Comment 812 block B63 null  <||@
  Comment 812 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 812 624 xmm0|V64_DWORD = F nX: SIMD<-1,-1>  <||@
  Comment 816 626 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 822 628 rdi|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 826 630 JUMP ~[] destination: B63 -> B64  <||@
  Comment 826 block B64 null  <||@
  Comment 826 632 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 826 634 CMP (x: rdi|QWORD, y: stack:88|QWORD) size: QWORD  <||@
  Comment 831 636 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66  <||@
  Comment 837 block B66 null  <||@
  Comment 837 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 837 644 MOV [rbx|QWORD[.] + rdi|QWORD * 4] y: -1 size: DWORD  <||@
  Comment 844 646 JUMP ~[] destination: B66 -> B67  <||@
  Comment 844 block B67 null  <||@
  Comment 844 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 844 650 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 848 652 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B71 falseDestination: B67 -> B69  <||@
  Comment 854 block B69 null  <||@
  Comment 854 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 662 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 857 664 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B71 falseDestination: B69 -> B95  <||@
  Comment 863 block B71 null  <||@
  Comment 863 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 863 656 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 868 674 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 871 676 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 877 block B73 null  <||@
  Comment 877 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 692 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 877 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 885 694 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B94  <||@
  Comment 891 block B74 null  <||@
  Comment 891 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 891 698 r10|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 895 700 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 898 702 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 904 block B76 null  <||@
  Comment 904 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 904 718 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 908 720 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B76 -> B92 falseDestination: B76 -> B78  <||@
  Comment 914 block B78 null  <||@
  Comment 914 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 728 rbx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 918 730 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 921 732 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 927 block B79 null  <||@
  Comment 927 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 736 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 934 738 JUMP ~[] destination: B79 -> B83  <||@
  Comment 934 block B83 null  <||@
  Comment 934 762 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 934 764 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 937 766 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B86 falseDestination: B83 -> B85  <||@
  Comment 943 block B85 null  <||@
  Comment 943 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 774 xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1>  <||@
  Comment 947 776 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 952 778 r9|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 956 780 rdi|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 959 782 JUMP ~[] destination: B85 -> B86  <||@
  Comment 959 block B86 null  <||@
  Comment 959 784 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 959 786 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 962 788 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B89 falseDestination: B86 -> B88  <||@
  Comment 968 block B88 null  <||@
  Comment 968 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 968 796 xmm0|V64_DWORD = F nX: SIMD<-1,-1>  <||@
  Comment 972 798 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 978 800 r8|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 982 802 rdi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 985 804 JUMP ~[] destination: B88 -> B89  <||@
  Comment 985 block B89 null  <||@
  Comment 985 806 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 985 808 CMP (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 988 810 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B92 falseDestination: B89 -> B91  <||@
  Comment 994 block B91 null  <||@
  Comment 994 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 818 MOV [rbx|QWORD[.] + rdi|QWORD * 4] y: -1 size: DWORD  <||@
  Comment 1001 820 JUMP ~[] destination: B91 -> B92  <||@
  Comment 1001 block B92 null  <||@
  Comment 1001 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1001 824 MOV (x: [r13|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1005 826 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1013 828 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1017 830 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1026 12  <||@
  Comment 1036 block B1 null  <||@
  Comment 1036 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 48 r8|QWORD = MOVE input: long[19|0x13]  <||@
  Comment 1043 50 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1050 52 rdx|DWORD = MOVE input: int[20|0x14]  <||@
  Comment 1055 54 stack:36|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1063 56 JUMP ~[] destination: B1 -> B3  <||@
  Comment 1068 block B17 null  <||@
  Comment 1068 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 214 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1072 216 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1079 218 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1079 block B18 loop 0 depth 1 header:631|LoopBegin  <||@
  Comment 1079 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1088 222 J (address: [rsi|QWORD[.] + rdx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1093 224 rdx|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 1097 226 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1100 228 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 1107 block B80 null  <||@
  Comment 1107 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1107 742 xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>  <||@
  Comment 1111 744 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1118 746 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1118 block B81 loop 3 depth 1 header:577|LoopBegin  <||@
  Comment 1118 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1120 750 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1125 752 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1129 754 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1132 756 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B81 -> B83 falseDestination: B81 -> B81  <||@
  Comment 1139 block B39 null  <||@
  Comment 1139 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1139 454 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1143 456 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1150 458 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1150 block B40 loop 1 depth 1 header:685|LoopBegin  <||@
  Comment 1150 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1152 462 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1157 464 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1161 466 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1164 468 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B42 falseDestination: B40 -> B40  <||@
  Comment 1171 block B55 null  <||@
  Comment 1171 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1171 572 xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>  <||@
  Comment 1175 574 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1182 576 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1182 block B56 loop 2 depth 1 header:522|LoopBegin  <||@
  Comment 1182 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1184 580 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1189 582 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1193 584 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1196 586 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B58 falseDestination: B56 -> B56  <||@
  Comment 1203 block B12 null  <||@
  Comment 1203 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 152 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 158 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1208 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1218 160 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1221 162 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1224 166 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1229 168 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1232 170 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55]  <||@
  Comment 1232 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1237 [r13:0, stack:48, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:36|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0             |1                  |2                  |3 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-   <||@
  Comment 1238 172 JUMP ~[] destination: B12 -> B13  <||@
  Comment 1243 block B33 null  <||@
  Comment 1243 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 388 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1248 390 stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1253 392 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1258 394 stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1263 396 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1267 398 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1272 400 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1272 block B34 null  <||@
  Comment 1272 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 404 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1272 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1282 406 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1284 408 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1289 410 r14|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1292 412 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 1292 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1297 [r13:0, stack:0, stack:48, stack:64]at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 68, duringCall: false, rethrow: false]
              |0             |1                  |2  |3              
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:36|DWORD   <||@
  Comment 1298 414 JUMP ~[] destination: B34 -> B35  <||@
  Comment 1303 block B31 null  <||@
  Comment 1303 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 338 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1308 340 stack:72|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1313 342 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1318 344 stack:88|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1323 346 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1327 348 JUMP ~[] destination: B31 -> B34  <||@
  Comment 1329 block B94 null  <||@
  Comment 1329 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1329 838 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@39746881]  <||@
  Comment 1329 {Object[d.a@39746881]}  <||@
  Comment 1339 840 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1342 842 r10|DWORD = MOVE input: int[-51763|0xffffffffffff35cd]  <||@
  Comment 1348 846 JUMP ~[] destination: B94 -> B96  <||@
  Comment 1348 block B96 null  <||@
  Comment 1348 860 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1348 686 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1352 862 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1354 864 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1360 866 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r8|DWORD) condition: <  <||@
  Comment 1364 868 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1371 870 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1378 872 DEOPT info [bci:17, 79]  <||@
  Comment 1378 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1383 [r13:0]at java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |rdx|DWORD 
  at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1384 block B95 null  <||@
  Comment 1384 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 850 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1610516575]  <||@
  Comment 1384 {Object[d.a@1610516575]}  <||@
  Comment 1394 852 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1397 854 r10|DWORD = MOVE input: int[-48923|0xffffffffffff40e5]  <||@
  Comment 1403 858 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1405 block B75 null  <||@
  Comment 1405 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1405 706 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698]  <||@
  Comment 1405 {Object[d.a@1094223698]}  <||@
  Comment 1415 708 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1418 710 r10|DWORD = MOVE input: int[-53003|0xffffffffffff30f5]  <||@
  Comment 1424 714 JUMP ~[] destination: B75 -> B96  <||@
  Comment 1426 block B100 null  <||@
  Comment 1426 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1426 888 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1431 890 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1434 892 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@191256587]  <||@
  Comment 1434 {Object[d.a@191256587]}  <||@
  Comment 1444 894 MOV [r15|QWORD + 668] y: -46619 size: DWORD  <||@
  Comment 1455 896 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1462 898 DEOPT info [bci:10, 55]  <||@
  Comment 1462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1467 [r10:0, r13:0, r14:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r11|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0             |1             |2             |3 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r10|QWORD[.]  |-   <||@
  Comment 1468 block B72 null  <||@
  Comment 1468 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1468 680 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1094223698]  <||@
  Comment 1468 {Object[d.a@1094223698]}  <||@
  Comment 1478 682 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 684 r10|DWORD = MOVE input: int[-51467|0xffffffffffff36f5]  <||@
  Comment 1487 688 JUMP ~[] destination: B72 -> B96  <||@
  Comment 1492 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1492 4  <||@
  Comment 1498 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1498 5  <||@
  HexCodeFile>>> <|@
end_nmethod
