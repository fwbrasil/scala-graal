begin_compilation
  name " HotSpotCompilation-9677[java.util.BitSet.clone()]"
  method "HotSpotCompilation-9677[java.util.BitSet.clone()]"
  date 1527005212486
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i230 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i230  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v234 v236 v235 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.sizeIsSticky
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v234 
=== Succesors ===
next: v68 
=== Usages ===
i33 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v234 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i230 
=== Succesors ===
=== Usages ===
v5 ?27 i78 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i230  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 a120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i4 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i33 y: i4  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.clone()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 1097
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v90 a120 i232 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
i230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid a87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i86 
speculation: a87 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i86 speculation: a87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a231 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a231  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
=== Succesors ===
next: i232 
=== Usages ===
a41 v237 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v236 #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a231 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v237 
=== Succesors ===
next: j99 
=== Usages ===
v146 j165 i96 v105 a120 
=== Predecessor ===
a231 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v237 #next: j99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j99 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j143 
=== Usages ===
v238 v239 
=== Predecessor ===
i232 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j143  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j99 
index: - 
=== Succesors ===
=== Usages ===
j143 v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j99 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
=== Succesors ===
next: j144 
=== Usages ===
j103 v240 v241 a119 v246 v242 v243 v244 v245 
=== Predecessor ===
j99 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v238 #next: j144  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j99 
index: - 
=== Succesors ===
=== Usages ===
j144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j99 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
=== Succesors ===
next: v108 
=== Usages ===
v109 
=== Predecessor ===
j143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i104 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i232 y: i104  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
j144 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v107 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i232 
y: i95 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i232 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i96 
y: i127 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i96 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i128 
y: i97 
=== Succesors ===
=== Usages ===
j102 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i128 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid j102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i98 
=== Succesors ===
=== Usages ===
j103 v242 v243 v244 v245 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i98  <|@  <|@
f <@~|@floating>@ <|@
tid j103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i64
=== Inputs ===
x: j102 
y: j143 
=== Succesors ===
=== Usages ===
v109 v145 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j102 y: j143  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j144 
y: j103 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j144 y: j103  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v114 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v114 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
value: j103 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 value: j103 stateAfter: - lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j102 
index: j143 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j102 index: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
address: v242 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v242 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j102 
index: j143 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j102 index: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
address: v243 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v243 #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j102 
index: j143 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j102 index: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
address: v244 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v244 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j102 
index: j143 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j102 index: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
address: v245 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v245 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
value: i232 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 value: i232 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
value: j94 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v241 value: j94 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: meta{HotSpotType<[J, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[J, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
value: v219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v246 value: v219 stateAfter: - lastLocationAccess: - #next: v118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j143 
=== Succesors ===
next: v121 
=== Usages ===
a124 
=== Predecessor ===
v118 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j143 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
a119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v110 v112 
=== Succesors ===
next: a120 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v112 #next: a120  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: meta{HotSpotType<[J, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[J, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a120 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v93 i232 i4 
=== Succesors ===
next: v123 
=== Usages ===
a124 
=== Predecessor ===
v111 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v93 i232 i4 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
a120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v122 
values: a119 a120 
=== Succesors ===
=== Usages ===
?58 a79 j163 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v122 values: a119 a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v121 v123 
=== Succesors ===
next: j159 
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v121 v123 #next: j159  <|@  <|@
f <@~|@floating>@ <|@
tid a41 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a231 
=== Succesors ===
=== Usages ===
?27 j159 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:107) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i64
=== Inputs ===
object: a41 
=== Succesors ===
next: j163 
=== Usages ===
v247 
=== Predecessor ===
v122 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a41 #next: j163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:107) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i64
=== Inputs ===
object: a124 
=== Succesors ===
next: v166 
=== Usages ===
v248 
=== Predecessor ===
j159 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a124 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j159 
index: - 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j163 
index: - 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j163 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j165 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:107) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i232 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: longDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:107) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v247 v248 j165 
=== Succesors ===
next: j171 
=== Usages ===
=== Predecessor ===
j163 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v247 v248 j165 #next: j171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j171 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j188 
=== Usages ===
v249 v250 
=== Predecessor ===
v166 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j188  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j171 
index: - 
=== Succesors ===
=== Usages ===
j188 v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j171 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
=== Succesors ===
next: j189 
=== Usages ===
j221 j194 v254 
=== Predecessor ===
j171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v249 #next: j189  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j171 
index: - 
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j171 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v250 
=== Succesors ===
next: i233 
=== Usages ===
v176 
=== Predecessor ===
j188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v250 #next: i233  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
=== Succesors ===
next: v179 
=== Usages ===
?27 v214 
=== Predecessor ===
j189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v235 #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j188 
y: j220 
=== Succesors ===
=== Usages ===
v176 v190 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j188 y: j220  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j189 
y: j221 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j189 y: j221  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v177 
falseSuccessor: v178 
=== Usages ===
=== Predecessor ===
i233 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v177 #falseSuccessor: v178  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a184 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a184  <|@  <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4ed29f56
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/BitSet;
type: HotSpotType<Ljava/util/BitSet;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?58 ?58 ?27 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a26 
values: i233 i33 a41 
=== Succesors ===
=== Usages ===
?58 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a26 values: i233 i33 a41  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<BitSet.clone()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rethrowException: false
sourceFile: BitSet.java
sourceLine: 1102
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a26 a26 a124 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a26 a26 a124 virtualObjectMappings: ?27  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a184 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?58 
arguments: v168 i182 i170 
=== Succesors ===
next: j185 
=== Usages ===
j185 
=== Predecessor ===
v177 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?58 arguments: v168 i182 i170 #next: j185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j185 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a184 
=== Succesors ===
next: v195 
=== Usages ===
j194 
=== Predecessor ===
a184 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a184 #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
j185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
value: j221 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v249 value: j221 stateAfter: - lastLocationAccess: - #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j188 
index: - 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j188 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v254 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v254 #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j194 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v192 
values: j188 j185 
=== Succesors ===
=== Usages ===
v253 v252 a75 v255 v256 v257 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v192 values: j188 j185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v193 v195 
=== Succesors ===
next: a75 
=== Usages ===
j194 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v193 v195 #next: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j194 
=== Succesors ===
next: j206 
=== Usages ===
a82 
=== Predecessor ===
v192 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j194 #next: j206  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/BitSet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/BitSet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v200 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v251 
=== Succesors ===
next: v207 
=== Usages ===
v207 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v251 #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
value: j206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
j206 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v252 value: j206 stateAfter: - lastLocationAccess: - #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
value: v225 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v253 value: v225 stateAfter: - lastLocationAccess: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v255 
value: i233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v255 value: i233 stateAfter: - lastLocationAccess: - #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
value: i78 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v256 value: i78 stateAfter: - lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a79 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a124 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
value: a79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a82 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v257 value: a79 stateAfter: - lastLocationAccess: - #next: a82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a75 
=== Succesors ===
next: v83 
=== Usages ===
v21 
=== Predecessor ===
v218 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a75 #next: v83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
a82 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1104) [bci: 38]
stamp: void
=== Inputs ===
result: a82 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a82 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i230 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i230  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v234 v236 v235 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i230 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.sizeIsSticky
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v234 
=== Succesors ===
next: v68 
=== Usages ===
i33 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v234 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i230 
=== Succesors ===
=== Usages ===
v5 ?27 i78 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i230  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 a120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i4 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i33 y: i4  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.clone()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 1097
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v90 a120 i232 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
i230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e9df3dc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVZXB [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid a87 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result int[-8723|0xffffffffffffdded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i86 
speculation: a87 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i86 speculation: a87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1097) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a231 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a231  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a231 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v236 
=== Succesors ===
next: i232 
=== Usages ===
a41 v237 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v236 #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a231 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v237 
=== Succesors ===
next: j99 
=== Usages ===
v146 j165 i96 v105 a120 
=== Predecessor ===
a231 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v237 #next: j99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j99 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j143 
=== Usages ===
v238 v239 
=== Predecessor ===
i232 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j143  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j99 
index: - 
=== Succesors ===
=== Usages ===
j143 v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j99 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j143 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
=== Succesors ===
next: j144 
=== Usages ===
j103 v240 v241 a119 v246 v242 v243 v244 v245 
=== Predecessor ===
j99 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v238 #next: j144  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j99 
index: - 
=== Succesors ===
=== Usages ===
j144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j99 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j144 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
=== Succesors ===
next: v108 
=== Usages ===
v109 
=== Predecessor ===
j143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i104 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i232 y: i104  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
j144 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v107 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i232 
y: i95 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i232 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i96 
y: i127 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i96 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i128 
y: i97 
=== Succesors ===
=== Usages ===
j102 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i128 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid j102 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i98 
=== Succesors ===
=== Usages ===
j103 v242 v243 v244 v245 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i98  <|@  <|@
f <@~|@floating>@ <|@
tid j103 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i64
=== Inputs ===
x: j102 
y: j143 
=== Succesors ===
=== Usages ===
v109 v145 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j102 y: j143  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j144 
y: j103 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j144 y: j103  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v114 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v114 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA [v6|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = AND v7|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
value: j103 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 value: j103 stateAfter: - lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result [v9|QWORD + v4|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j102 
index: j143 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j102 index: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
address: v242 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v242 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
result [v9|QWORD + v4|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j102 
index: j143 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j102 index: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
address: v243 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v243 #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result [v9|QWORD + v4|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j102 
index: j143 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j102 index: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
address: v244 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v244 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
result [v9|QWORD + v4|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j102 
index: j143 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j102 index: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
address: v245 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v245 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
result [v4|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
value: i232 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 value: i232 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
result [v4|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
value: j94 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v241 value: j94 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result [v4|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
result meta{HotSpotType<[J, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: meta{HotSpotType<[J, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[J, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
value: v219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v246 value: v219 stateAfter: - lastLocationAccess: - #next: v118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j143 
=== Succesors ===
next: v121 
=== Usages ===
a124 
=== Predecessor ===
v118 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j143 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
a119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v110 v112 
=== Succesors ===
next: a120 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v112 #next: a120  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rawvalue: meta{HotSpotType<[J, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[J, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a120 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v93 i232 i4 
=== Succesors ===
next: v123 
=== Usages ===
a124 
=== Predecessor ===
v111 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v93 i232 i4 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
a120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a124 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v122 
values: a119 a120 
=== Succesors ===
=== Usages ===
?58 a79 j163 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v122 values: a119 a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:106) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v121 v123 
=== Succesors ===
next: j159 
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v121 v123 #next: j159  <|@  <|@
f <@~|@floating>@ <|@
tid a41 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a231 
=== Succesors ===
=== Usages ===
?27 j159 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j159 <|@
result v16|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:107) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i64
=== Inputs ===
object: a41 
=== Succesors ===
next: j163 
=== Usages ===
v247 
=== Predecessor ===
v122 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a41 #next: j163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j163 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:107) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: i64
=== Inputs ===
object: a124 
=== Succesors ===
next: v166 
=== Usages ===
v248 
=== Predecessor ===
j159 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a124 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result [v16|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j159 
index: - 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result [v17|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j163 
index: - 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j163 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j165 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:107) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i232 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: longDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.longArrayClone(ObjectCloneSnippets.java:107) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v247 v248 j165 
=== Succesors ===
next: j171 
=== Usages ===
=== Predecessor ===
j163 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v247 v248 j165 #next: j171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j171 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j188 
=== Usages ===
v249 v250 
=== Predecessor ===
v166 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j188  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j171 
index: - 
=== Succesors ===
=== Usages ===
j188 v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j171 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
=== Succesors ===
next: j189 
=== Usages ===
j221 j194 v254 
=== Predecessor ===
j171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v249 #next: j189  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j171 
index: - 
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j171 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j189 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v250 
=== Succesors ===
next: i233 
=== Usages ===
v176 
=== Predecessor ===
j188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v250 #next: i233  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i233 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
=== Succesors ===
next: v179 
=== Usages ===
?27 v214 
=== Predecessor ===
j189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v235 #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j188 
y: j220 
=== Succesors ===
=== Usages ===
v176 v190 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j188 y: j220  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j189 
y: j221 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j189 y: j221  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v177 
falseSuccessor: v178 
=== Usages ===
=== Predecessor ===
i233 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v177 #falseSuccessor: v178  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x106812f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v19|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a184 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a184  <|@  <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4ed29f56
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/BitSet;
type: HotSpotType<Ljava/util/BitSet;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?58 ?58 ?27 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a26 
values: i233 i33 a41 
=== Succesors ===
=== Usages ===
?58 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a26 values: i233 i33 a41  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<BitSet.clone()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Object.clone() [bci: -1]
at java.util.BitSet.clone(BitSet.java:1102) [bci: 24]
rethrowException: false
sourceFile: BitSet.java
sourceLine: 1102
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a26 a26 a124 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a26 a26 a124 virtualObjectMappings: ?27  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a184 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?58 
arguments: v168 i182 i170 
=== Succesors ===
next: j185 
=== Usages ===
j185 
=== Predecessor ===
v177 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?58 arguments: v168 i182 i170 #next: j185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j185 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a184 
=== Succesors ===
next: v195 
=== Usages ===
j194 
=== Predecessor ===
a184 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a184 #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
j185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.clone(BitSet.java:1102) [bci: 27]
stack: vobject:BitSet:0{wordsInUse=v21|DWORD,sizeIsSticky=v1|DWORD,words=v15|QWORD[.]} v14|QWORD[.] 
locals: - vobject:BitSet:0{wordsInUse=v21|DWORD,sizeIsSticky=v1|DWORD,words=v15|QWORD[.]} 
vobject:BitSet:0{wordsInUse=v21|DWORD,sizeIsSticky=v1|DWORD,words=v15|QWORD[.]} Ljava/util/BitSet; v21|DWORD v1|DWORD v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
value: j221 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v249 value: j221 stateAfter: - lastLocationAccess: - #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
result [v19|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j188 
index: - 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j188 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v254 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v254 #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j194 <|@
result v25|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v192 
values: j188 j185 
=== Succesors ===
=== Usages ===
v253 v252 a75 v255 v256 v257 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v192 values: j188 j185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v193 v195 
=== Succesors ===
next: a75 
=== Usages ===
j194 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v193 v195 #next: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j194 
=== Succesors ===
next: j206 
=== Usages ===
a82 
=== Predecessor ===
v192 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j194 #next: j206  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/BitSet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/BitSet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v200 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
result [v27|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j206 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v251 
=== Succesors ===
next: v207 
=== Usages ===
v207 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v251 #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
result [v25|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
value: j206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
j206 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v252 value: j206 stateAfter: - lastLocationAccess: - #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
result [v25|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
result meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
value: v225 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v253 value: v225 stateAfter: - lastLocationAccess: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
result [v25|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v255 
value: i233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v255 value: i233 stateAfter: - lastLocationAccess: - #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
result [v25|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
value: i78 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v256 value: i78 stateAfter: - lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
result [v25|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j194 
index: - 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j194 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a79 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a124 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
value: a79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a82 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v257 value: a79 stateAfter: - lastLocationAccess: - #next: a82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a75 
=== Succesors ===
next: v83 
=== Usages ===
v21 
=== Predecessor ===
v218 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a75 #next: v83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
a82 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.clone(BitSet.java:1104) [bci: 38]
stamp: void
=== Inputs ===
result: a82 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a82 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/BitSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*]], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v25|QWORD[*] + 16], y: v1|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = COMPRESSPOINTER (input: v14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 20], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e9df3dc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVZXB [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA [v6|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = AND v7|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x106812f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v19|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/BitSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*]], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v25|QWORD[*] + 16], y: v1|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = COMPRESSPOINTER (input: v14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 20], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.clone(BitSet.java:1102) [bci: 27]
stack: vobject:BitSet:0{wordsInUse=v21|DWORD,sizeIsSticky=v1|DWORD,words=v15|QWORD[.]} v14|QWORD[.] 
locals: - vobject:BitSet:0{wordsInUse=v21|DWORD,sizeIsSticky=v1|DWORD,words=v15|QWORD[.]} 
vobject:BitSet:0{wordsInUse=v21|DWORD,sizeIsSticky=v1|DWORD,words=v15|QWORD[.]} Ljava/util/BitSet; v21|DWORD v1|DWORD v15|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // sizeIsSticky:boolean
     4: ifne          11
     7: aload_0       
     8: invokespecial #49         // trimToSize:()void
    11: aload_0       
    12: invokespecial #50         // java.lang.Object.clone:()java.lang.Object
    15: checkcast     #1          // java.util.BitSet
    18: astore_1      
    19: aload_1       
    20: aload_0       
    21: getfield      #2          // words:long[]
    24: invokevirtual #51         // java.lang.Object.clone:()java.lang.Object
    27: checkcast     #71         // long[]
    30: putfield      #2          // words:long[]
    33: aload_1       
    34: invokespecial #13         // checkInvariants:()void
    37: aload_1       
    38: areturn       
    39: astore_1      
    40: new           #73         // java.lang.InternalError
    43: dup           
    44: aload_1       
    45: invokespecial #52         // java.lang.InternalError.<init>:(java.lang.Throwable)void
    48: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e9df3dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|DWORD = MOVZXB [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r14|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:32]
live-base-pointers: []
java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   34  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   64  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   66  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   68  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   70  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:40|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction stack:56|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD = MOV stack:36|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x106812f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  134  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r13|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  168  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/BitSet;, resolved>} <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed} <|@ <|@
      nr  188  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction MOVB (x: [rax|QWORD[*] + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr  192  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   94  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [r14:0, stack:32]
live-base-pointers: []
java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ instruction stack:40|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.BitSet.clone(BitSet.java:1102) [bci: 27]
stack: vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]} stack:48|QWORD[.] 
locals: - vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]} 
vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]} Ljava/util/BitSet; r13|DWORD r14|DWORD stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27] <|@ <|@
      nr  156  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 668] y: -8723 size: DWORD <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // sizeIsSticky:boolean
     4: ifne          11
     7: aload_0       
     8: invokespecial #49         // trimToSize:()void
    11: aload_0       
    12: invokespecial #50         // java.lang.Object.clone:()java.lang.Object
    15: checkcast     #1          // java.util.BitSet
    18: astore_1      
    19: aload_1       
    20: aload_0       
    21: getfield      #2          // words:long[]
    24: invokevirtual #51         // java.lang.Object.clone:()java.lang.Object
    27: checkcast     #71         // long[]
    30: putfield      #2          // words:long[]
    33: aload_1       
    34: invokespecial #13         // checkInvariants:()void
    37: aload_1       
    38: areturn       
    39: astore_1      
    40: new           #73         // java.lang.InternalError
    43: dup           
    44: aload_1       
    45: invokespecial #52         // java.lang.InternalError.<init>:(java.lang.Throwable)void
    48: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e9df3dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|DWORD = MOVZXB [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r14|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:32]
live-base-pointers: []
java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   34  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B7 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   64  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   66  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   68  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   70  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction stack:56|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD = MOV stack:36|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x106812f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  134  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r13|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  168  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/BitSet;, resolved>} <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed} <|@ <|@
      nr  188  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction MOVB (x: [rax|QWORD[*] + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr  192  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   94  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [r14:0, stack:32]
live-base-pointers: []
java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.BitSet.clone(BitSet.java:1102) [bci: 27]
stack: vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]} stack:48|QWORD[.] 
locals: - vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]} 
vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]} Ljava/util/BitSet; r13|DWORD r14|DWORD stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27] <|@ <|@
      nr  156  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 668] y: -8723 size: DWORD <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.BitSet.clone(BitSet.java:1097) [bci: 0]
locals: r10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // sizeIsSticky:boolean
     4: ifne          11
     7: aload_0       
     8: invokespecial #49         // trimToSize:()void
    11: aload_0       
    12: invokespecial #50         // java.lang.Object.clone:()java.lang.Object
    15: checkcast     #1          // java.util.BitSet
    18: astore_1      
    19: aload_1       
    20: aload_0       
    21: getfield      #2          // words:long[]
    24: invokevirtual #51         // java.lang.Object.clone:()java.lang.Object
    27: checkcast     #71         // long[]
    30: putfield      #2          // words:long[]
    33: aload_1       
    34: invokespecial #13         // checkInvariants:()void
    37: aload_1       
    38: areturn       
    39: astore_1      
    40: new           #73         // java.lang.InternalError
    43: dup           
    44: aload_1       
    45: invokespecial #52         // java.lang.InternalError.<init>:(java.lang.Throwable)void
    48: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420440fb66e104585ed0f847a010000448b7614468b14f50c000000498b5760498b4f704181faffffff000f830b010000458bda41c1e303458d5b174183e3f84d63db4d8bc34c03c24c3bc10f87ea0000004d894760410f188413c0000000410f18841300010000410f18841340010000410f188413800100004489520c48c70201000000c74208addeadde488bc2448954241c44896c2418488944241049c1e6034c89742408498bfe488bd0448b54241c488d7f10488d7210498bd2e80000000090498b4760498b77704c8b542420458b6a0c488d5018483bd60f8780000000498957600f1880d80000004c8b542410448b742418488bf048baaddeaddeaddeadde488b92a8000000488910c74008addeadde4489680c44887010498bd248c1ea03895014488bc6488b6c24304883c438850500000000c5f877c348baaddeaddeaddeadde488bf2418bd2b900000000448954241ce80000000090e933ffffff448b74241848beaddeaddeaddeaddeba02000000b901000000e800000000904c8b542410e96cffffff4c8bd641c7879c020000edddffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e9df3dc slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|DWORD = MOVZXB [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 58 10 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 26 r14|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 71 28 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 71 [rsi:0, r14:0, stack:32]at java.util.BitSet.clone(BitSet.java:1097) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 71 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 79 30 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 83 32 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 87 34 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 94 36 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7  <||@
  Comment 100 block B3 null  <||@
  Comment 100 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 40 r11|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 107 42 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 111 44 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 115 46 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 118 48 r8|QWORD = ADD (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 124 50 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 127 52 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B7 falseDestination: B3 -> B5  <||@
  Comment 133 block B5 null  <||@
  Comment 133 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 60 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 137 62 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 146 64 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 155 66 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 164 68 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 173 70 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 177 72 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 184 74 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed}  <||@
  Comment 184 {meta{HotSpotType<[J, resolved>;compressed}}  <||@
  Comment 191 76 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 191 78 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 194 80 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 199 84 JUMP ~[] destination: B5 -> B8  <||@
  Comment 199 block B8 null  <||@
  Comment 199 108 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 199 82 stack:40|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 204 110 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 209 112 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3  <||@
  Comment 213 114 stack:56|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 218 116 rdi|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 221 118 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 224 120 r10|QWORD = MOV stack:36|DWORD size: DWORD  <||@
  Comment 229 122 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 233 124 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 237 126 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 240 128 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x106812f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 240 {Field[name=StubRoutines::_arrayof_jlong_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd18, value=0x106812f40]:0x106812f40}  <||@
  Comment 246 130 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 250 132 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 254 134 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 259 136 r13|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 263 138 rdx|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 267 140 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 270 142 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 276 block B10 null  <||@
  Comment 276 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 164 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 280 166 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 287 168 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 287 170 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 292 172 r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 297 174 JUMP ~[] destination: B10 -> B11  <||@
  Comment 297 block B11 null  <||@
  Comment 297 176 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 297 178 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 300 180 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/BitSet;, resolved>}  <||@
  Comment 300 {meta{HotSpotType<Ljava/util/BitSet;, resolved>}}  <||@
  Comment 310 182 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 317 184 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 320 186 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed}  <||@
  Comment 320 {meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed}}  <||@
  Comment 327 188 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 331 190 MOVB (x: [rax|QWORD[*] + 16], y: r14|DWORD) size: BYTE  <||@
  Comment 335 192 rdx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3  <||@
  Comment 342 194 MOV (x: [rax|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 345 196 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 348 198 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 357 12  <||@
  Comment 367 block B7 null  <||@
  Comment 367 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 92 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>}  <||@
  Comment 367 {meta{HotSpotType<[J, resolved>}}  <||@
  Comment 377 94 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 380 96 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 383 98 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 388 100 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 393 102 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 393 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 398 [r14:0, stack:32]at java.util.BitSet.clone(BitSet.java:1097) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 399 106 JUMP ~[] destination: B7 -> B8  <||@
  Comment 404 block B9 null  <||@
  Comment 404 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 146 r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 409 148 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 409 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 419 150 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 424 152 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 429 154 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27]  <||@
  Comment 429 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 434 [stack:8, stack:16]at java.util.BitSet.clone(BitSet.java:1102) [bci: 27, duringCall: false, rethrow: false]
              |0                                                                                      |1                                                                                     
     locals:  |-                                                                                      |vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]} 
     stack:   |vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]}  |stack:48|QWORD[.]                                                                       <||@
  Comment 435 156 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 435 158 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 440 160 JUMP ~[] destination: B9 -> B11  <||@
  Comment 445 block B1 null  <||@
  Comment 445 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 16 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 448 18 MOV [r15|QWORD + 668] y: -8723 size: DWORD  <||@
  Comment 459 20 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 466 22 DEOPT info [bci:0]  <||@
  Comment 466 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 471 [r10:0]at java.util.BitSet.clone(BitSet.java:1097) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |-   <||@
  Comment 472 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 472 4  <||@
  Comment 478 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 478 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9677[java.util.BitSet.clone()]"
  method "HotSpotCompilation-9677[java.util.BitSet.clone()]"
  date 1527005212581
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a2bbc0 448b560849c1e203493bc20f858fa2ddfe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420440fb66e104585ed0f847a010000448b7614468b14f50c000000498b5760498b4f704181faffffff000f830b010000458bda41c1e303458d5b174183e3f84d63db4d8bc34c03c24c3bc10f87ea0000004d894760410f188413c0000000410f18841300010000410f18841340010000410f188413800100004489520c48c70201000000c74208a90100f8488bc2448954241c44896c2418488944241049c1e6034c89742408498bfe488bd0448b54241c488d7f10488d7210498bd2e88b72defe90498b4760498b77704c8b542420458b6a0c488d5018483bd60f8780000000498957600f1880d80000004c8b542410448b742418488bf048ba703203c007000000488b92a8000000488910c740084e6600f84489680c44887010498bd248c1ea03895014488bc6488b6c24304883c4388505db32e6fcc5f877c348ba480d00c007000000488bf2418bd2b900000000448954241ce892b056ff90e933ffffff448b74241848be680b00c007000000ba02000000b901000000e86eb056ff904c8b542410e96cffffff4c8bd641c7879c020000edddffff4d89a7a8020000e867b8ddfe90e883e821ff90e85db7ddfe90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e9df3dc slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|DWORD = MOVZXB [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 58 10 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 26 r14|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 71 28 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 71 [rsi:0, r14:0, stack:32]at java.util.BitSet.clone(BitSet.java:1097) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 71 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 79 30 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 83 32 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 87 34 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 94 36 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7  <||@
  Comment 100 block B3 null  <||@
  Comment 100 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 40 r11|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 107 42 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 111 44 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 115 46 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 118 48 r8|QWORD = ADD (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 124 50 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 127 52 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B7 falseDestination: B3 -> B5  <||@
  Comment 133 block B5 null  <||@
  Comment 133 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 60 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 137 62 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 146 64 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 155 66 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 164 68 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 173 70 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 177 72 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 184 74 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed}  <||@
  Comment 184 {meta{HotSpotType<[J, resolved>;compressed}}  <||@
  Comment 191 76 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 191 78 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 194 80 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 199 84 JUMP ~[] destination: B5 -> B8  <||@
  Comment 199 block B8 null  <||@
  Comment 199 108 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 199 82 stack:40|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 204 110 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 209 112 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3  <||@
  Comment 213 114 stack:56|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 218 116 rdi|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 221 118 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 224 120 r10|QWORD = MOV stack:36|DWORD size: DWORD  <||@
  Comment 229 122 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 233 124 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 237 126 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 240 128 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x106812f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 240 {Field[name=StubRoutines::_arrayof_jlong_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd18, value=0x106812f40]:0x106812f40}  <||@
  Comment 246 130 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 250 132 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 254 134 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 259 136 r13|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 263 138 rdx|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 267 140 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 270 142 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 276 block B10 null  <||@
  Comment 276 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 164 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 280 166 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 287 168 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 287 170 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 292 172 r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 297 174 JUMP ~[] destination: B10 -> B11  <||@
  Comment 297 block B11 null  <||@
  Comment 297 176 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 297 178 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 300 180 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/BitSet;, resolved>}  <||@
  Comment 300 {meta{HotSpotType<Ljava/util/BitSet;, resolved>}}  <||@
  Comment 310 182 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 317 184 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 320 186 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed}  <||@
  Comment 320 {meta{HotSpotType<Ljava/util/BitSet;, resolved>;compressed}}  <||@
  Comment 327 188 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 331 190 MOVB (x: [rax|QWORD[*] + 16], y: r14|DWORD) size: BYTE  <||@
  Comment 335 192 rdx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1a7d3bd7 encoding: base: 0 shift: 3  <||@
  Comment 342 194 MOV (x: [rax|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 345 196 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 348 198 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 357 12  <||@
  Comment 367 block B7 null  <||@
  Comment 367 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 92 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>}  <||@
  Comment 367 {meta{HotSpotType<[J, resolved>}}  <||@
  Comment 377 94 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 380 96 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 383 98 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 388 100 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 393 102 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 393 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 398 [r14:0, stack:32]at java.util.BitSet.clone(BitSet.java:1097) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 399 106 JUMP ~[] destination: B7 -> B8  <||@
  Comment 404 block B9 null  <||@
  Comment 404 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 146 r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 409 148 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 409 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 419 150 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 424 152 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 429 154 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27]  <||@
  Comment 429 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 434 [stack:8, stack:16]at java.util.BitSet.clone(BitSet.java:1102) [bci: 27, duringCall: false, rethrow: false]
              |0                                                                                      |1                                                                                     
     locals:  |-                                                                                      |vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]} 
     stack:   |vobject:BitSet:0{wordsInUse=r13|DWORD,sizeIsSticky=r14|DWORD,words=stack:56|QWORD[.]}  |stack:48|QWORD[.]                                                                       <||@
  Comment 435 156 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 435 158 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 440 160 JUMP ~[] destination: B9 -> B11  <||@
  Comment 445 block B1 null  <||@
  Comment 445 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 16 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 448 18 MOV [r15|QWORD + 668] y: -8723 size: DWORD  <||@
  Comment 459 20 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 466 22 DEOPT info [bci:0]  <||@
  Comment 466 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 471 [r10:0]at java.util.BitSet.clone(BitSet.java:1097) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |-   <||@
  Comment 472 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 472 4  <||@
  Comment 478 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 478 5  <||@
  HexCodeFile>>> <|@
end_nmethod
