begin_compilation
  name " HotSpotOSRCompilation-6164[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)@73]"
  method "HotSpotOSRCompilation-6164[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)@73]"
  date 1527005113829
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a819 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a819  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 v1253 v1254 v1255 v1256 v1257 v1258 v1259 v1260 v1261 v1262 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
displacement: 88
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
=== Succesors ===
next: a822 
=== Usages ===
v1268 ?236 ?137 v919 
=== Predecessor ===
v814 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 #next: a822  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
=== Succesors ===
next: a825 
=== Usages ===
v901 ?236 ?137 v1267 v511 v1245 v1243 v1241 v1242 v1246 v1244 
=== Predecessor ===
a819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 #next: a825  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a825 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
=== Succesors ===
next: a828 
=== Usages ===
v881 ?236 v1251 v1266 v511 ?137 v1249 v1247 v1248 v1252 v1250 
=== Predecessor ===
a822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 #next: a828  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
=== Succesors ===
next: i831 
=== Usages ===
v863 ?236 v1236 v1265 ?137 v1234 v1230 v1231 
=== Predecessor ===
a825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 #next: i831  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
=== Succesors ===
next: i834 
=== Usages ===
?236 v1231 i247 v431 i110 i110 
=== Predecessor ===
a828 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 #next: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
=== Succesors ===
next: a836 
=== Usages ===
?236 ?137 v138 
=== Predecessor ===
i831 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1258 #next: a836  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
=== Succesors ===
next: i839 
=== Usages ===
v845 ?236 ?137 v1264 v1237 v1235 v1240 v1232 v1233 v1239 v1238 
=== Predecessor ===
i834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 #next: i839  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
=== Succesors ===
next: i841 
=== Usages ===
?236 v237 i246 v1233 i113 i113 v444 
=== Predecessor ===
a836 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 #next: i841  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
=== Succesors ===
next: i843 
=== Usages ===
?236 i178 v153 ?137 
=== Predecessor ===
i839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 #next: i843  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
=== Succesors ===
next: v816 
=== Usages ===
?236 v237 v73 v655 i645 
=== Predecessor ===
i841 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 #next: v816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j815 
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
i843 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j815 #next: v848  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a819 a822 a825 a828 i831 i834 a836 i839 i841 i843 - - 
=== Succesors ===
=== Usages ===
v1014 i1211 i1213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a819 a822 a825 a828 i831 i834 a836 i839 i841 i843 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a836 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a836  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v845 
=== Succesors ===
trueSuccessor: v847 
falseSuccessor: v846 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v845 #trueSuccessor: v847 #falseSuccessor: v846  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v847 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B93" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1205 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: - 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
=== Succesors ===
next: v1174 
=== Usages ===
v1122 
=== Predecessor ===
v846 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 #next: v1174  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1205 
y: v1121 
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1205 y: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1173 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1173 #falseSuccessor: v1050  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1053  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v1173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1045 v1053 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1045 v1053 #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a828 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a828  <|@  <|@
f <@*|@fixed>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v863 
=== Succesors ===
trueSuccessor: v865 
falseSuccessor: v864 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v863 #trueSuccessor: v865 #falseSuccessor: v864  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B92" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a828 
index: - 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
=== Succesors ===
next: v1182 
=== Usages ===
v1124 
=== Predecessor ===
v864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1265 #next: v1182  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1206 
y: v1123 
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1206 y: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v1181 
falseSuccessor: v1065 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v1181 #falseSuccessor: v1065  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1060 v1068 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1060 v1068 #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a825 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a825  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v883 #falseSuccessor: v882  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v883 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B91" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: v1208 
=== Usages ===
v1263 
=== Predecessor ===
v882 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: v1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1207 
=== Succesors ===
=== Usages ===
v1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
=== Succesors ===
next: v1190 
=== Usages ===
v888 
=== Predecessor ===
v1207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 #next: v1190  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1208 
y: v880 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1208 y: v880  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v888 
=== Succesors ===
trueSuccessor: v1189 
falseSuccessor: v1080 
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v888 #trueSuccessor: v1189 #falseSuccessor: v1080  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1075 v1083 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1075 v1083 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a822 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a822  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v901 
=== Succesors ===
trueSuccessor: v903 
falseSuccessor: v902 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v901 #trueSuccessor: v903 #falseSuccessor: v902  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1090  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
v903 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1209 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1267 
=== Succesors ===
next: v1198 
=== Usages ===
v1126 
=== Predecessor ===
v902 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1267 #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1209 
y: v1125 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1209 y: v1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1126 
=== Succesors ===
trueSuccessor: v1197 
falseSuccessor: v1095 
=== Usages ===
=== Predecessor ===
v1209 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1126 #trueSuccessor: v1197 #falseSuccessor: v1095  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
v1197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1090 v1098 
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1090 v1098 #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a819 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a819  <|@  <|@
f <@~|@floating>@ <|@
tid a1028 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@496775925
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1027 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106044
stableDimension: 0
stamp: i32 [-106044] ⇊00000000fffe61c4 ⇈00000000fffe61c4
stampKind: i32
value: int[-106044|0xfffffffffffe61c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v919 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v919 #trueSuccessor: v921 #falseSuccessor: v920  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a819 
index: - 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a819 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
=== Succesors ===
next: v928 
=== Usages ===
v1128 
=== Predecessor ===
v920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1268 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1210 
y: v1127 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1210 y: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1128 
=== Succesors ===
trueSuccessor: v926 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1128 #trueSuccessor: v926 #falseSuccessor: v927  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:147) [bci: 69]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i839 
y: i843 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i839 y: i843  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: - 
=== Succesors ===
=== Usages ===
i1213 i1217 i1218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a828 
index: - 
=== Succesors ===
=== Usages ===
i1211 i1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a962 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v965 a1013 a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i117 i118 i163 i247 i246 i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.96468886457794
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v238 #falseSuccessor: v239  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1211 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?236 
guard: - 
address: v1230 
=== Succesors ===
next: v699 
=== Usages ===
v652 v431 j642 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?236 guard: - address: v1230 #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 103]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i831 
y: i1211 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i831 y: i1211  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v696 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
i1211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v696 #falseSuccessor: v698  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1212 
=== Usages ===
i1212 
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a828 
index: i831 
=== Succesors ===
=== Usages ===
i1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: i831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v696 
address: v1231 
=== Succesors ===
next: v245 
=== Usages ===
v595 i597 
=== Predecessor ===
v696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v696 address: v1231 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i594 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 v600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1212 
y: i594 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1212 y: i594  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998120804190431
=== Inputs ===
condition: v595 
=== Succesors ===
trueSuccessor: v243 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
i1212 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v595 #trueSuccessor: v243 #falseSuccessor: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i839 
y: i116 
=== Succesors ===
=== Usages ===
v663 i288 i645 v655 j659 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i839 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i645 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i843 
y: i246 
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i843 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i645 
=== Succesors ===
=== Usages ===
j648 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i645  <|@  <|@
f <@~|@floating>@ <|@
tid j647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j646 
y: j647 
=== Succesors ===
=== Usages ===
j649 j660 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j646 y: j647  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i843 
=== Succesors ===
=== Usages ===
v1144 v1160 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i843  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i831 
y: i116 
=== Succesors ===
=== Usages ===
v652 i285 j644 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i831 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid a1035 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@2106755150
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@2106755150]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 a1013 a1013 a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v1143 
falseSuccessor: v1140 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v1143 #falseSuccessor: v1140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1152 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1152  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i247 
=== Succesors ===
=== Usages ===
j649 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i247  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j644 
y: j648 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j648  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1211 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1211  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j649 
y: j642 
=== Succesors ===
=== Usages ===
v1152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j649 y: j642  <|@  <|@
f <@~|@floating>@ <|@
tid i1034 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116507
stableDimension: 0
stamp: i32 [-116507] ⇊00000000fffe38e5 ⇈00000000fffe38e5
stampKind: i32
value: int[-116507|0xfffffffffffe38e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v1151 
falseSuccessor: v1148 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v1151 #falseSuccessor: v1148  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i247 
y: i1211 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i247 y: i1211  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v652 
=== Succesors ===
trueSuccessor: v1141 
falseSuccessor: v1149 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v652 #trueSuccessor: v1141 #falseSuccessor: v1149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v1141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1269 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1269  <|@  <|@
f <@*|@fixed>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1138  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v1140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B25" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1138 v1139 
=== Succesors ===
next: i1213 
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1138 v1139 #next: i1213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?236 
guard: - 
address: v1232 
=== Succesors ===
next: v1160 
=== Usages ===
v444 v663 j658 
=== Predecessor ===
v1137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?236 guard: - address: v1232 #next: v1160  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v1159 
falseSuccessor: v1156 
=== Usages ===
=== Predecessor ===
i1213 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v1159 #falseSuccessor: v1156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid j659 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i246 
=== Succesors ===
=== Usages ===
j660 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i246  <|@  <|@
f <@~|@floating>@ <|@
tid j660 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j648 
y: j659 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j648 y: j659  <|@  <|@
f <@~|@floating>@ <|@
tid j658 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1213 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1213  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j660 
y: j658 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j660 y: j658  <|@  <|@
f <@~|@floating>@ <|@
tid i1037 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121627
stableDimension: 0
stamp: i32 [-121627] ⇊00000000fffe24e5 ⇈00000000fffe24e5
stampKind: i32
value: int[-121627|0xfffffffffffe24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v1167 
falseSuccessor: v1164 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v1167 #falseSuccessor: v1164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i1213 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i246 y: i1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v663 
=== Succesors ===
trueSuccessor: v1157 
falseSuccessor: v1165 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v663 #trueSuccessor: v1157 #falseSuccessor: v1165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1155 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v1157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1270 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1270  <|@  <|@
f <@*|@fixed>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1036  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v1156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B32" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1154 v1155 
=== Succesors ===
next: v715 
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1154 v1155 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i839 
y: i1213 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i839 y: i1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v712 
falseSuccessor: v714 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v712 #falseSuccessor: v714  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
v452 
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i839 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i839  <|@  <|@
f <@~|@floating>@ <|@
tid i597 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1212 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v712 
address: v1233 
value: i597 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v712 address: v1233 value: i597 stateAfter: - lastLocationAccess: - #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628070824028795816
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i247 i118 
=== Succesors ===
=== Usages ===
v1234 i110 i118 i110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i247 i118  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i246 i117 
=== Succesors ===
=== Usages ===
i113 v1235 i117 v73 i113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i246 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 27.175030565259714
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v87 
=== Usages ===
i285 v124 i288 v76 v95 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i843 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i288 y: i843  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.96468886457794
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627810312371998011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1214 
=== Usages ===
v657 v667 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1214  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1137 v74 
=== Succesors ===
=== Usages ===
i1214 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1137 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a828 
index: i285 
=== Succesors ===
=== Usages ===
i1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: i285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v657 
address: v1234 
=== Succesors ===
next: v115 
=== Usages ===
v600 i602 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v657 address: v1234 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1214 
y: i594 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1214 y: i594  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998120804190431
=== Inputs ===
condition: v600 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i1214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v600 #trueSuccessor: v91 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627808974930546260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1153 v74 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1153 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i288 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i288  <|@  <|@
f <@~|@floating>@ <|@
tid i602 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1214 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v667 
address: v1235 
value: i602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v667 address: v1235 value: i602 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i288 
y: i116 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i288 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i285 
y: i116 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i116  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572128182340053406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606511592562806172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid i1039 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113947
stableDimension: 0
stamp: i32 [-113947] ⇊00000000fffe42e5 ⇈00000000fffe42e5
stampKind: i32
value: int[-113947|0xfffffffffffe42e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550820220435757058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid i1032 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107803
stableDimension: 0
stamp: i32 [-107803] ⇊00000000fffe5ae5 ⇈00000000fffe5ae5
stampKind: i32
value: int[-107803|0xfffffffffffe5ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585249691958316624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606874077982373668
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i288 i288 i839 i839 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i288 i288 i839 i839  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i285 i285 i831 i831 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i285 i285 i831 i831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 v321 v322 
=== Succesors ===
next: v126 
=== Usages ===
i113 i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 v321 v322 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B67" 
    successors "B49" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607697455255345467
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i113 i163 i319 
=== Succesors ===
=== Usages ===
?137 v519 v153 v511 i163 v1237 i319 i178 v1238 i318 v502 i333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i113 i163 i319  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i110 i212 i212 
=== Succesors ===
=== Usages ===
?137 v138 i326 v1236 v511 v488 i212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i110 i212 i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1538608471419702
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v126 
=== Succesors ===
next: v147 
=== Usages ===
v213 v156 v141 i135 i132 v320 v764 v759 v724 v749 v734 v739 v744 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v126 #next: v147  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a819 a822 a825 a828 i132 i834 a836 i135 i841 - - - 
=== Succesors ===
=== Usages ===
v965 a1219 i1215 i1217 i1218 v1271 a1224 v1272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a819 a822 a825 a828 i132 i834 a836 i135 i841 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i834 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i834  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
stamp: void
trueSuccessorProbability: 0.1333650622853123
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v139 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B70" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1215 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1230 
=== Succesors ===
next: v725 
=== Usages ===
v488 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1230 #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i1215 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i1215  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v488 
=== Succesors ===
trueSuccessor: v721 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
i1215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v488 #trueSuccessor: v721 #falseSuccessor: v724  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1216 
=== Usages ===
i1216 
=== Predecessor ===
v725 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a828 
index: i132 
=== Succesors ===
=== Usages ===
i1216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v721 
address: v1236 
=== Succesors ===
next: v152 
=== Usages ===
i496 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v721 address: v1236 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1216 
=== Succesors ===
=== Usages ===
v149 i164 i201 v170 v340 v342 i184 i192 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i202 v149 i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i89 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: i32
=== Inputs ===
x: i132 
y: i116 
=== Succesors ===
=== Usages ===
i132 i132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i132 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
stamp: i32
=== Inputs ===
x: i135 
y: i116 
=== Succesors ===
=== Usages ===
v1239 i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i116  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
stamp: void
trueSuccessorProbability: 0.9444530643910007
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i1216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594225080727631168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i841 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i841  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
trueSuccessorProbability: 0.9998357154591753
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v154 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1217 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1232 
=== Succesors ===
next: v735 
=== Usages ===
v502 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1232 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i1217 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v502 
=== Succesors ===
trueSuccessor: v731 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
i1217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v502 #trueSuccessor: v731 #falseSuccessor: v734  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
v510 
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i135 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
resultBits: 8
stamp: i8
=== Inputs ===
value: i496 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v731 
address: v1237 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v731 address: v1237 value: i164 stateAfter: - lastLocationAccess: - #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid i973 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128795
stableDimension: 0
stamp: i32 [-128795] ⇊00000000fffe08e5 ⇈00000000fffe08e5
stampKind: i32
value: int[-128795|0xfffffffffffe08e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537427112944920144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: a215 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: a215  <|@  <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@28549944
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a822 i132 a825 i135 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a822 i132 a825 i135  <|@  <|@
tid ?955 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a215 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v511 
stateDuring: ?955 
=== Succesors ===
next: v217 
=== Usages ===
v217 
=== Predecessor ===
v156 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v511 stateDuring: ?955 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stamp: void
=== Inputs ===
result: a215 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a215 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a215 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i169 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v739 
falseSuccessor: v736 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v739 #falseSuccessor: v736  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid i975 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131091
stableDimension: 0
stamp: i32 [-131091] ⇊00000000fffdffed ⇈00000000fffdffed
stampKind: i32
value: int[-131091|0xfffffffffffdffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1136 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1136  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i339 
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v1132 
falseSuccessor: v1135 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v1132 #falseSuccessor: v1135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
v1132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 57344
stableDimension: 0
stamp: i32 [57344] ⇊000000000000e000 ⇈000000000000e000
stampKind: i32
value: int[57344|0xe000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i341 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i341  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v744 
falseSuccessor: v1133 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v744 #falseSuccessor: v1133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131347
stableDimension: 0
stamp: i32 [-131347] ⇊00000000fffdfeed ⇈00000000fffdfeed
stampKind: i32
value: int[-131347|0xfffffffffffdfeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
v1133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B59" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1130 v1131 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1130 v1131 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
stamp: i32
=== Inputs ===
x: i841 
y: i135 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i841 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i179 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v749 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v749 #falseSuccessor: v746  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131603
stableDimension: 0
stamp: i32 [-131603] ⇊00000000fffdfded ⇈00000000fffdfded
stampKind: i32
value: int[-131603|0xfffffffffffdfded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1218 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1232 
=== Succesors ===
next: v760 
=== Usages ===
v519 v539 
=== Predecessor ===
v746 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1232 #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i1218 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v756 
falseSuccessor: v759 
=== Usages ===
=== Predecessor ===
i1218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v756 #falseSuccessor: v759  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
v640 
=== Predecessor ===
v760 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
stamp: i32
=== Inputs ===
x: i135 
y: i317 
=== Succesors ===
=== Usages ===
v539 v1240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i1218 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i318 y: i1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v761 
falseSuccessor: v764 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v761 #falseSuccessor: v764  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
v640 
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v761 v756 
=== Succesors ===
=== Usages ===
v527 v547 v537 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v761 v756  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i135 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i496 
y: i183 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i496 y: i183  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i184 
y: i182 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i184 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i185 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v640 
address: v1238 
value: i186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v640 address: v1238 value: i186 stateAfter: - lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i163 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i163  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i496 
y: i191 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i496 y: i191  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i192 
y: i193 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i192 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i194 
y: i89 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i194 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i195 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v640 
address: v1239 
value: i196 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v640 address: v1239 value: i196 stateAfter: - lastLocationAccess: - #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i318 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i318  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i496 
y: i193 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i496 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i201 
y: i89 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i201 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i202 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v640 
address: v1240 
value: i203 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v640 address: v1240 value: i203 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
stamp: i32
=== Inputs ===
x: i135 
y: i179 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v984  <|@  <|@
f <@~|@floating>@ <|@
tid i985 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -138267
stableDimension: 0
stamp: i32 [-138267] ⇊00000000fffde3e5 ⇈00000000fffde3e5
stampKind: i32
value: int[-138267|0xfffffffffffde3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid i983 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133147
stableDimension: 0
stamp: i32 [-133147] ⇊00000000fffdf7e5 ⇈00000000fffdf7e5
stampKind: i32
value: int[-133147|0xfffffffffffdf7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125211
stableDimension: 0
stamp: i32 [-125211] ⇊00000000fffe16e5 ⇈00000000fffe16e5
stampKind: i32
value: int[-125211|0xfffffffffffe16e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" "B87" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: a1219 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: a1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
a1219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1021) [bci: 1]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1241 
=== Succesors ===
next: v1271 
=== Usages ===
v1271 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1241 #next: v1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
object: a1219 
=== Succesors ===
next: i1220 
=== Usages ===
=== Predecessor ===
a1219 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: a1219 #next: i1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
i1220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
=== Succesors ===
next: v777 
=== Usages ===
i557 
=== Predecessor ===
v1271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1242 #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1220 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1220  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 v388 v353 v362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i557 
y: i175 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i557 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v353 
=== Succesors ===
trueSuccessor: v774 
falseSuccessor: v776 
=== Usages ===
=== Predecessor ===
i1220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v353 #trueSuccessor: v774 #falseSuccessor: v776  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1221 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
i1221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
=== Succesors ===
next: i1222 
=== Usages ===
v360 
=== Predecessor ===
v774 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 #next: i1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
i1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
=== Succesors ===
next: v781 
=== Usages ===
i326 
=== Predecessor ===
i1221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i132 
y: i1222 
=== Succesors ===
=== Usages ===
v368 v360 v362 v569 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i132 y: i1222  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1221 
y: i326 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1221 y: i326  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
i1222 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v780 #falseSuccessor: v778  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid i989 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144659
stableDimension: 0
stamp: i32 [-144659] ⇊00000000fffdcaed ⇈00000000fffdcaed
stampKind: i32
value: int[-144659|0xfffffffffffdcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v780 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i175 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i326 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v784 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v784 #falseSuccessor: v782  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid i993 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144915
stableDimension: 0
stamp: i32 [-144915] ⇊00000000fffdc9ed ⇈00000000fffdc9ed
stampKind: i32
value: int[-144915|0xfffffffffffdc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v784 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1223 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1223  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
i1223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
=== Succesors ===
next: v789 
=== Usages ===
v368 
=== Predecessor ===
v782 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i1223 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i326 y: i1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v368 
=== Succesors ===
trueSuccessor: v788 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
i1223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v368 #trueSuccessor: v788 #falseSuccessor: v786  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid i995 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -146451
stableDimension: 0
stamp: i32 [-146451] ⇊00000000fffdc3ed ⇈00000000fffdc3ed
stampKind: i32
value: int[-146451|0xfffffffffffdc3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v788 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B86" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1224 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1224  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
a1224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1021) [bci: 1]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1247 
=== Succesors ===
next: v1272 
=== Usages ===
v1272 
=== Predecessor ===
v786 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1247 #next: v1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
object: a1224 
=== Succesors ===
next: i1225 
=== Usages ===
=== Predecessor ===
a1224 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: a1224 #next: i1225  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
i1225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
=== Succesors ===
next: v801 
=== Usages ===
i580 
=== Predecessor ===
v1272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1225 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1225  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i580 
y: i175 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i580 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v800 
=== Usages ===
=== Predecessor ===
i1225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v798 #falseSuccessor: v800  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1226 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
=== Succesors ===
next: i1227 
=== Usages ===
v386 
=== Predecessor ===
v798 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1250 #next: i1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
i1227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
=== Succesors ===
next: v805 
=== Usages ===
i333 
=== Predecessor ===
i1226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i135 
y: i1227 
=== Succesors ===
=== Usages ===
v394 v386 v388 v589 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i135 y: i1227  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1226 
y: i333 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1226 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v804 
falseSuccessor: v802 
=== Usages ===
=== Predecessor ===
i1227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v804 #falseSuccessor: v802  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid i1001 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150035
stableDimension: 0
stamp: i32 [-150035] ⇊00000000fffdb5ed ⇈00000000fffdb5ed
stampKind: i32
value: int[-150035|0xfffffffffffdb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i175 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v808 
falseSuccessor: v806 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v808 #falseSuccessor: v806  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid i1005 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150291
stableDimension: 0
stamp: i32 [-150291] ⇊00000000fffdb4ed ⇈00000000fffdb4ed
stampKind: i32
value: int[-150291|0xfffffffffffdb4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1228 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1228  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
i1228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
=== Succesors ===
next: v813 
=== Usages ===
v394 
=== Predecessor ===
v806 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i1228 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i1228  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v394 
=== Succesors ===
trueSuccessor: v812 
falseSuccessor: v810 
=== Usages ===
=== Predecessor ===
i1228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v394 #trueSuccessor: v812 #falseSuccessor: v810  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid i1007 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151571
stableDimension: 0
stamp: i32 [-151571] ⇊00000000fffdafed ⇈00000000fffdafed
stampKind: i32
value: int[-151571|0xfffffffffffdafed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v812 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
value: i326 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1245 value: i326 stateAfter: - lastLocationAccess: - #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
value: i333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1251 value: i333 stateAfter: - lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid a222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
rawvalue: CoderResult@1617107905
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1617107905]
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 488]
stamp: void
=== Inputs ===
result: a222 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a222 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148755
stableDimension: 0
stamp: i32 [-148755] ⇊00000000fffdbaed ⇈00000000fffdbaed
stampKind: i32
value: int[-148755|0xfffffffffffdbaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -142867
stableDimension: 0
stamp: i32 [-142867] ⇊00000000fffdd1ed ⇈00000000fffdd1ed
stampKind: i32
value: int[-142867|0xfffffffffffdd1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v776 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B70" "B54" "B57" "B61" "B64" "B69" "B68" "B73" "B87" "B75" "B77" "B80" "B86" "B82" "B84" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i963 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-151571 - -123915] ⇊00000000fffc00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v959 
values: i969 i973 i975 i977 i979 i983 i985 i989 i991 i993 i995 i1001 i1003 i1005 i1007 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v959 values: i969 i973 i975 i977 i979 i983 i985 i989 i991 i993 i995 i1001 i1003 i1005 i1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v968 v972 v974 v976 v978 v982 v984 v988 v990 v992 v994 v1000 v1002 v1004 v1006 
=== Succesors ===
next: v965 
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v968 v972 v974 v976 v978 v982 v984 v988 v990 v992 v994 v1000 v1002 v1004 v1006 #next: v965  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
actionAndReason: i963 
speculation: a962 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?137 actionAndReason: i963 speculation: a962  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 59]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@*|@fixed>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v927 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid a1023 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1022 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105788
stableDimension: 0
stamp: i32 [-105788] ⇊00000000fffe62c4 ⇈00000000fffe62c4
stampKind: i32
value: int[-105788|0xfffffffffffe62c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1095 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid a1020 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@476788275
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1019 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104764
stableDimension: 0
stamp: i32 [-104764] ⇊00000000fffe66c4 ⇈00000000fffe66c4
stampKind: i32
value: int[-104764|0xfffffffffffe66c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid a1017 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1016 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103740
stableDimension: 0
stamp: i32 [-103740] ⇊00000000fffe6ac4 ⇈00000000fffe6ac4
stampKind: i32
value: int[-103740|0xfffffffffffe6ac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid a1011 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@659636619
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1010 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102716
stableDimension: 0
stamp: i32 [-102716] ⇊00000000fffe6ec4 ⇈00000000fffe6ec4
stampKind: i32
value: int[-102716|0xfffffffffffe6ec4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B89" "B93" "B92" "B91" "B90" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1012 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-121627 - -102716] ⇊00000000fffe00c4 ⇈00000000fffe7ff5
valueDescription: i32
=== Inputs ===
merge: v1008 
values: i1027 i1032 i1034 i1037 i1039 i1027 i1010 i1016 i1019 i1022 i1034 i1037 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1008 values: i1027 i1032 i1034 i1037 i1039 i1027 i1010 i1016 i1019 i1022 i1034 i1037  <|@  <|@
f <@~|@floating>@ <|@
tid a1013 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v1008 
values: a1028 a962 a1035 a1035 a962 a1028 a1011 a1017 a1020 a1023 a1035 a1035 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1008 values: a1028 a962 a1035 a1035 a962 a1028 a1011 a1017 a1020 a1023 a1035 a1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1026 v1031 v1033 v1036 v1038 v1100 v1101 v1102 v1103 v1104 v1269 v1270 
=== Succesors ===
next: v1014 
=== Usages ===
i1012 a1013 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1026 v1031 v1033 v1036 v1038 v1100 v1101 v1102 v1103 v1104 v1269 v1270 #next: v1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?236 
actionAndReason: i1012 
speculation: a1013 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?236 actionAndReason: i1012 speculation: a1013  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a819 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a819  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 v1253 v1254 v1255 v1256 v1257 v1258 v1259 v1260 v1261 v1262 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
result [v0|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a819 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
=== Succesors ===
next: a822 
=== Usages ===
v1268 ?236 ?137 v919 
=== Predecessor ===
v814 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 #next: a822  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
result [v0|QWORD + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a822 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
=== Succesors ===
next: a825 
=== Usages ===
v901 ?236 ?137 v1267 v511 v1245 v1243 v1241 v1242 v1246 v1244 
=== Predecessor ===
a819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 #next: a825  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
result [v0|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a825 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
=== Succesors ===
next: a828 
=== Usages ===
v881 ?236 v1251 v1266 v511 ?137 v1249 v1247 v1248 v1252 v1250 
=== Predecessor ===
a822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 #next: a828  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
result [v0|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
=== Succesors ===
next: i831 
=== Usages ===
v863 ?236 v1236 v1265 ?137 v1234 v1230 v1231 
=== Predecessor ===
a825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 #next: i831  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
result [v0|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i831 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
=== Succesors ===
next: i834 
=== Usages ===
?236 v1231 i247 v431 i110 i110 
=== Predecessor ===
a828 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 #next: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
result [v0|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i834 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
=== Succesors ===
next: a836 
=== Usages ===
?236 ?137 v138 
=== Predecessor ===
i831 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1258 #next: a836  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
result [v0|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
a836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a836 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
=== Succesors ===
next: i839 
=== Usages ===
v845 ?236 ?137 v1264 v1237 v1235 v1240 v1232 v1233 v1239 v1238 
=== Predecessor ===
i834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 #next: i839  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
result [v0|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i839 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
=== Succesors ===
next: i841 
=== Usages ===
?236 v237 i246 v1233 i113 i113 v444 
=== Predecessor ===
a836 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 #next: i841  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
result [v0|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i841 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
=== Succesors ===
next: i843 
=== Usages ===
?236 i178 v153 ?137 
=== Predecessor ===
i839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 #next: i843  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
result [v0|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j815 
index: - 
=== Succesors ===
=== Usages ===
i843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i843 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
=== Succesors ===
next: v816 
=== Usages ===
?236 v237 v73 v655 i645 
=== Predecessor ===
i841 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 #next: v816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j815 
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
i843 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j815 #next: v848  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a819 a822 a825 a828 i831 i834 a836 i839 i841 i843 - - 
=== Succesors ===
=== Usages ===
v1014 i1211 i1213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a819 a822 a825 a828 i831 i834 a836 i839 i841 i843 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a836 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a836  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v845 
=== Succesors ===
trueSuccessor: v847 
falseSuccessor: v846 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v845 #trueSuccessor: v847 #falseSuccessor: v846  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3705102c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [v0|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOV [v0|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOV [v0|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD[.], y: v7|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v847 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B93" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1205 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
result [v7|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: - 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1205 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
=== Succesors ===
next: v1174 
=== Usages ===
v1122 
=== Predecessor ===
v846 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 #next: v1174  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1205 
y: v1121 
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1205 y: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1173 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1173 #falseSuccessor: v1050  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v7|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1053  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v1173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1045 v1053 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1045 v1053 #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a828 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a828  <|@  <|@
f <@*|@fixed>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v863 
=== Succesors ===
trueSuccessor: v865 
falseSuccessor: v864 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v863 #trueSuccessor: v865 #falseSuccessor: v864  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B92" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
result [v4|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a828 
index: - 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1206 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
=== Succesors ===
next: v1182 
=== Usages ===
v1124 
=== Predecessor ===
v864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1265 #next: v1182  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1206 
y: v1123 
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1206 y: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v1181 
falseSuccessor: v1065 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v1181 #falseSuccessor: v1065  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v4|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1060 v1068 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1060 v1068 #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a825 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a825  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v883 #falseSuccessor: v882  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v883 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B91" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
=== Succesors ===
next: v1208 
=== Usages ===
v1263 
=== Predecessor ===
v882 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 #next: v1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
result [v11|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1207 
=== Succesors ===
=== Usages ===
v1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1208 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
=== Succesors ===
next: v1190 
=== Usages ===
v888 
=== Predecessor ===
v1207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 #next: v1190  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1208 
y: v880 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1208 y: v880  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v888 
=== Succesors ===
trueSuccessor: v1189 
falseSuccessor: v1080 
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v888 #trueSuccessor: v1189 #falseSuccessor: v1080  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: [v11|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1075 v1083 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1075 v1083 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a822 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a822  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v901 
=== Succesors ===
trueSuccessor: v903 
falseSuccessor: v902 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v901 #trueSuccessor: v903 #falseSuccessor: v902  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1090  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
v903 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1209 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1209 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1267 
=== Succesors ===
next: v1198 
=== Usages ===
v1126 
=== Predecessor ===
v902 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1267 #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
result meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1209 
y: v1125 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1209 y: v1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1126 
=== Succesors ===
trueSuccessor: v1197 
falseSuccessor: v1095 
=== Usages ===
=== Predecessor ===
v1209 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1126 #trueSuccessor: v1197 #falseSuccessor: v1095  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
v1197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1090 v1098 
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1090 v1098 #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a819 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a819  <|@  <|@
f <@~|@floating>@ <|@
tid a1028 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@496775925
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1027 <|@
result int[-106044|0xfffffffffffe61c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106044
stableDimension: 0
stamp: i32 [-106044] ⇊00000000fffe61c4 ⇈00000000fffe61c4
stampKind: i32
value: int[-106044|0xfffffffffffe61c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v919 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v919 #trueSuccessor: v921 #falseSuccessor: v920  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106044|0xfffffffffffe61c4], v13|QWORD[.]] destination: B17 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a819 
index: - 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a819 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1210 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
=== Succesors ===
next: v928 
=== Usages ===
v1128 
=== Predecessor ===
v920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1268 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
result meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1210 
y: v1127 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1210 y: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1128 
=== Succesors ===
trueSuccessor: v926 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1128 #trueSuccessor: v926 #falseSuccessor: v927  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:147) [bci: 69]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i839 
y: i843 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i839 y: i843  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
result [v7|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: - 
=== Succesors ===
=== Usages ===
i1213 i1217 i1218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
result [v4|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a828 
index: - 
=== Succesors ===
=== Usages ===
i1211 i1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a962 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v965 a1013 a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i117 i118 i163 i247 i246 i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.96468886457794
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v238 #falseSuccessor: v239  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1211 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1211 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?236 
guard: - 
address: v1230 
=== Succesors ===
next: v699 
=== Usages ===
v652 v431 j642 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?236 guard: - address: v1230 #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 103]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i831 
y: i1211 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i831 y: i1211  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v696 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
i1211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v696 #falseSuccessor: v698  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction v14|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1212 
=== Usages ===
i1212 
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
result [v4|QWORD[.] + v5|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a828 
index: i831 
=== Succesors ===
=== Usages ===
i1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: i831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1212 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v696 
address: v1231 
=== Succesors ===
next: v245 
=== Usages ===
v595 i597 
=== Predecessor ===
v696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v696 address: v1231 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i594 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 v600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1212 
y: i594 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1212 y: i594  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998120804190431
=== Inputs ===
condition: v595 
=== Succesors ===
trueSuccessor: v243 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
i1212 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v595 #trueSuccessor: v243 #falseSuccessor: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSX [v4|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i839 
y: i116 
=== Succesors ===
=== Usages ===
v663 i288 i645 v655 j659 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i839 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i645 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i843 
y: i246 
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i843 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i645 
=== Succesors ===
=== Usages ===
j648 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i645  <|@  <|@
f <@~|@floating>@ <|@
tid j647 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j646 
y: j647 
=== Succesors ===
=== Usages ===
j649 j660 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j646 y: j647  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i843 
=== Succesors ===
=== Usages ===
v1144 v1160 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i843  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i831 
y: i116 
=== Succesors ===
=== Usages ===
v652 i285 j644 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i831 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid a1035 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@2106755150
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@2106755150]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 a1013 a1013 a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v1143 
falseSuccessor: v1140 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v1143 #falseSuccessor: v1140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v10|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = DEC v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1152 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1152  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i247 
=== Succesors ===
=== Usages ===
j649 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i247  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j644 
y: j648 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j648  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1211 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1211  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j649 
y: j642 
=== Succesors ===
=== Usages ===
v1152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j649 y: j642  <|@  <|@
f <@~|@floating>@ <|@
tid i1034 <|@
result int[-116507|0xfffffffffffe38e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116507
stableDimension: 0
stamp: i32 [-116507] ⇊00000000fffe38e5 ⇈00000000fffe38e5
stampKind: i32
value: int[-116507|0xfffffffffffe38e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v1151 
falseSuccessor: v1148 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v1151 #falseSuccessor: v1148  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v22|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i247 
y: i1211 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i247 y: i1211  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v652 
=== Succesors ===
trueSuccessor: v1141 
falseSuccessor: v1149 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v652 #trueSuccessor: v1141 #falseSuccessor: v1149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v1141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1269 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1269  <|@  <|@
f <@*|@fixed>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116507|0xfffffffffffe38e5], v21|QWORD[.]] destination: B26 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116507|0xfffffffffffe38e5], v21|QWORD[.]] destination: B27 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1138  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v1140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B25" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1138 v1139 
=== Succesors ===
next: i1213 
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1138 v1139 #next: i1213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1213 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?236 
guard: - 
address: v1232 
=== Succesors ===
next: v1160 
=== Usages ===
v444 v663 j658 
=== Predecessor ===
v1137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?236 guard: - address: v1232 #next: v1160  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v1159 
falseSuccessor: v1156 
=== Usages ===
=== Predecessor ===
i1213 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v1159 #falseSuccessor: v1156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid j659 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i246 
=== Succesors ===
=== Usages ===
j660 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i246  <|@  <|@
f <@~|@floating>@ <|@
tid j660 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j648 
y: j659 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j648 y: j659  <|@  <|@
f <@~|@floating>@ <|@
tid j658 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1213 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1213  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j660 
y: j658 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j660 y: j658  <|@  <|@
f <@~|@floating>@ <|@
tid i1037 <|@
result int[-121627|0xfffffffffffe24e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121627
stableDimension: 0
stamp: i32 [-121627] ⇊00000000fffe24e5 ⇈00000000fffe24e5
stampKind: i32
value: int[-121627|0xfffffffffffe24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v1167 
falseSuccessor: v1164 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v1167 #falseSuccessor: v1164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v26|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i1213 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i246 y: i1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v663 
=== Succesors ===
trueSuccessor: v1157 
falseSuccessor: v1165 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v663 #trueSuccessor: v1157 #falseSuccessor: v1165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1155 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v1157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1270 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1270  <|@  <|@
f <@*|@fixed>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121627|0xfffffffffffe24e5], v21|QWORD[.]] destination: B33 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1036  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121627|0xfffffffffffe24e5], v21|QWORD[.]] destination: B34 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v1156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B32" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1154 v1155 
=== Succesors ===
next: v715 
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1154 v1155 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i839 
y: i1213 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i839 y: i1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v712 
falseSuccessor: v714 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v712 #falseSuccessor: v714  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
v452 
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
result [v7|QWORD[.] + v8|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i839 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i839  <|@  <|@
f <@~|@floating>@ <|@
tid i597 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1212 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v712 
address: v1233 
value: i597 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v712 address: v1233 value: i597 stateAfter: - lastLocationAccess: - #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v8|DWORD * 1 + 16], y: v15|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v16|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628070824028795816
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i285 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i247 i118 
=== Succesors ===
=== Usages ===
v1234 i110 i118 i110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i247 i118  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i246 i117 
=== Succesors ===
=== Usages ===
i113 v1235 i117 v73 i113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i246 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 27.175030565259714
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v87 
=== Usages ===
i285 v124 i288 v76 v95 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i843 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i288 y: i843  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.96468886457794
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627810312371998011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1214 
=== Usages ===
v657 v667 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1214  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1137 v74 
=== Succesors ===
=== Usages ===
i1214 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1137 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
result [v4|QWORD[.] + v29|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a828 
index: i285 
=== Succesors ===
=== Usages ===
i1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: i285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1214 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v657 
address: v1234 
=== Succesors ===
next: v115 
=== Usages ===
v600 i602 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v657 address: v1234 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1214 
y: i594 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1214 y: i594  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998120804190431
=== Inputs ===
condition: v600 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i1214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v600 #trueSuccessor: v91 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSX [v4|QWORD[.] + v29|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627808974930546260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1153 v74 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1153 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
result [v7|QWORD[.] + v30|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i288 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i288  <|@  <|@
f <@~|@floating>@ <|@
tid i602 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1214 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v667 
address: v1235 
value: i602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v667 address: v1235 value: i602 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i288 
y: i116 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i288 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i285 
y: i116 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i116  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v30|DWORD * 1 + 16], y: v31|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v32|DWORD] destination: B40 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572128182340053406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606511592562806172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid i1039 <|@
result int[-113947|0xfffffffffffe42e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113947
stableDimension: 0
stamp: i32 [-113947] ⇊00000000fffe42e5 ⇈00000000fffe42e5
stampKind: i32
value: int[-113947|0xfffffffffffe42e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113947|0xfffffffffffe42e5], Object[null]] destination: B43 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550820220435757058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v5|DWORD] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid i1032 <|@
result int[-107803|0xfffffffffffe5ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107803
stableDimension: 0
stamp: i32 [-107803] ⇊00000000fffe5ae5 ⇈00000000fffe5ae5
stampKind: i32
value: int[-107803|0xfffffffffffe5ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107803|0xfffffffffffe5ae5], Object[null]] destination: B45 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585249691958316624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v5|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606874077982373668
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i113 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i288 i288 i839 i839 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i288 i288 i839 i839  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i285 i285 i831 i831 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i285 i285 i831 i831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 v321 v322 
=== Succesors ===
next: v126 
=== Usages ===
i113 i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 v321 v322 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD, v35|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v35|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B67" 
    successors "B49" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607697455255345467
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i135 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i113 i163 i319 
=== Succesors ===
=== Usages ===
?137 v519 v153 v511 i163 v1237 i319 i178 v1238 i318 v502 i333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i113 i163 i319  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i110 i212 i212 
=== Succesors ===
=== Usages ===
?137 v138 i326 v1236 v511 v488 i212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i110 i212 i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1538608471419702
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v126 
=== Succesors ===
next: v147 
=== Usages ===
v213 v156 v141 i135 i132 v320 v764 v759 v724 v749 v734 v739 v744 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v126 #next: v147  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a819 a822 a825 a828 i132 i834 a836 i135 i841 - - - 
=== Succesors ===
=== Usages ===
v965 a1219 i1215 i1217 i1218 v1271 a1224 v1272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a819 a822 a825 a828 i132 i834 a836 i135 i841 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i834 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i834  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
stamp: void
trueSuccessorProbability: 0.1333650622853123
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v139 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1333650622853123 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B70" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1215 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1215 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1230 
=== Succesors ===
next: v725 
=== Usages ===
v488 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1230 #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i1215 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i1215  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v488 
=== Succesors ===
trueSuccessor: v721 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
i1215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v488 #trueSuccessor: v721 #falseSuccessor: v724  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction CMP (x: v37|DWORD, y: [v4|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1216 
=== Usages ===
i1216 
=== Predecessor ===
v725 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
result [v4|QWORD[.] + v37|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a828 
index: i132 
=== Succesors ===
=== Usages ===
i1216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a828 index: i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1216 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v721 
address: v1236 
=== Succesors ===
next: v152 
=== Usages ===
i496 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v721 address: v1236 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1216 
=== Succesors ===
=== Usages ===
v149 i164 i201 v170 v340 v342 i184 i192 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i202 v149 i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i89 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: i32
=== Inputs ===
x: i132 
y: i116 
=== Succesors ===
=== Usages ===
i132 i132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i132 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
stamp: i32
=== Inputs ===
x: i135 
y: i116 
=== Succesors ===
=== Usages ===
v1239 i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i116  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
stamp: void
trueSuccessorProbability: 0.9444530643910007
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i1216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZX [v4|QWORD[.] + v37|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444530643910007 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594225080727631168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i841 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i841  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
trueSuccessorProbability: 0.9998357154591753
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v154 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998357154591753 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1217 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1217 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1232 
=== Succesors ===
next: v735 
=== Usages ===
v502 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1232 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i1217 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v502 
=== Succesors ===
trueSuccessor: v731 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
i1217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v502 #trueSuccessor: v731 #falseSuccessor: v734  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction CMP (x: v36|DWORD, y: [v7|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
v510 
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
result [v7|QWORD[.] + v36|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i135 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
resultBits: 8
stamp: i8
=== Inputs ===
value: i496 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v731 
address: v1237 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v731 address: v1237 value: i164 stateAfter: - lastLocationAccess: - #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v36|DWORD * 1 + 16], y: v38|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v39|DWORD] destination: B53 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid i973 <|@
result int[-128795|0xfffffffffffe08e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128795
stableDimension: 0
stamp: i32 [-128795] ⇊00000000fffe08e5 ⇈00000000fffe08e5
stampKind: i32
value: int[-128795|0xfffffffffffe08e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128795|0xfffffffffffe08e5]] destination: B54 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537427112944920144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: a215 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: a215  <|@  <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@28549944
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a822 i132 a825 i135 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a822 i132 a825 i135  <|@  <|@
tid ?955 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a215 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v511 
stateDuring: ?955 
=== Succesors ===
next: v217 
=== Usages ===
v217 
=== Predecessor ===
v156 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v511 stateDuring: ?955 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stamp: void
=== Inputs ===
result: a215 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a215 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a215 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i169 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v739 
falseSuccessor: v736 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v739 #falseSuccessor: v736  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid i975 <|@
result int[-131091|0xfffffffffffdffed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131091
stableDimension: 0
stamp: i32 [-131091] ⇊00000000fffdffed ⇈00000000fffdffed
stampKind: i32
value: int[-131091|0xfffffffffffdffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131091|0xfffffffffffdffed]] destination: B57 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1136 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1136  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i339 
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v1132 
falseSuccessor: v1135 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v1132 #falseSuccessor: v1135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
v1132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result int[57344|0xe000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 57344
stableDimension: 0
stamp: i32 [57344] ⇊000000000000e000 ⇈000000000000e000
stampKind: i32
value: int[57344|0xe000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i341 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i341  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v744 
falseSuccessor: v1133 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v744 #falseSuccessor: v1133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 57344 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
result int[-131347|0xfffffffffffdfeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131347
stableDimension: 0
stamp: i32 [-131347] ⇊00000000fffdfeed ⇈00000000fffdfeed
stampKind: i32
value: int[-131347|0xfffffffffffdfeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131347|0xfffffffffffdfeed]] destination: B61 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
v1133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B59" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1130 v1131 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1130 v1131 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
stamp: i32
=== Inputs ===
x: i841 
y: i135 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i841 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i179 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v749 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v749 #falseSuccessor: v746  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SUB (x: v9|DWORD, ~y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
result int[-131603|0xfffffffffffdfded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131603
stableDimension: 0
stamp: i32 [-131603] ⇊00000000fffdfded ⇈00000000fffdfded
stampKind: i32
value: int[-131603|0xfffffffffffdfded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131603|0xfffffffffffdfded]] destination: B64 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1218 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1218 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1232 
=== Succesors ===
next: v760 
=== Usages ===
v519 v539 
=== Predecessor ===
v746 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1232 #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i1218 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v756 
falseSuccessor: v759 
=== Usages ===
=== Predecessor ===
i1218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v756 #falseSuccessor: v759  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v43|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
v640 
=== Predecessor ===
v760 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
stamp: i32
=== Inputs ===
x: i135 
y: i317 
=== Succesors ===
=== Usages ===
v539 v1240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i1218 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i318 y: i1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v761 
falseSuccessor: v764 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v761 #falseSuccessor: v764  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA [v36|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
v640 
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v761 v756 
=== Succesors ===
=== Usages ===
v527 v547 v537 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v761 v756  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
result [v7|QWORD[.] + v36|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i135 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i496 
y: i183 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i496 y: i183  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i184 
y: i182 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i184 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i185 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v640 
address: v1238 
value: i186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v640 address: v1238 value: i186 stateAfter: - lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
result [v7|QWORD[.] + v40|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i163 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i163  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i496 
y: i191 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i496 y: i191  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i192 
y: i193 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i192 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i194 
y: i89 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i194 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i195 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v640 
address: v1239 
value: i196 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v640 address: v1239 value: i196 stateAfter: - lastLocationAccess: - #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
result [v7|QWORD[.] + v44|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a836 
index: i318 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a836 index: i318  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i496 
y: i193 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i496 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i201 
y: i89 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i201 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i202 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v547 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v640 
address: v1240 
value: i203 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v640 address: v1240 value: i203 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
stamp: i32
=== Inputs ===
x: i135 
y: i179 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHR v38|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = OR v45|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v36|DWORD * 1 + 16], y: v46|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHR v38|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND v47|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR v48|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v40|DWORD * 1 + 16], y: v49|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND v38|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = OR v50|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v44|DWORD * 1 + 16], y: v51|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA [v36|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD, v39|DWORD] destination: B67 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v984  <|@  <|@
f <@~|@floating>@ <|@
tid i985 <|@
result int[-138267|0xfffffffffffde3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -138267
stableDimension: 0
stamp: i32 [-138267] ⇊00000000fffde3e5 ⇈00000000fffde3e5
stampKind: i32
value: int[-138267|0xfffffffffffde3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-138267|0xfffffffffffde3e5]] destination: B68 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid i983 <|@
result int[-133147|0xfffffffffffdf7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133147
stableDimension: 0
stamp: i32 [-133147] ⇊00000000fffdf7e5 ⇈00000000fffdf7e5
stampKind: i32
value: int[-133147|0xfffffffffffdf7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133147|0xfffffffffffdf7e5]] destination: B69 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
result int[-125211|0xfffffffffffe16e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125211
stableDimension: 0
stamp: i32 [-125211] ⇊00000000fffe16e5 ⇈00000000fffe16e5
stampKind: i32
value: int[-125211|0xfffffffffffe16e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125211|0xfffffffffffe16e5]] destination: B70 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" "B87" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: a1219 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: a1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
result [v2|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
a1219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1219 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1021) [bci: 1]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1241 
=== Succesors ===
next: v1271 
=== Usages ===
v1271 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1241 #next: v1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
object: a1219 
=== Succesors ===
next: i1220 
=== Usages ===
=== Predecessor ===
a1219 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: a1219 #next: i1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
result [v2|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
i1220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1220 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
=== Succesors ===
next: v777 
=== Usages ===
i557 
=== Predecessor ===
v1271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1242 #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1220 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1220  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 v388 v353 v362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i557 
y: i175 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i557 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v353 
=== Succesors ===
trueSuccessor: v774 
falseSuccessor: v776 
=== Usages ===
=== Predecessor ===
i1220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v353 #trueSuccessor: v774 #falseSuccessor: v776  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v53|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1221 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
result [v2|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
i1221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1221 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
=== Succesors ===
next: i1222 
=== Usages ===
v360 
=== Predecessor ===
v774 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 #next: i1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
result [v2|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
i1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1222 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
=== Succesors ===
next: v781 
=== Usages ===
i326 
=== Predecessor ===
i1221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i132 
y: i1222 
=== Succesors ===
=== Usages ===
v368 v360 v362 v569 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i132 y: i1222  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1221 
y: i326 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1221 y: i326  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
i1222 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v780 #falseSuccessor: v778  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SUB (x: v37|DWORD, ~y: [v2|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid i989 <|@
result int[-144659|0xfffffffffffdcaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144659
stableDimension: 0
stamp: i32 [-144659] ⇊00000000fffdcaed ⇈00000000fffdcaed
stampKind: i32
value: int[-144659|0xfffffffffffdcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v780 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144659|0xfffffffffffdcaed]] destination: B73 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i175 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i326 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v784 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v784 #falseSuccessor: v782  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid i993 <|@
result int[-144915|0xfffffffffffdc9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144915
stableDimension: 0
stamp: i32 [-144915] ⇊00000000fffdc9ed ⇈00000000fffdc9ed
stampKind: i32
value: int[-144915|0xfffffffffffdc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v784 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144915|0xfffffffffffdc9ed]] destination: B75 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1223 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1223  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
i1223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1223 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
=== Succesors ===
next: v789 
=== Usages ===
v368 
=== Predecessor ===
v782 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i1223 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i326 y: i1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v368 
=== Succesors ===
trueSuccessor: v788 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
i1223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v368 #trueSuccessor: v788 #falseSuccessor: v786  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid i995 <|@
result int[-146451|0xfffffffffffdc3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -146451
stableDimension: 0
stamp: i32 [-146451] ⇊00000000fffdc3ed ⇈00000000fffdc3ed
stampKind: i32
value: int[-146451|0xfffffffffffdc3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v788 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-146451|0xfffffffffffdc3ed]] destination: B77 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B86" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1224 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1224  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
result [v3|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
a1224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1224 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1021) [bci: 1]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1247 
=== Succesors ===
next: v1272 
=== Usages ===
v1272 
=== Predecessor ===
v786 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1247 #next: v1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
object: a1224 
=== Succesors ===
next: i1225 
=== Usages ===
=== Predecessor ===
a1224 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: a1224 #next: i1225  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
result [v3|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
i1225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1225 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
=== Succesors ===
next: v801 
=== Usages ===
i580 
=== Predecessor ===
v1272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1225 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1225  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i580 
y: i175 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i580 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v800 
=== Usages ===
=== Predecessor ===
i1225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v798 #falseSuccessor: v800  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v57|DWORD[.] = MOV [v3|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v57|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVZXB [v3|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1226 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
result [v3|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1226 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
=== Succesors ===
next: i1227 
=== Usages ===
v386 
=== Predecessor ===
v798 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1250 #next: i1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
result [v3|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
i1227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1227 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
=== Succesors ===
next: v805 
=== Usages ===
i333 
=== Predecessor ===
i1226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i135 
y: i1227 
=== Succesors ===
=== Usages ===
v394 v386 v388 v589 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i135 y: i1227  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1226 
y: i333 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1226 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v804 
falseSuccessor: v802 
=== Usages ===
=== Predecessor ===
i1227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v804 #falseSuccessor: v802  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v3|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v36|DWORD, ~y: [v3|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid i1001 <|@
result int[-150035|0xfffffffffffdb5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150035
stableDimension: 0
stamp: i32 [-150035] ⇊00000000fffdb5ed ⇈00000000fffdb5ed
stampKind: i32
value: int[-150035|0xfffffffffffdb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150035|0xfffffffffffdb5ed]] destination: B80 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i175 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v808 
falseSuccessor: v806 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v808 #falseSuccessor: v806  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid i1005 <|@
result int[-150291|0xfffffffffffdb4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150291
stableDimension: 0
stamp: i32 [-150291] ⇊00000000fffdb4ed ⇈00000000fffdb4ed
stampKind: i32
value: int[-150291|0xfffffffffffdb4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150291|0xfffffffffffdb4ed]] destination: B82 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1228 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1228  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
i1228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1228 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
=== Succesors ===
next: v813 
=== Usages ===
v394 
=== Predecessor ===
v806 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i1228 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i1228  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v394 
=== Succesors ===
trueSuccessor: v812 
falseSuccessor: v810 
=== Usages ===
=== Predecessor ===
i1228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v394 #trueSuccessor: v812 #falseSuccessor: v810  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: [v3|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid i1007 <|@
result int[-151571|0xfffffffffffdafed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151571
stableDimension: 0
stamp: i32 [-151571] ⇊00000000fffdafed ⇈00000000fffdafed
stampKind: i32
value: int[-151571|0xfffffffffffdafed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v812 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-151571|0xfffffffffffdafed]] destination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
result [v2|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a822 
index: - 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
value: i326 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1245 value: i326 stateAfter: - lastLocationAccess: - #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
result [v3|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a825 
index: - 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
value: i333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1251 value: i333 stateAfter: - lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid a222 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
rawvalue: CoderResult@1617107905
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1617107905]
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 488]
stamp: void
=== Inputs ===
result: a222 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a222 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
result int[-148755|0xfffffffffffdbaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148755
stableDimension: 0
stamp: i32 [-148755] ⇊00000000fffdbaed ⇈00000000fffdbaed
stampKind: i32
value: int[-148755|0xfffffffffffdbaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148755|0xfffffffffffdbaed]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
result int[-142867|0xfffffffffffdd1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -142867
stableDimension: 0
stamp: i32 [-142867] ⇊00000000fffdd1ed ⇈00000000fffdd1ed
stampKind: i32
value: int[-142867|0xfffffffffffdd1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
v776 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-142867|0xfffffffffffdd1ed]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B70" "B54" "B57" "B61" "B64" "B69" "B68" "B73" "B87" "B75" "B77" "B80" "B86" "B82" "B84" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i963 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-151571 - -123915] ⇊00000000fffc00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v959 
values: i969 i973 i975 i977 i979 i983 i985 i989 i991 i993 i995 i1001 i1003 i1005 i1007 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v959 values: i969 i973 i975 i977 i979 i983 i985 i989 i991 i993 i995 i1001 i1003 i1005 i1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v968 v972 v974 v976 v978 v982 v984 v988 v990 v992 v994 v1000 v1002 v1004 v1006 
=== Succesors ===
next: v965 
=== Usages ===
i963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v968 v972 v974 v976 v978 v982 v984 v988 v990 v992 v994 v1000 v1002 v1004 v1006 #next: v965  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
actionAndReason: i963 
speculation: a962 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?137 actionAndReason: i963 speculation: a962  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 59]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@*|@fixed>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v927 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106044|0xfffffffffffe61c4], v13|QWORD[.]] destination: B89 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid a1023 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1022 <|@
result int[-105788|0xfffffffffffe62c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105788
stableDimension: 0
stamp: i32 [-105788] ⇊00000000fffe62c4 ⇈00000000fffe62c4
stampKind: i32
value: int[-105788|0xfffffffffffe62c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1095 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105788|0xfffffffffffe62c4], v63|QWORD[.]] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid a1020 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@476788275
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1019 <|@
result int[-104764|0xfffffffffffe66c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104764
stableDimension: 0
stamp: i32 [-104764] ⇊00000000fffe66c4 ⇈00000000fffe66c4
stampKind: i32
value: int[-104764|0xfffffffffffe66c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104764|0xfffffffffffe66c4], v64|QWORD[.]] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid a1017 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1016 <|@
result int[-103740|0xfffffffffffe6ac4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103740
stableDimension: 0
stamp: i32 [-103740] ⇊00000000fffe6ac4 ⇈00000000fffe6ac4
stampKind: i32
value: int[-103740|0xfffffffffffe6ac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103740|0xfffffffffffe6ac4], v65|QWORD[.]] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid a1011 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@659636619
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1010 <|@
result int[-102716|0xfffffffffffe6ec4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102716
stableDimension: 0
stamp: i32 [-102716] ⇊00000000fffe6ec4 ⇈00000000fffe6ec4
stampKind: i32
value: int[-102716|0xfffffffffffe6ec4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102716|0xfffffffffffe6ec4], v66|QWORD[.]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B89" "B93" "B92" "B91" "B90" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1012 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-121627 - -102716] ⇊00000000fffe00c4 ⇈00000000fffe7ff5
valueDescription: i32
=== Inputs ===
merge: v1008 
values: i1027 i1032 i1034 i1037 i1039 i1027 i1010 i1016 i1019 i1022 i1034 i1037 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1008 values: i1027 i1032 i1034 i1037 i1039 i1027 i1010 i1016 i1019 i1022 i1034 i1037  <|@  <|@
f <@~|@floating>@ <|@
tid a1013 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v1008 
values: a1028 a962 a1035 a1035 a962 a1028 a1011 a1017 a1020 a1023 a1035 a1035 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1008 values: a1028 a962 a1035 a1035 a962 a1028 a1011 a1017 a1020 a1023 a1035 a1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1026 v1031 v1033 v1036 v1038 v1100 v1101 v1102 v1103 v1104 v1269 v1270 
=== Succesors ===
next: v1014 
=== Usages ===
i1012 a1013 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1026 v1031 v1033 v1036 v1038 v1100 v1101 v1102 v1103 v1104 v1269 v1270 #next: v1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?236 
actionAndReason: i1012 
speculation: a1013 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?236 actionAndReason: i1012 speculation: a1013  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD, v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v68|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3705102c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [v0|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOV [v0|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOV [v0|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD[.], y: v7|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B93" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v7|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B92" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v4|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B91" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: [v11|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction v14|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSX [v4|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v10|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = DEC v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B25" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B32" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v8|DWORD * 1 + 16], y: v15|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v16|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627810312371998011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSX [v4|QWORD[.] + v29|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627808974930546260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v30|DWORD * 1 + 16], y: v31|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v32|DWORD] destination: B40 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628070824028795816
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606511592562806172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606874077982373668
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD, v35|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v35|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B67" 
    successors "B49" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607697455255345467
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1333650622853123 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B70" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction CMP (x: v37|DWORD, y: [v4|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZX [v4|QWORD[.] + v37|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444530643910007 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594225080727631168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998357154591753 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction CMP (x: v36|DWORD, y: [v7|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v36|DWORD * 1 + 16], y: v38|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v39|DWORD] destination: B53 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 57344 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B59" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SUB (x: v9|DWORD, ~y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v43|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA [v36|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHR v38|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = OR v45|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v36|DWORD * 1 + 16], y: v46|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHR v38|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND v47|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR v48|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v40|DWORD * 1 + 16], y: v49|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND v38|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = OR v50|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v44|DWORD * 1 + 16], y: v51|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA [v36|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD, v39|DWORD] destination: B67 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" "B87" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v53|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SUB (x: v37|DWORD, ~y: [v2|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B86" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v57|DWORD[.] = MOV [v3|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v57|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVZXB [v3|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v3|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v36|DWORD, ~y: [v3|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: [v3|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v26|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v22|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585249691958316624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v5|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572128182340053406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550820220435757058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v5|DWORD] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537427112944920144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106044|0xfffffffffffe61c4], v70|QWORD[.]] destination: B17 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B89" "B93" "B92" "B91" "B90" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD, v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v68|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150035|0xfffffffffffdb5ed]] destination: B80 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B70" "B54" "B57" "B61" "B64" "B69" "B68" "B73" "B87" "B75" "B77" "B80" "B86" "B82" "B84" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148755|0xfffffffffffdbaed]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144915|0xfffffffffffdc9ed]] destination: B75 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116507|0xfffffffffffe38e5], v73|QWORD[.]] destination: B27 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-142867|0xfffffffffffdd1ed]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131603|0xfffffffffffdfded]] destination: B64 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131347|0xfffffffffffdfeed]] destination: B61 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121627|0xfffffffffffe24e5], v72|QWORD[.]] destination: B33 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131091|0xfffffffffffdffed]] destination: B57 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121627|0xfffffffffffe24e5], v71|QWORD[.]] destination: B34 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106044|0xfffffffffffe61c4], v69|QWORD[.]] destination: B89 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150291|0xfffffffffffdb4ed]] destination: B82 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133147|0xfffffffffffdf7e5]] destination: B69 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105788|0xfffffffffffe62c4], v63|QWORD[.]] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-146451|0xfffffffffffdc3ed]] destination: B77 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113947|0xfffffffffffe42e5], Object[null]] destination: B43 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144659|0xfffffffffffdcaed]] destination: B73 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107803|0xfffffffffffe5ae5], Object[null]] destination: B45 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116507|0xfffffffffffe38e5], v74|QWORD[.]] destination: B26 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128795|0xfffffffffffe08e5]] destination: B54 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-151571|0xfffffffffffdafed]] destination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104764|0xfffffffffffe66c4], v64|QWORD[.]] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103740|0xfffffffffffe6ac4], v65|QWORD[.]] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-138267|0xfffffffffffde3e5]] destination: B68 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102716|0xfffffffffffe6ec4], v66|QWORD[.]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125211|0xfffffffffffe16e5]] destination: B70 -> B88 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3705102c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOV [rsi|QWORD + 88] size: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r13|QWORD[.] = MOV [rsi|QWORD + 80] size: QWORD <|@ <|@
      nr   12  <|@ instruction r14|QWORD[.] = MOV [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = MOV [rsi|QWORD + 64] size: QWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = MOV [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD[.] = MOV [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOV [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   46  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B93" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B92" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B91" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>} <|@ <|@
      nr  102  <|@ instruction CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rdx|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [rbx:0, r10:0, r11:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: r11|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] stack:44|DWORD stack:40|DWORD rbx|QWORD[.] stack:48|DWORD stack:36|DWORD rdx|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr  180  <|@ instruction CMP (x: rax|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|DWORD = MOVSX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction r9|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  204  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B25" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD stack:40|DWORD rbx|QWORD[.] stack:48|DWORD stack:36|DWORD rdx|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr  272  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B32" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  346  <|@ instruction rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627810312371998011
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  358  <|@ instruction rax|DWORD = MOVSX [r13|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMP rax|DWORD y: 128 size: WORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627808974930546260
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOVB (x: [rbx|QWORD[.] + rcx|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  368  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B40 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628070824028795816
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  352  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606511592562806172
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606874077982373668
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B67" 
    successors "B49" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607697455255345467
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  446  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.1333650622853123 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B70" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVZX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.9444530643910007 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594225080727631168
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction CMP (x: rdi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.9998357154591753 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  484  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B53 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction CMP rax|DWORD y: 57344 size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B59" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rcx|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:109] <|@ <|@
      nr  574  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  582  <|@ instruction CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rcx|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD <|@ <|@
      nr  592  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr  598  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  600  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  602  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  604  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOVB (x: [rbx|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  608  <|@ instruction r11|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B67 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" "B87" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr  644  <|@ instruction rax|DWORD = MOVZXB [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  646  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction CMP (x: rsi|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B86" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOVZXB [r14|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  704  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  712  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: [r14|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction CMP (x: rdx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [r14|QWORD[.] + 24], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr  762  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r11|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction r9|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rbp|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  214  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction CMP (x: r11|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585249691958316624
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572128182340053406
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550820220435757058
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537427112944920144
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143] <|@ <|@
      nr  510  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925] <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rcx|DWORD = MOVE input: int[-106044|0xfffffffffffe61c4] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B89" "B93" "B92" "B91" "B90" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B80 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B70" "B54" "B57" "B61" "B64" "B69" "B68" "B73" "B87" "B75" "B77" "B80" "B86" "B82" "B84" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r10:0, r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: rdx|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction rcx|DWORD = MOVE input: int[-148755|0xfffffffffffdbaed] <|@ <|@
      nr  768  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: int[-144915|0xfffffffffffdc9ed] <|@ <|@
      nr  678  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B75 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: int[-116507|0xfffffffffffe38e5] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B27 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction rcx|DWORD = MOVE input: int[-142867|0xfffffffffffdd1ed] <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction rcx|DWORD = MOVE input: int[-131603|0xfffffffffffdfded] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B64 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rcx|DWORD = MOVE input: int[-131347|0xfffffffffffdfeed] <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B61 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE input: int[-121627|0xfffffffffffe24e5] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B33 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr  522  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B57 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: int[-121627|0xfffffffffffe24e5] <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B34 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = MOVE input: int[-106044|0xfffffffffffe61c4] <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B89 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVE input: int[-150291|0xfffffffffffdb4ed] <|@ <|@
      nr  736  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B82 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: int[-133147|0xfffffffffffdf7e5] <|@ <|@
      nr  626  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B69 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880] <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rcx|DWORD = MOVE input: int[-105788|0xfffffffffffe62c4] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rcx|DWORD = MOVE input: int[-146451|0xfffffffffffdc3ed] <|@ <|@
      nr  692  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B77 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  390  <|@ instruction rcx|DWORD = MOVE input: int[-113947|0xfffffffffffe42e5] <|@ <|@
      nr  392  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B43 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: int[-144659|0xfffffffffffdcaed] <|@ <|@
      nr  664  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B73 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: int[-107803|0xfffffffffffe5ae5] <|@ <|@
      nr  414  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B45 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[-116507|0xfffffffffffe38e5] <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[-128795|0xfffffffffffe08e5] <|@ <|@
      nr  494  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B54 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: int[-151571|0xfffffffffffdafed] <|@ <|@
      nr  750  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275] <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction rcx|DWORD = MOVE input: int[-104764|0xfffffffffffe66c4] <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120] <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE input: int[-103740|0xfffffffffffe6ac4] <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction rcx|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5] <|@ <|@
      nr  618  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B68 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619] <|@ <|@
      nr  888  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rcx|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr  892  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: int[-125211|0xfffffffffffe16e5] <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B70 -> B88 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3705102c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOV [rsi|QWORD + 88] size: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r13|QWORD[.] = MOV [rsi|QWORD + 80] size: QWORD <|@ <|@
      nr   12  <|@ instruction r14|QWORD[.] = MOV [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = MOV [rsi|QWORD + 64] size: QWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = MOV [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD[.] = MOV [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOV [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   46  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B93" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B92" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B12" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B12 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B91" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>} <|@ <|@
      nr  102  <|@ instruction CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B16" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B16 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr  170  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction CMP (x: rdx|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [rbx:0, r10:0, r11:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: r11|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] stack:44|DWORD stack:40|DWORD rbx|QWORD[.] stack:48|DWORD stack:36|DWORD rdx|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr  180  <|@ instruction CMP (x: rax|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606864364367359771
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|DWORD = MOVSX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction r9|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  204  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B30" "B36" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD stack:40|DWORD rbx|QWORD[.] stack:48|DWORD stack:36|DWORD rdx|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr  272  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606862731506905931
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  346  <|@ instruction rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627810312371998011
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  358  <|@ instruction rax|DWORD = MOVSX [r13|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMP rax|DWORD y: 128 size: WORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627808974930546260
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOVB (x: [rbx|QWORD[.] + rcx|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  368  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B40 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628070824028795816
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  352  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606511592562806172
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606874077982373668
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B67" 
    successors "B49" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607697455255345467
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  446  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.1333650622853123 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B70" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594522506000586692
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVZX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.9444530643910007 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594225080727631168
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction CMP (x: rdi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.9998357154591753 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594224249930779337
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  484  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B53 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B63" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B58 -> B63 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4571408826520971335
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction CMP rax|DWORD y: 57344 size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rcx|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:109] <|@ <|@
      nr  574  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  582  <|@ instruction CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575912426148341831
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rcx|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD <|@ <|@
      nr  592  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr  598  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  600  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  602  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  604  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOVB (x: [rbx|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  608  <|@ instruction r11|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B67 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" "B87" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr  644  <|@ instruction rax|DWORD = MOVZXB [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  646  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction CMP (x: rsi|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B86" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr  702  <|@ instruction rax|DWORD = MOVZXB [r14|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  704  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  712  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: [r14|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction CMP (x: rdx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606873870283160709
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [r14|QWORD[.] + 24], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr  762  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r11|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction r9|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B36 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rbp|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  214  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction CMP (x: r11|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B29" "B26" 
    xhandlers
    flags 
    probability 4602359131879535435
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B29 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585249691958316624
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4572128182340053406
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550820220435757058
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537427112944920144
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143] <|@ <|@
      nr  510  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925] <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rcx|DWORD = MOVE input: int[-106044|0xfffffffffffe61c4] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B89" "B93" "B92" "B91" "B90" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B80 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B70" "B54" "B57" "B61" "B64" "B69" "B68" "B73" "B87" "B75" "B77" "B80" "B86" "B82" "B84" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r10:0, r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: rdx|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction rcx|DWORD = MOVE input: int[-148755|0xfffffffffffdbaed] <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: int[-144915|0xfffffffffffdc9ed] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B75 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: int[-116507|0xfffffffffffe38e5] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B27 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction rcx|DWORD = MOVE input: int[-142867|0xfffffffffffdd1ed] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction rcx|DWORD = MOVE input: int[-131603|0xfffffffffffdfded] <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B64 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rcx|DWORD = MOVE input: int[-131347|0xfffffffffffdfeed] <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B61 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE input: int[-121627|0xfffffffffffe24e5] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B33 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B57 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: int[-121627|0xfffffffffffe24e5] <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B34 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = MOVE input: int[-106044|0xfffffffffffe61c4] <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B89 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVE input: int[-150291|0xfffffffffffdb4ed] <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B82 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: int[-133147|0xfffffffffffdf7e5] <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B69 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880] <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rcx|DWORD = MOVE input: int[-105788|0xfffffffffffe62c4] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rcx|DWORD = MOVE input: int[-146451|0xfffffffffffdc3ed] <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B77 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  390  <|@ instruction rcx|DWORD = MOVE input: int[-113947|0xfffffffffffe42e5] <|@ <|@
      nr  392  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B43 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: int[-144659|0xfffffffffffdcaed] <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B73 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: int[-107803|0xfffffffffffe5ae5] <|@ <|@
      nr  414  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B45 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150] <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[-116507|0xfffffffffffe38e5] <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[-128795|0xfffffffffffe08e5] <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B54 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: int[-151571|0xfffffffffffdafed] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275] <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction rcx|DWORD = MOVE input: int[-104764|0xfffffffffffe66c4] <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120] <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE input: int[-103740|0xfffffffffffe6ac4] <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction rcx|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B68 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619] <|@ <|@
      nr  888  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rcx|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4] <|@ <|@
      nr  892  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: int[-125211|0xfffffffffffe16e5] <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B70 -> B88 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488b5e5848895c24204c8b6e504c8b76484c8b5640448b5e38448b46304c8b4e288b4e208b7e188b5610897c241c448944241844895c2414894c24108954240c4c892c244d8bea498bd9e800000000904885db0f840d000000817b08addeadde0f85760500004d85ed0f840e00000041817d08addeadde0f85230500004d85f60f841c000000418b460848beaddeaddeaddeadde483b34c5380000000f85cc0400004c8b14244d85d20f840e00000041817a08addeadde0f85ed0300004c8b5c24204d85db0f84ad02000041817b08addeadde8b54240c0f858f0300003b5424100f8e44020000418b450c3b4424140f8619040000448b442414430fbf7445106681fe80000f83360200008b4c2410ffc1448bca442bc94d63c949ffc9418bf8ffc73bd10f8fe20100008b430c3bd10f8fb80100003b4424100f86a3030000448b5c24104288741b108bf7e919000000410fbf4475106681f880000f83d801000088440b10ffc1ffc63bd17fe3448bde458bc3448bd98b7c241c448b4c241890453bc80f8ecb000000453b450c0f837b040000430fb7444510418bf0ffc6418bd3ffc281f8800000000f8320000000413bfb0f8e95010000443b5b0c0f83980300004288441b10448bc6448bdaebb181f8000800000f826202000081f800d800000f820c00000081f800e000000f821e0200008bcf412bcb83f9030f8c090200008b4b0c413bcb0f8693020000418d6b023bcd0f86b90300008bc8c1e90c81c9e000000042884c1b108bc8c1e90683e13f81c980000000884c131083e03f81c88000000088442b10458d5b03448bc6e92cffffff418b422c418504c4410fb6422885c00f859a010000418b421c418bf0412b72243bf00f8f8802000085f60f8c56010000413b720c0f8c4a020000418b462c418504c4410fb6462885c00f8530010000418b461c418bd3412b56243bd00f8fff00000085d20f8cd8010000413b560c0f8c9c020000418972184189561848b8addeaddeaddeadde488b6c24304883c438850500000000c5f877c34c63d94d03d9448bc84d3bcb0f86480100003bc10f872efeffffe90c0100004863ef4903e9448bd84c3bdd0f86c30000003bc70f8704feffffe90a0200008b4c2410448b5c2414e937feffff448bdee92ffeffff8b4c2410458bd8e923feffff498bf2418bd0498bce458bc3660f1f440000e80000000090488b6c24304883c438850500000000c5f877c38b54240c8b7c241c448b4c2418448b442414448b5c241048b9addeaddeaddeadde488bf1b9c461feff41898f9c0200004989b7a8020000e80000000090b9edb5fdff488b54242041898f9c0200004d89a7a8020000e80000000090b9edbafdffebe0b9edc9fdffebd98b7c241c448b5c2410448b4c241848b9addeaddeaddeadde488bf1b9e538feffeb9eb9edd1fdffebb0b9edfdfdffeba9b9edfefdffeba28b7c241c448b5c2410448b4c241848b9addeaddeaddeadde488bf1b9e524feffe964ffffffb9edfffdffe973ffffff8b7c241c448b5c2410448b4c241848b9addeaddeaddeadde488bf1b9e524feffe935ffffff8b7c241c448b4c2418448b442414448b5c241048b9addeaddeaddeadde488bf1b9c461feffe90bffffffb9edb4fdffe91affffffb9e5f7fdffe910ffffff8b54240c8b7c241c448b5c2410448b4c2418448b44241448b9addeaddeaddeadde488bf1b9c462feffe9c9feffffb9edc3fdffe9d8feffff48be0000000000000000b9e542feff8b7c241c448b5c2410448b4c2418e99dfeffffb9edcafdffe9acfeffff48be0000000000000000b9e55afeff8b7c241c448b4c2418448b442414448b5c2410e96cfeffff8b7c241c448b5c2410448b4c241848b9addeaddeaddeadde488bf1b9e538feffe947feffffb9e508feffe956feffffb9edaffdffe94cfeffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b9addeaddeaddeadde488bf1b9c466feffe901feffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b9addeaddeaddeadde488bf1b9c46afeffe9cffdffffb9e5e3fdffe9defdffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b9addeaddeaddeadde488bf1b9c46efeffe993fdffffb9e516feffe9a2fdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3705102c slotKind: QWORD  <||@
  Comment 48 6 rbx|QWORD[.] = MOV [rsi|QWORD + 88] size: QWORD  <||@
  Comment 52 8 stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 57 10 r13|QWORD[.] = MOV [rsi|QWORD + 80] size: QWORD  <||@
  Comment 61 12 r14|QWORD[.] = MOV [rsi|QWORD + 72] size: QWORD  <||@
  Comment 65 14 r10|QWORD[.] = MOV [rsi|QWORD + 64] size: QWORD  <||@
  Comment 69 16 r11|DWORD = MOV [rsi|QWORD + 56] size: DWORD  <||@
  Comment 73 18 r8|DWORD = MOV [rsi|QWORD + 48] size: DWORD  <||@
  Comment 77 20 r9|QWORD[.] = MOV [rsi|QWORD + 40] size: QWORD  <||@
  Comment 81 22 rcx|DWORD = MOV [rsi|QWORD + 32] size: DWORD  <||@
  Comment 84 24 rdi|DWORD = MOV [rsi|QWORD + 24] size: DWORD  <||@
  Comment 87 26 rdx|DWORD = MOV [rsi|QWORD + 16] size: DWORD  <||@
  Comment 90 28 stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 94 30 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 99 32 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 104 34 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 108 36 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 112 38 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 116 40 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 119 42 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 122 44 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 122 {Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 128 46 TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 131 48 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 137 block B2 null  <||@
  Comment 137 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 56 CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 137 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 144 58 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B93  <||@
  Comment 150 block B4 null  <||@
  Comment 150 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 66 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 153 68 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 159 block B6 null  <||@
  Comment 159 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 76 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 159 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 167 78 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B92  <||@
  Comment 173 block B8 null  <||@
  Comment 173 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 86 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 176 88 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 182 block B10 null  <||@
  Comment 182 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 98 rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 186 100 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}  <||@
  Comment 186 {meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}}  <||@
  Comment 196 102 CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 204 104 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B91  <||@
  Comment 210 block B12 null  <||@
  Comment 210 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 210 92 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 214 114 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 217 116 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B14  <||@
  Comment 223 block B14 null  <||@
  Comment 223 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 223 126 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 223 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 231 128 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B16 falseDestination: B14 -> B90  <||@
  Comment 237 block B16 null  <||@
  Comment 237 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 120 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 242 138 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 245 140 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 251 block B18 null  <||@
  Comment 251 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 164 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}  <||@
  Comment 251 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}}  <||@
  Comment 259 170 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 263 166 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B89  <||@
  Comment 269 block B19 null  <||@
  Comment 269 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 172 CMP (x: rdx|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 273 174 BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46  <||@
  Comment 279 block B20 null  <||@
  Comment 279 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 178 rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:73]  <||@
  Comment 279 [rbx:0, r10:0, r11:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4               |5               |6             |7               |8               |9          |10  |11 
     locals:  |r11|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD  |rbx|QWORD[.]  |stack:48|DWORD  |stack:36|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 279 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 283 180 CMP (x: rax|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 287 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45  <||@
  Comment 293 block B21 null  <||@
  Comment 293 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 186 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 298 188 rsi|DWORD = MOVSX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 304 190 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 309 192 BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44  <||@
  Comment 315 block B22 null  <||@
  Comment 315 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 196 rcx|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 321 198 r9|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 327 200 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 330 202 r9|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 333 204 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 338 206 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 340 208 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29  <||@
  Comment 346 block B29 null  <||@
  Comment 346 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 270 rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:73]  <||@
  Comment 346 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5               |6             |7               |8               |9          |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |stack:40|DWORD  |rbx|QWORD[.]  |stack:48|DWORD  |stack:36|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 346 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 349 272 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 351 274 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B36  <||@
  Comment 357 block B36 null  <||@
  Comment 357 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 336 CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 361 338 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43  <||@
  Comment 367 block B37 null  <||@
  Comment 367 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 342 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 372 344 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 377 346 rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 379 348 JUMP ~[] destination: B37 -> B38  <||@
  Comment 384 block B39 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 384 356 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 384 358 rax|DWORD = MOVSX [r13|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD  <||@
  Comment 390 360 CMP rax|DWORD y: 128 size: WORD  <||@
  Comment 395 362 BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 401 block B40 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 401 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 366 MOVB (x: [rbx|QWORD[.] + rcx|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 405 368 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 407 370 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 409 372 JUMP ~[] destination: B40 -> B38  <||@
  Comment 409 block B38 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 409 350 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 409 352 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 411 354 BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 413 block B42 null  <||@
  Comment 413 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 382 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 416 384 JUMP ~[] destination: B42 -> B47  <||@
  Comment 416 block B47 null  <||@
  Comment 416 432 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 416 434 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 419 436 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 422 438 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 426 440 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 431 442 JUMP ~[] destination: B47 -> B48  <||@
  Comment 431 block B48 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 431 444 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 432 446 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 435 448 BRANCH trueDestinationProbability: 0.1333650622853123 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B71  <||@
  Comment 441 block B49 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 441 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 452 CMP (x: r8|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD state [bci:109]  <||@
  Comment 441 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 441 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 445 454 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B70  <||@
  Comment 451 block B50 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 451 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 458 rax|DWORD = MOVZX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 457 460 rsi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 462 462 rdx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 467 464 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 473 466 BRANCH trueDestinationProbability: 0.9444530643910007 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56  <||@
  Comment 479 block B51 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 479 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 470 CMP (x: rdi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 482 472 BRANCH trueDestinationProbability: 0.9998357154591753 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 488 block B52 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 488 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 476 CMP (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD state [bci:109]  <||@
  Comment 488 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 488 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 492 478 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 498 block B53 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 498 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 482 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 503 484 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 506 486 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 509 488 JUMP ~[] destination: B53 -> B48  <||@
  Comment 511 block B56 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 511 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 514 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 517 516 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 523 block B58 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 523 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 528 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 529 530 BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B58 -> B63 falseDestination: B58 -> B60  <||@
  Comment 535 block B60 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 535 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 538 CMP rax|DWORD y: 57344 size: DWORD  <||@
  Comment 541 540 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B63  <||@
  Comment 547 block B63 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 547 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 547 556 rcx|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 552 558 CMP rcx|DWORD y: 3 size: DWORD  <||@
  Comment 555 560 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 561 block B65 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 561 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 572 rcx|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:109]  <||@
  Comment 561 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 561 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 564 574 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 567 576 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B69  <||@
  Comment 573 block B66 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 573 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 580 rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 577 582 CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 579 584 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 585 block B67 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 585 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 588 rcx|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 590 590 rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD  <||@
  Comment 596 592 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 601 594 rcx|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 606 596 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 609 598 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 615 600 MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 619 602 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 622 604 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 628 606 MOVB (x: [rbx|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 632 608 r11|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 636 610 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 639 612 JUMP ~[] destination: B67 -> B48  <||@
  Comment 644 block B71 null  <||@
  Comment 644 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 640 rax|DWORD[.] = MOV [r10|QWORD[.] + 44] size: DWORD state [bci:109]  <||@
  Comment 644 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 644 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 648 642 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109]  <||@
  Comment 648 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 648 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 652 644 rax|DWORD = MOVZXB [r10|QWORD[.] + 40] size: DWORD  <||@
  Comment 657 646 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 659 648 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B87  <||@
  Comment 665 block B72 null  <||@
  Comment 665 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 652 rax|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 669 654 rsi|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 36]) size: DWORD  <||@
  Comment 676 656 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 678 658 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 684 block B74 null  <||@
  Comment 684 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 684 670 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 686 672 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 692 block B76 null  <||@
  Comment 692 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 692 684 CMP (x: rsi|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 696 686 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 702 block B78 null  <||@
  Comment 702 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 698 rax|DWORD[.] = MOV [r14|QWORD[.] + 44] size: DWORD state [bci:109]  <||@
  Comment 702 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 702 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 706 700 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109]  <||@
  Comment 706 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 706 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 710 702 rax|DWORD = MOVZXB [r14|QWORD[.] + 40] size: DWORD  <||@
  Comment 715 704 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 717 706 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B86  <||@
  Comment 723 block B79 null  <||@
  Comment 723 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 710 rax|DWORD = MOV [r14|QWORD[.] + 28] size: DWORD  <||@
  Comment 727 712 rdx|DWORD = SUB (x: r11|DWORD, ~y: [r14|QWORD[.] + 36]) size: DWORD  <||@
  Comment 734 714 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 736 716 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 742 block B81 null  <||@
  Comment 742 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 742 728 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 744 730 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 750 block B83 null  <||@
  Comment 750 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 742 CMP (x: rdx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 754 744 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 760 block B85 null  <||@
  Comment 760 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 756 MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 764 758 MOV (x: [r14|QWORD[.] + 24], y: rdx|DWORD) size: DWORD  <||@
  Comment 768 760 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905]  <||@
  Comment 768 {Object[CoderResult@1617107905]}  <||@
  Comment 778 762 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 787 12  <||@
  Comment 797 block B30 null  <||@
  Comment 797 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 278 r11|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 800 280 r11|QWORD = ADD (x: r11|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 803 282 r9|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 806 284 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 809 286 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34  <||@
  Comment 815 block B31 null  <||@
  Comment 815 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 290 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 817 292 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 828 block B23 null  <||@
  Comment 828 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 828 212 rbp|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 831 214 rbp|QWORD = ADD (x: rbp|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 834 216 r11|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 837 218 CMP (x: r11|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 840 220 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27  <||@
  Comment 846 block B24 null  <||@
  Comment 846 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 224 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 848 226 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B29 falseDestination: B24 -> B26  <||@
  Comment 859 block B46 null  <||@
  Comment 859 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 426 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 863 428 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 868 430 JUMP ~[] destination: B46 -> B47  <||@
  Comment 873 block B41 null  <||@
  Comment 873 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 376 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 876 378 JUMP ~[] destination: B41 -> B47  <||@
  Comment 881 block B44 null  <||@
  Comment 881 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 402 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 885 404 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 888 406 JUMP ~[] destination: B44 -> B47  <||@
  Comment 893 block B55 null  <||@
  Comment 893 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 893 500 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 896 502 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 899 504 rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 902 506 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 905 508 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143]  <||@
  Comment 905 8  <||@
  Comment 911 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 916 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 917 510 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 926 12  <||@
  Comment 936 block B17 null  <||@
  Comment 936 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 936 144 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 940 146 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 944 148 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 949 150 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 954 152 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 959 154 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]  <||@
  Comment 959 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]}  <||@
  Comment 969 156 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 972 158 rcx|DWORD = MOVE input: int[-106044|0xfffffffffffe61c4]  <||@
  Comment 977 160 JUMP ~[] destination: B17 -> B94  <||@
  Comment 977 block B94 null  <||@
  Comment 977 894 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 977 896 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 984 898 MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 991 900 DEOPT info [bci:73]  <||@
  Comment 991 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 996 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9          |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 997 block B80 null  <||@
  Comment 997 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 720 rcx|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed]  <||@
  Comment 1002 724 JUMP ~[] destination: B80 -> B88  <||@
  Comment 1002 block B88 null  <||@
  Comment 1002 780 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1002 634 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1007 782 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1014 784 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1021 786 DEOPT info [bci:109]  <||@
  Comment 1021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1026 [rdx:0, rbx:0, r10:0, r13:0, r14:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 1027 block B86 null  <||@
  Comment 1027 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1027 766 rcx|DWORD = MOVE input: int[-148755|0xfffffffffffdbaed]  <||@
  Comment 1032 770 JUMP ~[] destination: B86 -> B88  <||@
  Comment 1034 block B75 null  <||@
  Comment 1034 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1034 676 rcx|DWORD = MOVE input: int[-144915|0xfffffffffffdc9ed]  <||@
  Comment 1039 680 JUMP ~[] destination: B75 -> B88  <||@
  Comment 1041 block B27 null  <||@
  Comment 1041 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1041 250 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1045 252 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1050 254 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1055 256 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150]  <||@
  Comment 1055 {Object[d.a@2106755150]}  <||@
  Comment 1065 258 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1068 260 rcx|DWORD = MOVE input: int[-116507|0xfffffffffffe38e5]  <||@
  Comment 1073 262 JUMP ~[] destination: B27 -> B94  <||@
  Comment 1075 block B87 null  <||@
  Comment 1075 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 774 rcx|DWORD = MOVE input: int[-142867|0xfffffffffffdd1ed]  <||@
  Comment 1080 778 JUMP ~[] destination: B87 -> B88  <||@
  Comment 1082 block B64 null  <||@
  Comment 1082 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1082 564 rcx|DWORD = MOVE input: int[-131603|0xfffffffffffdfded]  <||@
  Comment 1087 568 JUMP ~[] destination: B64 -> B88  <||@
  Comment 1089 block B61 null  <||@
  Comment 1089 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1089 544 rcx|DWORD = MOVE input: int[-131347|0xfffffffffffdfeed]  <||@
  Comment 1094 548 JUMP ~[] destination: B61 -> B88  <||@
  Comment 1096 block B33 null  <||@
  Comment 1096 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1096 300 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1100 302 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1105 304 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1110 306 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150]  <||@
  Comment 1110 {Object[d.a@2106755150]}  <||@
  Comment 1120 308 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1123 310 rcx|DWORD = MOVE input: int[-121627|0xfffffffffffe24e5]  <||@
  Comment 1128 312 JUMP ~[] destination: B33 -> B94  <||@
  Comment 1133 block B57 null  <||@
  Comment 1133 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 520 rcx|DWORD = MOVE input: int[-131091|0xfffffffffffdffed]  <||@
  Comment 1138 524 JUMP ~[] destination: B57 -> B88  <||@
  Comment 1143 block B34 null  <||@
  Comment 1143 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1143 316 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1147 318 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1152 320 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1157 322 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150]  <||@
  Comment 1157 {Object[d.a@2106755150]}  <||@
  Comment 1167 324 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 326 rcx|DWORD = MOVE input: int[-121627|0xfffffffffffe24e5]  <||@
  Comment 1175 328 JUMP ~[] destination: B34 -> B94  <||@
  Comment 1180 block B89 null  <||@
  Comment 1180 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1180 792 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1184 794 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1189 796 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1194 798 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1199 800 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]  <||@
  Comment 1199 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]}  <||@
  Comment 1209 802 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1212 804 rcx|DWORD = MOVE input: int[-106044|0xfffffffffffe61c4]  <||@
  Comment 1217 806 JUMP ~[] destination: B89 -> B94  <||@
  Comment 1222 block B82 null  <||@
  Comment 1222 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1222 734 rcx|DWORD = MOVE input: int[-150291|0xfffffffffffdb4ed]  <||@
  Comment 1227 738 JUMP ~[] destination: B82 -> B88  <||@
  Comment 1232 block B69 null  <||@
  Comment 1232 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1232 624 rcx|DWORD = MOVE input: int[-133147|0xfffffffffffdf7e5]  <||@
  Comment 1237 628 JUMP ~[] destination: B69 -> B88  <||@
  Comment 1242 block B90 null  <||@
  Comment 1242 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1242 810 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1246 812 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1250 814 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1255 816 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1260 818 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1265 820 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880]  <||@
  Comment 1265 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880]}  <||@
  Comment 1275 822 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1278 824 rcx|DWORD = MOVE input: int[-105788|0xfffffffffffe62c4]  <||@
  Comment 1283 826 JUMP ~[] destination: B90 -> B94  <||@
  Comment 1288 block B77 null  <||@
  Comment 1288 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 690 rcx|DWORD = MOVE input: int[-146451|0xfffffffffffdc3ed]  <||@
  Comment 1293 694 JUMP ~[] destination: B77 -> B88  <||@
  Comment 1298 block B43 null  <||@
  Comment 1298 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1298 388 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1308 390 rcx|DWORD = MOVE input: int[-113947|0xfffffffffffe42e5]  <||@
  Comment 1313 392 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1317 394 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1322 396 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1327 398 JUMP ~[] destination: B43 -> B94  <||@
  Comment 1332 block B73 null  <||@
  Comment 1332 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 662 rcx|DWORD = MOVE input: int[-144659|0xfffffffffffdcaed]  <||@
  Comment 1337 666 JUMP ~[] destination: B73 -> B88  <||@
  Comment 1342 block B45 null  <||@
  Comment 1342 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 410 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1352 412 rcx|DWORD = MOVE input: int[-107803|0xfffffffffffe5ae5]  <||@
  Comment 1357 414 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1361 416 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1366 418 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1371 420 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1376 422 JUMP ~[] destination: B45 -> B94  <||@
  Comment 1381 block B26 null  <||@
  Comment 1381 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1381 234 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1385 236 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1390 238 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1395 240 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150]  <||@
  Comment 1395 {Object[d.a@2106755150]}  <||@
  Comment 1405 242 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1408 244 rcx|DWORD = MOVE input: int[-116507|0xfffffffffffe38e5]  <||@
  Comment 1413 246 JUMP ~[] destination: B26 -> B94  <||@
  Comment 1418 block B54 null  <||@
  Comment 1418 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1418 492 rcx|DWORD = MOVE input: int[-128795|0xfffffffffffe08e5]  <||@
  Comment 1423 496 JUMP ~[] destination: B54 -> B88  <||@
  Comment 1428 block B84 null  <||@
  Comment 1428 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 748 rcx|DWORD = MOVE input: int[-151571|0xfffffffffffdafed]  <||@
  Comment 1433 752 JUMP ~[] destination: B84 -> B88  <||@
  Comment 1438 block B91 null  <||@
  Comment 1438 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1438 830 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1442 832 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1446 834 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1451 836 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1456 838 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1461 840 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1465 842 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275]  <||@
  Comment 1465 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275]}  <||@
  Comment 1475 844 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1478 846 rcx|DWORD = MOVE input: int[-104764|0xfffffffffffe66c4]  <||@
  Comment 1483 848 JUMP ~[] destination: B91 -> B94  <||@
  Comment 1488 block B92 null  <||@
  Comment 1488 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1488 852 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1492 854 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1496 856 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1501 858 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1506 860 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1511 862 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1515 864 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120]  <||@
  Comment 1515 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120]}  <||@
  Comment 1525 866 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1528 868 rcx|DWORD = MOVE input: int[-103740|0xfffffffffffe6ac4]  <||@
  Comment 1533 870 JUMP ~[] destination: B92 -> B94  <||@
  Comment 1538 block B68 null  <||@
  Comment 1538 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 616 rcx|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5]  <||@
  Comment 1543 620 JUMP ~[] destination: B68 -> B88  <||@
  Comment 1548 block B93 null  <||@
  Comment 1548 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1548 874 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1552 876 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1556 878 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1561 880 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1566 882 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1571 884 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1575 886 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619]  <||@
  Comment 1575 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619]}  <||@
  Comment 1585 888 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1588 890 rcx|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4]  <||@
  Comment 1593 892 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1598 block B70 null  <||@
  Comment 1598 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1598 632 rcx|DWORD = MOVE input: int[-125211|0xfffffffffffe16e5]  <||@
  Comment 1603 636 JUMP ~[] destination: B70 -> B88  <||@
  Comment 1608 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1608 4  <||@
  Comment 1614 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1614 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotOSRCompilation-6164[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)@73]"
  method "HotSpotOSRCompilation-6164[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)@73]"
  date 1527005114315
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10743a420 448b560849c1e203493bc20f852fba3cff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488b5e5848895c24204c8b6e504c8b76484c8b5640448b5e38448b46304c8b4e288b4e208b7e188b5610897c241c448944241844895c2414894c24108954240c4c892c244d8bea498bd9e801b181ff904885db0f840d000000817b08f50000f80f85760500004d85ed0f840e00000041817d08410000f80f85230500004d85f60f841c000000418b460848be209102c007000000483b34c5380000000f85cc0400004c8b14244d85d20f840e00000041817a08c26300f80f85ed0300004c8b5c24204d85db0f84ad02000041817b08d45100f88b54240c0f858f0300003b5424100f8e44020000418b450c3b4424140f8619040000448b442414430fbf7445106681fe80000f83360200008b4c2410ffc1448bca442bc94d63c949ffc9418bf8ffc73bd10f8fe20100008b430c3bd10f8fb80100003b4424100f86a3030000448b5c24104288741b108bf7e919000000410fbf4475106681f880000f83d801000088440b10ffc1ffc63bd17fe3448bde458bc3448bd98b7c241c448b4c241890453bc80f8ecb000000453b450c0f837b040000430fb7444510418bf0ffc6418bd3ffc281f8800000000f8320000000413bfb0f8e95010000443b5b0c0f83980300004288441b10448bc6448bdaebb181f8000800000f826202000081f800d800000f820c00000081f800e000000f821e0200008bcf412bcb83f9030f8c090200008b4b0c413bcb0f8693020000418d6b023bcd0f86b90300008bc8c1e90c81c9e000000042884c1b108bc8c1e90683e13f81c980000000884c131083e03f81c88000000088442b10458d5b03448bc6e92cffffff418b422c418504c4410fb6422885c00f859a010000418b421c418bf0412b72243bf00f8f8802000085f60f8c56010000413b720c0f8c4a020000418b462c418504c4410fb6462885c00f8530010000418b461c418bd3412b56243bd00f8fff00000085d20f8cd8010000413b560c0f8c9c020000418972184189561848b8b8b91ac006000000488b6c24304883c4388505cd4845fdc5f877c34c63d94d03d9448bc84d3bcb0f86480100003bc10f872efeffffe90c0100004863ef4903e9448bd84c3bdd0f86c30000003bc70f8704feffffe90a0200008b4c2410448b5c2414e937feffff448bdee92ffeffff8b4c2410458bd8e923feffff498bf2418bd0498bce458bc3660f1f440000e86cbd3cff90488b6c24304883c4388505424845fdc5f877c38b54240c8b7c241c448b4c2418448b442414448b5c241048b9503bea6f07000000488bf1b9c461feff41898f9c0200004989b7a8020000e8facd3cff90b9edb5fdff488b54242041898f9c0200004d89a7a8020000e8dccd3cff90b9edbafdffebe0b9edc9fdffebd98b7c241c448b5c2410448b4c241848b9b8c9067807000000488bf1b9e538feffeb9eb9edd1fdffebb0b9edfdfdffeba9b9edfefdffeba28b7c241c448b5c2410448b4c241848b9b8c9067807000000488bf1b9e524feffe964ffffffb9edfffdffe973ffffff8b7c241c448b5c2410448b4c241848b9b8c9067807000000488bf1b9e524feffe935ffffff8b7c241c448b4c2418448b442414448b5c241048b9503bea6f07000000488bf1b9c461feffe90bffffffb9edb4fdffe91affffffb9e5f7fdffe910ffffff8b54240c8b7c241c448b5c2410448b4c2418448b44241448b9c03dea6f07000000488bf1b9c462feffe9c9feffffb9edc3fdffe9d8feffff48be0000000000000000b9e542feff8b7c241c448b5c2410448b4c2418e99dfeffffb9edcafdffe9acfeffff48be0000000000000000b9e55afeff8b7c241c448b4c2418448b442414448b5c2410e96cfeffff8b7c241c448b5c2410448b4c241848b9b8c9067807000000488bf1b9e538feffe947feffffb9e508feffe956feffffb9edaffdffe94cfeffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b90040ea6f07000000488bf1b9c466feffe901feffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b94042ea6f07000000488bf1b9c46afeffe9cffdffffb9e5e3fdffe9defdffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b9a047ea6f07000000488bf1b9c46efeffe993fdffffb9e516feffe9a2fdffffe8b3fb80ff90e88dca3cff90f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3705102c slotKind: QWORD  <||@
  Comment 48 6 rbx|QWORD[.] = MOV [rsi|QWORD + 88] size: QWORD  <||@
  Comment 52 8 stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 57 10 r13|QWORD[.] = MOV [rsi|QWORD + 80] size: QWORD  <||@
  Comment 61 12 r14|QWORD[.] = MOV [rsi|QWORD + 72] size: QWORD  <||@
  Comment 65 14 r10|QWORD[.] = MOV [rsi|QWORD + 64] size: QWORD  <||@
  Comment 69 16 r11|DWORD = MOV [rsi|QWORD + 56] size: DWORD  <||@
  Comment 73 18 r8|DWORD = MOV [rsi|QWORD + 48] size: DWORD  <||@
  Comment 77 20 r9|QWORD[.] = MOV [rsi|QWORD + 40] size: QWORD  <||@
  Comment 81 22 rcx|DWORD = MOV [rsi|QWORD + 32] size: DWORD  <||@
  Comment 84 24 rdi|DWORD = MOV [rsi|QWORD + 24] size: DWORD  <||@
  Comment 87 26 rdx|DWORD = MOV [rsi|QWORD + 16] size: DWORD  <||@
  Comment 90 28 stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 94 30 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 99 32 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 104 34 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 108 36 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 112 38 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 116 40 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 119 42 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 122 44 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 122 {Stub<OSR_migration_end(long)void>@0x106c555a0:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 128 46 TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 131 48 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 137 block B2 null  <||@
  Comment 137 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 56 CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 137 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 144 58 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B93  <||@
  Comment 150 block B4 null  <||@
  Comment 150 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 66 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 153 68 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 159 block B6 null  <||@
  Comment 159 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 76 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 159 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 167 78 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B92  <||@
  Comment 173 block B8 null  <||@
  Comment 173 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 86 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 176 88 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 182 block B10 null  <||@
  Comment 182 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 98 rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 186 100 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}  <||@
  Comment 186 {meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}}  <||@
  Comment 196 102 CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 204 104 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B91  <||@
  Comment 210 block B12 null  <||@
  Comment 210 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 210 92 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 214 114 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 217 116 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B14  <||@
  Comment 223 block B14 null  <||@
  Comment 223 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 223 126 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 223 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 231 128 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B16 falseDestination: B14 -> B90  <||@
  Comment 237 block B16 null  <||@
  Comment 237 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 120 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 242 138 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 245 140 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 251 block B18 null  <||@
  Comment 251 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 164 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}  <||@
  Comment 251 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}}  <||@
  Comment 259 170 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 263 166 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B89  <||@
  Comment 269 block B19 null  <||@
  Comment 269 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 172 CMP (x: rdx|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 273 174 BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46  <||@
  Comment 279 block B20 null  <||@
  Comment 279 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 178 rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:73]  <||@
  Comment 279 [rbx:0, r10:0, r11:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4               |5               |6             |7               |8               |9          |10  |11 
     locals:  |r11|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD  |rbx|QWORD[.]  |stack:48|DWORD  |stack:36|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 279 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 283 180 CMP (x: rax|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 287 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45  <||@
  Comment 293 block B21 null  <||@
  Comment 293 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 186 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 298 188 rsi|DWORD = MOVSX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 304 190 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 309 192 BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44  <||@
  Comment 315 block B22 null  <||@
  Comment 315 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 196 rcx|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 321 198 r9|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 327 200 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 330 202 r9|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 333 204 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 338 206 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 340 208 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29  <||@
  Comment 346 block B29 null  <||@
  Comment 346 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 270 rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:73]  <||@
  Comment 346 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5               |6             |7               |8               |9          |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |stack:40|DWORD  |rbx|QWORD[.]  |stack:48|DWORD  |stack:36|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 346 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 349 272 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 351 274 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B36  <||@
  Comment 357 block B36 null  <||@
  Comment 357 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 336 CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 361 338 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43  <||@
  Comment 367 block B37 null  <||@
  Comment 367 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 342 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 372 344 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 377 346 rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 379 348 JUMP ~[] destination: B37 -> B38  <||@
  Comment 384 block B39 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 384 356 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 384 358 rax|DWORD = MOVSX [r13|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD  <||@
  Comment 390 360 CMP rax|DWORD y: 128 size: WORD  <||@
  Comment 395 362 BRANCH trueDestinationProbability: 0.9998120804190431 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 401 block B40 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 401 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 366 MOVB (x: [rbx|QWORD[.] + rcx|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 405 368 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 407 370 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 409 372 JUMP ~[] destination: B40 -> B38  <||@
  Comment 409 block B38 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 409 350 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 409 352 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 411 354 BRANCH trueDestinationProbability: 0.96468886457794 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 413 block B42 null  <||@
  Comment 413 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 382 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 416 384 JUMP ~[] destination: B42 -> B47  <||@
  Comment 416 block B47 null  <||@
  Comment 416 432 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 416 434 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 419 436 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 422 438 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 426 440 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 431 442 JUMP ~[] destination: B47 -> B48  <||@
  Comment 431 block B48 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 431 444 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 432 446 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 435 448 BRANCH trueDestinationProbability: 0.1333650622853123 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B71  <||@
  Comment 441 block B49 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 441 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 452 CMP (x: r8|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD state [bci:109]  <||@
  Comment 441 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 441 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 445 454 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B70  <||@
  Comment 451 block B50 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 451 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 458 rax|DWORD = MOVZX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 457 460 rsi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 462 462 rdx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 467 464 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 473 466 BRANCH trueDestinationProbability: 0.9444530643910007 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56  <||@
  Comment 479 block B51 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 479 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 470 CMP (x: rdi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 482 472 BRANCH trueDestinationProbability: 0.9998357154591753 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 488 block B52 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 488 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 476 CMP (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD state [bci:109]  <||@
  Comment 488 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 488 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 492 478 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 498 block B53 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 498 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 482 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 503 484 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 506 486 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 509 488 JUMP ~[] destination: B53 -> B48  <||@
  Comment 511 block B56 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 511 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 514 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 517 516 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 523 block B58 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 523 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 528 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 529 530 BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B58 -> B63 falseDestination: B58 -> B60  <||@
  Comment 535 block B60 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 535 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 538 CMP rax|DWORD y: 57344 size: DWORD  <||@
  Comment 541 540 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B63  <||@
  Comment 547 block B63 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 547 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 547 556 rcx|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 552 558 CMP rcx|DWORD y: 3 size: DWORD  <||@
  Comment 555 560 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 561 block B65 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 561 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 572 rcx|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:109]  <||@
  Comment 561 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 561 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 564 574 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 567 576 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B69  <||@
  Comment 573 block B66 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 573 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 580 rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 577 582 CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 579 584 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 585 block B67 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 585 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 588 rcx|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 590 590 rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD  <||@
  Comment 596 592 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 601 594 rcx|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 606 596 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 609 598 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 615 600 MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 619 602 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 622 604 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 628 606 MOVB (x: [rbx|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 632 608 r11|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 636 610 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 639 612 JUMP ~[] destination: B67 -> B48  <||@
  Comment 644 block B71 null  <||@
  Comment 644 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 640 rax|DWORD[.] = MOV [r10|QWORD[.] + 44] size: DWORD state [bci:109]  <||@
  Comment 644 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 644 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 648 642 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109]  <||@
  Comment 648 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 648 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 652 644 rax|DWORD = MOVZXB [r10|QWORD[.] + 40] size: DWORD  <||@
  Comment 657 646 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 659 648 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B87  <||@
  Comment 665 block B72 null  <||@
  Comment 665 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 652 rax|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 669 654 rsi|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 36]) size: DWORD  <||@
  Comment 676 656 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 678 658 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 684 block B74 null  <||@
  Comment 684 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 684 670 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 686 672 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 692 block B76 null  <||@
  Comment 692 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 692 684 CMP (x: rsi|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 696 686 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 702 block B78 null  <||@
  Comment 702 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 698 rax|DWORD[.] = MOV [r14|QWORD[.] + 44] size: DWORD state [bci:109]  <||@
  Comment 702 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 702 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 706 700 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109]  <||@
  Comment 706 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 706 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 710 702 rax|DWORD = MOVZXB [r14|QWORD[.] + 40] size: DWORD  <||@
  Comment 715 704 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 717 706 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B86  <||@
  Comment 723 block B79 null  <||@
  Comment 723 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 710 rax|DWORD = MOV [r14|QWORD[.] + 28] size: DWORD  <||@
  Comment 727 712 rdx|DWORD = SUB (x: r11|DWORD, ~y: [r14|QWORD[.] + 36]) size: DWORD  <||@
  Comment 734 714 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 736 716 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 742 block B81 null  <||@
  Comment 742 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 742 728 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 744 730 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 750 block B83 null  <||@
  Comment 750 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 742 CMP (x: rdx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 754 744 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 760 block B85 null  <||@
  Comment 760 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 756 MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 764 758 MOV (x: [r14|QWORD[.] + 24], y: rdx|DWORD) size: DWORD  <||@
  Comment 768 760 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905]  <||@
  Comment 768 {Object[CoderResult@1617107905]}  <||@
  Comment 778 762 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 787 12  <||@
  Comment 797 block B30 null  <||@
  Comment 797 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 278 r11|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 800 280 r11|QWORD = ADD (x: r11|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 803 282 r9|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 806 284 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 809 286 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34  <||@
  Comment 815 block B31 null  <||@
  Comment 815 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 290 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 817 292 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 828 block B23 null  <||@
  Comment 828 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 828 212 rbp|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 831 214 rbp|QWORD = ADD (x: rbp|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 834 216 r11|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 837 218 CMP (x: r11|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 840 220 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27  <||@
  Comment 846 block B24 null  <||@
  Comment 846 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 224 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 848 226 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B29 falseDestination: B24 -> B26  <||@
  Comment 859 block B46 null  <||@
  Comment 859 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 426 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 863 428 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 868 430 JUMP ~[] destination: B46 -> B47  <||@
  Comment 873 block B41 null  <||@
  Comment 873 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 376 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 876 378 JUMP ~[] destination: B41 -> B47  <||@
  Comment 881 block B44 null  <||@
  Comment 881 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 402 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 885 404 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 888 406 JUMP ~[] destination: B44 -> B47  <||@
  Comment 893 block B55 null  <||@
  Comment 893 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 893 500 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 896 502 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 899 504 rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 902 506 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 905 508 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143]  <||@
  Comment 905 8  <||@
  Comment 911 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 916 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 917 510 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 926 12  <||@
  Comment 936 block B17 null  <||@
  Comment 936 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 936 144 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 940 146 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 944 148 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 949 150 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 954 152 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 959 154 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]  <||@
  Comment 959 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]}  <||@
  Comment 969 156 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 972 158 rcx|DWORD = MOVE input: int[-106044|0xfffffffffffe61c4]  <||@
  Comment 977 160 JUMP ~[] destination: B17 -> B94  <||@
  Comment 977 block B94 null  <||@
  Comment 977 894 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 977 896 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 984 898 MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 991 900 DEOPT info [bci:73]  <||@
  Comment 991 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 996 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9          |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 997 block B80 null  <||@
  Comment 997 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 720 rcx|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed]  <||@
  Comment 1002 724 JUMP ~[] destination: B80 -> B88  <||@
  Comment 1002 block B88 null  <||@
  Comment 1002 780 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1002 634 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1007 782 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1014 784 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1021 786 DEOPT info [bci:109]  <||@
  Comment 1021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1026 [rdx:0, rbx:0, r10:0, r13:0, r14:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 1027 block B86 null  <||@
  Comment 1027 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1027 766 rcx|DWORD = MOVE input: int[-148755|0xfffffffffffdbaed]  <||@
  Comment 1032 770 JUMP ~[] destination: B86 -> B88  <||@
  Comment 1034 block B75 null  <||@
  Comment 1034 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1034 676 rcx|DWORD = MOVE input: int[-144915|0xfffffffffffdc9ed]  <||@
  Comment 1039 680 JUMP ~[] destination: B75 -> B88  <||@
  Comment 1041 block B27 null  <||@
  Comment 1041 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1041 250 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1045 252 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1050 254 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1055 256 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150]  <||@
  Comment 1055 {Object[d.a@2106755150]}  <||@
  Comment 1065 258 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1068 260 rcx|DWORD = MOVE input: int[-116507|0xfffffffffffe38e5]  <||@
  Comment 1073 262 JUMP ~[] destination: B27 -> B94  <||@
  Comment 1075 block B87 null  <||@
  Comment 1075 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 774 rcx|DWORD = MOVE input: int[-142867|0xfffffffffffdd1ed]  <||@
  Comment 1080 778 JUMP ~[] destination: B87 -> B88  <||@
  Comment 1082 block B64 null  <||@
  Comment 1082 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1082 564 rcx|DWORD = MOVE input: int[-131603|0xfffffffffffdfded]  <||@
  Comment 1087 568 JUMP ~[] destination: B64 -> B88  <||@
  Comment 1089 block B61 null  <||@
  Comment 1089 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1089 544 rcx|DWORD = MOVE input: int[-131347|0xfffffffffffdfeed]  <||@
  Comment 1094 548 JUMP ~[] destination: B61 -> B88  <||@
  Comment 1096 block B33 null  <||@
  Comment 1096 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1096 300 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1100 302 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1105 304 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1110 306 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150]  <||@
  Comment 1110 {Object[d.a@2106755150]}  <||@
  Comment 1120 308 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1123 310 rcx|DWORD = MOVE input: int[-121627|0xfffffffffffe24e5]  <||@
  Comment 1128 312 JUMP ~[] destination: B33 -> B94  <||@
  Comment 1133 block B57 null  <||@
  Comment 1133 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 520 rcx|DWORD = MOVE input: int[-131091|0xfffffffffffdffed]  <||@
  Comment 1138 524 JUMP ~[] destination: B57 -> B88  <||@
  Comment 1143 block B34 null  <||@
  Comment 1143 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1143 316 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1147 318 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1152 320 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1157 322 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150]  <||@
  Comment 1157 {Object[d.a@2106755150]}  <||@
  Comment 1167 324 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 326 rcx|DWORD = MOVE input: int[-121627|0xfffffffffffe24e5]  <||@
  Comment 1175 328 JUMP ~[] destination: B34 -> B94  <||@
  Comment 1180 block B89 null  <||@
  Comment 1180 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1180 792 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1184 794 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1189 796 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1194 798 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1199 800 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]  <||@
  Comment 1199 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@496775925]}  <||@
  Comment 1209 802 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1212 804 rcx|DWORD = MOVE input: int[-106044|0xfffffffffffe61c4]  <||@
  Comment 1217 806 JUMP ~[] destination: B89 -> B94  <||@
  Comment 1222 block B82 null  <||@
  Comment 1222 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1222 734 rcx|DWORD = MOVE input: int[-150291|0xfffffffffffdb4ed]  <||@
  Comment 1227 738 JUMP ~[] destination: B82 -> B88  <||@
  Comment 1232 block B69 null  <||@
  Comment 1232 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1232 624 rcx|DWORD = MOVE input: int[-133147|0xfffffffffffdf7e5]  <||@
  Comment 1237 628 JUMP ~[] destination: B69 -> B88  <||@
  Comment 1242 block B90 null  <||@
  Comment 1242 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1242 810 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1246 812 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1250 814 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1255 816 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1260 818 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1265 820 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880]  <||@
  Comment 1265 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1874852880]}  <||@
  Comment 1275 822 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1278 824 rcx|DWORD = MOVE input: int[-105788|0xfffffffffffe62c4]  <||@
  Comment 1283 826 JUMP ~[] destination: B90 -> B94  <||@
  Comment 1288 block B77 null  <||@
  Comment 1288 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 690 rcx|DWORD = MOVE input: int[-146451|0xfffffffffffdc3ed]  <||@
  Comment 1293 694 JUMP ~[] destination: B77 -> B88  <||@
  Comment 1298 block B43 null  <||@
  Comment 1298 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1298 388 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1308 390 rcx|DWORD = MOVE input: int[-113947|0xfffffffffffe42e5]  <||@
  Comment 1313 392 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1317 394 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1322 396 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1327 398 JUMP ~[] destination: B43 -> B94  <||@
  Comment 1332 block B73 null  <||@
  Comment 1332 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 662 rcx|DWORD = MOVE input: int[-144659|0xfffffffffffdcaed]  <||@
  Comment 1337 666 JUMP ~[] destination: B73 -> B88  <||@
  Comment 1342 block B45 null  <||@
  Comment 1342 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 410 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1352 412 rcx|DWORD = MOVE input: int[-107803|0xfffffffffffe5ae5]  <||@
  Comment 1357 414 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1361 416 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1366 418 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1371 420 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1376 422 JUMP ~[] destination: B45 -> B94  <||@
  Comment 1381 block B26 null  <||@
  Comment 1381 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1381 234 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1385 236 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1390 238 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1395 240 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2106755150]  <||@
  Comment 1395 {Object[d.a@2106755150]}  <||@
  Comment 1405 242 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1408 244 rcx|DWORD = MOVE input: int[-116507|0xfffffffffffe38e5]  <||@
  Comment 1413 246 JUMP ~[] destination: B26 -> B94  <||@
  Comment 1418 block B54 null  <||@
  Comment 1418 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1418 492 rcx|DWORD = MOVE input: int[-128795|0xfffffffffffe08e5]  <||@
  Comment 1423 496 JUMP ~[] destination: B54 -> B88  <||@
  Comment 1428 block B84 null  <||@
  Comment 1428 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 748 rcx|DWORD = MOVE input: int[-151571|0xfffffffffffdafed]  <||@
  Comment 1433 752 JUMP ~[] destination: B84 -> B88  <||@
  Comment 1438 block B91 null  <||@
  Comment 1438 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1438 830 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1442 832 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1446 834 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1451 836 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1456 838 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1461 840 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1465 842 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275]  <||@
  Comment 1465 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@476788275]}  <||@
  Comment 1475 844 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1478 846 rcx|DWORD = MOVE input: int[-104764|0xfffffffffffe66c4]  <||@
  Comment 1483 848 JUMP ~[] destination: B91 -> B94  <||@
  Comment 1488 block B92 null  <||@
  Comment 1488 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1488 852 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1492 854 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1496 856 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1501 858 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1506 860 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1511 862 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1515 864 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120]  <||@
  Comment 1515 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1529269120]}  <||@
  Comment 1525 866 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1528 868 rcx|DWORD = MOVE input: int[-103740|0xfffffffffffe6ac4]  <||@
  Comment 1533 870 JUMP ~[] destination: B92 -> B94  <||@
  Comment 1538 block B68 null  <||@
  Comment 1538 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 616 rcx|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5]  <||@
  Comment 1543 620 JUMP ~[] destination: B68 -> B88  <||@
  Comment 1548 block B93 null  <||@
  Comment 1548 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1548 874 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1552 876 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1556 878 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1561 880 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1566 882 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1571 884 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1575 886 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619]  <||@
  Comment 1575 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@659636619]}  <||@
  Comment 1585 888 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1588 890 rcx|DWORD = MOVE input: int[-102716|0xfffffffffffe6ec4]  <||@
  Comment 1593 892 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1598 block B70 null  <||@
  Comment 1598 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1598 632 rcx|DWORD = MOVE input: int[-125211|0xfffffffffffe16e5]  <||@
  Comment 1603 636 JUMP ~[] destination: B70 -> B88  <||@
  Comment 1608 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1608 4  <||@
  Comment 1614 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1614 5  <||@
  HexCodeFile>>> <|@
end_nmethod
