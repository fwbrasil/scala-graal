begin_compilation
  name " HotSpotCompilation-5319[java.util.regex.Pattern$LastNode.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-5319[java.util.regex.Pattern$LastNode.match(Matcher, int, CharSequence)]"
  date 1527005169945
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i104 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i104  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v111 v110 v108 v109 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v31 v63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$LastNode.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3433
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i3 - 
=== Succesors ===
=== Usages ===
v97 i104 i106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i3 -  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v108 
=== Succesors ===
next: v82 
=== Usages ===
v8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v108 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i104 
y: i7 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i104 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v81 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -7187
stableDimension: 0
stamp: i32 [-7187] ⇊00000000ffffe3ed ⇈00000000ffffe3ed
stampKind: i32
value: int[-7187|0xffffffffffffe3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a105  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 24]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v110 
=== Succesors ===
next: i106 
=== Usages ===
v114 v113 v112 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v110 #next: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v112 
=== Succesors ===
next: v90 
=== Usages ===
v74 
=== Predecessor ===
a105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v112 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i49 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i106 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
i106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v89 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16411
stableDimension: 0
stamp: i32 [-16411] ⇊00000000ffffbfe5 ⇈00000000ffffbfe5
stampKind: i32
value: int[-16411|0xffffffffffffbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16411 - -5899] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v91 
values: i99 i103 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v91 values: i99 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v98 v102 
=== Succesors ===
next: v97 
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v98 v102 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i95 
speculation: a94 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i95 speculation: a94  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
v54 v63 
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v109 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i107 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v109 value: i3 stateAfter: - lastLocationAccess: - #next: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
=== Succesors ===
next: v54 
=== Usages ===
v54 
=== Predecessor ===
v31 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v111 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v87 
address: v113 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
i107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v87 address: v113 value: i107 stateAfter: - lastLocationAccess: - #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v87 
address: v114 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v87 address: v114 value: i3 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3438) [bci: 44]
stamp: void
=== Inputs ===
result: i7 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i7 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i104 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i104  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v111 v110 v108 v109 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v31 v63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$LastNode.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3433
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i3 - 
=== Succesors ===
=== Usages ===
v97 i104 i106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i3 -  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i104 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v108 
=== Succesors ===
next: v82 
=== Usages ===
v8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v108 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i104 
y: i7 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i104 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v81 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@297e3bbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMP [v0|QWORD[.] + 24] y: 1 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
result int[-7187|0xffffffffffffe3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -7187
stableDimension: 0
stamp: i32 [-7187] ⇊00000000ffffe3ed ⇈00000000ffffe3ed
stampKind: i32
value: int[-7187|0xffffffffffffe3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-7187|0xffffffffffffe3ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a105  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 24]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v110 
=== Succesors ===
next: i106 
=== Usages ===
v114 v113 v112 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v110 #next: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v112 
=== Succesors ===
next: v90 
=== Usages ===
v74 
=== Predecessor ===
a105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v112 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i49 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i106 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
i106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v89 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMP [v2|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result int[-16411|0xffffffffffffbfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16411
stableDimension: 0
stamp: i32 [-16411] ⇊00000000ffffbfe5 ⇈00000000ffffbfe5
stampKind: i32
value: int[-16411|0xffffffffffffbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i95 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16411 - -5899] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v91 
values: i99 i103 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v91 values: i99 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v98 v102 
=== Succesors ===
next: v97 
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v98 v102 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i95 
speculation: a94 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i95 speculation: a94  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
v54 v63 
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v109 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i107 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v109 value: i3 stateAfter: - lastLocationAccess: - #next: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i107 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
=== Succesors ===
next: v54 
=== Usages ===
v54 
=== Predecessor ===
v31 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v111 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v87 
address: v113 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
i107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v87 address: v113 value: i107 stateAfter: - lastLocationAccess: - #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
result [v2|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v87 
address: v114 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v87 address: v114 value: i3 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3438) [bci: 44]
stamp: void
=== Inputs ===
result: i7 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i7 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@297e3bbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMP [v0|QWORD[.] + 24] y: 1 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMP [v2|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-7187|0xffffffffffffe3ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@297e3bbf slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rax:0, rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   34  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@297e3bbf slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rax:0, rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   34  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410837a18010f843f0000008b4234833cc50c000000020f8248000000894a20448b521c448914c510000000890cc514000000b801000000488b6c24104883c418850500000000c5f877c341baede3ffff4589979c0200004d89a7a8020000e8000000009041bae5bfffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@297e3bbf slotKind: QWORD  <||@
  Comment 48 10 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 58 block B2 null  <||@
  Comment 58 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 58 16 rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 61 18 CMP [rax|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0]  <||@
  Comment 61 [rax:0, rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 61 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 69 20 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B5  <||@
  Comment 75 block B5 null  <||@
  Comment 75 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 24 MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD  <||@
  Comment 78 26 r10|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 82 28 MOV (x: [rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 90 30 MOV (x: [rax|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 97 32 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 102 34 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 111 12  <||@
  Comment 121 block B1 null  <||@
  Comment 121 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 -1 r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed]  <||@
  Comment 127 38 JUMP ~[] destination: B1 -> B4  <||@
  Comment 127 block B4 null  <||@
  Comment 127 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 127 46 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 134 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 141 50 DEOPT info [bci:0]  <||@
  Comment 141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 146 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 147 block B3 null  <||@
  Comment 147 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 153 42 JUMP ~[] destination: B3 -> B4  <||@
  Comment 155 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 155 4  <||@
  Comment 161 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 161 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5319[java.util.regex.Pattern$LastNode.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-5319[java.util.regex.Pattern$LastNode.match(Matcher, int, CharSequence)]"
  date 1527005169987
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107671ee0 448b560849c1e203493bc20f856f3f19ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410837a18010f843f0000008b4234833cc50c000000020f8248000000894a20448b521c448914c510000000890cc514000000b801000000488b6c24104883c4188505b1d021fdc5f877c341baede3ffff4589979c0200004d89a7a8020000e88c5619ff9041bae5bfffffebe4e8a0865dff90e87a5519ff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@297e3bbf slotKind: QWORD  <||@
  Comment 48 10 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 58 block B2 null  <||@
  Comment 58 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 58 16 rax|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 61 18 CMP [rax|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:0]  <||@
  Comment 61 [rax:0, rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 61 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 69 20 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B5  <||@
  Comment 75 block B5 null  <||@
  Comment 75 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 24 MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD  <||@
  Comment 78 26 r10|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 82 28 MOV (x: [rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 90 30 MOV (x: [rax|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 97 32 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 102 34 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 111 12  <||@
  Comment 121 block B1 null  <||@
  Comment 121 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 -1 r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed]  <||@
  Comment 127 38 JUMP ~[] destination: B1 -> B4  <||@
  Comment 127 block B4 null  <||@
  Comment 127 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 127 46 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 134 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 141 50 DEOPT info [bci:0]  <||@
  Comment 141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 146 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 147 block B3 null  <||@
  Comment 147 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 153 42 JUMP ~[] destination: B3 -> B4  <||@
  Comment 155 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 155 4  <||@
  Comment 161 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 161 5  <||@
  HexCodeFile>>> <|@
end_nmethod
