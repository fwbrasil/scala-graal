begin_compilation
  name " HotSpotCompilation-6865[java.util.HashMap$EntrySet.iterator()]"
  method "HotSpotCompilation-6865[java.util.HashMap$EntrySet.iterator()]"
  date 1527005177733
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a249 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a249  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/HashMap$EntrySet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v256 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$EntrySet.this$0
nodeSourcePosition: at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 5]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
=== Succesors ===
next: a250 
=== Usages ===
?75 v259 v231 v234 v257 v258 ?69 ?75 ?69 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v256 #next: a250  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap$EntrySet.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1014
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v162 a250 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
a250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: true
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v258 
=== Succesors ===
next: i251 
=== Usages ===
a91 v96 v260 
=== Predecessor ===
a249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v258 #next: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 11]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
=== Succesors ===
next: v34 
=== Usages ===
v222 ?69 ?75 
=== Predecessor ===
a250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v257 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
value: a250 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a250  <|@  <|@
tid a66 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@6b63e71b
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/HashMap$EntryIterator;
type: HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?41 ?16 ?69 ?75 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<HashMap$EntrySet.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1014
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a66 
=== Succesors ===
=== Usages ===
?65 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a66  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<HashMap$EntryIterator.<init>(HashMap)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1474
stackSize: 0
=== Inputs ===
outerFrameState: ?16 
values: - - 
=== Succesors ===
=== Usages ===
?62 ?41 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?16 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1428) [bci: 33]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 i67 v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 24]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a68 a74 v170 v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 i47 a188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 0.011206967720630727
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
i251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v32 #falseSuccessor: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4577613998824328412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 41]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i252 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i252  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 42]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v259 
=== Succesors ===
next: v131 
=== Usages ===
v37 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v259 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i252 
y: i36 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i252 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
i252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v130 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339] ⇊00000000ffffa0ed ⇈00000000ffffa0ed
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i164 
speculation: a23 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i164 speculation: a23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i253 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i253  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a250 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
=== Succesors ===
next: v39 
=== Usages ===
v44 v103 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v260 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a250 
=== Succesors ===
=== Usages ===
?41 v261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a250  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
i253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v40 
values: i28 i47 
=== Succesors ===
=== Usages ===
?69 v44 i47 v261 v103 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v40 values: i28 i47  <|@  <|@
f <@~|@floating>@ <|@
tid a68 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v40 
values: a23 a113 
=== Succesors ===
=== Usages ===
?69 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v40 values: a23 a113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 6.235463538840422
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v39 
=== Succesors ===
next: v136 
=== Usages ===
v54 v58 i67 a68 v135 v140 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v39 #next: v136  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a66 
values: i251 i67 a68 - a249 a249 
=== Succesors ===
=== Usages ===
?41 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a66 values: i251 i67 a68 - a249 a249  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1430
stackSize: 0
=== Inputs ===
outerFrameState: ?65 
values: a66 - a91 
virtualObjectMappings: ?69 
=== Succesors ===
=== Usages ===
v122 v170 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?65 values: a66 - a91 virtualObjectMappings: ?69  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i253 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i67 y: i253  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v132 #falseSuccessor: v135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i253 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i67 y: i253  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v137 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v137 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a254 
=== Usages ===
a254 
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a254  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a91 
index: i67 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a91 index: i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a254 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v137 
address: v261 
=== Succesors ===
next: v61 
=== Usages ===
a113 v115 a156 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v137 address: v261 #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid a113 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a254 
=== Succesors ===
=== Usages ===
a74 a68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a254  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
value: a254 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a254  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 66]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: i32
=== Inputs ===
x: i67 
y: i36 
=== Succesors ===
=== Usages ===
i73 i67 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i67 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 0.8396269990561175
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
a254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v60 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617514565657465767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?41 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?41 #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607081475408716238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v56 
values: i28 i47 
=== Succesors ===
=== Usages ===
?75 v224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: i28 i47  <|@  <|@
f <@~|@floating>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v56 
values: a23 a113 
=== Succesors ===
=== Usages ===
?75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: a23 a113  <|@  <|@
f <@~|@floating>@ <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v56 
values: a155 a254 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: a155 a254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v55 v57 
=== Succesors ===
next: j176 
=== Usages ===
i73 a74 a156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v55 v57 #next: j176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j176 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j195 
=== Usages ===
v262 v263 
=== Predecessor ===
v56 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j195  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: - 
=== Succesors ===
=== Usages ===
j195 v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
=== Succesors ===
next: j196 
=== Usages ===
j236 j201 v267 
=== Predecessor ===
j176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v262 #next: j196  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: - 
=== Succesors ===
=== Usages ===
j196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
=== Succesors ===
next: v184 
=== Usages ===
v181 
=== Predecessor ===
j195 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v263 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j195 
y: j235 
=== Succesors ===
=== Usages ===
v181 v197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j195 y: j235  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j196 
y: j236 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j196 y: j236  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
j196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v182 #falseSuccessor: v183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a188 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a188  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a66 
values: i251 i73 a74 - a249 a249 
=== Succesors ===
=== Usages ===
?62 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a66 values: i251 i73 a74 - a249 a249  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 78
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1432
stackSize: 0
=== Inputs ===
outerFrameState: ?65 
values: - - - 
virtualObjectMappings: ?75 
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?65 values: - - - virtualObjectMappings: ?75  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a188 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?62 
arguments: v174 i238 i36 
=== Succesors ===
next: j189 
=== Usages ===
j189 
=== Predecessor ===
v182 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?62 arguments: v174 i238 i36 #next: j189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j189 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a188 
=== Succesors ===
next: v202 
=== Usages ===
j201 
=== Predecessor ===
a188 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a188 #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
j189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
value: j236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 value: j236 stateAfter: - lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v267 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v267 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v199 
values: j195 j189 
=== Succesors ===
=== Usages ===
v266 v265 a145 v268 v269 v270 v271 v272 v273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: j195 j189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 
=== Succesors ===
next: a145 
=== Usages ===
j201 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 #next: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a145 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j201 
=== Succesors ===
next: j213 
=== Usages ===
a153 
=== Predecessor ===
v199 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j201 #next: j213  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v207 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j208 
index: - 
=== Succesors ===
=== Usages ===
j213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j208 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
=== Succesors ===
next: v214 
=== Usages ===
v214 
=== Predecessor ===
a145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v264 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
value: j213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
j213 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v265 value: j213 stateAfter: - lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: v241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: v241 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v268 
value: i251 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v268 value: i251 stateAfter: - lastLocationAccess: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v269 
value: i73 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v269 value: i73 stateAfter: - lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
value: a156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v270 value: a156 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v271 
value: i28 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v271 value: i28 stateAfter: - lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v272 
value: a249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v272 value: a249 stateAfter: - lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v273 
value: a249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v273 value: a249 stateAfter: - lastLocationAccess: - #next: a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a145 
=== Succesors ===
next: v154 
=== Usages ===
v8 
=== Predecessor ===
v234 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a145 #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
a153 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v8  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 11]
stamp: void
=== Inputs ===
result: a153 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a153 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26651
stableDimension: 0
stamp: i32 [-26651] ⇊00000000ffff97e5 ⇈00000000ffff97e5
stampKind: i32
value: int[-26651|0xffffffffffff97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25875
stableDimension: 0
stamp: i32 [-25875] ⇊00000000ffff9aed ⇈00000000ffff9aed
stampKind: i32
value: int[-25875|0xffffffffffff9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-26651 - -25875] ⇊00000000ffff92e5 ⇈00000000ffff9fed
valueDescription: i32
=== Inputs ===
merge: v165 
values: i167 i172 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v165 values: i167 i172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v166 v171 
=== Succesors ===
next: v170 
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v166 v171 #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?41 
actionAndReason: i168 
speculation: a23 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?41 actionAndReason: i168 speculation: a23  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a249 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a249  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/HashMap$EntrySet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v256 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a249 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$EntrySet.this$0
nodeSourcePosition: at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 5]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
=== Succesors ===
next: a250 
=== Usages ===
?75 v259 v231 v234 v257 v258 ?69 ?75 ?69 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v256 #next: a250  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap$EntrySet.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1014
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v162 a250 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
result [v1|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
a250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a250 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: true
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v258 
=== Succesors ===
next: i251 
=== Usages ===
a91 v96 v260 
=== Predecessor ===
a249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v258 #next: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i251 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 11]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
=== Succesors ===
next: v34 
=== Usages ===
v222 ?69 ?75 
=== Predecessor ===
a250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v257 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
value: a250 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a250  <|@  <|@
tid a66 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@6b63e71b
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/HashMap$EntryIterator;
type: HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?41 ?16 ?69 ?75 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<HashMap$EntrySet.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1014
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a66 
=== Succesors ===
=== Usages ===
?65 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a66  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<HashMap$EntryIterator.<init>(HashMap)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1474
stackSize: 0
=== Inputs ===
outerFrameState: ?16 
values: - - 
=== Succesors ===
=== Usages ===
?62 ?41 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?16 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1428) [bci: 33]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 i67 v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a23 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 24]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a68 a74 v170 v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 i47 a188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 0.011206967720630727
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
i251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v32 #falseSuccessor: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@443c6aa2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 36] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4577613998824328412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid a155 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null], Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 41]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i252 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i252  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
result [v1|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i252 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 42]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v259 
=== Succesors ===
next: v131 
=== Usages ===
v37 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v259 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i252 
y: i36 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i252 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
i252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v130 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result int[-24339|0xffffffffffffa0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339] ⇊00000000ffffa0ed ⇈00000000ffffa0ed
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i164 
speculation: a23 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i164 speculation: a23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -24339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i253 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i253  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a250 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i253 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
=== Succesors ===
next: v39 
=== Usages ===
v44 v103 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v260 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a250 
=== Succesors ===
=== Usages ===
?41 v261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a250  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
i253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i67 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v40 
values: i28 i47 
=== Succesors ===
=== Usages ===
?69 v44 i47 v261 v103 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v40 values: i28 i47  <|@  <|@
f <@~|@floating>@ <|@
tid a68 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v40 
values: a23 a113 
=== Succesors ===
=== Usages ===
?69 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v40 values: a23 a113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 6.235463538840422
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v39 
=== Succesors ===
next: v136 
=== Usages ===
v54 v58 i67 a68 v135 v140 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v39 #next: v136  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a66 
values: i251 i67 a68 - a249 a249 
=== Succesors ===
=== Usages ===
?41 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a66 values: i251 i67 a68 - a249 a249  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1430
stackSize: 0
=== Inputs ===
outerFrameState: ?65 
values: a66 - a91 
virtualObjectMappings: ?69 
=== Succesors ===
=== Usages ===
v122 v170 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?65 values: a66 - a91 virtualObjectMappings: ?69  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i253 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i67 y: i253  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v132 #falseSuccessor: v135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD, v7|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i253 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i67 y: i253  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v137 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v137 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a254 
=== Usages ===
a254 
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a254  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result [v5|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a91 
index: i67 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a91 index: i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a254 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v137 
address: v261 
=== Succesors ===
next: v61 
=== Usages ===
a113 v115 a156 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v137 address: v261 #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid a113 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a254 
=== Succesors ===
=== Usages ===
a74 a68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a254  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
value: a254 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a254  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 66]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: i32
=== Inputs ===
x: i67 
y: i36 
=== Succesors ===
=== Usages ===
i73 i67 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i67 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
trueSuccessorProbability: 0.8396269990561175
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
a254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v60 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v5|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617514565657465767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?41 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?41 #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} - v5|QWORD[.] 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} Ljava/util/HashMap$EntryIterator; v3|DWORD v6|DWORD v7|QWORD[.] Object[null] v1|DWORD[.] v1|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v9|QWORD[.]] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607081475408716238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v9|QWORD[.], v8|DWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i73 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v56 
values: i28 i47 
=== Succesors ===
=== Usages ===
?75 v224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: i28 i47  <|@  <|@
f <@~|@floating>@ <|@
tid a74 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v56 
values: a23 a113 
=== Succesors ===
=== Usages ===
?75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: a23 a113  <|@  <|@
f <@~|@floating>@ <|@
tid a156 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v56 
values: a155 a254 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: a155 a254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v55 v57 
=== Succesors ===
next: j176 
=== Usages ===
i73 a74 a156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v55 v57 #next: j176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j176 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j195 
=== Usages ===
v262 v263 
=== Predecessor ===
v56 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j195  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: - 
=== Succesors ===
=== Usages ===
j195 v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j195 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
=== Succesors ===
next: j196 
=== Usages ===
j236 j201 v267 
=== Predecessor ===
j176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v262 #next: j196  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: - 
=== Succesors ===
=== Usages ===
j196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j196 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
=== Succesors ===
next: v184 
=== Usages ===
v181 
=== Predecessor ===
j195 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v263 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j195 
y: j235 
=== Succesors ===
=== Usages ===
v181 v197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j195 y: j235  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j196 
y: j236 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j196 y: j236  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
j196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v182 #falseSuccessor: v183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|QWORD[.], v13|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a188 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a188  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a66 
values: i251 i73 a74 - a249 a249 
=== Succesors ===
=== Usages ===
?62 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a66 values: i251 i73 a74 - a249 a249  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 78
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1432
stackSize: 0
=== Inputs ===
outerFrameState: ?65 
values: - - - 
virtualObjectMappings: ?75 
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?65 values: - - - virtualObjectMappings: ?75  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a188 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?62 
arguments: v174 i238 i36 
=== Succesors ===
next: j189 
=== Usages ===
j189 
=== Predecessor ===
v182 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?62 arguments: v174 i238 i36 #next: j189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j189 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a188 
=== Succesors ===
next: v202 
=== Usages ===
j201 
=== Predecessor ===
a188 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a188 #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
j189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
locals: - - - 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v11|DWORD,next=v12|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v11|DWORD,next=v12|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} Ljava/util/HashMap$EntryIterator; v3|DWORD v11|DWORD v12|QWORD[.] Object[null] v1|DWORD[.] v1|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
value: j236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 value: j236 stateAfter: - lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result [v14|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v267 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v267 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j201 <|@
result v18|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v199 
values: j195 j189 
=== Succesors ===
=== Usages ===
v266 v265 a145 v268 v269 v270 v271 v272 v273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: j195 j189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 
=== Succesors ===
next: a145 
=== Usages ===
j201 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 #next: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a145 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j201 
=== Succesors ===
next: j213 
=== Usages ===
a153 
=== Predecessor ===
v199 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j201 #next: j213  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v207 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result [v20|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j208 
index: - 
=== Succesors ===
=== Usages ===
j213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j208 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j213 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
=== Succesors ===
next: v214 
=== Usages ===
v214 
=== Predecessor ===
a145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v264 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result [v18|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
value: j213 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
j213 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v265 value: j213 stateAfter: - lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
result [v18|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
result meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: v241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: v241 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
result [v18|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v268 
value: i251 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v268 value: i251 stateAfter: - lastLocationAccess: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
result [v18|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v269 
value: i73 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v269 value: i73 stateAfter: - lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
result [v18|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
value: a156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v270 value: a156 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
result [v18|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v271 
value: i28 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v271 value: i28 stateAfter: - lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
result [v18|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v272 
value: a249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v272 value: a249 stateAfter: - lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
result [v18|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v273 
value: a249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v273 value: a249 stateAfter: - lastLocationAccess: - #next: a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a145 
=== Succesors ===
next: v154 
=== Usages ===
v8 
=== Predecessor ===
v234 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a145 #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
a153 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v8  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 11]
stamp: void
=== Inputs ===
result: a153 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a153 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v18|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [v20|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*]], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 20], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 28], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 32], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result int[-26651|0xffffffffffff97e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26651
stableDimension: 0
stamp: i32 [-26651] ⇊00000000ffff97e5 ⇈00000000ffff97e5
stampKind: i32
value: int[-26651|0xffffffffffff97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26651|0xffffffffffff97e5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
result int[-25875|0xffffffffffff9aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25875
stableDimension: 0
stamp: i32 [-25875] ⇊00000000ffff9aed ⇈00000000ffff9aed
stampKind: i32
value: int[-25875|0xffffffffffff9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25875|0xffffffffffff9aed]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i168 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-26651 - -25875] ⇊00000000ffff92e5 ⇈00000000ffff9fed
valueDescription: i32
=== Inputs ===
merge: v165 
values: i167 i172 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v165 values: i167 i172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v166 v171 
=== Succesors ===
next: v170 
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v166 v171 #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?41 
actionAndReason: i168 
speculation: a23 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?41 actionAndReason: i168 speculation: a23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} - v5|QWORD[.] 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} Ljava/util/HashMap$EntryIterator; v3|DWORD v6|DWORD v7|QWORD[.] Object[null] v1|DWORD[.] v1|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 7, 8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@443c6aa2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 36] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v5|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617514565657465767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} - v5|QWORD[.] 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} Ljava/util/HashMap$EntryIterator; v3|DWORD v6|DWORD v7|QWORD[.] Object[null] v1|DWORD[.] v1|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v9|QWORD[.]] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD, v7|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607081475408716238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v9|QWORD[.], v8|DWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|QWORD[.], v13|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v18|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [v20|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*]], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 20], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 28], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 32], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4577613998824328412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null], Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
locals: - - - 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v11|DWORD,next=v12|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v11|DWORD,next=v12|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} Ljava/util/HashMap$EntryIterator; v3|DWORD v11|DWORD v12|QWORD[.] Object[null] v1|DWORD[.] v1|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25875|0xffffffffffff9aed]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} - v5|QWORD[.] 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=v3|DWORD,index=v6|DWORD,next=v7|QWORD[.],current=Object[null],this$0=v1|DWORD[.],this$0=v1|DWORD[.]} Ljava/util/HashMap$EntryIterator; v3|DWORD v6|DWORD v7|QWORD[.] Object[null] v1|DWORD[.] v1|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 7, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -24339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26651|0xffffffffffff97e5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #5          // java.util.HashMap$EntryIterator
     3: dup           
     4: aload_0       
     5: getfield      #0          // this$0:java.util.HashMap
     8: invokespecial #4          // java.util.HashMap$EntryIterator.<init>:(java.util.HashMap)void
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@443c6aa2 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD[.] = MOV [r13|DWORD[.] * 8 + 36] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP [r13|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   60  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdx|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617514565657465767
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [rax:0, rcx:0, r11:0, r13:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} - rax|QWORD[.] 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/HashMap$EntryIterator; r14|DWORD r10|DWORD r11|QWORD[.] Object[null] r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8] <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607081475408716238
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr  130  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>} <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed} <|@ <|@
      nr  146  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  158  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4577613998824328412
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rdx|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction stack:36|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [r13:0, stack:12, stack:16]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
locals: - - - 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=stack:40|DWORD,next=stack:32|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=stack:40|DWORD,next=stack:32|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/HashMap$EntryIterator; r14|DWORD stack:40|DWORD stack:32|QWORD[.] Object[null] r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8] <|@ <|@
      nr  116  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r8|DWORD = MOVE input: int[-25875|0xffffffffffff9aed] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [rax:0, r11:0, r13:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} - rax|QWORD[.] 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/HashMap$EntryIterator; r14|DWORD r10|DWORD r11|QWORD[.] Object[null] r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 7, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOV [r15|QWORD + 668] y: -24339 size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r8|DWORD = MOVE input: int[-26651|0xffffffffffff97e5] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #5          // java.util.HashMap$EntryIterator
     3: dup           
     4: aload_0       
     5: getfield      #0          // this$0:java.util.HashMap
     8: invokespecial #4          // java.util.HashMap$EntryIterator.<init>:(java.util.HashMap)void
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@443c6aa2 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD[.] = MOV [r13|DWORD[.] * 8 + 36] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP [r13|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607081475408716237
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   60  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdx|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617514565657465767
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [rax:0, rcx:0, r11:0, r13:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} - rax|QWORD[.] 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/HashMap$EntryIterator; r14|DWORD r10|DWORD r11|QWORD[.] Object[null] r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8] <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618627847640395745
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607081475408716238
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr  130  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>} <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed} <|@ <|@
      nr  146  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  158  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4577613998824328412
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rdx|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction stack:36|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [r13:0, stack:12, stack:16]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
locals: - - - 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=stack:40|DWORD,next=stack:32|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=stack:40|DWORD,next=stack:32|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/HashMap$EntryIterator; r14|DWORD stack:40|DWORD stack:32|QWORD[.] Object[null] r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8] <|@ <|@
      nr  116  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r8|DWORD = MOVE input: int[-25875|0xffffffffffff9aed] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [rax:0, r11:0, r13:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} - rax|QWORD[.] 
java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7]
locals: - - 
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8]
stack: vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} 
locals: - 
vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]} Ljava/util/HashMap$EntryIterator; r14|DWORD r10|DWORD r11|QWORD[.] Object[null] r13|DWORD[.] r13|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 7, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOV [r15|QWORD + 668] y: -24339 size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r8|DWORD = MOVE input: int[-26651|0xffffffffffff97e5] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #5          // java.util.HashMap$EntryIterator
     3: dup           
     4: aload_0       
     5: getfield      #0          // this$0:java.util.HashMap
     8: invokespecial #4          // java.util.HashMap$EntryIterator.<init>:(java.util.HashMap)void
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420448b6e0c428b04ed24000000468b34ed1800000085c00f84d900000042833ced14000000010f8c2b0100008b34c50c00000048c1e00349bb000000000000000041ba00000000e9330000000f1f440000413bf20f8615010000428b5490108bca48c1e103458bc241ffc085d20f85160000008505000000004c8bd9458bd0413bf27fcde9b400000048894c2410498b4760488d7028493b77700f876c000000498977600f1880e8000000488bf048b9addeaddeaddeadde488b89a8000000488908c74008addeadde4489700c44894010895014448960184489681c44896820488bc6488b6c24204883c428850500000000c5f877c3ba0000000048c74424100000000041b800000000eb828954240c448944240848beaddeaddeaddeaddeba06000000b901000000e800000000908b54240c448b442408e96effffff41b8ed9affff4589879c0200004d89a7a8020000e8000000009041c7879c020000eda0ffff4d89a7a8020000e8000000009041b8e597ffffebcce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@443c6aa2 slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 8 rax|DWORD[.] = MOV [r13|DWORD[.] * 8 + 36] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r13:0]at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 r14|DWORD = MOV [r13|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 68 12 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 70 14 BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 76 block B2 null  <||@
  Comment 76 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 28 CMP [r13|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 85 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 91 block B4 null  <||@
  Comment 91 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 42 rsi|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 98 44 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3  <||@
  Comment 102 46 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 112 48 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 118 50 JUMP ~[] destination: B4 -> B5  <||@
  Comment 123 block B6 loop 0 depth 1 header:40|LoopBegin  <||@
  Comment 123 58 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 60 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 131 62 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B14  <||@
  Comment 137 block B7 loop 0 depth 1 header:40|LoopBegin  <||@
  Comment 137 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 66 rdx|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 142 68 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3  <||@
  Comment 148 70 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 154 72 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 156 74 BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 162 block B8 loop 0 depth 1 header:40|LoopBegin  <||@
  Comment 162 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 78 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8]  <||@
  Comment 162 [rax:0, rcx:0, r11:0, r13:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0                                                                                                                                                           |1  |2            
     locals:  |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}  |-  |rax|QWORD[.] 
  at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                          
     locals:  |-                                                                                                                                                          
     stack:   |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}   <||@
  Comment 162 {infopoint: SAFEPOINT}  <||@
  Comment 162 11  <||@
  Comment 168 80 r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 171 82 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 174 84 JUMP ~[] destination: B8 -> B5  <||@
  Comment 174 block B5 loop 0 depth 1 header:40|LoopBegin  <||@
  Comment 174 52 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 174 54 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 177 56 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B15  <||@
  Comment 184 block B9 null  <||@
  Comment 184 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 88 stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 189 90 JUMP ~[] destination: B9 -> B10  <||@
  Comment 189 block B10 null  <||@
  Comment 189 92 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 189 94 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 193 96 rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 197 98 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 201 100 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 207 block B12 null  <||@
  Comment 207 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 126 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 211 128 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 218 130 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 218 132 JUMP ~[] destination: B12 -> B13  <||@
  Comment 218 block B13 null  <||@
  Comment 218 134 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 218 136 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 221 138 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>}  <||@
  Comment 221 {meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>}}  <||@
  Comment 231 140 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 238 142 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 241 144 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed}  <||@
  Comment 241 {meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed}}  <||@
  Comment 248 146 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 252 148 MOV (x: [rax|QWORD[*] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 256 150 MOV (x: [rax|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 259 152 MOV (x: [rax|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 263 154 MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 267 156 MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 271 158 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 274 160 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 283 12  <||@
  Comment 293 block B1 null  <||@
  Comment 293 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 18 rdx|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 298 20 stack:32|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 307 22 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 313 24 JUMP ~[] destination: B1 -> B10  <||@
  Comment 315 block B11 null  <||@
  Comment 315 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 104 stack:36|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 319 106 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 324 108 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 324 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 334 110 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 339 112 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 344 114 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8]  <||@
  Comment 344 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 349 [r13:0, stack:12, stack:16]at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                                    
     locals:  |-                                                                                                                                                                    
     stack:   |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=stack:40|DWORD,next=stack:32|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}   <||@
  Comment 350 116 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 350 118 rdx|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 354 120 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 359 122 JUMP ~[] destination: B11 -> B13  <||@
  Comment 364 block B15 null  <||@
  Comment 364 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 170 r8|DWORD = MOVE input: int[-25875|0xffffffffffff9aed]  <||@
  Comment 370 172 JUMP ~[] destination: B15 -> B16  <||@
  Comment 370 block B16 null  <||@
  Comment 370 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 370 176 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 377 178 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 384 180 DEOPT info [bci:48, 7, 8]  <||@
  Comment 384 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 389 [rax:0, r11:0, r13:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0                                                                                                                                                           |1  |2            
     locals:  |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}  |-  |rax|QWORD[.] 
  at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                          
     locals:  |-                                                                                                                                                          
     stack:   |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}   <||@
  Comment 390 block B3 null  <||@
  Comment 390 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 34 MOV [r15|QWORD + 668] y: -24339 size: DWORD  <||@
  Comment 401 36 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 408 38 DEOPT info [bci:0]  <||@
  Comment 408 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 413 [rsi:0]at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 414 block B14 null  <||@
  Comment 414 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 164 r8|DWORD = MOVE input: int[-26651|0xffffffffffff97e5]  <||@
  Comment 420 166 JUMP ~[] destination: B14 -> B16  <||@
  Comment 422 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 422 4  <||@
  Comment 428 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 428 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6865[java.util.HashMap$EntrySet.iterator()]"
  method "HotSpotCompilation-6865[java.util.HashMap$EntrySet.iterator()]"
  date 1527005177831
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a435c0 448b560849c1e203493bc20f858f28dcfe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420448b6e0c428b04ed24000000468b34ed1800000085c00f84d900000042833ced14000000010f8c2b0100008b34c50c00000048c1e00349bb000000000000000041ba00000000e9330000000f1f440000413bf20f8615010000428b5490108bca48c1e103458bc241ffc085d20f851600000085059eb9e4fc4c8bd9458bd0413bf27fcde9b400000048894c2410498b4760488d7028493b77700f876c000000498977600f1880e8000000488bf048b9d00f08c007000000488b89a8000000488908c74008fa0101f84489700c44894010895014448960184489681c44896820488bc6488b6c24204883c428850525b9e4fcc5f877c3ba0000000048c74424100000000041b800000000eb828954240c448944240848be680b00c007000000ba06000000b901000000e8c33655ff908b54240c448b442408e96effffff41b8ed9affff4589879c0200004d89a7a8020000e8b93edcfe9041c7879c020000eda0ffff4d89a7a8020000e8a13edcfe9041b8e597ffffebcce8b56e20ff90e88f3ddcfe90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@443c6aa2 slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 8 rax|DWORD[.] = MOV [r13|DWORD[.] * 8 + 36] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r13:0]at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 r14|DWORD = MOV [r13|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 68 12 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 70 14 BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 76 block B2 null  <||@
  Comment 76 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 28 CMP [r13|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 85 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 91 block B4 null  <||@
  Comment 91 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 42 rsi|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 98 44 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3  <||@
  Comment 102 46 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 112 48 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 118 50 JUMP ~[] destination: B4 -> B5  <||@
  Comment 123 block B6 loop 0 depth 1 header:40|LoopBegin  <||@
  Comment 123 58 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 60 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 131 62 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B14  <||@
  Comment 137 block B7 loop 0 depth 1 header:40|LoopBegin  <||@
  Comment 137 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 66 rdx|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 142 68 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@738a41a0 encoding: base: 0 shift: 3  <||@
  Comment 148 70 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 154 72 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 156 74 BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 162 block B8 loop 0 depth 1 header:40|LoopBegin  <||@
  Comment 162 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 78 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8]  <||@
  Comment 162 [rax:0, rcx:0, r11:0, r13:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0                                                                                                                                                           |1  |2            
     locals:  |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}  |-  |rax|QWORD[.] 
  at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                          
     locals:  |-                                                                                                                                                          
     stack:   |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}   <||@
  Comment 162 {infopoint: SAFEPOINT}  <||@
  Comment 162 11  <||@
  Comment 168 80 r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 171 82 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 174 84 JUMP ~[] destination: B8 -> B5  <||@
  Comment 174 block B5 loop 0 depth 1 header:40|LoopBegin  <||@
  Comment 174 52 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 174 54 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 177 56 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B15  <||@
  Comment 184 block B9 null  <||@
  Comment 184 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 88 stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 189 90 JUMP ~[] destination: B9 -> B10  <||@
  Comment 189 block B10 null  <||@
  Comment 189 92 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 189 94 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 193 96 rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 197 98 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 201 100 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 207 block B12 null  <||@
  Comment 207 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 126 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 211 128 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 218 130 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 218 132 JUMP ~[] destination: B12 -> B13  <||@
  Comment 218 block B13 null  <||@
  Comment 218 134 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 218 136 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 221 138 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>}  <||@
  Comment 221 {meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>}}  <||@
  Comment 231 140 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 238 142 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 241 144 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed}  <||@
  Comment 241 {meta{HotSpotType<Ljava/util/HashMap$EntryIterator;, resolved>;compressed}}  <||@
  Comment 248 146 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 252 148 MOV (x: [rax|QWORD[*] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 256 150 MOV (x: [rax|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 259 152 MOV (x: [rax|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 263 154 MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 267 156 MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 271 158 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 274 160 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 283 12  <||@
  Comment 293 block B1 null  <||@
  Comment 293 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 18 rdx|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 298 20 stack:32|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 307 22 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 313 24 JUMP ~[] destination: B1 -> B10  <||@
  Comment 315 block B11 null  <||@
  Comment 315 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 104 stack:36|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 319 106 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 324 108 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 324 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 334 110 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 339 112 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 344 114 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8]  <||@
  Comment 344 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 349 [r13:0, stack:12, stack:16]at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                                    
     locals:  |-                                                                                                                                                                    
     stack:   |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=stack:40|DWORD,next=stack:32|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}   <||@
  Comment 350 116 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 350 118 rdx|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 354 120 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 359 122 JUMP ~[] destination: B11 -> B13  <||@
  Comment 364 block B15 null  <||@
  Comment 364 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 170 r8|DWORD = MOVE input: int[-25875|0xffffffffffff9aed]  <||@
  Comment 370 172 JUMP ~[] destination: B15 -> B16  <||@
  Comment 370 block B16 null  <||@
  Comment 370 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 370 176 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 377 178 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 384 180 DEOPT info [bci:48, 7, 8]  <||@
  Comment 384 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 389 [rax:0, r11:0, r13:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0                                                                                                                                                           |1  |2            
     locals:  |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}  |-  |rax|QWORD[.] 
  at java.util.HashMap$EntryIterator.<init>(HashMap.java:1474) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                          
     locals:  |-                                                                                                                                                          
     stack:   |vobject:HashMap$EntryIterator:0{expectedModCount=r14|DWORD,index=r10|DWORD,next=r11|QWORD[.],current=Object[null],this$0=r13|DWORD[.],this$0=r13|DWORD[.]}   <||@
  Comment 390 block B3 null  <||@
  Comment 390 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 34 MOV [r15|QWORD + 668] y: -24339 size: DWORD  <||@
  Comment 401 36 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 408 38 DEOPT info [bci:0]  <||@
  Comment 408 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 413 [rsi:0]at java.util.HashMap$EntrySet.iterator(HashMap.java:1014) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 414 block B14 null  <||@
  Comment 414 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 164 r8|DWORD = MOVE input: int[-26651|0xffffffffffff97e5]  <||@
  Comment 420 166 JUMP ~[] destination: B14 -> B16  <||@
  Comment 422 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 422 4  <||@
  Comment 428 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 428 5  <||@
  HexCodeFile>>> <|@
end_nmethod
