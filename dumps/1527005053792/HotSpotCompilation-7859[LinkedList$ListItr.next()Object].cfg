begin_compilation
  name " HotSpotCompilation-7859[java.util.LinkedList$ListItr.next()]"
  method "HotSpotCompilation-7859[java.util.LinkedList$ListItr.next()]"
  date 1527005187155
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a128 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a128  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v136 v138 v139 v142 v141 j118 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$ListItr.this$0
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/LinkedList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
=== Succesors ===
next: i129 
=== Usages ===
v140 v137 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 #next: i129  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.next()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 888
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v109 i129 a134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a128 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v137 
=== Succesors ===
next: i130 
=== Usages ===
v30 
=== Predecessor ===
a128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v137 #next: i130  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$ListItr.expectedModCount
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 8]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v94 
=== Usages ===
v30 
=== Predecessor ===
i129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i130 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i129 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i131 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i131  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i131 v75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$ListItr.nextIndex
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
=== Succesors ===
next: i132 
=== Usages ===
v36 i21 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v139 #next: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a128 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 8]
at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v140 
=== Succesors ===
next: v98 
=== Usages ===
v36 
=== Predecessor ===
i131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v140 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i131 
y: i132 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i131 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
i132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v95 #falseSuccessor: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a133 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a133  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a133 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$ListItr.next
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 21]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v141 
=== Succesors ===
next: a134 
=== Usages ===
v144 v143 v66 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v141 #next: a134  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a133 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:893) [bci: 32]
nullCheck: true
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v143 
=== Succesors ===
next: a135 
=== Usages ===
v74 
=== Predecessor ===
a133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v143 #next: a135  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a133 
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.item
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 52]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v144 
=== Succesors ===
next: v66 
=== Usages ===
a78 
=== Predecessor ===
a134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v144 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$ListItr.lastReturned
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v142 
value: a133 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j118 
=== Usages ===
=== Predecessor ===
a135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v142 value: a133 stateAfter: - lastLocationAccess: - #next: j118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v124 
=== Usages ===
j120 
=== Predecessor ===
v66 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j118 
y: i119 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j118 y: i119  <|@  <|@
f <@~|@floating>@ <|@
tid j123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: j123 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: j123  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v145 
value: i125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
j118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v145 value: i125 stateAfter: - lastLocationAccess: - #next: v74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$ListItr.next
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:893) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v141 
value: a134 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v141 value: a134 stateAfter: - lastLocationAccess: - #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 44]
stamp: i32
=== Inputs ===
x: i131 
y: i20 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i131 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList$ListItr.nextIndex
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v139 value: i21 stateAfter: - lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 52]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a135 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a135  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 55]
stamp: void
=== Inputs ===
result: a78 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a78 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14867
stableDimension: 0
stamp: i32 [-14867] ⇊00000000ffffc5ed ⇈00000000ffffc5ed
stampKind: i32
value: int[-14867|0xffffffffffffc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13587
stableDimension: 0
stamp: i32 [-13587] ⇊00000000ffffcaed ⇈00000000ffffcaed
stampKind: i32
value: int[-13587|0xffffffffffffcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17419 - -11531] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v103 
values: i113 i115 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v103 values: i113 i115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v114 
=== Succesors ===
next: v109 
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v114 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i107 
speculation: a106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i107 speculation: a106  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a128 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a128  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v136 v138 v139 v142 v141 j118 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a128 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$ListItr.this$0
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/LinkedList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
=== Succesors ===
next: i129 
=== Usages ===
v140 v137 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 #next: i129  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.next()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 888
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v109 i129 a134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a128 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v137 
=== Succesors ===
next: i130 
=== Usages ===
v30 
=== Predecessor ===
a128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v137 #next: i130  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i130 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$ListItr.expectedModCount
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 8]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v94 
=== Usages ===
v30 
=== Predecessor ===
i129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i130 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i129 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@65b99fc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i131 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i131  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i131 v75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i131 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$ListItr.nextIndex
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
=== Succesors ===
next: i132 
=== Usages ===
v36 i21 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v139 #next: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a128 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i132 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 8]
at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v140 
=== Succesors ===
next: v98 
=== Usages ===
v36 
=== Predecessor ===
i131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v140 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i131 
y: i132 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i131 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
i132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v95 #falseSuccessor: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v1|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a133 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a133  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a133 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a133 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$ListItr.next
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 21]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v141 
=== Succesors ===
next: a134 
=== Usages ===
v144 v143 v66 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v141 #next: a134  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a133 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:893) [bci: 32]
nullCheck: true
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v143 
=== Succesors ===
next: a135 
=== Usages ===
v74 
=== Predecessor ===
a133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v143 #next: a135  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a133 
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.item
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 52]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v144 
=== Succesors ===
next: v66 
=== Usages ===
a78 
=== Predecessor ===
a134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v144 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$ListItr.lastReturned
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v142 
value: a133 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j118 
=== Usages ===
=== Predecessor ===
a135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v142 value: a133 stateAfter: - lastLocationAccess: - #next: j118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j118 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v124 
=== Usages ===
j120 
=== Predecessor ===
v66 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
result v7|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j118 
y: i119 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j118 y: i119  <|@  <|@
f <@~|@floating>@ <|@
tid j123 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
result [v7|QWORD[*] + v8|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: j123 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: j123  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.next(LinkedList.java:892) [bci: 24]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v145 
value: i125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
j118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v145 value: i125 stateAfter: - lastLocationAccess: - #next: v74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$ListItr.next
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:893) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v141 
value: a134 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v141 value: a134 stateAfter: - lastLocationAccess: - #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 44]
stamp: i32
=== Inputs ===
x: i131 
y: i20 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i131 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList$ListItr.nextIndex
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v139 value: i21 stateAfter: - lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 52]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a135 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a135  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 55]
stamp: void
=== Inputs ===
result: a78 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a78 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[.] = MOV [v4|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[*] + v8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169088ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:889) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result int[-14867|0xffffffffffffc5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14867
stableDimension: 0
stamp: i32 [-14867] ⇊00000000ffffc5ed ⇈00000000ffffc5ed
stampKind: i32
value: int[-14867|0xffffffffffffc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14867|0xffffffffffffc5ed]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result int[-13587|0xffffffffffffcaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13587
stableDimension: 0
stamp: i32 [-13587] ⇊00000000ffffcaed ⇈00000000ffffcaed
stampKind: i32
value: int[-13587|0xffffffffffffcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13587|0xffffffffffffcaed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17419 - -11531] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v103 
values: i113 i115 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v103 values: i113 i115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v114 
=== Succesors ===
next: v109 
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v114 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i107 
speculation: a106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i107 speculation: a106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@65b99fc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v1|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[.] = MOV [v4|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[*] + v8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169088ac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13587|0xffffffffffffcaed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14867|0xffffffffffffc5ed]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #11         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@65b99fc slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: r10|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r8|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   38  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   40  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169088ac encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-13587|0xffffffffffffcaed] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14867|0xffffffffffffc5ed] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #11         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@65b99fc slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: r10|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r8|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   38  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   40  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169088ac encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-13587|0xffffffffffffcaed] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14867|0xffffffffffffc5ed] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #11         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b14c50c000000443b56100f8562000000448b560c443b14c5100000000f8d6a0000008b4618448b1cc510000000448b04c50c000000894614488bc648c1e80949b900e01b17010000004688240844895e1841ffc24489560c49c1e003498bc0488b6c24104883c418850500000000c5f877c341baedcaffff4589979c0200004d89a7a8020000e8000000009041baedc5ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@65b99fc slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 69 block B1 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 73 20 CMP (x: r10|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 81 22 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 87 block B2 null  <||@
  Comment 87 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 26 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 90 28 r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 90 [rax:0, rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 98 30 r8|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 106 32 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 109 34 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 116 36 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 126 38 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 130 40 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 134 42 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 137 44 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 141 46 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169088ac encoding: base: 0 shift: 3  <||@
  Comment 145 48 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 148 50 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 157 12  <||@
  Comment 167 block B4 null  <||@
  Comment 167 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 -1 r10|DWORD = MOVE input: int[-13587|0xffffffffffffcaed]  <||@
  Comment 173 54 JUMP ~[] destination: B4 -> B5  <||@
  Comment 173 block B5 null  <||@
  Comment 173 60 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 173 62 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 180 64 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 187 66 DEOPT info [bci:0]  <||@
  Comment 187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 192 [rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 193 block B3 null  <||@
  Comment 193 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 -1 r10|DWORD = MOVE input: int[-14867|0xffffffffffffc5ed]  <||@
  Comment 199 58 JUMP ~[] destination: B3 -> B5  <||@
  Comment 201 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 201 4  <||@
  Comment 207 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 207 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7859[java.util.LinkedList$ListItr.next()]"
  method "HotSpotCompilation-7859[java.util.LinkedList$ListItr.next()]"
  date 1527005187205
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b156a0 448b560849c1e203493bc20f85af07cffe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b14c50c000000443b56100f8562000000448b560c443b14c5100000000f8d6a0000008b4618448b1cc510000000448b04c50c000000894614488bc648c1e80949b900e01b17010000004688240844895e1841ffc24489560c49c1e003498bc0488b6c24104883c4188505c398d7fcc5f877c341baedcaffff4589979c0200004d89a7a8020000e89e1ecffe9041baedc5ffffebe4e8b24e13ff90e88c1dcffe90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@65b99fc slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 69 block B1 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 73 20 CMP (x: r10|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 81 22 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 87 block B2 null  <||@
  Comment 87 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 26 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 90 28 r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 90 [rax:0, rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 98 30 r8|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 106 32 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 109 34 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 116 36 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 126 38 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 130 40 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 134 42 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 137 44 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 141 46 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169088ac encoding: base: 0 shift: 3  <||@
  Comment 145 48 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 148 50 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 157 12  <||@
  Comment 167 block B4 null  <||@
  Comment 167 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 -1 r10|DWORD = MOVE input: int[-13587|0xffffffffffffcaed]  <||@
  Comment 173 54 JUMP ~[] destination: B4 -> B5  <||@
  Comment 173 block B5 null  <||@
  Comment 173 60 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 173 62 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 180 64 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 187 66 DEOPT info [bci:0]  <||@
  Comment 187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 192 [rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 193 block B3 null  <||@
  Comment 193 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 -1 r10|DWORD = MOVE input: int[-14867|0xffffffffffffc5ed]  <||@
  Comment 199 58 JUMP ~[] destination: B3 -> B5  <||@
  Comment 201 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 201 4  <||@
  Comment 207 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 207 5  <||@
  HexCodeFile>>> <|@
end_nmethod
