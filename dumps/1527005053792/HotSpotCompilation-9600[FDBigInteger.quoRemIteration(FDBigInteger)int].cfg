begin_compilation
  name " HotSpotCompilation-9600[sun.misc.FDBigInteger.quoRemIteration(FDBigInteger)]"
  method "HotSpotCompilation-9600[sun.misc.FDBigInteger.quoRemIteration(FDBigInteger)]"
  date 1527005207166
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1662  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1709 v1710 v1713 ?161 ?337 ?290 ?304 ?242 ?134 ?196 j1370 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1662 v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 39]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
=== Succesors ===
next: v1774 
=== Usages ===
v1774 a440 v1718 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1713 #next: v1774  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1712 v1720 ?134 ?161 ?196 ?337 ?102 v1711 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 564
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1228 j61 a1331 v1774 i1663 v1775 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1662 
=== Succesors ===
next: i1663 
=== Usages ===
=== Predecessor ===
a1662 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1662 #next: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:569) [bci: 29]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1712 
=== Succesors ===
next: i1664 
=== Usages ===
i14 i90 i125 v516 
=== Predecessor ===
v1774 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1712 #next: i1664  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:569) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
=== Succesors ===
next: i1665 
=== Usages ===
i14 i57 v143 v163 v104 i708 j683 v804 
=== Predecessor ===
i1663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1711 #next: i1665  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1665 v423 v425 v515 v593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:568) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
=== Succesors ===
next: i1666 
=== Usages ===
i8 v430 ?269 v270 v292 i340 i31 j672 v1717 i50 i127 i340 i1661 
=== Predecessor ===
i1664 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1709 #next: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1666 v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:568) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1710 
=== Succesors ===
next: i1667 
=== Usages ===
i8 i90 i125 
=== Predecessor ===
i1665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1710 #next: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1662 
=== Succesors ===
=== Usages ===
i1667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1718 
=== Succesors ===
next: v18 
=== Usages ===
v446 j1660 j670 v430 v741 v415 v1657 v1658 j1659 
=== Predecessor ===
i1666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1718 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:568) [bci: 24]
stamp: i32
=== Inputs ===
x: i1665 
y: i1666 
=== Succesors ===
=== Usages ===
v15 v45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1665 y: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:569) [bci: 29]
stamp: i32
=== Inputs ===
x: i1663 
y: i1664 
=== Succesors ===
=== Usages ===
v15 v45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1663 y: i1664  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:570) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i14 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a440 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 103]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1662 
=== Succesors ===
=== Usages ===
v1715 ?161 a341 ?269 ?102 a341 ?269 v1716 v1719 v1725 v1729 v1714 v1717 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1662  <|@  <|@
f <@~|@floating>@ <|@
tid a1235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1652644631
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1652644631]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1227 a1297 a1297 a1227 a1297 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1299) [bci: 91]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] â‡Š0000000000000020 â‡ˆ0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j121 j152 j179 j223 j285 j985 j1018 j1057 j1088 j1109 j1139 j1160 j1178 j1195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1279 v1271 a1227 a1227 a1227 v1289 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 111]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] â‡Š00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i50 i57 i233 i246 i308 i1661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j65 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 148]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 v84 j99 j132 ?337 j204 j267 v353 j1460 v1468 j1454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j216 j278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 v330 v82 v91 i100 i133 i160 i205 v235 v248 v329 i268 v297 v310 a1331 v1658 v1486 v825 v814 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j674 j685 j710 j730 j748 j1480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i122 i123 i153 i180 i181 j217 i224 v230 v243 j279 i286 v292 v305 v804 v807 v1435 i1019 i1046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:570) [bci: 35]
stamp: void
trueSuccessorProbability: 0.24201595755878824
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
i1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v16 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1665 
y: i4 
=== Succesors ===
=== Usages ===
v854 v1550 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1665 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v1546 
falseSuccessor: v1549 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v1546 #falseSuccessor: v1549  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1544  <|@  <|@
f <@*|@fixed>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B30" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1558 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1558  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1665 
=== Succesors ===
=== Usages ===
j674 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1665  <|@  <|@
f <@~|@floating>@ <|@
tid j674 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j672 
y: j673 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid j670 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1667 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j674 
y: j670 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j674 y: j670  <|@  <|@
f <@~|@floating>@ <|@
tid i1234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -100635
stableDimension: 0
stamp: i32 [-100635] â‡Š00000000fffe76e5 â‡ˆ00000000fffe76e5
stampKind: i32
value: int[-100635|0xfffffffffffe76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v676 
=== Succesors ===
trueSuccessor: v1557 
falseSuccessor: v1554 
=== Usages ===
=== Predecessor ===
v1549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v676 #trueSuccessor: v1557 #falseSuccessor: v1554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
v1558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1667 
y: i5 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1667 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1658 
=== Succesors ===
trueSuccessor: v1555 
falseSuccessor: v1547 
=== Usages ===
=== Predecessor ===
v1557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1658 #trueSuccessor: v1555 #falseSuccessor: v1547  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1770 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1770  <|@  <|@
f <@*|@fixed>@ <|@
tid v1770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1545 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1545  <|@  <|@
f <@*|@fixed>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
v1547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1544 v1545 
=== Succesors ===
next: v265 
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1544 v1545 #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
v1543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604109586098190129
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] â‡ˆ000000000000000f
valueDescription: i64
=== Inputs ===
merge: v266 
values: j65 j285 
=== Succesors ===
=== Usages ===
?269 i288 j281 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v266 values: j65 j285  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v266 
values: i5 i286 
=== Succesors ===
=== Usages ===
?269 v270 i286 v1714 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v266 values: i5 i286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.722328911724681
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v265 
=== Succesors ===
next: v275 
=== Usages ===
j267 i268 v272 v287 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v265 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i1665 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i268 y: i1665  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
trueSuccessorProbability: 0.6326674577443074
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v271 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v271 #falseSuccessor: v272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601180581118615456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 11]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1668 
=== Usages ===
v682 
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1668  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1543 v271 
=== Succesors ===
=== Usages ===
i1668 v399 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1543 v271  <|@  <|@
f <@~|@floating>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i268 
=== Succesors ===
=== Usages ===
v399 i1668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v682 
address: v1714 
=== Succesors ===
next: v399 
=== Usages ===
j277 
=== Predecessor ===
v271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v682 address: v1714 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 19]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1668 
=== Succesors ===
=== Usages ===
j278 j279 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1668  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 34359738360] â‡ˆ00000007fffffff8
=== Inputs ===
x: j277 
y: i215 
=== Succesors ===
=== Usages ===
j280 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j277 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 8589934590] â‡ˆ00000001fffffffe
=== Inputs ===
x: j277 
y: i4 
=== Succesors ===
=== Usages ===
j280 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j277 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 42949672950] â‡ˆ0000000ffffffffe
=== Inputs ===
x: j278 
y: j279 
=== Succesors ===
=== Usages ===
j281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j278 y: j279  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 25]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 42949672960] â‡ˆ0000000fffffffff
=== Inputs ===
x: j267 
y: j280 
=== Succesors ===
=== Usages ===
i282 j285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j267 y: j280  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
resultBits: 32
stamp: i32
=== Inputs ===
value: j281 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v682 
address: v1714 
value: i282 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
i1668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v682 address: v1714 value: i282 stateAfter: - lastLocationAccess: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1348) [bci: 39]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 10] â‡ˆ000000000000000f
=== Inputs ===
x: j281 
y: i120 
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j281 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 41]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i32
=== Inputs ===
x: i268 
y: i4 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i268 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
loopBegin: v266 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v266  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B26" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 47]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v266 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v266 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 48]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
resultBits: 32
stamp: i32 [0 - 10] â‡ˆ000000000000000f
=== Inputs ===
value: j267 
=== Succesors ===
=== Usages ===
v25 v437 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j267  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:574) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i5 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i288 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:574) [bci: 57]
stamp: void
trueSuccessorProbability: 0.8333333333333334
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v26 #falseSuccessor: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v853 
falseSuccessor: v851 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v853 #falseSuccessor: v851  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1275 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1275  <|@  <|@
f <@~|@floating>@ <|@
tid i1276 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102419
stableDimension: 0
stamp: i32 [-102419] â‡Š00000000fffe6fed â‡ˆ00000000fffe6fed
stampKind: i32
value: int[-102419|0xfffffffffffe6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid i1661 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 111]
stamp: i32
=== Inputs ===
x: i1665 
y: i49 
=== Succesors ===
=== Usages ===
v1657 v1715 i303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1665 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1661 
y: i1667 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1661 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1657 
=== Succesors ===
trueSuccessor: v855 
falseSuccessor: v857 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1657 #trueSuccessor: v855 #falseSuccessor: v857  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1669 
=== Usages ===
i1669 
=== Predecessor ===
v858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1669  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i1661 
=== Succesors ===
=== Usages ===
i1669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i1661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1669 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v855 
address: v1715 
=== Succesors ===
next: v300 
=== Usages ===
v297 
=== Predecessor ===
v855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v855 address: v1715 #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1669 
y: i5 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1669 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 0.08541926203716788
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v298 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
i1669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v298 #falseSuccessor: v299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 82
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: true
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 577
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?304 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v302 
values: i1661 i308 
=== Succesors ===
=== Usages ===
?304 v305 i308 v423 j1693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v302 values: i1661 i308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.3187490602916856
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v301 
=== Succesors ===
next: v863 
=== Usages ===
i303 v312 v316 v862 v867 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v301 #next: v863  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<FDBigInteger.trimLeadingZeros()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: ?323 
values: a1 i303 
=== Succesors ===
=== Usages ===
v668 v1289 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a1 i303  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i4 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v862 
falseSuccessor: v859 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v862 #falseSuccessor: v859  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v302 
=== Succesors ===
next: v1285 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v302 #next: v1285  <|@  <|@
f <@~|@floating>@ <|@
tid i1286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105747
stableDimension: 0
stamp: i32 [-105747] â‡Š00000000fffe62ed â‡ˆ00000000fffe62ed
stampKind: i32
value: int[-105747|0xfffffffffffe62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 31]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: i32
=== Inputs ===
x: i303 
y: i49 
=== Succesors ===
=== Usages ===
i303 v415 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i308 
y: i1667 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i308 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v415 
=== Succesors ===
trueSuccessor: v864 
falseSuccessor: v867 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v415 #trueSuccessor: v864 #falseSuccessor: v867  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1670 
=== Usages ===
i1670 
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1670  <|@  <|@
f <@~|@floating>@ <|@
tid j1693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
v1716 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i303  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: j1693 
=== Succesors ===
=== Usages ===
i1670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: j1693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1670 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v864 
address: v1716 
=== Succesors ===
next: v315 
=== Usages ===
v310 
=== Predecessor ===
v864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v864 address: v1716 #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1670 
y: i5 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1670 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
i1670 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v311 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572980947968751244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?304 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?304 #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
loopBegin: v302 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v302  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v302 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v302 #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i303 stateAfter: - lastLocationAccess: - #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v302 
=== Succesors ===
next: v1290 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v302 #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid i1291 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106523
stableDimension: 0
stamp: i32 [-106523] â‡Š00000000fffe5fe5 â‡ˆ00000000fffe5fe5
stampKind: i32
value: int[-106523|0xfffffffffffe5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1287 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106523 - -105747] â‡Š00000000fffe42e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v1284 
values: i1286 i1291 
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1284 values: i1286 i1291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1285 v1290 
=== Succesors ===
next: v1289 
=== Usages ===
i1287 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1285 v1290 #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?304 
actionAndReason: i1287 
speculation: a1225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?304 actionAndReason: i1287 speculation: a1225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4595813625967755995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:381) [bci: 56]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid i1283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103963
stableDimension: 0
stamp: i32 [-103963] â‡Š00000000fffe69e5 â‡ˆ00000000fffe69e5
stampKind: i32
value: int[-103963|0xfffffffffffe69e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v872 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v872  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1665 
y: i1667 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1665 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v869 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v869 #falseSuccessor: v871  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
v437 
=== Predecessor ===
v872 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 71]
stamp: i32
=== Inputs ===
x: i1665 
y: i4 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1665 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i31 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i31 stateAfter: - lastLocationAccess: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i1665 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i1665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v869 
address: v1717 
value: i288 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v869 address: v1717 value: i288 stateAfter: - lastLocationAccess: - #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:579) [bci: 85]
stamp: void
=== Inputs ===
result: i5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1280 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid i1281 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110363
stableDimension: 0
stamp: i32 [-110363] â‡Š00000000fffe50e5 â‡ˆ00000000fffe50e5
stampKind: i32
value: int[-110363|0xfffffffffffe50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v871 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" "B28" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1277 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-110363 - -102419] â‡Š00000000fffe40e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v1274 
values: i1276 i1281 i1283 
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1274 values: i1276 i1281 i1283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1275 v1280 v1282 
=== Succesors ===
next: v1279 
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1275 v1280 v1282 #next: v1279  <|@  <|@
tid ?290 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: true
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 573
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?269 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - - - - - - -  <|@  <|@
tid ?269 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FDBigInteger.multAndCarryBy10(int[], int, int[])>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1345
stackSize: 0
=== Inputs ===
outerFrameState: ?290 
values: a440 i1665 a440 j267 - i268 - - 
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?290 values: a440 i1665 a440 j267 - i268 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?269 
actionAndReason: i1277 
speculation: a1225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?269 actionAndReason: i1277 speculation: a1225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1671 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1671 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 119]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1720 
=== Succesors ===
next: v1775 
=== Usages ===
a456 v1775 v1721 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1720 #next: v1775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1671 
=== Succesors ===
next: v880 
=== Usages ===
=== Predecessor ===
a1671 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1671 #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i14 
y: i8 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i14 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 89]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v877 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v879 #falseSuccessor: v877  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@~|@floating>@ <|@
tid i1237 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112147
stableDimension: 0
stamp: i32 [-112147] â‡Š00000000fffe49ed â‡ˆ00000000fffe49ed
stampKind: i32
value: int[-112147|0xfffffffffffe49ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 111]
stamp: i32
=== Inputs ===
x: i1665 
y: i49 
=== Succesors ===
=== Usages ===
v1719 v446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1665 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i1667 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v881 
falseSuccessor: v883 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v881 #falseSuccessor: v883  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B156" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1672 
=== Usages ===
i1673 
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1671 
=== Succesors ===
=== Usages ===
i1672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1672 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1721 
=== Succesors ===
next: v888 
=== Usages ===
v462 v473 j694 j1656 
=== Predecessor ===
v881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1721 #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 127]
stamp: i32
=== Inputs ===
x: i1664 
y: i49 
=== Succesors ===
=== Usages ===
v1722 v462 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1664 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i1672 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i57 y: i1672  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v462 
=== Succesors ===
trueSuccessor: v885 
falseSuccessor: v887 
=== Usages ===
=== Predecessor ===
i1672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v462 #trueSuccessor: v885 #falseSuccessor: v887  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1673 
=== Usages ===
i1674 
=== Predecessor ===
v888 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1673  <|@  <|@
f <@~|@floating>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i50 
=== Succesors ===
=== Usages ===
i1673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v881 
address: v1719 
=== Succesors ===
next: i1674 
=== Usages ===
j54 
=== Predecessor ===
v885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v881 address: v1719 #next: i1674  <|@  <|@
f <@~|@floating>@ <|@
tid a456 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 119]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1671 
=== Succesors ===
=== Usages ===
v1751 ?134 ?102 ?161 v1749 v1722 v1723 v1726 v1728 v1735 v1737 v1739 v1741 v1743 v1745 v1747 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i57 
=== Succesors ===
=== Usages ===
i1674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v885 
address: v1722 
=== Succesors ===
next: j61 
=== Usages ===
j60 
=== Predecessor ===
i1673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v885 address: v1722 #next: j61  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 117]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1673 
=== Succesors ===
=== Usages ===
j61 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1673  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 133]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1674 
=== Succesors ===
=== Usages ===
j61 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j61 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 134]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?3 
x: j54 
y: j60 
=== Succesors ===
next: v87 
=== Usages ===
?196 ?337 j147 ?261 i80 v84 ?102 j114 j173 ?134 ?161 j982 j1015 j1054 j1085 j1106 j1136 j1157 j1175 j1192 
=== Predecessor ===
i1674 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?3 x: j54 y: j60 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1291) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j61 
y: j65 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j61 y: j65  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1291) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5162453864221004
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
j61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600720757905725354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1324) [bci: 294]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B115" 
    xhandlers
    flags 
    probability 4600277108534450580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1292) [bci: 9]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
tid ?196 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: true
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 587
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - j61 - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?102 ?134 ?161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - j61 - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1292) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i1663 
y: i1666 
=== Succesors ===
=== Usages ===
v91 i101 j737 v741 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1663 y: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1293) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i5 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i90 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1664 
y: i4 
=== Succesors ===
=== Usages ===
v1534 v1572 v1630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1664 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j683 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1664 
=== Succesors ===
=== Usages ===
v687 j730 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1664  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1293) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.7340038148083925E-4
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v92 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v92 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1302) [bci: 108]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1566 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1302) [bci: 110]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i1666 
y: i1663 
=== Succesors ===
=== Usages ===
i127 ?134 i1046 v807 j684 ?161 i1220 v1010 v1044 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1666 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid j684 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i125 
=== Succesors ===
=== Usages ===
j685 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i125  <|@  <|@
f <@~|@floating>@ <|@
tid j685 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j684 
y: j673 
=== Succesors ===
=== Usages ===
v702 v687 v695 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j684 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i4 
=== Succesors ===
=== Usages ===
v1598 v1566 v1582 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i125 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v1562 
falseSuccessor: v1565 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v1562 #falseSuccessor: v1565  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B44" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1560 
=== Usages ===
=== Predecessor ===
v1566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1560  <|@  <|@
f <@*|@fixed>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B114" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1574 
=== Usages ===
=== Predecessor ===
v1566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j683 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j685 y: j683  <|@  <|@
f <@~|@floating>@ <|@
tid a1247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1592099964
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1592099964]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1227 a1227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -120595
stableDimension: 0
stamp: i32 [-120595] â‡Š00000000fffe28ed â‡ˆ00000000fffe28ed
stampKind: i32
value: int[-120595|0xfffffffffffe28ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v687 
=== Succesors ===
trueSuccessor: v1573 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v687 #trueSuccessor: v1573 #falseSuccessor: v1570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1572 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v1571 
falseSuccessor: v1563 
=== Usages ===
=== Predecessor ===
v1573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v1571 #falseSuccessor: v1563  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1771 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1771  <|@  <|@
f <@*|@fixed>@ <|@
tid v1771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1561  <|@  <|@
f <@*|@fixed>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
v1563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1560 v1561 
=== Succesors ===
next: v1582 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1560 v1561 #next: v1582  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1672 
=== Succesors ===
=== Usages ===
v695 v720 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid a1250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1070949184
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1070949184]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1227 a1227 a1227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v1581 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v1578 #falseSuccessor: v1581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1576 
=== Usages ===
=== Predecessor ===
v1582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1576  <|@  <|@
f <@*|@fixed>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B113" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1590 
=== Usages ===
=== Predecessor ===
v1582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1590  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j694 
=== Succesors ===
=== Usages ===
v1590 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j685 y: j694  <|@  <|@
f <@*|@fixed>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v695 
=== Succesors ===
trueSuccessor: v1589 
falseSuccessor: v1586 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v695 #trueSuccessor: v1589 #falseSuccessor: v1586  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@*|@fixed>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
v1589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1576 v1577 
=== Succesors ===
next: v1598 
=== Usages ===
v700 v1001 v1034 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1576 v1577 #next: v1598  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 119]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i125 
y: i1665 
=== Succesors ===
=== Usages ===
v1435 v515 i340 v481 v814 j701 v1357 i1308 v1316 a1331 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i125 y: i1665  <|@  <|@
f <@~|@floating>@ <|@
tid j701 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
v702 v725 j1480 j1467 j1473 j1477 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v1597 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v1594 #falseSuccessor: v1597  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B54" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1592 
=== Usages ===
=== Predecessor ===
v1598 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1592  <|@  <|@
f <@*|@fixed>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B112" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v1598 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j701 
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j685 y: j701  <|@  <|@
f <@~|@floating>@ <|@
tid i1252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123419
stableDimension: 0
stamp: i32 [-123419] â‡Š00000000fffe1de5 â‡ˆ00000000fffe1de5
stampKind: i32
value: int[-123419|0xfffffffffffe1de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v702 
=== Succesors ===
trueSuccessor: v1605 
falseSuccessor: v1602 
=== Usages ===
=== Predecessor ===
v1597 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v702 #trueSuccessor: v1605 #falseSuccessor: v1602  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i5 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i127 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v1603 
falseSuccessor: v1595 
=== Usages ===
=== Predecessor ===
v1605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v1603 #falseSuccessor: v1595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1772 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1772  <|@  <|@
f <@*|@fixed>@ <|@
tid v1772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1593  <|@  <|@
f <@*|@fixed>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
v1595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1592 v1593 
=== Succesors ===
next: j1310 
=== Usages ===
v707 v1002 v1035 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1592 v1593 #next: j1310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1310 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1354 
=== Usages ===
v1753 v1754 
=== Predecessor ===
v1591 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1354  <|@  <|@
f <@~|@floating>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1310 
index: - 
=== Succesors ===
=== Usages ===
j1354 v1356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1310 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1753 
=== Succesors ===
next: j1355 
=== Usages ===
j1314 v1755 v1756 a1330 v1761 v1757 v1758 v1759 v1760 
=== Predecessor ===
j1310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1753 #next: j1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1310 
index: - 
=== Succesors ===
=== Usages ===
j1355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1310 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1754 
=== Succesors ===
next: v1319 
=== Usages ===
v1320 
=== Predecessor ===
j1354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1754 #next: v1319  <|@  <|@
f <@~|@floating>@ <|@
tid i1315 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] â‡Š0000000000ffffff â‡ˆ0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i1315 
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i127 y: i1315  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1044 i1308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] â‡Š00000000fffffff8 â‡ˆ00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1220 i1309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1316 
=== Succesors ===
trueSuccessor: v1318 
falseSuccessor: v1317 
=== Usages ===
=== Predecessor ===
j1355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1316 #trueSuccessor: v1318 #falseSuccessor: v1317  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4543569587458822689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1326 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid i1308 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32 [-2147483648 - 2147483644] â‡ˆ00000000fffffffc
=== Inputs ===
x: i127 
y: i386 
=== Succesors ===
=== Usages ===
i1339 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i127 y: i386  <|@  <|@
f <@~|@floating>@ <|@
tid i1338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] â‡Š0000000000000017 â‡ˆ0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1339 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32 [-2147483645 - 2147483647] â‡Š0000000000000003
=== Inputs ===
x: i1308 
y: i1338 
=== Succesors ===
=== Usages ===
i1309 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1308 y: i1338  <|@  <|@
f <@~|@floating>@ <|@
tid i1309 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i1339 
y: i1219 
=== Succesors ===
=== Usages ===
j1313 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1339 y: i1219  <|@  <|@
f <@~|@floating>@ <|@
tid j1313 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i1309 
=== Succesors ===
=== Usages ===
j1314 v1757 v1758 v1759 v1760 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1309  <|@  <|@
f <@~|@floating>@ <|@
tid j1314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1313 
y: j1354 
=== Succesors ===
=== Usages ===
v1320 v1356 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1313 y: j1354  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1355 
y: j1314 
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1355 y: j1314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1320 
=== Succesors ===
trueSuccessor: v1325 
falseSuccessor: v1324 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1320 #trueSuccessor: v1325 #falseSuccessor: v1324  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4513507875123775760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
v1325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4543485139831855357
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1753 
value: j1314 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1343 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1753 value: j1314 stateAfter: - lastLocationAccess: - #next: v1343  <|@  <|@
f <@~|@floating>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1313 
index: j1354 
=== Succesors ===
=== Usages ===
v1343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1313 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
address: v1757 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1757 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1313 
index: j1354 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1313 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
address: v1758 
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1343 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1758 #next: v1349  <|@  <|@
f <@~|@floating>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1313 
index: j1354 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1313 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
address: v1759 
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1759 #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1313 
index: j1354 
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1313 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
address: v1760 
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1349 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1760 #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1354 
index: - 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1354 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1755 
value: i127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1358 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1755 value: i127 stateAfter: - lastLocationAccess: - #next: v1358  <|@  <|@
f <@~|@floating>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1354 
index: - 
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1354 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1756 
value: j1307 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1756 value: j1307 stateAfter: - lastLocationAccess: - #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1354 
index: - 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1354 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1761 
value: v1380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1358 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1761 value: v1380 stateAfter: - lastLocationAccess: - #next: v1329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1330 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1354 
=== Succesors ===
next: v1332 
=== Usages ===
a1335 
=== Predecessor ===
v1329 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1354 #next: v1332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
a1330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4529120481610407509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1321  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B60" 
    xhandlers
    flags 
    probability 4529796062626146167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1321 v1323 
=== Succesors ===
next: a1331 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1321 v1323 #next: a1331  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1331 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1306 i127 i5 
=== Succesors ===
next: v1334 
=== Usages ===
a1335 
=== Predecessor ===
v1322 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1306 i127 i5 #next: v1334  <|@  <|@
f <@*|@fixed>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
a1331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1333 
values: a1330 a1331 
=== Succesors ===
=== Usages ===
v1734 a970 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: a1330 a1331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1332 v1334 
=== Succesors ===
next: v1437 
=== Usages ===
a1335 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1332 v1334 #next: v1437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1387 
=== Usages ===
j1439 
=== Predecessor ===
v1333 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i4 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i127 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1435 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1435 #trueSuccessor: v1385 #falseSuccessor: v1386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B76" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1403 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1403  <|@  <|@
f <@*|@fixed>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1390 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1335 
index: - 
=== Succesors ===
=== Usages ===
j1439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1335 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1439 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1437 
address: v1734 
=== Succesors ===
=== Usages ===
v1763 v1764 v1765 v1766 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1437 address: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid j1466 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] â‡Šfffffffffffffff8 â‡ˆfffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1467 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j701 
y: j1466 
=== Succesors ===
=== Usages ===
v1468 v1470 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j1466  <|@  <|@
f <@~|@floating>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1467 
y: j65 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1467 y: j65  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1468 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1389 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1468 #trueSuccessor: v1388 #falseSuccessor: v1389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
v1388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
v1389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B111" 
    successors "B66" "B111" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4539816359593607926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1460 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1392 
values: j65 j1465 
=== Succesors ===
=== Usages ===
v1766 j1465 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1392 values: j65 j1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1391 
=== Succesors ===
next: v1491 
=== Usages ===
j1460 v1395 v1396 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1391 #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1439 
index: j1460 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1439 index: j1460  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1766 
value: v1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v1392 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1766 value: v1492 stateAfter: - lastLocationAccess: - #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid j1360 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1465 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1460 
y: j1360 
=== Succesors ===
=== Usages ===
j1454 j1460 v1470 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1460 y: j1360  <|@  <|@
f <@~|@floating>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1467 
y: j1465 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1467 y: j1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1470 
=== Succesors ===
trueSuccessor: v1395 
falseSuccessor: v1397 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1470 #trueSuccessor: v1395 #falseSuccessor: v1397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1392 
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1392 #next: v1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
v1395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1454 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1400 
values: j65 j1465 
=== Succesors ===
=== Usages ===
v1765 j1459 j1447 v1474 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1400 values: j65 j1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1399 v1401 
=== Succesors ===
next: v1419 
=== Usages ===
j1454 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1399 v1401 #next: v1419  <|@  <|@
f <@~|@floating>@ <|@
tid j1472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] â‡Šfffffffffffffffc â‡ˆfffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1473 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j701 
y: j1472 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1473 
y: j1454 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1473 y: j1454  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1474 
=== Succesors ===
trueSuccessor: v1418 
falseSuccessor: v1417 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1474 #trueSuccessor: v1418 #falseSuccessor: v1417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1422 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1422  <|@  <|@
f <@*|@fixed>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
v1418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1765 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1439 
index: j1454 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1439 index: j1454  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000>
stampKind: <i32,i32,i32,i32>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1765 
value: v1494 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1765 value: v1494 stateAfter: - lastLocationAccess: - #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid j1442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] â‡Š0000000000000004 â‡ˆ0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1459 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1454 
y: j1442 
=== Succesors ===
=== Usages ===
j1447 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1454 y: j1442  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1447 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1411 
values: j1459 j1454 
=== Succesors ===
=== Usages ===
v1764 j1453 j1440 v1478 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1411 values: j1459 j1454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1410 v1422 
=== Succesors ===
next: v1425 
=== Usages ===
j1447 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1410 v1422 #next: v1425  <|@  <|@
f <@~|@floating>@ <|@
tid j1476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] â‡Šfffffffffffffffe â‡ˆfffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j701 
y: j1476 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1477 
y: j1447 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1477 y: j1447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1478 
=== Succesors ===
trueSuccessor: v1424 
falseSuccessor: v1423 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1478 #trueSuccessor: v1424 #falseSuccessor: v1423  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1428 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1428  <|@  <|@
f <@*|@fixed>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
v1424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1488 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1488  <|@  <|@
f <@~|@floating>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1439 
index: j1447 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1439 index: j1447  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000>
stampKind: <i32,i32>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1764 
value: v1493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1413 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1764 value: v1493 stateAfter: - lastLocationAccess: - #next: v1413  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1453 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1447 
y: j1452 
=== Succesors ===
=== Usages ===
j1440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1447 y: j1452  <|@  <|@
f <@*|@fixed>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
v1488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1440 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1414 
values: j1453 j1447 
=== Succesors ===
=== Usages ===
v1763 v1481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1414 values: j1453 j1447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1413 v1428 
=== Succesors ===
next: v1431 
=== Usages ===
j1440 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1413 v1428 #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid j1480 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j701 
y: j673 
=== Succesors ===
=== Usages ===
v1481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1480 
y: j1440 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1480 y: j1440  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1481 
=== Succesors ===
trueSuccessor: v1430 
falseSuccessor: v1429 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1481 #trueSuccessor: v1430 #falseSuccessor: v1429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1434  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1486 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1763 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1439 
index: j1440 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1439 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1763 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1416 
=== Usages ===
=== Predecessor ===
v1429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1763 value: i5 stateAfter: - lastLocationAccess: - #next: v1416  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B61" "B75" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1403 v1416 v1434 
=== Succesors ===
next: a970 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1403 v1416 v1434 #next: a970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1335 
=== Succesors ===
next: v130 
=== Usages ===
?134 a341 v1724 v1727 ?161 a517 v1736 v1738 v1740 v1742 v1744 v1746 v1748 v1750 v1752 
=== Predecessor ===
v1404 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1335 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
a970 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" 
    successors "B78" "B79" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4544319959220978422
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j132 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v131 
values: j65 j152 
=== Succesors ===
=== Usages ===
j975 j148 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v131 values: j65 j152  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v131 
values: i5 i153 
=== Succesors ===
=== Usages ===
i976 v1723 v135 v1724 i153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v131 values: i5 i153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 22.00000000000002
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 2
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v130 
=== Succesors ===
next: v141 
=== Usages ===
j132 i133 v137 v154 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v130 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i386 
=== Succesors ===
=== Usages ===
i1046 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i125 y: i386  <|@  <|@
f <@~|@floating>@ <|@
tid i1046 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1044 
trueValue: i125 
falseValue: i4 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1044 trueValue: i125 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i1046 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i133 y: i1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.9545454545454546
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v136 #falseSuccessor: v137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4544081391258624703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 143]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1675 
=== Usages ===
v707 v700 
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1575 v136 
=== Succesors ===
=== Usages ===
i1675 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1575 v136  <|@  <|@
f <@~|@floating>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i133 
=== Succesors ===
=== Usages ===
i1675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v700 
address: v1723 
=== Succesors ===
next: v488 
=== Usages ===
j146 
=== Predecessor ===
v136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v700 address: v1723 #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1591 v136 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1591 v136  <|@  <|@
f <@~|@floating>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: i133 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: i133  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1675 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j146 
=== Succesors ===
=== Usages ===
j148 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j146  <|@  <|@
f <@~|@floating>@ <|@
tid j148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j132 
y: j147 
=== Succesors ===
=== Usages ===
i149 j152 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j132 y: j147  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j148 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v707 
address: v1724 
value: i149 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
i1675 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v707 address: v1724 value: i149 stateAfter: - lastLocationAccess: - #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid j152 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j148 
y: i120 
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j148 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 184]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i133 
y: i4 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i133 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4523934476916634324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1312) [bci: 193]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v131 
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v131 #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B81" 
    successors "B81" "B82" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4530144089210011538
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j975 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v974 
values: j132 j1195 
=== Succesors ===
=== Usages ===
j983 j1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: j132 j1195  <|@  <|@
f <@~|@floating>@ <|@
tid i976 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v974 
values: i133 i1218 
=== Succesors ===
=== Usages ===
v977 j1695 v1735 v1736 i1009 i1218 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: i133 i1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.5000000000000027
loopOrigFrequency: 20.00000000000002
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 0
stamp: void
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1003 
=== Succesors ===
next: v980 
=== Usages ===
j975 i976 v979 v987 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1003 #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid i1220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i125 
y: i1219 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i125 y: i1219  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i976 
y: i1220 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i976 y: i1220  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.9545454545454546
=== Inputs ===
condition: v977 
=== Succesors ===
trueSuccessor: v978 
falseSuccessor: v979 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v977 #trueSuccessor: v978 #falseSuccessor: v979  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 143]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1676 
=== Usages ===
v1001 v1002 
=== Predecessor ===
v980 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1575 v978 
=== Succesors ===
=== Usages ===
i1683 i1676 i1681 i1677 i1682 i1678 i1680 i1679 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1575 v978  <|@  <|@
f <@~|@floating>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i976 
=== Succesors ===
=== Usages ===
i1676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1735 
=== Succesors ===
next: v996 
=== Usages ===
j981 
=== Predecessor ===
v978 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1735 #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1591 v978 
=== Succesors ===
=== Usages ===
v1204 v996 v1169 v1068 v1187 v1099 v1150 v1118 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1591 v978  <|@  <|@
f <@~|@floating>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: i976 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: i976  <|@  <|@
f <@~|@floating>@ <|@
tid j981 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1676 
=== Succesors ===
=== Usages ===
j982 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid j982 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j981 
=== Succesors ===
=== Usages ===
j983 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j981  <|@  <|@
f <@~|@floating>@ <|@
tid j983 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j975 
y: j982 
=== Succesors ===
=== Usages ===
i984 j985 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j975 y: j982  <|@  <|@
f <@~|@floating>@ <|@
tid i984 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j983 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1736 
value: i984 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1677 
=== Usages ===
=== Predecessor ===
i1676 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1736 value: i984 stateAfter: - lastLocationAccess: - #next: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid j1695 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i976 
=== Succesors ===
=== Usages ===
v1740 v1742 v1744 v1746 v1748 v1750 v1752 v1739 v1741 v1743 v1745 v1747 v1749 v1751 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i976  <|@  <|@
f <@~|@floating>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1677 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1739 
=== Succesors ===
next: v1068 
=== Usages ===
j1053 
=== Predecessor ===
v996 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1739 #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j985 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j983 
y: i120 
=== Succesors ===
=== Usages ===
j1055 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j983 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1053 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1677 
=== Succesors ===
=== Usages ===
j1054 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid j1054 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1053 
=== Succesors ===
=== Usages ===
j1055 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1053  <|@  <|@
f <@~|@floating>@ <|@
tid j1055 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j985 
y: j1054 
=== Succesors ===
=== Usages ===
i1056 j1057 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j985 y: j1054  <|@  <|@
f <@~|@floating>@ <|@
tid i1056 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1055 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1740 
value: i1056 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1678 
=== Usages ===
=== Predecessor ===
i1677 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1740 value: i1056 stateAfter: - lastLocationAccess: - #next: i1678  <|@  <|@
f <@~|@floating>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1741 
=== Succesors ===
next: v1099 
=== Usages ===
j1084 
=== Predecessor ===
v1068 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1741 #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1055 
y: i120 
=== Succesors ===
=== Usages ===
j1086 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1055 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1084 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1678 
=== Succesors ===
=== Usages ===
j1085 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1678  <|@  <|@
f <@~|@floating>@ <|@
tid j1085 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1084 
=== Succesors ===
=== Usages ===
j1086 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1084  <|@  <|@
f <@~|@floating>@ <|@
tid j1086 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1057 
y: j1085 
=== Succesors ===
=== Usages ===
i1087 j1088 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1057 y: j1085  <|@  <|@
f <@~|@floating>@ <|@
tid i1087 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1086 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1742 
value: i1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1679 
=== Usages ===
=== Predecessor ===
i1678 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1742 value: i1087 stateAfter: - lastLocationAccess: - #next: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1743 
=== Succesors ===
next: v1118 
=== Usages ===
j1105 
=== Predecessor ===
v1099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1743 #next: v1118  <|@  <|@
f <@~|@floating>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1088 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1086 
y: i120 
=== Succesors ===
=== Usages ===
j1107 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1086 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1105 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1679 
=== Succesors ===
=== Usages ===
j1106 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid j1106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1105 
=== Succesors ===
=== Usages ===
j1107 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1105  <|@  <|@
f <@~|@floating>@ <|@
tid j1107 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1088 
y: j1106 
=== Succesors ===
=== Usages ===
i1108 j1109 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1088 y: j1106  <|@  <|@
f <@~|@floating>@ <|@
tid i1108 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1107 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1744 
value: i1108 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1680 
=== Usages ===
=== Predecessor ===
i1679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1744 value: i1108 stateAfter: - lastLocationAccess: - #next: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1745 
=== Succesors ===
next: v1150 
=== Usages ===
j1135 
=== Predecessor ===
v1118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1745 #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1109 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1107 
y: i120 
=== Succesors ===
=== Usages ===
j1137 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1107 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1135 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1680 
=== Succesors ===
=== Usages ===
j1136 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid j1136 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1135 
=== Succesors ===
=== Usages ===
j1137 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1135  <|@  <|@
f <@~|@floating>@ <|@
tid j1137 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1109 
y: j1136 
=== Succesors ===
=== Usages ===
i1138 j1139 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1109 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid i1138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1137 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1746 
value: i1138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1681 
=== Usages ===
=== Predecessor ===
i1680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1746 value: i1138 stateAfter: - lastLocationAccess: - #next: i1681  <|@  <|@
f <@~|@floating>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1747 
=== Succesors ===
next: v1169 
=== Usages ===
j1156 
=== Predecessor ===
v1150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1747 #next: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1139 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1137 
y: i120 
=== Succesors ===
=== Usages ===
j1158 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1137 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1156 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1681 
=== Succesors ===
=== Usages ===
j1157 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1681  <|@  <|@
f <@~|@floating>@ <|@
tid j1157 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1156 
=== Succesors ===
=== Usages ===
j1158 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1156  <|@  <|@
f <@~|@floating>@ <|@
tid j1158 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1139 
y: j1157 
=== Succesors ===
=== Usages ===
i1159 j1160 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1139 y: j1157  <|@  <|@
f <@~|@floating>@ <|@
tid i1159 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1158 
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1748 
value: i1159 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1682 
=== Usages ===
=== Predecessor ===
i1681 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1748 value: i1159 stateAfter: - lastLocationAccess: - #next: i1682  <|@  <|@
f <@~|@floating>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1682 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1749 
=== Succesors ===
next: v1187 
=== Usages ===
j1174 
=== Predecessor ===
v1169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1749 #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1160 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1158 
y: i120 
=== Succesors ===
=== Usages ===
j1176 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1158 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1682 
=== Succesors ===
=== Usages ===
j1175 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1682  <|@  <|@
f <@~|@floating>@ <|@
tid j1175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1174 
=== Succesors ===
=== Usages ===
j1176 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1174  <|@  <|@
f <@~|@floating>@ <|@
tid j1176 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1160 
y: j1175 
=== Succesors ===
=== Usages ===
i1177 j1178 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1160 y: j1175  <|@  <|@
f <@~|@floating>@ <|@
tid i1177 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1176 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1750 
value: i1177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1683 
=== Usages ===
=== Predecessor ===
i1682 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1750 value: i1177 stateAfter: - lastLocationAccess: - #next: i1683  <|@  <|@
f <@~|@floating>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1751 
=== Succesors ===
next: v1204 
=== Usages ===
j1191 
=== Predecessor ===
v1187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1751 #next: v1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1176 
y: i120 
=== Succesors ===
=== Usages ===
j1193 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1176 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1191 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1683 
=== Succesors ===
=== Usages ===
j1192 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1683  <|@  <|@
f <@~|@floating>@ <|@
tid j1192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1191 
=== Succesors ===
=== Usages ===
j1193 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1191  <|@  <|@
f <@~|@floating>@ <|@
tid j1193 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1178 
y: j1192 
=== Succesors ===
=== Usages ===
i1194 j1195 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1178 y: j1192  <|@  <|@
f <@~|@floating>@ <|@
tid i1194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1193 
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1752 
value: i1194 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
i1683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1752 value: i1194 stateAfter: - lastLocationAccess: - #next: v987  <|@  <|@
f <@~|@floating>@ <|@
tid j1195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1193 
y: i120 
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1193 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i1217 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 184]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 184]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i976 
y: i1217 
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i976 y: i1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v974 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v974  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4509803309792338579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1312) [bci: 193]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v974 
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v974 #next: v1036  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B84" 
    successors "B84" "B85" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1008 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v1007 
values: j975 j1018 
=== Succesors ===
=== Usages ===
j1016 ?134 j158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1007 values: j975 j1018  <|@  <|@
f <@~|@floating>@ <|@
tid i1009 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1007 
values: i976 i1019 
=== Succesors ===
=== Usages ===
v1010 i1019 v1737 v1738 ?134 ?134 i159 v143 i708 j717 v473 v481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1007 values: i976 i1019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 21.00000000000002
loopOrigFrequency: 22.00000000000002
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1036 
=== Succesors ===
next: v1013 
=== Usages ===
j1008 i1009 v1012 v1020 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1036 #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i125 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1009 y: i125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.9545454545454546
=== Inputs ===
condition: v1010 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1012 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1010 #trueSuccessor: v1011 #falseSuccessor: v1012  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4529386253005070541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 143]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1684 
=== Usages ===
v1034 v1035 
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1684  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1575 v1011 
=== Succesors ===
=== Usages ===
i1684 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1575 v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i1009 
=== Succesors ===
=== Usages ===
i1684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i1009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1034 
address: v1737 
=== Succesors ===
next: v1029 
=== Usages ===
j1014 
=== Predecessor ===
v1011 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1034 address: v1737 #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1591 v1011 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1591 v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: i1009 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid j1014 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1684 
=== Succesors ===
=== Usages ===
j1015 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1684  <|@  <|@
f <@~|@floating>@ <|@
tid j1015 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1014 
=== Succesors ===
=== Usages ===
j1016 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1014  <|@  <|@
f <@~|@floating>@ <|@
tid j1016 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1008 
y: j1015 
=== Succesors ===
=== Usages ===
i1017 j1018 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1008 y: j1015  <|@  <|@
f <@~|@floating>@ <|@
tid i1017 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1016 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1035 
address: v1738 
value: i1017 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1020 
=== Usages ===
=== Predecessor ===
i1684 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1035 address: v1738 value: i1017 stateAfter: - lastLocationAccess: - #next: v1020  <|@  <|@
f <@~|@floating>@ <|@
tid j1018 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1016 
y: i120 
=== Succesors ===
=== Usages ===
j1008 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1016 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i1019 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 184]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i1009 
y: i4 
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1009 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v1007 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1007  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1312) [bci: 193]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1007 
=== Succesors ===
next: v1614 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1007 #next: v1614  <|@  <|@
f <@~|@floating>@ <|@
tid i708 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i1664 
y: i1009 
=== Succesors ===
=== Usages ===
j709 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1664 y: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid j709 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i708 
=== Succesors ===
=== Usages ===
j710 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i708  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j709 
y: j673 
=== Succesors ===
=== Usages ===
v712 j718 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j709 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i1664 
=== Succesors ===
=== Usages ===
v1614 v1502 v1518 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1009 y: i1664  <|@  <|@
f <@*|@fixed>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v1613 
falseSuccessor: v1610 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v1613 #falseSuccessor: v1610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1622 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1622  <|@  <|@
f <@~|@floating>@ <|@
tid j1659 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1667 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j710 
y: j1659 
=== Succesors ===
=== Usages ===
v1622 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j710 y: j1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v712 
=== Succesors ===
trueSuccessor: v1621 
falseSuccessor: v1618 
=== Usages ===
=== Predecessor ===
v1613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v712 #trueSuccessor: v1621 #falseSuccessor: v1618  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1609 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
v1621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1262 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid i1263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125723
stableDimension: 0
stamp: i32 [-125723] â‡Š00000000fffe14e5 â‡ˆ00000000fffe14e5
stampKind: i32
value: int[-125723|0xfffffffffffe14e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1608 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1608  <|@  <|@
f <@*|@fixed>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B87" 
    successors "B91" "B96" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1608 v1609 
=== Succesors ===
next: v1502 
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1608 v1609 #next: v1502  <|@  <|@
f <@~|@floating>@ <|@
tid j717 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1009 
=== Succesors ===
=== Usages ===
j718 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j710 
y: j717 
=== Succesors ===
=== Usages ===
v725 v720 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j710 y: j717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v1501 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v1501 #falseSuccessor: v1498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1510 
=== Usages ===
=== Predecessor ===
v1502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1510  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j694 
=== Succesors ===
=== Usages ===
v1510 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j718 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid i1265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128027
stableDimension: 0
stamp: i32 [-128027] â‡Š00000000fffe0be5 â‡ˆ00000000fffe0be5
stampKind: i32
value: int[-128027|0xfffffffffffe0be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v720 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1506 
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v720 #trueSuccessor: v1509 #falseSuccessor: v1506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v1510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1508  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i1672 
=== Succesors ===
=== Usages ===
v1508 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i1672  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v473 
=== Succesors ===
trueSuccessor: v1499 
falseSuccessor: v1507 
=== Usages ===
=== Predecessor ===
v1509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v473 #trueSuccessor: v1499 #falseSuccessor: v1507  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
v1499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1767 
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1767  <|@  <|@
f <@*|@fixed>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1264 
=== Usages ===
=== Predecessor ===
v1510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1264  <|@  <|@
f <@*|@fixed>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
v1498 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B93" 
    successors "B98" "B104" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1496 v1497 
=== Succesors ===
next: v1518 
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1496 v1497 #next: v1518  <|@  <|@
f <@*|@fixed>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v1517 
falseSuccessor: v1514 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v1517 #falseSuccessor: v1514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1526 
=== Usages ===
=== Predecessor ===
v1518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1526  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j701 
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j718 y: j701  <|@  <|@
f <@~|@floating>@ <|@
tid i1257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130075
stableDimension: 0
stamp: i32 [-130075] â‡Š00000000fffe03e5 â‡ˆ00000000fffe03e5
stampKind: i32
value: int[-130075|0xfffffffffffe03e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v725 
=== Succesors ===
trueSuccessor: v1525 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v725 #trueSuccessor: v1525 #falseSuccessor: v1522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1524  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i127 
=== Succesors ===
=== Usages ===
v1524 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1523 
=== Usages ===
=== Predecessor ===
v1525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v1515 #falseSuccessor: v1523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B105" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1513 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1513  <|@  <|@
f <@*|@fixed>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1768 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v1768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1256 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1256  <|@  <|@
f <@*|@fixed>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B88" "B95" "B94" "B101" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1259 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-130075 - -125723] â‡Š00000000fffe00e5 â‡ˆ00000000fffe1fe5
valueDescription: i32
=== Inputs ===
merge: v1255 
values: i1257 i1263 i1265 i1265 i1257 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1255 values: i1257 i1263 i1265 i1265 i1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1256 v1262 v1264 v1767 v1768 
=== Succesors ===
next: v1261 
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1256 v1262 v1264 v1767 v1768 #next: v1261  <|@  <|@
tid ?134 <|@
d <@d|@=== Debug Properties ===
bci: 136
code: ResolvedJavaMethodBytecode<FDBigInteger.multDiffMe(long, FDBigInteger)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1307
stackSize: 0
=== Inputs ===
outerFrameState: ?196 
values: a1 j61 - a2 j1008 - i125 a970 i1009 i1009 a456 - - 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?196 values: a1 j61 - a2 j1008 - i125 a970 i1009 i1009 a456 - -  <|@  <|@
f <@~|@floating>@ <|@
tid a1258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1474612814
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1474612814]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?134 
actionAndReason: i1259 
speculation: a1258 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1255 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?134 actionAndReason: i1259 speculation: a1258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B105" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1512 
=== Usages ===
=== Predecessor ===
v1518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1512  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" "B100" 
    successors "B106" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1512 v1513 
=== Succesors ===
next: v156 
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1512 v1513 #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v1511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B107" "B108" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4516985772283686555
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j158 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v157 
values: j1008 j179 
=== Succesors ===
=== Usages ===
?161 v353 j175 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: j1008 j179  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v157 
values: i1009 i180 
=== Succesors ===
=== Usages ===
?161 ?161 v163 v1726 v1727 i180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: i1009 i180  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v157 
values: i5 i181 
=== Succesors ===
=== Usages ===
?161 v1725 i181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: i5 i181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.000000000000001
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v156 
=== Succesors ===
next: v168 
=== Usages ===
j158 i159 i160 v165 v182 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v156 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 208]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i159 
y: i1664 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i159 y: i1664  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 208]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.6666666666666667
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B106" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4514024923855079869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 211]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1685 
=== Usages ===
v716 v724 v729 
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1685  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1495 v164 
=== Succesors ===
=== Usages ===
i1685 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1495 v164  <|@  <|@
f <@~|@floating>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i159 
=== Succesors ===
=== Usages ===
i1685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1685 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v724 
address: v1726 
=== Succesors ===
next: i1686 
=== Usages ===
j172 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v724 address: v1726 #next: i1686  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1607 v164 
=== Succesors ===
=== Usages ===
i1686 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1607 v164  <|@  <|@
f <@~|@floating>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i160 
=== Succesors ===
=== Usages ===
i1686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1686 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v716 
address: v1725 
=== Succesors ===
next: v514 
=== Usages ===
j170 
=== Predecessor ===
i1685 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v716 address: v1725 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1511 v164 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1511 v164  <|@  <|@
f <@~|@floating>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: i159 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: i159  <|@  <|@
f <@~|@floating>@ <|@
tid j170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 222]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1686 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1686  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 233]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1685 
=== Succesors ===
=== Usages ===
j173 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1685  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 234]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j172 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 235]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j170 
y: j173 
=== Succesors ===
=== Usages ===
j175 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j170 y: j173  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 236]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j158 
y: j174 
=== Succesors ===
=== Usages ===
i176 j179 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j158 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 245]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j175 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v729 
address: v1727 
value: i176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
i1686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v729 address: v1727 value: i176 stateAfter: - lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1317) [bci: 251]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j175 
y: i120 
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j175 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 257]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i160 
y: i4 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 254]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i159 
y: i4 
=== Succesors ===
=== Usages ===
i159 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i159 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v157 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1319) [bci: 266]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j158 
y: j65 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j158 y: j65  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v353 
=== Succesors ===
trueSuccessor: v914 
falseSuccessor: v916 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v353 #trueSuccessor: v914 #falseSuccessor: v916  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B129" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1319) [bci: 274]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i127 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1320) [bci: 285]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1710 
value: i1663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1710 value: i1663 stateAfter: - lastLocationAccess: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: Compress
stamp: n! -
=== Inputs ===
value: a970 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
value: a517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1370 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1713 value: a517 stateAfter: - lastLocationAccess: - #next: j1370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1376 
=== Usages ===
j1372 
=== Predecessor ===
v518 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid i1371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1372 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j1370 
y: i1371 
=== Succesors ===
=== Usages ===
v1762 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1370 y: i1371  <|@  <|@
f <@~|@floating>@ <|@
tid j1375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] â‡Š00000001171be000 â‡ˆ00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1372 
index: j1375 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1372 index: j1375  <|@  <|@
f <@~|@floating>@ <|@
tid i1377 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1762 
value: i1377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
j1370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1762 value: i1377 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
bci: 202
code: ResolvedJavaMethodBytecode<FDBigInteger.multDiffMe(long, FDBigInteger)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1314
stackSize: 0
=== Inputs ===
outerFrameState: ?196 
values: a1 j61 - a2 j158 - i125 a970 i159 i159 a456 i160 a440 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?196 values: a1 j61 - a2 j158 - i125 a970 i159 i159 a456 i160 a440  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 519
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?161 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B65" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1396  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1392 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1251 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1602 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1248 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1248  <|@  <|@
f <@~|@floating>@ <|@
tid i1249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121371
stableDimension: 0
stamp: i32 [-121371] â‡Š00000000fffe25e5 â‡ˆ00000000fffe25e5
stampKind: i32
value: int[-121371|0xfffffffffffe25e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1245 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1245  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1294) [bci: 25]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1630 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1630  <|@  <|@
f <@~|@floating>@ <|@
tid j730 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j683 
y: j673 
=== Succesors ===
=== Usages ===
v732 j738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j683 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid a1244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1171729116
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1171729116]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1227 a1227 a1227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v1626 
falseSuccessor: v1629 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v1626 #falseSuccessor: v1629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v1630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
v1626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" "B155" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
=== Predecessor ===
v1630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid j1656 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1672 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j730 
y: j1656 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j730 y: j1656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v732 
=== Succesors ===
trueSuccessor: v1637 
falseSuccessor: v1634 
=== Usages ===
=== Predecessor ===
v1629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v732 #trueSuccessor: v1637 #falseSuccessor: v1634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1625 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1625  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
v1637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1624 v1625 
=== Succesors ===
next: v1534 
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1624 v1625 #next: v1534  <|@  <|@
f <@*|@fixed>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v1530 
falseSuccessor: v1533 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v1530 #falseSuccessor: v1533  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v1534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1528  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
v1530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B154" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1542 
=== Usages ===
=== Predecessor ===
v1534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1542  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i90 
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i90  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j730 
y: j737 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j730 y: j737  <|@  <|@
f <@~|@floating>@ <|@
tid j1660 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1667 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j738 
y: j1660 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j738 y: j1660  <|@  <|@
f <@~|@floating>@ <|@
tid i1243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -138267
stableDimension: 0
stamp: i32 [-138267] â‡Š00000000fffde3e5 â‡ˆ00000000fffde3e5
stampKind: i32
value: int[-138267|0xfffffffffffde3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v1541 
falseSuccessor: v1538 
=== Usages ===
=== Predecessor ===
v1533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v1541 #falseSuccessor: v1538  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B153" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1540  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i1667 
=== Succesors ===
=== Usages ===
v1540 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v1531 
falseSuccessor: v1539 
=== Usages ===
=== Predecessor ===
v1541 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v1531 #falseSuccessor: v1539  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
v1531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1528 v1529 
=== Succesors ===
next: v97 
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1528 v1529 #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v1527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B126" 
    successors "B126" "B127" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4604981152154866909
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j99 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v98 
values: j65 j121 
=== Succesors ===
=== Usages ===
?102 v67 j116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: j65 j121  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v98 
values: i5 i122 
=== Succesors ===
=== Usages ===
?102 v104 v1728 i122 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: i5 i122  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v98 
values: i90 i123 
=== Succesors ===
=== Usages ===
?102 i123 v1729 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: i90 i123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0610475199445024
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v97 
=== Succesors ===
next: v109 
=== Usages ===
j99 i100 i101 v106 v124 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v97 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 50]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i1664 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i100 y: i1664  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 50]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.514809828340626
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B125" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4600679141914788222
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 53]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1687 
=== Usages ===
v745 v736 
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1687  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1623 v105 
=== Succesors ===
=== Usages ===
i1687 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1623 v105  <|@  <|@
f <@~|@floating>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i100 
=== Succesors ===
=== Usages ===
i1687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v736 
address: v1728 
=== Succesors ===
next: i1688 
=== Usages ===
j113 
=== Predecessor ===
v105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v736 address: v1728 #next: i1688  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1527 v105 
=== Succesors ===
=== Usages ===
i1688 v546 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1527 v105  <|@  <|@
f <@~|@floating>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i101 
=== Succesors ===
=== Usages ===
v546 i1688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1688 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 59]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v745 
address: v1729 
=== Succesors ===
next: v546 
=== Usages ===
j111 
=== Predecessor ===
i1687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v745 address: v1729 #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid j111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 64]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1688 
=== Succesors ===
=== Usages ===
j115 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1688  <|@  <|@
f <@~|@floating>@ <|@
tid j113 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 75]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1687 
=== Succesors ===
=== Usages ===
j114 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1687  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 76]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j113 
=== Succesors ===
=== Usages ===
j115 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j113  <|@  <|@
f <@~|@floating>@ <|@
tid j115 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 77]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j111 
y: j114 
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j111 y: j114  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 78]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j99 
y: j115 
=== Succesors ===
=== Usages ===
i117 j121 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j99 y: j115  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 87]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j116 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v745 
address: v1729 
value: i117 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
i1688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v745 address: v1729 value: i117 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1299) [bci: 93]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j116 
y: i120 
=== Succesors ===
=== Usages ===
j99 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j116 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 99]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i101 
y: i4 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i101 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 96]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i100 
y: i4 
=== Succesors ===
=== Usages ===
i100 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i100 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B152" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1301) [bci: 105]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v98 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v98 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j99 
y: j65 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j99 y: j65  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v927 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v927 #falseSuccessor: v929  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v927 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B36" "B109" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v336 
values: a440 a440 a970 
=== Succesors ===
=== Usages ===
v1730 v1733 v1731 v1732 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v336 values: a440 a440 a970  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v336 
values: i1665 i1665 i127 
=== Succesors ===
=== Usages ===
i233 j747 v207 v230 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v336 values: i1665 i1665 i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v335 v338 v355 
=== Succesors ===
next: v934 
=== Usages ===
a341 i340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v335 v338 v355 #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i340 
y: i4 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i340 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v933 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v933 #falseSuccessor: v931  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1293 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1293  <|@  <|@
f <@~|@floating>@ <|@
tid a1295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@731488164
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@731488164]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1297 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145939
stableDimension: 0
stamp: i32 [-145939] â‡Š00000000fffdc5ed â‡ˆ00000000fffdc5ed
stampKind: i32
value: int[-145939|0xfffffffffffdc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
v933 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1689 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1689  <|@  <|@
f <@~|@floating>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a341 
index: - 
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1689 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1731 
=== Succesors ===
next: v1654 
=== Usages ===
v575 v585 v825 j746 
=== Predecessor ===
v931 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1731 #next: v1654  <|@  <|@
f <@~|@floating>@ <|@
tid j747 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i340 
=== Succesors ===
=== Usages ===
j748 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i340  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j747 
y: j673 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j747 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid j746 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1689 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1689  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j748 
y: j746 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j748 y: j746  <|@  <|@
f <@~|@floating>@ <|@
tid i1302 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144155
stableDimension: 0
stamp: i32 [-144155] â‡Š00000000fffdcce5 â‡ˆ00000000fffdcce5
stampKind: i32
value: int[-144155|0xfffffffffffdcce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1296 i1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v750 
=== Succesors ===
trueSuccessor: v1653 
falseSuccessor: v1650 
=== Usages ===
=== Predecessor ===
i1689 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v750 #trueSuccessor: v1653 #falseSuccessor: v1650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1689 
y: i5 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1689 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v1651 
falseSuccessor: v1643 
=== Usages ===
=== Predecessor ===
v1653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v1651 #falseSuccessor: v1643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1773 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1773  <|@  <|@
f <@*|@fixed>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B149" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: v946 
=== Usages ===
v756 
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 13]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: i32
=== Inputs ===
x: i340 
y: i49 
=== Succesors ===
=== Usages ===
v1732 i241 v575 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i340 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i1689 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i233 y: i1689  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v575 
=== Succesors ===
trueSuccessor: v943 
falseSuccessor: v945 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v575 #trueSuccessor: v943 #falseSuccessor: v945  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
i1691 
=== Predecessor ===
v946 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B137" "B138" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4611828579052266585
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j204 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] â‡ˆ000000000000000f
valueDescription: i64
=== Inputs ===
merge: v203 
values: j65 j223 
=== Succesors ===
=== Usages ===
j219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v203 values: j65 j223  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v203 
values: i5 i224 
=== Succesors ===
=== Usages ===
v1730 v207 i224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v203 values: i5 i224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.722328911724681
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v202 
=== Succesors ===
next: v212 
=== Usages ===
j204 i205 v209 v225 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v202 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i205 
y: i340 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i205 y: i340  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
trueSuccessorProbability: 0.6326674577443074
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v208 #falseSuccessor: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B136" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4608557767962773186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 11]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1690 
=== Usages ===
v756 
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1690  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1643 v208 
=== Succesors ===
=== Usages ===
i1690 v569 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1643 v208  <|@  <|@
f <@~|@floating>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a341 
index: i205 
=== Succesors ===
=== Usages ===
v569 i1690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a341 index: i205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v756 
address: v1730 
=== Succesors ===
next: v569 
=== Usages ===
j214 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v756 address: v1730 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 19]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1690 
=== Succesors ===
=== Usages ===
j216 j217 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1690  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 34359738360] â‡ˆ00000007fffffff8
=== Inputs ===
x: j214 
y: i215 
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j214 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j217 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 8589934590] â‡ˆ00000001fffffffe
=== Inputs ===
x: j214 
y: i4 
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j214 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 42949672950] â‡ˆ0000000ffffffffe
=== Inputs ===
x: j216 
y: j217 
=== Succesors ===
=== Usages ===
j219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j216 y: j217  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 25]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 42949672960] â‡ˆ0000000fffffffff
=== Inputs ===
x: j204 
y: j218 
=== Succesors ===
=== Usages ===
i220 j223 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j204 y: j218  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
resultBits: 32
stamp: i32
=== Inputs ===
value: j219 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v756 
address: v1730 
value: i220 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
i1690 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v756 address: v1730 value: i220 stateAfter: - lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1348) [bci: 39]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 10] â‡ˆ000000000000000f
=== Inputs ===
x: j219 
y: i120 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j219 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 41]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i32
=== Inputs ===
x: i205 
y: i4 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i205 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
loopBegin: v203 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" "B148" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 47]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v203 
=== Succesors ===
next: i1691 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v203 #next: i1691  <|@  <|@
f <@~|@floating>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a341 
index: i233 
=== Succesors ===
=== Usages ===
i1691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a341 index: i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1691 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v943 
address: v1732 
=== Succesors ===
next: v238 
=== Usages ===
v235 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v943 address: v1732 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1691 
y: i5 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1691 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:625) [bci: 335]
resultBits: 32
stamp: i32
=== Inputs ===
value: j61 
=== Succesors ===
=== Usages ===
v328 v327 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j61  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 0.08541926203716788
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
i1691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v236 #falseSuccessor: v237  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" 
    xhandlers
    flags 
    probability 4589329503749568218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 330
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: true
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 624
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - j61 - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - j61 - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B144" 
    successors "B141" "B142" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v240 
values: i233 i246 
=== Succesors ===
=== Usages ===
?242 v243 i246 v593 j1707 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v240 values: i233 i246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.3187490602916856
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v239 
=== Succesors ===
next: v951 
=== Usages ===
i241 v250 v254 v950 v955 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v239 #next: v951  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<FDBigInteger.trimLeadingZeros()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: ?261 
values: a1 i241 
=== Succesors ===
=== Usages ===
v667 v1271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 i241  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i241 
y: i4 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i241 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v950 #falseSuccessor: v947  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v240 
=== Succesors ===
next: v1267 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v240 #next: v1267  <|@  <|@
f <@~|@floating>@ <|@
tid i1268 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149267
stableDimension: 0
stamp: i32 [-149267] â‡Š00000000fffdb8ed â‡ˆ00000000fffdb8ed
stampKind: i32
value: int[-149267|0xfffffffffffdb8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B146" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 31]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: i32
=== Inputs ===
x: i241 
y: i49 
=== Succesors ===
=== Usages ===
i241 v585 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i241 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i1689 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i246 y: i1689  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v585 
=== Succesors ===
trueSuccessor: v952 
falseSuccessor: v955 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v585 #trueSuccessor: v952 #falseSuccessor: v955  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B145" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1692 
=== Usages ===
i1692 
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid j1707 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i241 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i241  <|@  <|@
f <@~|@floating>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a341 
index: j1707 
=== Succesors ===
=== Usages ===
i1692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a341 index: j1707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1692 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v952 
address: v1733 
=== Succesors ===
next: v253 
=== Usages ===
v248 
=== Predecessor ===
v952 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v952 address: v1733 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1692 
y: i5 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1692 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
i1692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4581605184808318675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?242 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?242 #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
loopBegin: v240 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4589329503749568218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v240 
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v240 #next: v593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i241 stateAfter: - lastLocationAccess: - #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i80 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i80 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v240 
=== Succesors ===
next: v1272 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v240 #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid i1273 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150043
stableDimension: 0
stamp: i32 [-150043] â‡Š00000000fffdb5e5 â‡ˆ00000000fffdb5e5
stampKind: i32
value: int[-150043|0xfffffffffffdb5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
v955 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B141" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1269 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-150043 - -149267] â‡Š00000000fffdb0e5 â‡ˆ00000000fffdbded
valueDescription: i32
=== Inputs ===
merge: v1266 
values: i1268 i1273 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1266 values: i1268 i1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1267 v1272 
=== Succesors ===
next: v1271 
=== Usages ===
i1269 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1267 v1272 #next: v1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?242 
actionAndReason: i1269 
speculation: a1225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?242 actionAndReason: i1269 speculation: a1225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors 
    xhandlers
    flags 
    probability 4604418827588220165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:381) [bci: 56]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i80 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i80 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1303  <|@  <|@
f <@~|@floating>@ <|@
tid i1304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147483
stableDimension: 0
stamp: i32 [-147483] â‡Š00000000fffdbfe5 â‡ˆ00000000fffdbfe5
stampKind: i32
value: int[-147483|0xfffffffffffdbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
v945 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1301 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B130" "B150" "B149" "B133" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1296 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-147483 - -144155] â‡Š00000000fffd84e5 â‡ˆ00000000fffdffed
valueDescription: i32
=== Inputs ===
merge: v1292 
values: i1294 i1302 i1304 i1302 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1292 values: i1294 i1302 i1304 i1302  <|@  <|@
f <@~|@floating>@ <|@
tid a1297 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1292 
values: a1295 a1235 a1235 a1235 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1292 values: a1295 a1235 a1235 a1235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1293 v1301 v1303 v1773 
=== Succesors ===
next: v1298 
=== Usages ===
i1296 a1297 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1293 v1301 v1303 v1773 #next: v1298  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 144
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: false
localsSize: 15
locksSize: 0
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 587
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - j61 - - - - - - - - - - j65 - 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - j61 - - - - - - - - - - j65 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?337 
actionAndReason: i1296 
speculation: a1297 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1292 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?337 actionAndReason: i1296 speculation: a1297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v928  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<FDBigInteger.multDiffMe(long, FDBigInteger)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1296
stackSize: 0
=== Inputs ===
outerFrameState: ?196 
values: - j61 - a2 j99 - - a456 a440 i100 i101 - - 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?196 values: - j61 - a2 j99 - - a456 a440 i100 i101 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 547
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?102 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1769 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1769  <|@  <|@
f <@*|@fixed>@ <|@
tid v1769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@*|@fixed>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1253 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1253  <|@  <|@
f <@~|@floating>@ <|@
tid i1254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135963
stableDimension: 0
stamp: i32 [-135963] â‡Š00000000fffdece5 â‡ˆ00000000fffdece5
stampKind: i32
value: int[-135963|0xfffffffffffdece5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1240 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1240  <|@  <|@
f <@~|@floating>@ <|@
tid i1241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -118555
stableDimension: 0
stamp: i32 [-118555] â‡Š00000000fffe30e5 â‡ˆ00000000fffe30e5
stampKind: i32
value: int[-118555|0xfffffffffffe30e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid i1239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114459
stableDimension: 0
stamp: i32 [-114459] â‡Š00000000fffe40e5 â‡ˆ00000000fffe40e5
stampKind: i32
value: int[-114459|0xfffffffffffe40e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v883 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" "B157" "B156" "B154" "B114" "B113" "B112" "B155" "B153" "B5" "B42" "B52" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1226 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-167691 - -94219] â‡Š00000000fffc00e5 â‡ˆ00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1222 
values: i1234 i1237 i1239 i1241 i1243 i1246 i1249 i1252 i1254 i1243 i1234 i1246 i1252 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: i1234 i1237 i1239 i1241 i1243 i1246 i1249 i1252 i1254 i1243 i1234 i1246 i1252  <|@  <|@
f <@~|@floating>@ <|@
tid a1227 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1222 
values: a1235 a1225 a1225 a1225 a1244 a1247 a1250 a1250 a1244 a1244 a1235 a1247 a1250 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: a1235 a1225 a1225 a1225 a1244 a1247 a1250 a1250 a1244 a1244 a1235 a1247 a1250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1233 v1236 v1238 v1240 v1242 v1245 v1248 v1251 v1253 v1769 v1770 v1771 v1772 
=== Succesors ===
next: v1228 
=== Usages ===
i1226 a1227 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1233 v1236 v1238 v1240 v1242 v1245 v1248 v1251 v1253 v1769 v1770 v1771 v1772 #next: v1228  <|@  <|@
f <@*|@fixed>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1226 
speculation: a1227 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1226 speculation: a1227  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1662  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1709 v1710 v1713 ?161 ?337 ?290 ?304 ?242 ?134 ?196 j1370 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1713 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1662 v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1662 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 39]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
=== Succesors ===
next: v1774 
=== Usages ===
v1774 a440 v1718 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1713 #next: v1774  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1712 v1720 ?134 ?161 ?196 ?337 ?102 v1711 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 564
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1228 j61 a1331 v1774 i1663 v1775 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1662 
=== Succesors ===
next: i1663 
=== Usages ===
=== Predecessor ===
a1662 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1662 #next: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1712 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1663 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:569) [bci: 29]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1712 
=== Succesors ===
next: i1664 
=== Usages ===
i14 i90 i125 v516 
=== Predecessor ===
v1774 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1712 #next: i1664  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1664 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:569) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
=== Succesors ===
next: i1665 
=== Usages ===
i14 i57 v143 v163 v104 i708 j683 v804 
=== Predecessor ===
i1663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1711 #next: i1665  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1665 v423 v425 v515 v593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1665 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:568) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
=== Succesors ===
next: i1666 
=== Usages ===
i8 v430 ?269 v270 v292 i340 i31 j672 v1717 i50 i127 i340 i1661 
=== Predecessor ===
i1664 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1709 #next: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1666 v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1666 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:568) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1710 
=== Succesors ===
next: i1667 
=== Usages ===
i8 i90 i125 
=== Predecessor ===
i1665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1710 #next: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1718 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1662 
=== Succesors ===
=== Usages ===
i1667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1667 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1718 
=== Succesors ===
next: v18 
=== Usages ===
v446 j1660 j670 v430 v741 v415 v1657 v1658 j1659 
=== Predecessor ===
i1666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1718 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:568) [bci: 24]
stamp: i32
=== Inputs ===
x: i1665 
y: i1666 
=== Succesors ===
=== Usages ===
v15 v45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1665 y: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:569) [bci: 29]
stamp: i32
=== Inputs ===
x: i1663 
y: i1664 
=== Succesors ===
=== Usages ===
v15 v45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1663 y: i1664  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:570) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i14 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a440 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 103]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1662 
=== Succesors ===
=== Usages ===
v1715 ?161 a341 ?269 ?102 a341 ?269 v1716 v1719 v1725 v1729 v1714 v1717 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1662  <|@  <|@
f <@~|@floating>@ <|@
tid a1235 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1652644631
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1652644631]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1227 a1297 a1297 a1227 a1297 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1299) [bci: 91]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] â‡Š0000000000000020 â‡ˆ0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j121 j152 j179 j223 j285 j985 j1018 j1057 j1088 j1109 j1139 j1160 j1178 j1195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1225 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1279 v1271 a1227 a1227 a1227 v1289 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 111]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] â‡Š00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i50 i57 i233 i246 i308 i1661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j65 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 148]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 v84 j99 j132 ?337 j204 j267 v353 j1460 v1468 j1454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j216 j278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 v330 v82 v91 i100 i133 i160 i205 v235 v248 v329 i268 v297 v310 a1331 v1658 v1486 v825 v814 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j674 j685 j710 j730 j748 j1480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i122 i123 i153 i180 i181 j217 i224 v230 v243 j279 i286 v292 v305 v804 v807 v1435 i1019 i1046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:570) [bci: 35]
stamp: void
trueSuccessorProbability: 0.24201595755878824
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
i1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v16 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b92621e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24201595755878824 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1665 
y: i4 
=== Succesors ===
=== Usages ===
v854 v1550 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1665 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v1546 
falseSuccessor: v1549 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v1546 #falseSuccessor: v1549  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1544  <|@  <|@
f <@*|@fixed>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B30" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1558 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1558  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1665 
=== Succesors ===
=== Usages ===
j674 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1665  <|@  <|@
f <@~|@floating>@ <|@
tid j674 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j672 
y: j673 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid j670 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1667 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j674 
y: j670 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j674 y: j670  <|@  <|@
f <@~|@floating>@ <|@
tid i1234 <|@
result int[-100635|0xfffffffffffe76e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -100635
stableDimension: 0
stamp: i32 [-100635] â‡Š00000000fffe76e5 â‡ˆ00000000fffe76e5
stampKind: i32
value: int[-100635|0xfffffffffffe76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v676 
=== Succesors ===
trueSuccessor: v1557 
falseSuccessor: v1554 
=== Usages ===
=== Predecessor ===
v1549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v676 #trueSuccessor: v1557 #falseSuccessor: v1554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = DEC v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
v1558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1667 
y: i5 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1667 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1658 
=== Succesors ===
trueSuccessor: v1555 
falseSuccessor: v1547 
=== Usages ===
=== Predecessor ===
v1557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1658 #trueSuccessor: v1555 #falseSuccessor: v1547  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1770 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1770  <|@  <|@
f <@*|@fixed>@ <|@
tid v1770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-100635|0xfffffffffffe76e5], v11|QWORD[.]] destination: B5 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1545 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1545  <|@  <|@
f <@*|@fixed>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
v1547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1544 v1545 
=== Succesors ===
next: v265 
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1544 v1545 #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
v1543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604109586098190129
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j267 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] â‡ˆ000000000000000f
valueDescription: i64
=== Inputs ===
merge: v266 
values: j65 j285 
=== Succesors ===
=== Usages ===
?269 i288 j281 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v266 values: j65 j285  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v266 
values: i5 i286 
=== Succesors ===
=== Usages ===
?269 v270 i286 v1714 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v266 values: i5 i286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.722328911724681
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v265 
=== Succesors ===
next: v275 
=== Usages ===
j267 i268 v272 v287 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v265 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i1665 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i268 y: i1665  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
trueSuccessorProbability: 0.6326674577443074
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v271 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v271 #falseSuccessor: v272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD, v16|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601180581118615456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 11]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1668 
=== Usages ===
v682 
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1668  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1543 v271 
=== Succesors ===
=== Usages ===
i1668 v399 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1543 v271  <|@  <|@
f <@~|@floating>@ <|@
tid v1714 <|@
result [v10|QWORD[.] + v16|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i268 
=== Succesors ===
=== Usages ===
v399 i1668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1668 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v682 
address: v1714 
=== Succesors ===
next: v399 
=== Usages ===
j277 
=== Predecessor ===
v271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v682 address: v1714 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 19]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1668 
=== Succesors ===
=== Usages ===
j278 j279 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1668  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 34359738360] â‡ˆ00000007fffffff8
=== Inputs ===
x: j277 
y: i215 
=== Succesors ===
=== Usages ===
j280 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j277 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 8589934590] â‡ˆ00000001fffffffe
=== Inputs ===
x: j277 
y: i4 
=== Succesors ===
=== Usages ===
j280 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j277 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 42949672950] â‡ˆ0000000ffffffffe
=== Inputs ===
x: j278 
y: j279 
=== Succesors ===
=== Usages ===
j281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j278 y: j279  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 25]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 42949672960] â‡ˆ0000000fffffffff
=== Inputs ===
x: j267 
y: j280 
=== Succesors ===
=== Usages ===
i282 j285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j267 y: j280  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
resultBits: 32
stamp: i32
=== Inputs ===
value: j281 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v682 
address: v1714 
value: i282 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
i1668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v682 address: v1714 value: i282 stateAfter: - lastLocationAccess: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1348) [bci: 39]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i64 [0 - 10] â‡ˆ000000000000000f
=== Inputs ===
x: j281 
y: i120 
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j281 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 41]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: i32
=== Inputs ===
x: i268 
y: i4 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i268 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
loopBegin: v266 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v266  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v10|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = SHL v17|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = SHL v17|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v15|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[.] + v16|DWORD * 4 + 16], y: v21|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHR v21|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD, v23|DWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B26" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 47]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v266 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v266 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 48]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
resultBits: 32
stamp: i32 [0 - 10] â‡ˆ000000000000000f
=== Inputs ===
value: j267 
=== Succesors ===
=== Usages ===
v25 v437 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j267  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:574) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i5 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i288 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:574) [bci: 57]
stamp: void
trueSuccessorProbability: 0.8333333333333334
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v26 #falseSuccessor: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV v15|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8333333333333334 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v853 
falseSuccessor: v851 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v853 #falseSuccessor: v851  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1275 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1275  <|@  <|@
f <@~|@floating>@ <|@
tid i1276 <|@
result int[-102419|0xfffffffffffe6fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102419
stableDimension: 0
stamp: i32 [-102419] â‡Š00000000fffe6fed â‡ˆ00000000fffe6fed
stampKind: i32
value: int[-102419|0xfffffffffffe6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102419|0xfffffffffffe6fed]] destination: B12 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid i1661 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 111]
stamp: i32
=== Inputs ===
x: i1665 
y: i49 
=== Succesors ===
=== Usages ===
v1657 v1715 i303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1665 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1661 
y: i1667 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1661 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1657 
=== Succesors ===
trueSuccessor: v855 
falseSuccessor: v857 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1657 #trueSuccessor: v855 #falseSuccessor: v857  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1669 
=== Usages ===
i1669 
=== Predecessor ===
v858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1669  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
result [v10|QWORD[.] + v25|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i1661 
=== Succesors ===
=== Usages ===
i1669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i1661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1669 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v855 
address: v1715 
=== Succesors ===
next: v300 
=== Usages ===
v297 
=== Predecessor ===
v855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v855 address: v1715 #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1669 
y: i5 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1669 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 0.08541926203716788
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v298 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
i1669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v298 #falseSuccessor: v299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|QWORD[.] + v25|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 82
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: true
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 577
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?304 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i303 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v302 
values: i1661 i308 
=== Succesors ===
=== Usages ===
?304 v305 i308 v423 j1693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v302 values: i1661 i308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.3187490602916856
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v301 
=== Succesors ===
next: v863 
=== Usages ===
i303 v312 v316 v862 v867 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v301 #next: v863  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<FDBigInteger.trimLeadingZeros()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: ?323 
values: a1 i303 
=== Succesors ===
=== Usages ===
v668 v1289 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a1 i303  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i4 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v862 
falseSuccessor: v859 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v862 #falseSuccessor: v859  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v302 
=== Succesors ===
next: v1285 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v302 #next: v1285  <|@  <|@
f <@~|@floating>@ <|@
tid i1286 <|@
result int[-105747|0xfffffffffffe62ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105747
stableDimension: 0
stamp: i32 [-105747] â‡Š00000000fffe62ed â‡ˆ00000000fffe62ed
stampKind: i32
value: int[-105747|0xfffffffffffe62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105747|0xfffffffffffe62ed]] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 31]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: i32
=== Inputs ===
x: i303 
y: i49 
=== Succesors ===
=== Usages ===
i303 v415 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i308 
y: i1667 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i308 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v415 
=== Succesors ===
trueSuccessor: v864 
falseSuccessor: v867 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v415 #trueSuccessor: v864 #falseSuccessor: v867  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1670 
=== Usages ===
i1670 
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1670  <|@  <|@
f <@~|@floating>@ <|@
tid j1693 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
v1716 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i303  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
result [v10|QWORD[.] + v28|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: j1693 
=== Succesors ===
=== Usages ===
i1670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: j1693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1670 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v864 
address: v1716 
=== Succesors ===
next: v315 
=== Usages ===
v310 
=== Predecessor ===
v864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v864 address: v1716 #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1670 
y: i5 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1670 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
i1670 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v311 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v10|QWORD[.] + v28|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572980947968751244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?304 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?304 #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
loopBegin: v302 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v302  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v26|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
locals: - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 82] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v302 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v302 #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i303 stateAfter: - lastLocationAccess: - #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v302 
=== Succesors ===
next: v1290 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v302 #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid i1291 <|@
result int[-106523|0xfffffffffffe5fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106523
stableDimension: 0
stamp: i32 [-106523] â‡Š00000000fffe5fe5 â‡ˆ00000000fffe5fe5
stampKind: i32
value: int[-106523|0xfffffffffffe5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106523|0xfffffffffffe5fe5]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1287 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106523 - -105747] â‡Š00000000fffe42e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v1284 
values: i1286 i1291 
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1284 values: i1286 i1291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1285 v1290 
=== Succesors ===
next: v1289 
=== Usages ===
i1287 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1285 v1290 #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?304 
actionAndReason: i1287 
speculation: a1225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?304 actionAndReason: i1287 speculation: a1225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v26|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
locals: - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 82] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4595813625967755995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:381) [bci: 56]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid i1283 <|@
result int[-103963|0xfffffffffffe69e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103963
stableDimension: 0
stamp: i32 [-103963] â‡Š00000000fffe69e5 â‡ˆ00000000fffe69e5
stampKind: i32
value: int[-103963|0xfffffffffffe69e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103963|0xfffffffffffe69e5]] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v872 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v872  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1665 
y: i1667 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1665 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v869 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v869 #falseSuccessor: v871  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
v437 
=== Predecessor ===
v872 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 71]
stamp: i32
=== Inputs ===
x: i1665 
y: i4 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1665 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i31 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i31 stateAfter: - lastLocationAccess: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid v1717 <|@
result [v10|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i1665 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i1665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v869 
address: v1717 
value: i288 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v869 address: v1717 value: i288 stateAfter: - lastLocationAccess: - #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:579) [bci: 85]
stamp: void
=== Inputs ===
result: i5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[.] + v5|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:575) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1280 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid i1281 <|@
result int[-110363|0xfffffffffffe50e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110363
stableDimension: 0
stamp: i32 [-110363] â‡Š00000000fffe50e5 â‡ˆ00000000fffe50e5
stampKind: i32
value: int[-110363|0xfffffffffffe50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v871 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110363|0xfffffffffffe50e5]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" "B28" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1277 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-110363 - -102419] â‡Š00000000fffe40e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v1274 
values: i1276 i1281 i1283 
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1274 values: i1276 i1281 i1283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1275 v1280 v1282 
=== Succesors ===
next: v1279 
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1275 v1280 v1282 #next: v1279  <|@  <|@
tid ?290 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: true
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 573
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?269 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - - - - - - -  <|@  <|@
tid ?269 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FDBigInteger.multAndCarryBy10(int[], int, int[])>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1345
stackSize: 0
=== Inputs ===
outerFrameState: ?290 
values: a440 i1665 a440 j267 - i268 - - 
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?290 values: a440 i1665 a440 j267 - i268 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?269 
actionAndReason: i1277 
speculation: a1225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?269 actionAndReason: i1277 speculation: a1225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: v10|QWORD[.] v5|DWORD v10|QWORD[.] v15|QWORD - v16|DWORD - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
locals: v0|QWORD[.] - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:5, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-100635|0xfffffffffffe76e5], v11|QWORD[.]] destination: B30 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1671 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1671 <|@
result v32|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 119]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1720 
=== Succesors ===
next: v1775 
=== Usages ===
a456 v1775 v1721 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1720 #next: v1775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1671 
=== Succesors ===
next: v880 
=== Usages ===
=== Predecessor ===
a1671 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1671 #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i14 
y: i8 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i14 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 89]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v877 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v879 #falseSuccessor: v877  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v32|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@~|@floating>@ <|@
tid i1237 <|@
result int[-112147|0xfffffffffffe49ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112147
stableDimension: 0
stamp: i32 [-112147] â‡Š00000000fffe49ed â‡ˆ00000000fffe49ed
stampKind: i32
value: int[-112147|0xfffffffffffe49ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112147|0xfffffffffffe49ed], Object[null]] destination: B32 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:580) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 111]
stamp: i32
=== Inputs ===
x: i1665 
y: i49 
=== Succesors ===
=== Usages ===
v1719 v446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1665 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i1667 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v881 
falseSuccessor: v883 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v881 #falseSuccessor: v883  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B156" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1672 
=== Usages ===
i1673 
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
result [v32|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1671 
=== Succesors ===
=== Usages ===
i1672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1672 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1721 
=== Succesors ===
next: v888 
=== Usages ===
v462 v473 j694 j1656 
=== Predecessor ===
v881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1721 #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 127]
stamp: i32
=== Inputs ===
x: i1664 
y: i49 
=== Succesors ===
=== Usages ===
v1722 v462 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1664 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i1672 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i57 y: i1672  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v462 
=== Succesors ===
trueSuccessor: v885 
falseSuccessor: v887 
=== Usages ===
=== Predecessor ===
i1672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v462 #trueSuccessor: v885 #falseSuccessor: v887  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1673 
=== Usages ===
i1674 
=== Predecessor ===
v888 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1673  <|@  <|@
f <@~|@floating>@ <|@
tid v1719 <|@
result [v10|QWORD[.] + v33|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i50 
=== Succesors ===
=== Usages ===
i1673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1673 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v881 
address: v1719 
=== Succesors ===
next: i1674 
=== Usages ===
j54 
=== Predecessor ===
v885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v881 address: v1719 #next: i1674  <|@  <|@
f <@~|@floating>@ <|@
tid a456 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 119]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1671 
=== Succesors ===
=== Usages ===
v1751 ?134 ?102 ?161 v1749 v1722 v1723 v1726 v1728 v1735 v1737 v1739 v1741 v1743 v1745 v1747 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1722 <|@
result [v37|QWORD[.] + v35|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i57 
=== Succesors ===
=== Usages ===
i1674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1674 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v885 
address: v1722 
=== Succesors ===
next: j61 
=== Usages ===
j60 
=== Predecessor ===
i1673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v885 address: v1722 #next: j61  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 117]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1673 
=== Succesors ===
=== Usages ===
j61 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1673  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 133]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1674 
=== Succesors ===
=== Usages ===
j61 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j61 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 134]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?3 
x: j54 
y: j60 
=== Succesors ===
next: v87 
=== Usages ===
?196 ?337 j147 ?261 i80 v84 ?102 j114 j173 ?134 ?161 j982 j1015 j1054 j1085 j1106 j1136 j1157 j1175 j1192 
=== Predecessor ===
i1674 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?3 x: j54 y: j60 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1291) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j61 
y: j65 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j61 y: j65  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1291) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5162453864221004
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
j61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v10|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v37|QWORD[.] + v35|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v39|QWORD) size: QWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5162453864221004 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600720757905725354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1324) [bci: 294]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v5|DWORD] destination: B36 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B115" 
    xhandlers
    flags 
    probability 4600277108534450580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1292) [bci: 9]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
tid ?196 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: true
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 587
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - j61 - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?102 ?134 ?161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - j61 - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1292) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i1663 
y: i1666 
=== Succesors ===
=== Usages ===
v91 i101 j737 v741 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1663 y: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1293) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i5 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i90 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1664 
y: i4 
=== Succesors ===
=== Usages ===
v1534 v1572 v1630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1664 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j683 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1664 
=== Succesors ===
=== Usages ===
v687 j730 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1664  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1293) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.7340038148083925E-4
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v92 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v92 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SUB (x: v3|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7340038148083925E-4 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1302) [bci: 108]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1566 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1302) [bci: 110]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i1666 
y: i1663 
=== Succesors ===
=== Usages ===
i127 ?134 i1046 v807 j684 ?161 i1220 v1010 v1044 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1666 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid j684 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i125 
=== Succesors ===
=== Usages ===
j685 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i125  <|@  <|@
f <@~|@floating>@ <|@
tid j685 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j684 
y: j673 
=== Succesors ===
=== Usages ===
v702 v687 v695 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j684 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i4 
=== Succesors ===
=== Usages ===
v1598 v1566 v1582 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i125 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v1562 
falseSuccessor: v1565 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v1562 #falseSuccessor: v1565  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v6|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVSXD v43|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = DEC v44|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B44" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1560 
=== Usages ===
=== Predecessor ===
v1566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1560  <|@  <|@
f <@*|@fixed>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B114" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1574 
=== Usages ===
=== Predecessor ===
v1566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j683 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j685 y: j683  <|@  <|@
f <@~|@floating>@ <|@
tid a1247 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1592099964
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1592099964]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1227 a1227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1246 <|@
result int[-120595|0xfffffffffffe28ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -120595
stableDimension: 0
stamp: i32 [-120595] â‡Š00000000fffe28ed â‡ˆ00000000fffe28ed
stampKind: i32
value: int[-120595|0xfffffffffffe28ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v687 
=== Succesors ===
trueSuccessor: v1573 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v687 #trueSuccessor: v1573 #falseSuccessor: v1570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1572 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v1571 
falseSuccessor: v1563 
=== Usages ===
=== Predecessor ===
v1573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v1571 #falseSuccessor: v1563  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1771 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1771  <|@  <|@
f <@*|@fixed>@ <|@
tid v1771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-120595|0xfffffffffffe28ed], v46|QWORD[.]] destination: B42 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1561  <|@  <|@
f <@*|@fixed>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
v1563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1560 v1561 
=== Succesors ===
next: v1582 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1560 v1561 #next: v1582  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1672 
=== Succesors ===
=== Usages ===
v695 v720 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid a1250 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1070949184
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1070949184]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1227 a1227 a1227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v1581 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v1578 #falseSuccessor: v1581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1576 
=== Usages ===
=== Predecessor ===
v1582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1576  <|@  <|@
f <@*|@fixed>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B113" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1590 
=== Usages ===
=== Predecessor ===
v1582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1590  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j694 
=== Succesors ===
=== Usages ===
v1590 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j685 y: j694  <|@  <|@
f <@*|@fixed>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v695 
=== Succesors ===
trueSuccessor: v1589 
falseSuccessor: v1586 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v695 #trueSuccessor: v1589 #falseSuccessor: v1586  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@*|@fixed>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
v1589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1576 v1577 
=== Succesors ===
next: v1598 
=== Usages ===
v700 v1001 v1034 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1576 v1577 #next: v1598  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 119]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i125 
y: i1665 
=== Succesors ===
=== Usages ===
v1435 v515 i340 v481 v814 j701 v1357 i1308 v1316 a1331 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i125 y: i1665  <|@  <|@
f <@~|@floating>@ <|@
tid j701 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
v702 v725 j1480 j1467 j1473 j1477 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v1597 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v1594 #falseSuccessor: v1597  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v43|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v49|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B54" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1592 
=== Usages ===
=== Predecessor ===
v1598 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1592  <|@  <|@
f <@*|@fixed>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B112" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v1598 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j701 
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j685 y: j701  <|@  <|@
f <@~|@floating>@ <|@
tid i1252 <|@
result int[-123419|0xfffffffffffe1de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123419
stableDimension: 0
stamp: i32 [-123419] â‡Š00000000fffe1de5 â‡ˆ00000000fffe1de5
stampKind: i32
value: int[-123419|0xfffffffffffe1de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v702 
=== Succesors ===
trueSuccessor: v1605 
falseSuccessor: v1602 
=== Usages ===
=== Predecessor ===
v1597 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v702 #trueSuccessor: v1605 #falseSuccessor: v1602  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i5 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i127 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v1603 
falseSuccessor: v1595 
=== Usages ===
=== Predecessor ===
v1605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v1603 #falseSuccessor: v1595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v49|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1772 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1772  <|@  <|@
f <@*|@fixed>@ <|@
tid v1772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123419|0xfffffffffffe1de5], v48|QWORD[.]] destination: B52 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1593  <|@  <|@
f <@*|@fixed>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
v1595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1592 v1593 
=== Succesors ===
next: j1310 
=== Usages ===
v707 v1002 v1035 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1592 v1593 #next: j1310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1310 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1354 
=== Usages ===
v1753 v1754 
=== Predecessor ===
v1591 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1354  <|@  <|@
f <@~|@floating>@ <|@
tid v1753 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1310 
index: - 
=== Succesors ===
=== Usages ===
j1354 v1356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1310 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1354 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1753 
=== Succesors ===
next: j1355 
=== Usages ===
j1314 v1755 v1756 a1330 v1761 v1757 v1758 v1759 v1760 
=== Predecessor ===
j1310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1753 #next: j1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1754 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1310 
index: - 
=== Succesors ===
=== Usages ===
j1355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1310 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1355 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1754 
=== Succesors ===
next: v1319 
=== Usages ===
v1320 
=== Predecessor ===
j1354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1754 #next: v1319  <|@  <|@
f <@~|@floating>@ <|@
tid i1315 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] â‡Š0000000000ffffff â‡ˆ0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i1315 
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i127 y: i1315  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1044 i1308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1219 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] â‡Š00000000fffffff8 â‡ˆ00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1220 i1309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1316 
=== Succesors ===
trueSuccessor: v1318 
falseSuccessor: v1317 
=== Usages ===
=== Predecessor ===
j1355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1316 #trueSuccessor: v1318 #falseSuccessor: v1317  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v49|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4543569587458822689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1326 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid i1308 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32 [-2147483648 - 2147483644] â‡ˆ00000000fffffffc
=== Inputs ===
x: i127 
y: i386 
=== Succesors ===
=== Usages ===
i1339 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i127 y: i386  <|@  <|@
f <@~|@floating>@ <|@
tid i1338 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] â‡Š0000000000000017 â‡ˆ0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1339 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32 [-2147483645 - 2147483647] â‡Š0000000000000003
=== Inputs ===
x: i1308 
y: i1338 
=== Succesors ===
=== Usages ===
i1309 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1308 y: i1338  <|@  <|@
f <@~|@floating>@ <|@
tid i1309 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i1339 
y: i1219 
=== Succesors ===
=== Usages ===
j1313 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1339 y: i1219  <|@  <|@
f <@~|@floating>@ <|@
tid j1313 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i1309 
=== Succesors ===
=== Usages ===
j1314 v1757 v1758 v1759 v1760 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1309  <|@  <|@
f <@~|@floating>@ <|@
tid j1314 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1313 
y: j1354 
=== Succesors ===
=== Usages ===
v1320 v1356 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1313 y: j1354  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1355 
y: j1314 
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1355 y: j1314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1320 
=== Succesors ===
trueSuccessor: v1325 
falseSuccessor: v1324 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1320 #trueSuccessor: v1325 #falseSuccessor: v1324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL v49|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = LEA [v53|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = AND v54|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = ADD (x: v56|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4513507875123775760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
v1325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4543485139831855357
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1753 
value: j1314 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1343 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1753 value: j1314 stateAfter: - lastLocationAccess: - #next: v1343  <|@  <|@
f <@~|@floating>@ <|@
tid v1757 <|@
result [v56|QWORD + v51|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1313 
index: j1354 
=== Succesors ===
=== Usages ===
v1343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1313 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
address: v1757 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1757 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v1758 <|@
result [v56|QWORD + v51|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1313 
index: j1354 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1313 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
address: v1758 
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1343 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1758 #next: v1349  <|@  <|@
f <@~|@floating>@ <|@
tid v1759 <|@
result [v56|QWORD + v51|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1313 
index: j1354 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1313 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
address: v1759 
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1759 #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid v1760 <|@
result [v56|QWORD + v51|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1313 
index: j1354 
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1313 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
address: v1760 
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1349 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1760 #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v1755 <|@
result [v51|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1354 
index: - 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1354 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1755 
value: i127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1358 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1755 value: i127 stateAfter: - lastLocationAccess: - #next: v1358  <|@  <|@
f <@~|@floating>@ <|@
tid v1756 <|@
result [v51|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1354 
index: - 
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1354 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1307 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1756 
value: j1307 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1756 value: j1307 stateAfter: - lastLocationAccess: - #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid v1761 <|@
result [v51|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1354 
index: - 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1354 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1380 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1761 
value: v1380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1358 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1761 value: v1380 stateAfter: - lastLocationAccess: - #next: v1329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1330 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1330 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1354 
=== Succesors ===
next: v1332 
=== Usages ===
a1335 
=== Predecessor ===
v1329 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1354 #next: v1332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
a1330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + v51|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + v51|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + v51|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + v51|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD + 12], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B57 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4529120481610407509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1321  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B60" 
    xhandlers
    flags 
    probability 4529796062626146167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1321 v1323 
=== Succesors ===
next: a1331 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1321 v1323 #next: a1331  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1331 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1306 i127 i5 
=== Succesors ===
next: v1334 
=== Usages ===
a1335 
=== Predecessor ===
v1322 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1306 i127 i5 #next: v1334  <|@  <|@
f <@*|@fixed>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
a1331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1335 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1333 
values: a1330 a1331 
=== Succesors ===
=== Usages ===
v1734 a970 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: a1330 a1331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1332 v1334 
=== Succesors ===
next: v1437 
=== Usages ===
a1335 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1332 v1334 #next: v1437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1387 
=== Usages ===
j1439 
=== Predecessor ===
v1333 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i4 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i127 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1435 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1435 #trueSuccessor: v1385 #falseSuccessor: v1386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v49|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B76" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1403 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1403  <|@  <|@
f <@*|@fixed>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1390 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid v1734 <|@
result [v61|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1335 
index: - 
=== Succesors ===
=== Usages ===
j1439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1335 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1439 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1437 
address: v1734 
=== Succesors ===
=== Usages ===
v1763 v1764 v1765 v1766 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1437 address: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid j1466 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] â‡Šfffffffffffffff8 â‡ˆfffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1467 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j701 
y: j1466 
=== Succesors ===
=== Usages ===
v1468 v1470 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j1466  <|@  <|@
f <@~|@floating>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1467 
y: j65 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1467 y: j65  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1468 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1389 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1468 #trueSuccessor: v1388 #falseSuccessor: v1389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v61|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
v1388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
v1389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B111" 
    successors "B66" "B111" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4539816359593607926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1460 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1392 
values: j65 j1465 
=== Succesors ===
=== Usages ===
v1766 j1465 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1392 values: j65 j1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1391 
=== Succesors ===
next: v1491 
=== Usages ===
j1460 v1395 v1396 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1391 #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1766 <|@
result [v62|QWORD[.] + v64|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1439 
index: j1460 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1439 index: j1460  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
result v65|V256_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1766 
value: v1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v1392 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1766 value: v1492 stateAfter: - lastLocationAccess: - #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid j1360 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1465 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1460 
y: j1360 
=== Succesors ===
=== Usages ===
j1454 j1460 v1470 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1460 y: j1360  <|@  <|@
f <@~|@floating>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1467 
y: j1465 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1467 y: j1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1470 
=== Succesors ===
trueSuccessor: v1395 
falseSuccessor: v1397 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1470 #trueSuccessor: v1395 #falseSuccessor: v1397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v64|QWORD * 4], input: v65|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v64|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1392 
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1392 #next: v1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
v1395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1454 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1400 
values: j65 j1465 
=== Succesors ===
=== Usages ===
v1765 j1459 j1447 v1474 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1400 values: j65 j1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1399 v1401 
=== Succesors ===
next: v1419 
=== Usages ===
j1454 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1399 v1401 #next: v1419  <|@  <|@
f <@~|@floating>@ <|@
tid j1472 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] â‡Šfffffffffffffffc â‡ˆfffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1473 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j701 
y: j1472 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1473 
y: j1454 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1473 y: j1454  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1474 
=== Succesors ===
trueSuccessor: v1418 
falseSuccessor: v1417 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1474 #trueSuccessor: v1418 #falseSuccessor: v1417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v50|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1422 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1422  <|@  <|@
f <@*|@fixed>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
v1418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1765 <|@
result [v62|QWORD[.] + v67|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1439 
index: j1454 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1439 index: j1454  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
result v69|V128_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000>
stampKind: <i32,i32,i32,i32>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1765 
value: v1494 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1765 value: v1494 stateAfter: - lastLocationAccess: - #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid j1442 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] â‡Š0000000000000004 â‡ˆ0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1459 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1454 
y: j1442 
=== Succesors ===
=== Usages ===
j1447 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1454 y: j1442  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v67|QWORD * 4], input: v69|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1447 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1411 
values: j1459 j1454 
=== Succesors ===
=== Usages ===
v1764 j1453 j1440 v1478 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1411 values: j1459 j1454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1410 v1422 
=== Succesors ===
next: v1425 
=== Usages ===
j1447 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1410 v1422 #next: v1425  <|@  <|@
f <@~|@floating>@ <|@
tid j1476 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] â‡Šfffffffffffffffe â‡ˆfffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1477 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j701 
y: j1476 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1477 
y: j1447 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1477 y: j1447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1478 
=== Succesors ===
trueSuccessor: v1424 
falseSuccessor: v1423 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1478 #trueSuccessor: v1424 #falseSuccessor: v1423  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v50|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1428 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1428  <|@  <|@
f <@*|@fixed>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
v1424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1488 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1488  <|@  <|@
f <@~|@floating>@ <|@
tid v1764 <|@
result [v62|QWORD[.] + v71|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1439 
index: j1447 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1439 index: j1447  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
result v73|V64_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i32 [0] â‡ˆ0000000000000000,i32 [0] â‡ˆ0000000000000000>
stampKind: <i32,i32>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1764 
value: v1493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1413 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1764 value: v1493 stateAfter: - lastLocationAccess: - #next: v1413  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1453 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1447 
y: j1452 
=== Succesors ===
=== Usages ===
j1440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1447 y: j1452  <|@  <|@
f <@*|@fixed>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
v1488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v71|QWORD * 4], input: v73|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1440 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1414 
values: j1453 j1447 
=== Succesors ===
=== Usages ===
v1763 v1481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1414 values: j1453 j1447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1413 v1428 
=== Succesors ===
next: v1431 
=== Usages ===
j1440 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1413 v1428 #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid j1480 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j701 
y: j673 
=== Succesors ===
=== Usages ===
v1481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1480 
y: j1440 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1480 y: j1440  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1481 
=== Succesors ===
trueSuccessor: v1430 
falseSuccessor: v1429 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1481 #trueSuccessor: v1430 #falseSuccessor: v1429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = DEC v50|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1434  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1486 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1763 <|@
result [v62|QWORD[.] + v75|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1439 
index: j1440 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1439 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1763 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1416 
=== Usages ===
=== Predecessor ===
v1429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1763 value: i5 stateAfter: - lastLocationAccess: - #next: v1416  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + v75|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B61" "B75" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1403 v1416 v1434 
=== Succesors ===
next: a970 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1403 v1416 v1434 #next: a970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a970 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1303) [bci: 120]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1335 
=== Succesors ===
next: v130 
=== Usages ===
?134 a341 v1724 v1727 ?161 a517 v1736 v1738 v1740 v1742 v1744 v1746 v1748 v1750 v1752 
=== Predecessor ===
v1404 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1335 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
a970 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" 
    successors "B78" "B79" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4544319959220978422
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j132 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v131 
values: j65 j152 
=== Succesors ===
=== Usages ===
j975 j148 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v131 values: j65 j152  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v131 
values: i5 i153 
=== Succesors ===
=== Usages ===
i976 v1723 v135 v1724 i153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v131 values: i5 i153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 22.00000000000002
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 2
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v130 
=== Succesors ===
next: v141 
=== Usages ===
j132 i133 v137 v154 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v130 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i386 
=== Succesors ===
=== Usages ===
i1046 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i125 y: i386  <|@  <|@
f <@~|@floating>@ <|@
tid i1046 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1044 
trueValue: i125 
falseValue: i4 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1044 trueValue: i125 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i1046 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i133 y: i1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.9545454545454546
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v136 #falseSuccessor: v137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD, v78|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v43|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4544081391258624703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 143]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1675 
=== Usages ===
v707 v700 
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1575 v136 
=== Succesors ===
=== Usages ===
i1675 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1575 v136  <|@  <|@
f <@~|@floating>@ <|@
tid v1723 <|@
result [v37|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i133 
=== Succesors ===
=== Usages ===
i1675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1675 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v700 
address: v1723 
=== Succesors ===
next: v488 
=== Usages ===
j146 
=== Predecessor ===
v136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v700 address: v1723 #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1591 v136 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1591 v136  <|@  <|@
f <@~|@floating>@ <|@
tid v1724 <|@
result [v61|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: i133 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: i133  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1675 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j146 
=== Succesors ===
=== Usages ===
j148 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j146  <|@  <|@
f <@~|@floating>@ <|@
tid j148 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j132 
y: j147 
=== Succesors ===
=== Usages ===
i149 j152 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j132 y: j147  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j148 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v707 
address: v1724 
value: i149 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
i1675 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v707 address: v1724 value: i149 stateAfter: - lastLocationAccess: - #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid j152 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j148 
y: i120 
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j148 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 184]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i133 
y: i4 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i133 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [v37|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = IMUL (x: v40|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SUB (x: v77|QWORD, ~y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v78|DWORD * 4 + 16], y: v82|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SAR v82|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD, v84|DWORD] destination: B78 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4523934476916634324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1312) [bci: 193]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v131 
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v131 #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD, v78|DWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B81" 
    successors "B81" "B82" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4530144089210011538
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j975 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v974 
values: j132 j1195 
=== Succesors ===
=== Usages ===
j983 j1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: j132 j1195  <|@  <|@
f <@~|@floating>@ <|@
tid i976 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v974 
values: i133 i1218 
=== Succesors ===
=== Usages ===
v977 j1695 v1735 v1736 i1009 i1218 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: i133 i1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.5000000000000027
loopOrigFrequency: 20.00000000000002
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 0
stamp: void
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1003 
=== Succesors ===
next: v980 
=== Usages ===
j975 i976 v979 v987 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1003 #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid i1220 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i125 
y: i1219 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i125 y: i1219  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i976 
y: i1220 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i976 y: i1220  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.9545454545454546
=== Inputs ===
condition: v977 
=== Succesors ===
trueSuccessor: v978 
falseSuccessor: v979 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v977 #trueSuccessor: v978 #falseSuccessor: v979  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD, v86|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA [v43|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 143]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1676 
=== Usages ===
v1001 v1002 
=== Predecessor ===
v980 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1575 v978 
=== Succesors ===
=== Usages ===
i1683 i1676 i1681 i1677 i1682 i1678 i1680 i1679 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1575 v978  <|@  <|@
f <@~|@floating>@ <|@
tid v1735 <|@
result [v37|QWORD[.] + v86|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i976 
=== Succesors ===
=== Usages ===
i1676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1676 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1735 
=== Succesors ===
next: v996 
=== Usages ===
j981 
=== Predecessor ===
v978 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1735 #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1591 v978 
=== Succesors ===
=== Usages ===
v1204 v996 v1169 v1068 v1187 v1099 v1150 v1118 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1591 v978  <|@  <|@
f <@~|@floating>@ <|@
tid v1736 <|@
result [v61|QWORD[.] + v86|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: i976 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: i976  <|@  <|@
f <@~|@floating>@ <|@
tid j981 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1676 
=== Succesors ===
=== Usages ===
j982 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid j982 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j981 
=== Succesors ===
=== Usages ===
j983 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j981  <|@  <|@
f <@~|@floating>@ <|@
tid j983 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j975 
y: j982 
=== Succesors ===
=== Usages ===
i984 j985 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j975 y: j982  <|@  <|@
f <@~|@floating>@ <|@
tid i984 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j983 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v996 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1736 
value: i984 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1677 
=== Usages ===
=== Predecessor ===
i1676 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1736 value: i984 stateAfter: - lastLocationAccess: - #next: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid j1695 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i976 
=== Succesors ===
=== Usages ===
v1740 v1742 v1744 v1746 v1748 v1750 v1752 v1739 v1741 v1743 v1745 v1747 v1749 v1751 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i976  <|@  <|@
f <@~|@floating>@ <|@
tid v1739 <|@
result [v37|QWORD[.] + v91|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1677 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1739 
=== Succesors ===
next: v1068 
=== Usages ===
j1053 
=== Predecessor ===
v996 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1739 #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid v1740 <|@
result [v61|QWORD[.] + v91|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j985 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j983 
y: i120 
=== Succesors ===
=== Usages ===
j1055 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j983 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1053 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1677 
=== Succesors ===
=== Usages ===
j1054 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid j1054 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1053 
=== Succesors ===
=== Usages ===
j1055 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1053  <|@  <|@
f <@~|@floating>@ <|@
tid j1055 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j985 
y: j1054 
=== Succesors ===
=== Usages ===
i1056 j1057 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j985 y: j1054  <|@  <|@
f <@~|@floating>@ <|@
tid i1056 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1055 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1068 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1740 
value: i1056 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1678 
=== Usages ===
=== Predecessor ===
i1677 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1740 value: i1056 stateAfter: - lastLocationAccess: - #next: i1678  <|@  <|@
f <@~|@floating>@ <|@
tid v1741 <|@
result [v37|QWORD[.] + v91|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1678 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1741 
=== Succesors ===
next: v1099 
=== Usages ===
j1084 
=== Predecessor ===
v1068 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1741 #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid v1742 <|@
result [v61|QWORD[.] + v91|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1055 
y: i120 
=== Succesors ===
=== Usages ===
j1086 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1055 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1084 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1678 
=== Succesors ===
=== Usages ===
j1085 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1678  <|@  <|@
f <@~|@floating>@ <|@
tid j1085 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1084 
=== Succesors ===
=== Usages ===
j1086 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1084  <|@  <|@
f <@~|@floating>@ <|@
tid j1086 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1057 
y: j1085 
=== Succesors ===
=== Usages ===
i1087 j1088 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1057 y: j1085  <|@  <|@
f <@~|@floating>@ <|@
tid i1087 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1086 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1099 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1742 
value: i1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1679 
=== Usages ===
=== Predecessor ===
i1678 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1742 value: i1087 stateAfter: - lastLocationAccess: - #next: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v1743 <|@
result [v37|QWORD[.] + v91|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1679 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1743 
=== Succesors ===
next: v1118 
=== Usages ===
j1105 
=== Predecessor ===
v1099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1743 #next: v1118  <|@  <|@
f <@~|@floating>@ <|@
tid v1744 <|@
result [v61|QWORD[.] + v91|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1088 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1086 
y: i120 
=== Succesors ===
=== Usages ===
j1107 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1086 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1105 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1679 
=== Succesors ===
=== Usages ===
j1106 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid j1106 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1105 
=== Succesors ===
=== Usages ===
j1107 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1105  <|@  <|@
f <@~|@floating>@ <|@
tid j1107 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1088 
y: j1106 
=== Succesors ===
=== Usages ===
i1108 j1109 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1088 y: j1106  <|@  <|@
f <@~|@floating>@ <|@
tid i1108 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1107 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1118 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1744 
value: i1108 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1680 
=== Usages ===
=== Predecessor ===
i1679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1744 value: i1108 stateAfter: - lastLocationAccess: - #next: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid v1745 <|@
result [v37|QWORD[.] + v91|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1680 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1745 
=== Succesors ===
next: v1150 
=== Usages ===
j1135 
=== Predecessor ===
v1118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1745 #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1746 <|@
result [v61|QWORD[.] + v91|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1109 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1107 
y: i120 
=== Succesors ===
=== Usages ===
j1137 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1107 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1135 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1680 
=== Succesors ===
=== Usages ===
j1136 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid j1136 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1135 
=== Succesors ===
=== Usages ===
j1137 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1135  <|@  <|@
f <@~|@floating>@ <|@
tid j1137 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1109 
y: j1136 
=== Succesors ===
=== Usages ===
i1138 j1139 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1109 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid i1138 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1137 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1150 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1746 
value: i1138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1681 
=== Usages ===
=== Predecessor ===
i1680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1746 value: i1138 stateAfter: - lastLocationAccess: - #next: i1681  <|@  <|@
f <@~|@floating>@ <|@
tid v1747 <|@
result [v37|QWORD[.] + v91|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1681 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1747 
=== Succesors ===
next: v1169 
=== Usages ===
j1156 
=== Predecessor ===
v1150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1747 #next: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid v1748 <|@
result [v61|QWORD[.] + v91|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1139 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1137 
y: i120 
=== Succesors ===
=== Usages ===
j1158 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1137 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1156 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1681 
=== Succesors ===
=== Usages ===
j1157 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1681  <|@  <|@
f <@~|@floating>@ <|@
tid j1157 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1156 
=== Succesors ===
=== Usages ===
j1158 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1156  <|@  <|@
f <@~|@floating>@ <|@
tid j1158 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1139 
y: j1157 
=== Succesors ===
=== Usages ===
i1159 j1160 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1139 y: j1157  <|@  <|@
f <@~|@floating>@ <|@
tid i1159 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1158 
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1169 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1748 
value: i1159 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1682 
=== Usages ===
=== Predecessor ===
i1681 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1748 value: i1159 stateAfter: - lastLocationAccess: - #next: i1682  <|@  <|@
f <@~|@floating>@ <|@
tid v1749 <|@
result [v37|QWORD[.] + v91|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1682 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1749 
=== Succesors ===
next: v1187 
=== Usages ===
j1174 
=== Predecessor ===
v1169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1749 #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid v1750 <|@
result [v61|QWORD[.] + v91|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1160 <|@
result v112|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1158 
y: i120 
=== Succesors ===
=== Usages ===
j1176 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1158 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1174 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1682 
=== Succesors ===
=== Usages ===
j1175 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1682  <|@  <|@
f <@~|@floating>@ <|@
tid j1175 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1174 
=== Succesors ===
=== Usages ===
j1176 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1174  <|@  <|@
f <@~|@floating>@ <|@
tid j1176 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1160 
y: j1175 
=== Succesors ===
=== Usages ===
i1177 j1178 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1160 y: j1175  <|@  <|@
f <@~|@floating>@ <|@
tid i1177 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1176 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1750 
value: i1177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1683 
=== Usages ===
=== Predecessor ===
i1682 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1750 value: i1177 stateAfter: - lastLocationAccess: - #next: i1683  <|@  <|@
f <@~|@floating>@ <|@
tid v1751 <|@
result [v37|QWORD[.] + v91|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: j1695 
=== Succesors ===
=== Usages ===
i1683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1683 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1001 
address: v1751 
=== Succesors ===
next: v1204 
=== Usages ===
j1191 
=== Predecessor ===
v1187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1001 address: v1751 #next: v1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1752 <|@
result [v61|QWORD[.] + v91|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: j1695 
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: j1695  <|@  <|@
f <@~|@floating>@ <|@
tid j1178 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1176 
y: i120 
=== Succesors ===
=== Usages ===
j1193 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1176 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j1191 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1683 
=== Succesors ===
=== Usages ===
j1192 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1683  <|@  <|@
f <@~|@floating>@ <|@
tid j1192 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1191 
=== Succesors ===
=== Usages ===
j1193 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1191  <|@  <|@
f <@~|@floating>@ <|@
tid j1193 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1178 
y: j1192 
=== Succesors ===
=== Usages ===
i1194 j1195 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1178 y: j1192  <|@  <|@
f <@~|@floating>@ <|@
tid i1194 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1193 
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1204 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v1752 
value: i1194 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
i1683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v1752 value: i1194 stateAfter: - lastLocationAccess: - #next: v987  <|@  <|@
f <@~|@floating>@ <|@
tid j1195 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1193 
y: i120 
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1193 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i1217 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 184]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1218 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 184]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i976 
y: i1217 
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i976 y: i1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v974 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v974  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v37|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = IMUL (x: v88|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = SUB (x: v85|QWORD, ~y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v86|DWORD * 4 + 16], y: v90|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVSXD v86|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = SAR v90|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = IMUL (x: v93|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = SUB (x: v92|QWORD, ~y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 20], y: v95|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = SAR v95|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = IMUL (x: v97|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = SUB (x: v96|QWORD, ~y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 24], y: v99|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = SAR v99|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = IMUL (x: v101|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = SUB (x: v100|QWORD, ~y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 28], y: v103|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = SAR v103|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = IMUL (x: v105|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = SUB (x: v104|QWORD, ~y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 32], y: v107|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = SAR v107|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = IMUL (x: v109|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = SUB (x: v108|QWORD, ~y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 36], y: v111|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = SAR v111|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = IMUL (x: v113|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = SUB (x: v112|QWORD, ~y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 40], y: v115|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = SAR v115|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = IMUL (x: v117|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = SUB (x: v116|QWORD, ~y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 44], y: v119|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = SAR v119|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v86|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|QWORD, v121|DWORD] destination: B81 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4509803309792338579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1312) [bci: 193]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v974 
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v974 #next: v1036  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD, v86|DWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B84" 
    successors "B84" "B85" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1008 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v1007 
values: j975 j1018 
=== Succesors ===
=== Usages ===
j1016 ?134 j158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1007 values: j975 j1018  <|@  <|@
f <@~|@floating>@ <|@
tid i1009 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1007 
values: i976 i1019 
=== Succesors ===
=== Usages ===
v1010 i1019 v1737 v1738 ?134 ?134 i159 v143 i708 j717 v473 v481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1007 values: i976 i1019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 21.00000000000002
loopOrigFrequency: 22.00000000000002
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1036 
=== Succesors ===
next: v1013 
=== Usages ===
j1008 i1009 v1012 v1020 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1036 #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i125 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1009 y: i125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 140]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.9545454545454546
=== Inputs ===
condition: v1010 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1012 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1010 #trueSuccessor: v1011 #falseSuccessor: v1012  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD, v123|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4529386253005070541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 143]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1684 
=== Usages ===
v1034 v1035 
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1684  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1575 v1011 
=== Succesors ===
=== Usages ===
i1684 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1575 v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1737 <|@
result [v37|QWORD[.] + v123|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i1009 
=== Succesors ===
=== Usages ===
i1684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i1009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1684 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1034 
address: v1737 
=== Succesors ===
next: v1029 
=== Usages ===
j1014 
=== Predecessor ===
v1011 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1034 address: v1737 #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1591 v1011 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1591 v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1738 <|@
result [v61|QWORD[.] + v123|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: i1009 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid j1014 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 164]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1684 
=== Succesors ===
=== Usages ===
j1015 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1684  <|@  <|@
f <@~|@floating>@ <|@
tid j1015 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 165]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j1014 
=== Succesors ===
=== Usages ===
j1016 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j1014  <|@  <|@
f <@~|@floating>@ <|@
tid j1016 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 166]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j1008 
y: j1015 
=== Succesors ===
=== Usages ===
i1017 j1018 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1008 y: j1015  <|@  <|@
f <@~|@floating>@ <|@
tid i1017 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 175]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1016 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1029 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1035 
address: v1738 
value: i1017 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1020 
=== Usages ===
=== Predecessor ===
i1684 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1035 address: v1738 value: i1017 stateAfter: - lastLocationAccess: - #next: v1020  <|@  <|@
f <@~|@floating>@ <|@
tid j1018 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1310) [bci: 181]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j1016 
y: i120 
=== Succesors ===
=== Usages ===
j1008 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j1016 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i1019 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 184]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i1009 
y: i4 
=== Succesors ===
=== Usages ===
i1009 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1009 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v1007 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1007  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOV [v37|QWORD[.] + v123|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = IMUL (x: v124|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = SUB (x: v122|QWORD, ~y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v123|DWORD * 4 + 16], y: v126|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = SAR v126|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = INC v123|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|QWORD, v128|DWORD] destination: B84 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1312) [bci: 193]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1007 
=== Succesors ===
next: v1614 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1007 #next: v1614  <|@  <|@
f <@~|@floating>@ <|@
tid i708 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i1664 
y: i1009 
=== Succesors ===
=== Usages ===
j709 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1664 y: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid j709 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i708 
=== Succesors ===
=== Usages ===
j710 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i708  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j709 
y: j673 
=== Succesors ===
=== Usages ===
v712 j718 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j709 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i1664 
=== Succesors ===
=== Usages ===
v1614 v1502 v1518 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1009 y: i1664  <|@  <|@
f <@*|@fixed>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v1613 
falseSuccessor: v1610 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v1613 #falseSuccessor: v1610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = SUB (x: v4|DWORD, ~y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = MOVSXD v129|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = DEC v130|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1622 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1622  <|@  <|@
f <@~|@floating>@ <|@
tid j1659 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1667 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j710 
y: j1659 
=== Succesors ===
=== Usages ===
v1622 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j710 y: j1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v712 
=== Succesors ===
trueSuccessor: v1621 
falseSuccessor: v1618 
=== Usages ===
=== Predecessor ===
v1613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v712 #trueSuccessor: v1621 #falseSuccessor: v1618  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|QWORD, y: v131|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1609 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
v1621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1262 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid i1263 <|@
result int[-125723|0xfffffffffffe14e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125723
stableDimension: 0
stamp: i32 [-125723] â‡Š00000000fffe14e5 â‡ˆ00000000fffe14e5
stampKind: i32
value: int[-125723|0xfffffffffffe14e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125723|0xfffffffffffe14e5]] destination: B88 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1608 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1608  <|@  <|@
f <@*|@fixed>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B87" 
    successors "B91" "B96" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1608 v1609 
=== Succesors ===
next: v1502 
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1608 v1609 #next: v1502  <|@  <|@
f <@~|@floating>@ <|@
tid j717 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1009 
=== Succesors ===
=== Usages ===
j718 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1009  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j710 
y: j717 
=== Succesors ===
=== Usages ===
v725 v720 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j710 y: j717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v1501 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v1501 #falseSuccessor: v1498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOVSXD v123|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = ADD (x: v131|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1510 
=== Usages ===
=== Predecessor ===
v1502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1510  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j694 
=== Succesors ===
=== Usages ===
v1510 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j718 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid i1265 <|@
result int[-128027|0xfffffffffffe0be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128027
stableDimension: 0
stamp: i32 [-128027] â‡Š00000000fffe0be5 â‡ˆ00000000fffe0be5
stampKind: i32
value: int[-128027|0xfffffffffffe0be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v720 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1506 
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v720 #trueSuccessor: v1509 #falseSuccessor: v1506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v1510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1508  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i1672 
=== Succesors ===
=== Usages ===
v1508 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i1672  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v473 
=== Succesors ===
trueSuccessor: v1499 
falseSuccessor: v1507 
=== Usages ===
=== Predecessor ===
v1509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v473 #trueSuccessor: v1499 #falseSuccessor: v1507  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
v1499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1767 
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1767  <|@  <|@
f <@*|@fixed>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128027|0xfffffffffffe0be5]] destination: B94 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1264 
=== Usages ===
=== Predecessor ===
v1510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1264  <|@  <|@
f <@*|@fixed>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128027|0xfffffffffffe0be5]] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
v1498 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B93" 
    successors "B98" "B104" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1496 v1497 
=== Succesors ===
next: v1518 
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1496 v1497 #next: v1518  <|@  <|@
f <@*|@fixed>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v1517 
falseSuccessor: v1514 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v1517 #falseSuccessor: v1514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1526 
=== Usages ===
=== Predecessor ===
v1518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1526  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j701 
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j718 y: j701  <|@  <|@
f <@~|@floating>@ <|@
tid i1257 <|@
result int[-130075|0xfffffffffffe03e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130075
stableDimension: 0
stamp: i32 [-130075] â‡Š00000000fffe03e5 â‡ˆ00000000fffe03e5
stampKind: i32
value: int[-130075|0xfffffffffffe03e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v725 
=== Succesors ===
trueSuccessor: v1525 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v725 #trueSuccessor: v1525 #falseSuccessor: v1522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1524  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i127 
=== Succesors ===
=== Usages ===
v1524 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1009 y: i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1523 
=== Usages ===
=== Predecessor ===
v1525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v1515 #falseSuccessor: v1523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B105" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1513 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1513  <|@  <|@
f <@*|@fixed>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1768 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v1768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130075|0xfffffffffffe03e5]] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1256 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1256  <|@  <|@
f <@*|@fixed>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
v1522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130075|0xfffffffffffe03e5]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B88" "B95" "B94" "B101" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1259 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-130075 - -125723] â‡Š00000000fffe00e5 â‡ˆ00000000fffe1fe5
valueDescription: i32
=== Inputs ===
merge: v1255 
values: i1257 i1263 i1265 i1265 i1257 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1255 values: i1257 i1263 i1265 i1265 i1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1256 v1262 v1264 v1767 v1768 
=== Succesors ===
next: v1261 
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1256 v1262 v1264 v1767 v1768 #next: v1261  <|@  <|@
tid ?134 <|@
d <@d|@=== Debug Properties ===
bci: 136
code: ResolvedJavaMethodBytecode<FDBigInteger.multDiffMe(long, FDBigInteger)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1307
stackSize: 0
=== Inputs ===
outerFrameState: ?196 
values: a1 j61 - a2 j1008 - i125 a970 i1009 i1009 a456 - - 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?196 values: a1 j61 - a2 j1008 - i125 a970 i1009 i1009 a456 - -  <|@  <|@
f <@~|@floating>@ <|@
tid a1258 <|@
result v136|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1474612814
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1474612814]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?134 
actionAndReason: i1259 
speculation: a1258 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1255 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?134 actionAndReason: i1259 speculation: a1258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1474612814] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v136|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
locals: v0|QWORD[.] v40|QWORD - v1|QWORD[.] v122|QWORD - v43|DWORD v61|QWORD[.] v123|DWORD v123|DWORD v37|QWORD[.] - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: v0|QWORD[.] v1|QWORD[.] - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:136, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B105" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1512 
=== Usages ===
=== Predecessor ===
v1518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1512  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" "B100" 
    successors "B106" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1512 v1513 
=== Succesors ===
next: v156 
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1512 v1513 #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v1511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD, v123|DWORD, int[0|0x0]] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B107" "B108" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4516985772283686555
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j158 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v157 
values: j1008 j179 
=== Succesors ===
=== Usages ===
?161 v353 j175 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: j1008 j179  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v157 
values: i1009 i180 
=== Succesors ===
=== Usages ===
?161 ?161 v163 v1726 v1727 i180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: i1009 i180  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v157 
values: i5 i181 
=== Succesors ===
=== Usages ===
?161 v1725 i181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: i5 i181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.000000000000001
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v156 
=== Succesors ===
next: v168 
=== Usages ===
j158 i159 i160 v165 v182 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v156 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 208]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i159 
y: i1664 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i159 y: i1664  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 208]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.6666666666666667
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|QWORD, v138|DWORD, v139|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6666666666666667 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B106" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4514024923855079869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 211]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1685 
=== Usages ===
v716 v724 v729 
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1685  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1495 v164 
=== Succesors ===
=== Usages ===
i1685 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1495 v164  <|@  <|@
f <@~|@floating>@ <|@
tid v1726 <|@
result [v37|QWORD[.] + v138|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i159 
=== Succesors ===
=== Usages ===
i1685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1685 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 228]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v724 
address: v1726 
=== Succesors ===
next: i1686 
=== Usages ===
j172 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v724 address: v1726 #next: i1686  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1607 v164 
=== Succesors ===
=== Usages ===
i1686 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1607 v164  <|@  <|@
f <@~|@floating>@ <|@
tid v1725 <|@
result [v10|QWORD[.] + v139|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i160 
=== Succesors ===
=== Usages ===
i1686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1686 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 217]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v716 
address: v1725 
=== Succesors ===
next: v514 
=== Usages ===
j170 
=== Predecessor ===
i1685 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v716 address: v1725 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1511 v164 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1511 v164  <|@  <|@
f <@~|@floating>@ <|@
tid v1727 <|@
result [v61|QWORD[.] + v138|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a970 
index: i159 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a970 index: i159  <|@  <|@
f <@~|@floating>@ <|@
tid j170 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 222]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1686 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1686  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 233]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1685 
=== Succesors ===
=== Usages ===
j173 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1685  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 234]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j172 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
result v144|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 235]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j170 
y: j173 
=== Succesors ===
=== Usages ===
j175 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j170 y: j173  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
result v145|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1315) [bci: 236]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j158 
y: j174 
=== Succesors ===
=== Usages ===
i176 j179 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j158 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 245]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j175 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1316) [bci: 246]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v729 
address: v1727 
value: i176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
i1686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v729 address: v1727 value: i176 stateAfter: - lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1317) [bci: 251]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j175 
y: i120 
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j175 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 257]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i160 
y: i4 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 254]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i159 
y: i4 
=== Succesors ===
=== Usages ===
i159 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i159 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v157 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOV [v37|QWORD[.] + v138|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v10|QWORD[.] + v139|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = IMUL (x: v142|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = SUB (x: v141|QWORD, ~y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD = ADD (x: v137|QWORD, y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v138|DWORD * 4 + 16], y: v145|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = SAR v145|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = INC v139|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v146|QWORD, v148|DWORD, v147|DWORD] destination: B107 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1319) [bci: 266]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j158 
y: j65 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j158 y: j65  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v353 
=== Succesors ===
trueSuccessor: v914 
falseSuccessor: v916 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v353 #trueSuccessor: v914 #falseSuccessor: v916  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v137|QWORD, y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B129" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1319) [bci: 274]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i127 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1320) [bci: 285]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1710 
value: i1663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1710 value: i1663 stateAfter: - lastLocationAccess: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
result v149|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: Compress
stamp: n! -
=== Inputs ===
value: a970 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
value: a517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1370 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1713 value: a517 stateAfter: - lastLocationAccess: - #next: j1370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1370 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1376 
=== Usages ===
j1372 
=== Predecessor ===
v518 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid i1371 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1372 <|@
result v150|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j1370 
y: i1371 
=== Succesors ===
=== Usages ===
v1762 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1370 y: i1371  <|@  <|@
f <@~|@floating>@ <|@
tid j1375 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] â‡Š00000001171be000 â‡ˆ00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1762 <|@
result [v150|QWORD[*] + v151|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1372 
index: j1375 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1372 index: j1375  <|@  <|@
f <@~|@floating>@ <|@
tid i1377 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1321) [bci: 291]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1762 
value: i1377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
j1370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1762 value: i1377 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD[.] = COMPRESSPOINTER (input: v61|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v149|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v150|QWORD[*] + v151|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.], v49|DWORD] destination: B109 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
bci: 202
code: ResolvedJavaMethodBytecode<FDBigInteger.multDiffMe(long, FDBigInteger)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1314
stackSize: 0
=== Inputs ===
outerFrameState: ?196 
values: a1 j61 - a2 j158 - i125 a970 i159 i159 a456 i160 a440 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?196 values: a1 j61 - a2 j158 - i125 a970 i159 i159 a456 i160 a440  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 519
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?161 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -132883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
locals: v0|QWORD[.] v40|QWORD - v1|QWORD[.] v137|QWORD - v43|DWORD v61|QWORD[.] v138|DWORD v138|DWORD v37|QWORD[.] v139|DWORD v10|QWORD[.] 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: v0|QWORD[.] v1|QWORD[.] - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:202, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B65" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4537658527381996657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1396  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1392 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B111 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1309) [bci: 176]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1251 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1602 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123419|0xfffffffffffe1de5], v48|QWORD[.]] destination: B112 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1308) [bci: 159]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1248 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1248  <|@  <|@
f <@~|@floating>@ <|@
tid i1249 <|@
result int[-121371|0xfffffffffffe25e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121371
stableDimension: 0
stamp: i32 [-121371] â‡Š00000000fffe25e5 â‡ˆ00000000fffe25e5
stampKind: i32
value: int[-121371|0xfffffffffffe25e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121371|0xfffffffffffe25e5], v48|QWORD[.]] destination: B113 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 149]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1245 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1245  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-120595|0xfffffffffffe28ed], v46|QWORD[.]] destination: B114 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1294) [bci: 25]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1630 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1630  <|@  <|@
f <@~|@floating>@ <|@
tid j730 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j683 
y: j673 
=== Succesors ===
=== Usages ===
v732 j738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j683 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid a1244 <|@
result v153|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1171729116
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1171729116]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1227 a1227 a1227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v1626 
falseSuccessor: v1629 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v1626 #falseSuccessor: v1629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = DEC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v1630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
v1626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" "B155" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
=== Predecessor ===
v1630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid j1656 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1672 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j730 
y: j1656 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j730 y: j1656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v732 
=== Succesors ===
trueSuccessor: v1637 
falseSuccessor: v1634 
=== Usages ===
=== Predecessor ===
v1629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v732 #trueSuccessor: v1637 #falseSuccessor: v1634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = MOV v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B118 falseDestination: B117 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1625 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1625  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
v1637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1624 v1625 
=== Succesors ===
next: v1534 
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1624 v1625 #next: v1534  <|@  <|@
f <@*|@fixed>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v1530 
falseSuccessor: v1533 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v1530 #falseSuccessor: v1533  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v1534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1528  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
v1530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B154" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1542 
=== Usages ===
=== Predecessor ===
v1534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1542  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i90 
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i90  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j730 
y: j737 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j730 y: j737  <|@  <|@
f <@~|@floating>@ <|@
tid j1660 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1667 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j738 
y: j1660 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j738 y: j1660  <|@  <|@
f <@~|@floating>@ <|@
tid i1243 <|@
result int[-138267|0xfffffffffffde3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -138267
stableDimension: 0
stamp: i32 [-138267] â‡Š00000000fffde3e5 â‡ˆ00000000fffde3e5
stampKind: i32
value: int[-138267|0xfffffffffffde3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v1541 
falseSuccessor: v1538 
=== Usages ===
=== Predecessor ===
v1533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v1541 #falseSuccessor: v1538  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = MOVSXD v41|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = ADD (x: v152|QWORD, y: v155|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B121 -> B122 falseDestination: B121 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B153" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1540  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i1667 
=== Succesors ===
=== Usages ===
v1540 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v1531 
falseSuccessor: v1539 
=== Usages ===
=== Predecessor ===
v1541 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v1531 #falseSuccessor: v1539  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
v1531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1528 v1529 
=== Succesors ===
next: v97 
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1528 v1529 #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v1527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0], v41|DWORD] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B126" 
    successors "B126" "B127" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4604981152154866909
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j99 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v98 
values: j65 j121 
=== Succesors ===
=== Usages ===
?102 v67 j116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: j65 j121  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result v159|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v98 
values: i5 i122 
=== Succesors ===
=== Usages ===
?102 v104 v1728 i122 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: i5 i122  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
result v160|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v98 
values: i90 i123 
=== Succesors ===
=== Usages ===
?102 i123 v1729 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: i90 i123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0610475199445024
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v97 
=== Succesors ===
next: v109 
=== Usages ===
j99 i100 i101 v106 v124 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v97 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 50]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i1664 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i100 y: i1664  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 50]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
trueSuccessorProbability: 0.514809828340626
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD, v159|DWORD, v160|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.514809828340626 condition: > trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B125" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4600679141914788222
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 53]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1687 
=== Usages ===
v745 v736 
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1687  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1623 v105 
=== Succesors ===
=== Usages ===
i1687 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1623 v105  <|@  <|@
f <@~|@floating>@ <|@
tid v1728 <|@
result [v37|QWORD[.] + v159|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a456 
index: i100 
=== Succesors ===
=== Usages ===
i1687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1687 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v736 
address: v1728 
=== Succesors ===
next: i1688 
=== Usages ===
j113 
=== Predecessor ===
v105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v736 address: v1728 #next: i1688  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1527 v105 
=== Succesors ===
=== Usages ===
i1688 v546 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1527 v105  <|@  <|@
f <@~|@floating>@ <|@
tid v1729 <|@
result [v10|QWORD[.] + v160|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a440 
index: i101 
=== Succesors ===
=== Usages ===
v546 i1688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1688 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 59]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v745 
address: v1729 
=== Succesors ===
next: v546 
=== Usages ===
j111 
=== Predecessor ===
i1687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v745 address: v1729 #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid j111 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 64]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1688 
=== Succesors ===
=== Usages ===
j115 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1688  <|@  <|@
f <@~|@floating>@ <|@
tid j113 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 75]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1687 
=== Succesors ===
=== Usages ===
j114 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1687  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 76]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j61 
y: j113 
=== Succesors ===
=== Usages ===
j115 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j61 y: j113  <|@  <|@
f <@~|@floating>@ <|@
tid j115 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 77]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j111 
y: j114 
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j111 y: j114  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
result v166|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 78]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64
=== Inputs ===
x: j99 
y: j115 
=== Succesors ===
=== Usages ===
i117 j121 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j99 y: j115  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 87]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
resultBits: 32
stamp: i32
=== Inputs ===
value: j116 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v745 
address: v1729 
value: i117 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
i1688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v745 address: v1729 value: i117 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1299) [bci: 93]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
x: j116 
y: i120 
=== Succesors ===
=== Usages ===
j99 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j116 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v168|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 99]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i101 
y: i4 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i101 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
result v169|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 96]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: i32
=== Inputs ===
x: i100 
y: i4 
=== Succesors ===
=== Usages ===
i100 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i100 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = MOV [v37|QWORD[.] + v159|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOV [v10|QWORD[.] + v160|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = MOV v161|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = IMUL (x: v163|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = SUB (x: v162|QWORD, ~y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = ADD (x: v158|QWORD, y: v165|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[.] + v160|DWORD * 4 + 16], y: v166|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = SAR v166|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = INC v160|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = INC v159|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v167|QWORD, v169|DWORD, v168|DWORD] destination: B126 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B152" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1301) [bci: 105]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v98 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v98 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j99 
y: j65 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j99 y: j65  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v927 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v927 #falseSuccessor: v929  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v158|QWORD, y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v927 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v5|DWORD] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B36" "B109" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a341 <|@
result v170|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v336 
values: a440 a440 a970 
=== Succesors ===
=== Usages ===
v1730 v1733 v1731 v1732 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v336 values: a440 a440 a970  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
result v171|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v336 
values: i1665 i1665 i127 
=== Succesors ===
=== Usages ===
i233 j747 v207 v230 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v336 values: i1665 i1665 i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v335 v338 v355 
=== Succesors ===
next: v934 
=== Usages ===
a341 i340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v335 v338 v355 #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i340 
y: i4 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i340 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v933 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v933 #falseSuccessor: v931  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v170|QWORD[.], v171|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v171|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1293 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1293  <|@  <|@
f <@~|@floating>@ <|@
tid a1295 <|@
result v172|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@731488164
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@731488164]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1297 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1294 <|@
result int[-145939|0xfffffffffffdc5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145939
stableDimension: 0
stamp: i32 [-145939] â‡Š00000000fffdc5ed â‡ˆ00000000fffdc5ed
stampKind: i32
value: int[-145939|0xfffffffffffdc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
v933 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731488164] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145939|0xfffffffffffdc5ed], v172|QWORD[.]] destination: B130 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 6]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1689 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1689  <|@  <|@
f <@~|@floating>@ <|@
tid v1731 <|@
result [v170|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a341 
index: - 
=== Succesors ===
=== Usages ===
i1689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1689 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1731 
=== Succesors ===
next: v1654 
=== Usages ===
v575 v585 v825 j746 
=== Predecessor ===
v931 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1731 #next: v1654  <|@  <|@
f <@~|@floating>@ <|@
tid j747 <|@
result v174|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i340 
=== Succesors ===
=== Usages ===
j748 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i340  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
result v175|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j747 
y: j673 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j747 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid j746 <|@
result v176|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1689 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1689  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j748 
y: j746 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j748 y: j746  <|@  <|@
f <@~|@floating>@ <|@
tid i1302 <|@
result int[-144155|0xfffffffffffdcce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144155
stableDimension: 0
stamp: i32 [-144155] â‡Š00000000fffdcce5 â‡ˆ00000000fffdcce5
stampKind: i32
value: int[-144155|0xfffffffffffdcce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1296 i1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v750 
=== Succesors ===
trueSuccessor: v1653 
falseSuccessor: v1650 
=== Usages ===
=== Predecessor ===
i1689 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v750 #trueSuccessor: v1653 #falseSuccessor: v1650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOV [v170|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = MOVSXD v171|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = DEC v174|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD = MOV v173|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v176|QWORD, y: v175|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1689 
y: i5 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1689 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v1651 
falseSuccessor: v1643 
=== Usages ===
=== Predecessor ===
v1653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v1651 #falseSuccessor: v1643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v173|DWORD, y: v173|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1773 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1773  <|@  <|@
f <@*|@fixed>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144155|0xfffffffffffdcce5], v11|QWORD[.]] destination: B133 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B149" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: v946 
=== Usages ===
v756 
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result v177|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 13]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: i32
=== Inputs ===
x: i340 
y: i49 
=== Succesors ===
=== Usages ===
v1732 i241 v575 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i340 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i1689 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i233 y: i1689  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v575 
=== Succesors ===
trueSuccessor: v943 
falseSuccessor: v945 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v575 #trueSuccessor: v943 #falseSuccessor: v945  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = DEC v171|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v173|DWORD, y: v177|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
i1691 
=== Predecessor ===
v946 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
v943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0]] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B137" "B138" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4611828579052266585
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j204 <|@
result v178|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] â‡ˆ000000000000000f
valueDescription: i64
=== Inputs ===
merge: v203 
values: j65 j223 
=== Succesors ===
=== Usages ===
j219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v203 values: j65 j223  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v203 
values: i5 i224 
=== Succesors ===
=== Usages ===
v1730 v207 i224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v203 values: i5 i224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.722328911724681
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v202 
=== Succesors ===
next: v212 
=== Usages ===
j204 i205 v209 v225 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v202 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i205 
y: i340 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i205 y: i340  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 8]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
trueSuccessorProbability: 0.6326674577443074
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v208 #falseSuccessor: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v178|QWORD, v179|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v171|DWORD, y: v179|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B136" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4608557767962773186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 11]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1690 
=== Usages ===
v756 
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1690  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1643 v208 
=== Succesors ===
=== Usages ===
i1690 v569 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1643 v208  <|@  <|@
f <@~|@floating>@ <|@
tid v1730 <|@
result [v170|QWORD[.] + v179|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a341 
index: i205 
=== Succesors ===
=== Usages ===
v569 i1690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a341 index: i205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1690 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 14]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v756 
address: v1730 
=== Succesors ===
next: v569 
=== Usages ===
j214 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v756 address: v1730 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result v180|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 19]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
resultBits: 64
stamp: i64 [0 - 4294967295] â‡ˆ00000000ffffffff
=== Inputs ===
value: i1690 
=== Succesors ===
=== Usages ===
j216 j217 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1690  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
result v181|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 34359738360] â‡ˆ00000007fffffff8
=== Inputs ===
x: j214 
y: i215 
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j214 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j217 <|@
result v182|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 8589934590] â‡ˆ00000001fffffffe
=== Inputs ===
x: j214 
y: i4 
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j214 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
result v183|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 23]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 42949672950] â‡ˆ0000000ffffffffe
=== Inputs ===
x: j216 
y: j217 
=== Succesors ===
=== Usages ===
j219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j216 y: j217  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
result v184|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1346) [bci: 25]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 42949672960] â‡ˆ0000000fffffffff
=== Inputs ===
x: j204 
y: j218 
=== Succesors ===
=== Usages ===
i220 j223 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j204 y: j218  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
resultBits: 32
stamp: i32
=== Inputs ===
value: j219 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v756 
address: v1730 
value: i220 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
i1690 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v756 address: v1730 value: i220 stateAfter: - lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
result v185|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1348) [bci: 39]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i64 [0 - 10] â‡ˆ000000000000000f
=== Inputs ===
x: j219 
y: i120 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j219 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
result v186|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 41]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: i32
=== Inputs ===
x: i205 
y: i4 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i205 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
loopBegin: v203 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD = MOV [v170|QWORD[.] + v179|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = SHL v180|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = SHL v180|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = ADD (x: v181|QWORD, y: v182|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD = ADD (x: v178|QWORD, y: v183|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v170|QWORD[.] + v179|DWORD * 4 + 16], y: v184|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v185|QWORD = SHR v184|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = INC v179|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v185|QWORD, v186|DWORD] destination: B137 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" "B148" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1350) [bci: 47]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v203 
=== Succesors ===
next: i1691 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v203 #next: i1691  <|@  <|@
f <@~|@floating>@ <|@
tid v1732 <|@
result [v170|QWORD[.] + v177|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a341 
index: i233 
=== Succesors ===
=== Usages ===
i1691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a341 index: i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1691 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v943 
address: v1732 
=== Succesors ===
next: v238 
=== Usages ===
v235 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v943 address: v1732 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1691 
y: i5 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1691 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result v187|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:625) [bci: 335]
resultBits: 32
stamp: i32
=== Inputs ===
value: j61 
=== Succesors ===
=== Usages ===
v328 v327 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j61  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 18]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 0.08541926203716788
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
i1691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v236 #falseSuccessor: v237  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = MOV v40|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v170|QWORD[.] + v177|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" 
    xhandlers
    flags 
    probability 4589329503749568218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 330
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: true
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 624
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - j61 - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - j61 - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v177|DWORD] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B144" 
    successors "B141" "B142" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i241 <|@
result v188|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v240 
values: i233 i246 
=== Succesors ===
=== Usages ===
?242 v243 i246 v593 j1707 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v240 values: i233 i246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.3187490602916856
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v239 
=== Succesors ===
next: v951 
=== Usages ===
i241 v250 v254 v950 v955 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v239 #next: v951  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<FDBigInteger.trimLeadingZeros()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: ?261 
values: a1 i241 
=== Succesors ===
=== Usages ===
v667 v1271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 i241  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i241 
y: i4 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i241 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v950 #falseSuccessor: v947  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v188|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v188|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v240 
=== Succesors ===
next: v1267 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v240 #next: v1267  <|@  <|@
f <@~|@floating>@ <|@
tid i1268 <|@
result int[-149267|0xfffffffffffdb8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149267
stableDimension: 0
stamp: i32 [-149267] â‡Š00000000fffdb8ed â‡ˆ00000000fffdb8ed
stampKind: i32
value: int[-149267|0xfffffffffffdb8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149267|0xfffffffffffdb8ed]] destination: B141 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B146" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 22]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result v189|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 31]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: i32
=== Inputs ===
x: i241 
y: i49 
=== Succesors ===
=== Usages ===
i241 v585 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i241 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i1689 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i246 y: i1689  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v585 
=== Succesors ===
trueSuccessor: v952 
falseSuccessor: v955 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v585 #trueSuccessor: v952 #falseSuccessor: v955  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = DEC v188|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v173|DWORD, y: v189|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B145" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1692 
=== Usages ===
i1692 
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid j1707 <|@
result v190|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i241 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i241  <|@  <|@
f <@~|@floating>@ <|@
tid v1733 <|@
result [v170|QWORD[.] + v190|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a341 
index: j1707 
=== Succesors ===
=== Usages ===
i1692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a341 index: j1707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1692 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v952 
address: v1733 
=== Succesors ===
next: v253 
=== Usages ===
v248 
=== Predecessor ===
v952 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v952 address: v1733 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1692 
y: i5 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1692 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 33]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
trueSuccessorProbability: 0.24170562079580438
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
i1692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD = MOVSXD v188|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v170|QWORD[.] + v190|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4581605184808318675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:374) [bci: 36]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?242 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?242 #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
loopBegin: v240 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v188|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
locals: - - - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 330] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|DWORD] destination: B144 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4589329503749568218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 42]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v240 
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v240 #next: v593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:376) [bci: 44]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i241 stateAfter: - lastLocationAccess: - #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i80 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i80 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v188|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v187|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 32]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v240 
=== Succesors ===
next: v1272 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v240 #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid i1273 <|@
result int[-150043|0xfffffffffffdb5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150043
stableDimension: 0
stamp: i32 [-150043] â‡Š00000000fffdb5e5 â‡ˆ00000000fffdb5e5
stampKind: i32
value: int[-150043|0xfffffffffffdb5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1269 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
v955 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150043|0xfffffffffffdb5e5]] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B141" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1269 <|@
result v191|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-150043 - -149267] â‡Š00000000fffdb0e5 â‡ˆ00000000fffdbded
valueDescription: i32
=== Inputs ===
merge: v1266 
values: i1268 i1273 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1266 values: i1268 i1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1267 v1272 
=== Succesors ===
next: v1271 
=== Usages ===
i1269 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1267 v1272 #next: v1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?242 
actionAndReason: i1269 
speculation: a1225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?242 actionAndReason: i1269 speculation: a1225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v191|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v191|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v188|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
locals: - - - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors 
    xhandlers
    flags 
    probability 4604418827588220165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:381) [bci: 56]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i80 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i80 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v187|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:371) [bci: 17]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1303  <|@  <|@
f <@~|@floating>@ <|@
tid i1304 <|@
result int[-147483|0xfffffffffffdbfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147483
stableDimension: 0
stamp: i32 [-147483] â‡Š00000000fffdbfe5 â‡ˆ00000000fffdbfe5
stampKind: i32
value: int[-147483|0xfffffffffffdbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
v945 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147483|0xfffffffffffdbfe5], v11|QWORD[.]] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1347) [bci: 34]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:622) [bci: 303]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1301 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144155|0xfffffffffffdcce5], v11|QWORD[.]] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B130" "B150" "B149" "B133" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1296 <|@
result v192|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-147483 - -144155] â‡Š00000000fffd84e5 â‡ˆ00000000fffdffed
valueDescription: i32
=== Inputs ===
merge: v1292 
values: i1294 i1302 i1304 i1302 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1292 values: i1294 i1302 i1304 i1302  <|@  <|@
f <@~|@floating>@ <|@
tid a1297 <|@
result v193|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1292 
values: a1295 a1235 a1235 a1235 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1292 values: a1295 a1235 a1235 a1235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1293 v1301 v1303 v1773 
=== Succesors ===
next: v1298 
=== Usages ===
i1296 a1297 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1293 v1301 v1303 v1773 #next: v1298  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 144
code: ResolvedJavaMethodBytecode<FDBigInteger.quoRemIteration(FDBigInteger)>
duringCall: false
localsSize: 15
locksSize: 0
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 587
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - j61 - - - - - - - - - - j65 - 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - j61 - - - - - - - - - - j65 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?337 
actionAndReason: i1296 
speculation: a1297 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1292 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?337 actionAndReason: i1296 speculation: a1297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v192|DWORD, v193|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v192|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v193|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 144]
stack: long[0|0x0] - 
locals: v0|QWORD[.] v1|QWORD[.] - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:144] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
stamp: void
=== Inputs ===
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v928  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<FDBigInteger.multDiffMe(long, FDBigInteger)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1296
stackSize: 0
=== Inputs ===
outerFrameState: ?196 
values: - j61 - a2 j99 - - a456 a440 i100 i101 - - 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?196 values: - j61 - a2 j99 - - a456 a440 i100 i101 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 547
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:588) [bci: 150]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?102 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -140051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
locals: - v40|QWORD - v1|QWORD[.] v158|QWORD - - v37|QWORD[.] v10|QWORD[.] v159|DWORD v160|DWORD - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: v0|QWORD[.] v1|QWORD[.] - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:44, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1769 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1769  <|@  <|@
f <@*|@fixed>@ <|@
tid v1769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-138267|0xfffffffffffde3e5], v153|QWORD[.]] destination: B153 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1298) [bci: 88]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@*|@fixed>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-138267|0xfffffffffffde3e5], v153|QWORD[.]] destination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1297) [bci: 70]
at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1253 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1253  <|@  <|@
f <@~|@floating>@ <|@
tid i1254 <|@
result int[-135963|0xfffffffffffdece5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135963
stableDimension: 0
stamp: i32 [-135963] â‡Š00000000fffdece5 â‡ˆ00000000fffdece5
stampKind: i32
value: int[-135963|0xfffffffffffdece5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135963|0xfffffffffffdece5], v153|QWORD[.]] destination: B155 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1240 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1240  <|@  <|@
f <@~|@floating>@ <|@
tid i1241 <|@
result int[-118555|0xfffffffffffe30e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -118555
stableDimension: 0
stamp: i32 [-118555] â‡Š00000000fffe30e5 â‡ˆ00000000fffe30e5
stampKind: i32
value: int[-118555|0xfffffffffffe30e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-118555|0xfffffffffffe30e5], Object[null]] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:586) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid i1239 <|@
result int[-114459|0xfffffffffffe40e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114459
stableDimension: 0
stamp: i32 [-114459] â‡Š00000000fffe40e5 â‡ˆ00000000fffe40e5
stampKind: i32
value: int[-114459|0xfffffffffffe40e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v883 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114459|0xfffffffffffe40e5], Object[null]] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" "B157" "B156" "B154" "B114" "B113" "B112" "B155" "B153" "B5" "B42" "B52" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1226 <|@
result v194|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-167691 - -94219] â‡Š00000000fffc00e5 â‡ˆ00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1222 
values: i1234 i1237 i1239 i1241 i1243 i1246 i1249 i1252 i1254 i1243 i1234 i1246 i1252 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: i1234 i1237 i1239 i1241 i1243 i1246 i1249 i1252 i1254 i1243 i1234 i1246 i1252  <|@  <|@
f <@~|@floating>@ <|@
tid a1227 <|@
result v195|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1222 
values: a1235 a1225 a1225 a1225 a1244 a1247 a1250 a1250 a1244 a1244 a1235 a1247 a1250 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: a1235 a1225 a1225 a1225 a1244 a1247 a1250 a1250 a1244 a1244 a1235 a1247 a1250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1233 v1236 v1238 v1240 v1242 v1245 v1248 v1251 v1253 v1769 v1770 v1771 v1772 
=== Succesors ===
next: v1228 
=== Usages ===
i1226 a1227 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1233 v1236 v1238 v1240 v1242 v1245 v1248 v1251 v1253 v1769 v1770 v1771 v1772 #next: v1228  <|@  <|@
f <@*|@fixed>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1226 
speculation: a1227 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1226 speculation: a1227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v194|DWORD, v195|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v194|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v195|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b92621e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24201595755878824 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v32|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B156" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v10|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v37|QWORD[.] + v35|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v39|QWORD) size: QWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5162453864221004 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600720757905725354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v5|DWORD] destination: B36 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B36" "B109" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr   -1  <|@ instruction [v170|QWORD[.], v171|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v171|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOV [v170|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = MOVSXD v171|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = DEC v174|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD = MOV v173|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v176|QWORD, y: v175|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v173|DWORD, y: v173|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B149" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = DEC v171|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v173|DWORD, y: v177|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0]] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B136" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4608557767962773186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD = MOV [v170|QWORD[.] + v179|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = SHL v180|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = SHL v180|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = ADD (x: v181|QWORD, y: v182|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD = ADD (x: v178|QWORD, y: v183|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v170|QWORD[.] + v179|DWORD * 4 + 16], y: v184|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v185|QWORD = SHR v184|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = INC v179|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v185|QWORD, v186|DWORD] destination: B137 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B137" "B138" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4611828579052266585
    begin_IR
      LIR
      nr   -1  <|@ instruction [v178|QWORD, v179|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v171|DWORD, y: v179|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" "B148" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = MOV v40|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v170|QWORD[.] + v177|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors 
    xhandlers
    flags 
    probability 4604418827588220165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v187|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B115" 
    xhandlers
    flags 
    probability 4600277108534450580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SUB (x: v3|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7340038148083925E-4 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = DEC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" "B155" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = MOV v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B118 falseDestination: B117 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B154" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = MOVSXD v41|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = ADD (x: v152|QWORD, y: v155|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B121 -> B122 falseDestination: B121 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B153" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0], v41|DWORD] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B125" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4600679141914788222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = MOV [v37|QWORD[.] + v159|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOV [v10|QWORD[.] + v160|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = MOV v161|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = IMUL (x: v163|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = SUB (x: v162|QWORD, ~y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = ADD (x: v158|QWORD, y: v165|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[.] + v160|DWORD * 4 + 16], y: v166|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = SAR v166|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = INC v160|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = INC v159|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v167|QWORD, v169|DWORD, v168|DWORD] destination: B126 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B126" 
    successors "B126" "B127" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4604981152154866909
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD, v159|DWORD, v160|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.514809828340626 condition: > trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B152" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v158|QWORD, y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.], v5|DWORD] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B30" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = DEC v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601180581118615456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v10|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = SHL v17|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = SHL v17|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v15|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[.] + v16|DWORD * 4 + 16], y: v21|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHR v21|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD, v23|DWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604109586098190129
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD, v16|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B26" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV v15|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8333333333333334 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|QWORD[.] + v25|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4595813625967755995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" 
    xhandlers
    flags 
    probability 4589329503749568218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v177|DWORD] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B146" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = DEC v188|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v173|DWORD, y: v189|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B145" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD = MOVSXD v188|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v170|QWORD[.] + v190|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4581605184808318675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v188|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
locals: - - - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 330] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|DWORD] destination: B144 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B144" 
    successors "B141" "B142" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      LIR
      nr   -1  <|@ instruction [v188|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v188|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4589329503749568218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v188|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v187|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[.] + v5|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v10|QWORD[.] + v28|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572980947968751244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v26|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
locals: - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 82] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v6|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVSXD v43|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = DEC v44|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B114" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B113" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v43|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v49|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B112" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v49|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v49|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4543569587458822689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL v49|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = LEA [v53|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = AND v54|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = ADD (x: v56|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4543485139831855357
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + v51|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + v51|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + v51|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + v51|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD + 12], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B57 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v49|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v61|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v50|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v67|QWORD * 4], input: v69|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v50|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v71|QWORD * 4], input: v73|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = DEC v50|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + v75|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B61" "B75" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], int[0|0x0]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4544081391258624703
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [v37|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = IMUL (x: v40|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SUB (x: v77|QWORD, ~y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v78|DWORD * 4 + 16], y: v82|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SAR v82|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD, v84|DWORD] destination: B78 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" 
    successors "B78" "B79" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4544319959220978422
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD, v78|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v43|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B44" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B76" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B54" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B65" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4537658527381996657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B111 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B111" 
    successors "B66" "B111" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v64|QWORD * 4], input: v65|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v64|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4529120481610407509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B60" 
    xhandlers
    flags 
    probability 4529796062626146167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4523934476916634324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD, v78|DWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v37|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = IMUL (x: v88|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = SUB (x: v85|QWORD, ~y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v86|DWORD * 4 + 16], y: v90|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVSXD v86|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = SAR v90|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = IMUL (x: v93|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = SUB (x: v92|QWORD, ~y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 20], y: v95|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = SAR v95|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = IMUL (x: v97|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = SUB (x: v96|QWORD, ~y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 24], y: v99|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = SAR v99|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = IMUL (x: v101|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = SUB (x: v100|QWORD, ~y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 28], y: v103|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = SAR v103|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = IMUL (x: v105|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = SUB (x: v104|QWORD, ~y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 32], y: v107|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = SAR v107|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = IMUL (x: v109|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = SUB (x: v108|QWORD, ~y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 36], y: v111|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = SAR v111|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = IMUL (x: v113|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = SUB (x: v112|QWORD, ~y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 40], y: v115|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = SAR v115|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v37|QWORD[.] + v91|QWORD * 4 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = IMUL (x: v117|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = SUB (x: v116|QWORD, ~y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v91|QWORD * 4 + 44], y: v119|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = SAR v119|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v86|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|QWORD, v121|DWORD] destination: B81 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B81" 
    successors "B81" "B82" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4530144089210011538
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD, v86|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA [v43|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4513507875123775760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4509803309792338579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD, v86|DWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4529386253005070541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOV [v37|QWORD[.] + v123|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = IMUL (x: v124|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = SUB (x: v122|QWORD, ~y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v123|DWORD * 4 + 16], y: v126|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = SAR v126|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = INC v123|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|QWORD, v128|DWORD] destination: B84 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B84" 
    successors "B84" "B85" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD, v123|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = SUB (x: v4|DWORD, ~y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = MOVSXD v129|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = DEC v130|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B87" 
    successors "B91" "B96" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOVSXD v123|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = ADD (x: v131|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B93" 
    successors "B98" "B104" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B105" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" "B100" 
    successors "B106" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD, v123|DWORD, int[0|0x0]] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B106" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4514024923855079869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOV [v37|QWORD[.] + v138|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v10|QWORD[.] + v139|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = IMUL (x: v142|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = SUB (x: v141|QWORD, ~y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD = ADD (x: v137|QWORD, y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v138|DWORD * 4 + 16], y: v145|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = SAR v145|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = INC v139|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v146|QWORD, v148|DWORD, v147|DWORD] destination: B107 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B107" "B108" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4516985772283686555
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|QWORD, v138|DWORD, v139|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6666666666666667 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v137|QWORD, y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B129" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD[.] = COMPRESSPOINTER (input: v61|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v149|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v150|QWORD[*] + v151|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.], v49|DWORD] destination: B109 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|QWORD, y: v131|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B105" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-138267|0xfffffffffffde3e5], v207|QWORD[.]] destination: B153 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" "B157" "B156" "B154" "B114" "B113" "B112" "B155" "B153" "B5" "B42" "B52" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v194|DWORD, v195|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v194|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v195|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -132883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
locals: v0|QWORD[.] v40|QWORD - v1|QWORD[.] v137|QWORD - v43|DWORD v61|QWORD[.] v138|DWORD v138|DWORD v37|QWORD[.] v139|DWORD v10|QWORD[.] 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: v0|QWORD[.] v1|QWORD[.] - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:202, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125723|0xfffffffffffe14e5]] destination: B88 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B88" "B95" "B94" "B101" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1474612814] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v136|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
locals: v0|QWORD[.] v40|QWORD - v1|QWORD[.] v122|QWORD - v43|DWORD v61|QWORD[.] v123|DWORD v123|DWORD v37|QWORD[.] - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: v0|QWORD[.] v1|QWORD[.] - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:136, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128027|0xfffffffffffe0be5]] destination: B94 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130075|0xfffffffffffe03e5]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130075|0xfffffffffffe03e5]] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128027|0xfffffffffffe0be5]] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731488164] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145939|0xfffffffffffdc5ed], v172|QWORD[.]] destination: B130 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B130" "B150" "B149" "B133" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v192|DWORD, v193|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v192|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v193|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 144]
stack: long[0|0x0] - 
locals: v0|QWORD[.] v1|QWORD[.] - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:144] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144155|0xfffffffffffdcce5], v196|QWORD[.]] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144155|0xfffffffffffdcce5], v198|QWORD[.]] destination: B133 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121371|0xfffffffffffe25e5], v205|QWORD[.]] destination: B113 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135963|0xfffffffffffdece5], v208|QWORD[.]] destination: B155 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v204|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123419|0xfffffffffffe1de5], v204|QWORD[.]] destination: B52 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-120595|0xfffffffffffe28ed], v201|QWORD[.]] destination: B114 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103963|0xfffffffffffe69e5]] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" "B28" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: v10|QWORD[.] v5|DWORD v10|QWORD[.] v15|QWORD - v16|DWORD - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
locals: v0|QWORD[.] - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:5, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105747|0xfffffffffffe62ed]] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v26|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
locals: - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 82] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106523|0xfffffffffffe5fe5]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149267|0xfffffffffffdb8ed]] destination: B141 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B141" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v191|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v191|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: v0|QWORD[.] v188|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
locals: - - - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-100635|0xfffffffffffe76e5], v200|QWORD[.]] destination: B5 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -140051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
locals: - v40|QWORD - v1|QWORD[.] v158|QWORD - - v37|QWORD[.] v10|QWORD[.] v159|DWORD v160|DWORD - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: v0|QWORD[.] v1|QWORD[.] - - v40|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:44, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147483|0xfffffffffffdbfe5], v197|QWORD[.]] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123419|0xfffffffffffe1de5], v203|QWORD[.]] destination: B112 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114459|0xfffffffffffe40e5], Object[null]] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-120595|0xfffffffffffe28ed], v202|QWORD[.]] destination: B42 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112147|0xfffffffffffe49ed], Object[null]] destination: B32 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-100635|0xfffffffffffe76e5], v199|QWORD[.]] destination: B30 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-138267|0xfffffffffffde3e5], v206|QWORD[.]] destination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-118555|0xfffffffffffe30e5], Object[null]] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110363|0xfffffffffffe50e5]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102419|0xfffffffffffe6fed]] destination: B12 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150043|0xfffffffffffdb5e5]] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #13         // $assertionsDisabled:boolean
     3: ifne          23
     6: aload_0       
     7: getfield      #1          // isImmutable:boolean
    10: ifeq          23
    13: new           #17         // java.lang.AssertionError
    16: dup           
    17: ldc           #29         // "cannot modify immutable value"
    19: invokespecial #21         // java.lang.AssertionError.<init>:(java.lang.Object)void
    22: athrow        
    23: aload_0       
    24: invokespecial #22         // size:()int
    27: istore_2      
    28: aload_1       
    29: invokespecial #22         // size:()int
    32: istore_3      
    33: iload_2       
    34: iload_3       
    35: if_icmpge     87
    38: aload_0       
    39: getfield      #2          // data:int[]
    42: aload_0       
    43: getfield      #4          // nWords:int
    46: aload_0       
    47: getfield      #2          // data:int[]
    50: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
    53: istore        4
    55: iload         4
    57: ifeq          81
    60: aload_0       
    61: getfield      #2          // data:int[]
    64: aload_0       
    65: dup           
    66: getfield      #4          // nWords:int
    69: dup_x1        
    70: iconst_1      
    71: iadd          
    72: putfield      #4          // nWords:int
    75: iload         4
    77: iastore       
    78: goto          85
    81: aload_0       
    82: invokespecial #5          // trimLeadingZeros:()void
    85: iconst_0      
    86: ireturn       
    87: iload_2       
    88: iload_3       
    89: if_icmple     102
    92: new           #23         // java.lang.IllegalArgumentException
    95: dup           
    96: ldc           #33         // "disparate values"
    98: invokespecial #17         // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
   101: athrow        
   102: aload_0       
   103: getfield      #2          // data:int[]
   106: aload_0       
   107: getfield      #4          // nWords:int
   110: iconst_1      
   111: isub          
   112: iaload        
   113: i2l           
   114: ldc2_w        #19         // 4294967295
   117: land          
   118: aload_1       
   119: getfield      #2          // data:int[]
   122: aload_1       
   123: getfield      #4          // nWords:int
   126: iconst_1      
   127: isub          
   128: iaload        
   129: i2l           
   130: ldc2_w        #19         // 4294967295
   133: land          
   134: ldiv          
   135: lstore        4
   137: aload_0       
   138: lload         4
   140: aload_1       
   141: invokespecial #24         // multDiffMe:(long, sun.misc.FDBigInteger)long
   144: lstore        6
   146: lload         6
   148: lconst_0      
   149: lcmp          
   150: ifeq          291
   153: lconst_0      
   154: lstore        8
   156: aload_1       
   157: getfield      #3          // offset:int
   160: aload_0       
   161: getfield      #3          // offset:int
   164: isub          
   165: istore        10
   167: aload_1       
   168: getfield      #2          // data:int[]
   171: astore        11
   173: aload_0       
   174: getfield      #2          // data:int[]
   177: astore        12
   179: lload         8
   181: lconst_0      
   182: lcmp          
   183: ifne          291
   186: iconst_0      
   187: istore        13
   189: iload         10
   191: istore        14
   193: iload         14
   195: aload_0       
   196: getfield      #4          // nWords:int
   199: if_icmpge     252
   202: lload         8
   204: aload         12
   206: iload         14
   208: iaload        
   209: i2l           
   210: ldc2_w        #19         // 4294967295
   213: land          
   214: aload         11
   216: iload         13
   218: iaload        
   219: i2l           
   220: ldc2_w        #19         // 4294967295
   223: land          
   224: ladd          
   225: ladd          
   226: lstore        8
   228: aload         12
   230: iload         14
   232: lload         8
   234: l2i           
   235: iastore       
   236: lload         8
   238: bipush        32
   240: lushr         
   241: lstore        8
   243: iinc          
   246: iinc          
   249: goto          193
   252: getstatic     #13         // $assertionsDisabled:boolean
   255: ifne          282
   258: lload         8
   260: lconst_0      
   261: lcmp          
   262: ifeq          282
   265: lload         8
   267: lconst_1      
   268: lcmp          
   269: ifeq          282
   272: new           #17         // java.lang.AssertionError
   275: dup           
   276: lload         8
   278: invokespecial #25         // java.lang.AssertionError.<init>:(long)void
   281: athrow        
   282: lload         4
   284: lconst_1      
   285: lsub          
   286: lstore        4
   288: goto          179
   291: aload_0       
   292: getfield      #2          // data:int[]
   295: aload_0       
   296: getfield      #4          // nWords:int
   299: aload_0       
   300: getfield      #2          // data:int[]
   303: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
   306: istore        8
   308: getstatic     #13         // $assertionsDisabled:boolean
   311: ifne          329
   314: iload         8
   316: ifeq          329
   319: new           #17         // java.lang.AssertionError
   322: dup           
   323: iload         8
   325: invokespecial #14         // java.lang.AssertionError.<init>:(int)void
   328: athrow        
   329: aload_0       
   330: invokespecial #5          // trimLeadingZeros:()void
   333: lload         4
   335: l2i           
   336: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b92621e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, r13:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rax:0, r13:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdx|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.24201595755878824 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rbx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rax:0, rbx:0, r13:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rdx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B156" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  334  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = MOV [rbx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rbp|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rax|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr  346  <|@ st <@st|@reference-map: [rbx:0, rbp:0, r13:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD state [bci:0] <|@ <|@
      nr  348  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5162453864221004 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600720757905725354
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B36" "B109" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1298  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1320  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1322  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr 1326  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1332  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B149" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction r10|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr 1356  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1358  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1364  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1366  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B136" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4608557767962773186
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1376  <|@ instruction r9|QWORD = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1378  <|@ instruction rbx|QWORD = SHL r9|QWORD y: 3 size: QWORD <|@ <|@
      nr 1380  <|@ instruction r9|QWORD = SHL r9|QWORD size: QWORD <|@ <|@
      nr 1382  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1386  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: r11|QWORD) size: DWORD <|@ <|@
      nr 1388  <|@ instruction r11|QWORD = SHR r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1392  <|@ instruction JUMP ~[] destination: B137 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B137" "B138" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4611828579052266585
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" "B148" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction rdx|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1398  <|@ instruction CMP [rsi|QWORD[.] + r10|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1400  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors 
    xhandlers
    flags 
    probability 4604418827588220165
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B115" 
    xhandlers
    flags 
    probability 4600277108534450580
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rdx|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 1.7340038148083925E-4 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 1188  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" "B155" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction rsi|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr 1200  <|@ instruction CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B118 falseDestination: B117 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1210  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 1212  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B154" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1222  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1224  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr 1226  <|@ instruction CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1228  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B121 -> B122 falseDestination: B121 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B153" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B125" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4600679141914788222
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction rdx|QWORD = MOV [rbp|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1268  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [rbp|QWORD[.] + rcx|DWORD * 4 + 16], y: r10|QWORD) size: DWORD <|@ <|@
      nr 1272  <|@ instruction r10|QWORD = SAR r10|QWORD y: 32 size: QWORD <|@ <|@
      nr 1274  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1276  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~[] destination: B126 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B126" 
    successors "B126" "B127" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4604981152154866909
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.514809828340626 condition: > trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B152" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1284  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rbp|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B30" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = DEC rax|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   88  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601180581118615456
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOV [rbp|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = SHL rax|QWORD y: 3 size: QWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD = SHL rax|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [rbp|QWORD[.] + r11|DWORD * 4 + 16], y: r10|QWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|QWORD = SHR r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604109586098190129
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B26" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rsi|DWORD = MOV r10|QWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.8333333333333334 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP [rbp|QWORD[.] + rsi|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4595813625967755995
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1216  <|@ instruction JUMP ~[] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction JUMP ~[] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" 
    xhandlers
    flags 
    probability 4589329503749568218
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B146" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr 1426  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1428  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B145" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r8|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction CMP [rsi|QWORD[.] + r8|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr 1436  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4581605184808318675
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: r13|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
locals: - - - - rax|QWORD - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 330] <|@ <|@
      nr 1442  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B144 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B144" 
    successors "B141" "B142" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4589329503749568218
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1452  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction MOV (x: [rbp|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  178  <|@ instruction rax|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction CMP [rbp|QWORD[.] + rsi|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572980947968751244
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ st <@st|@reference-map: [rbp:0, r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: r13|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
locals: - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 82] <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B114" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B113" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r8|DWORD = ADD (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction r14|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B112" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP (x: r14|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  498  <|@ instruction r13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  500  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4543569587458822689
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction r14|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  510  <|@ instruction r14|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  512  <|@ instruction r14|DWORD = AND r14|DWORD y: -8 size: DWORD <|@ <|@
      nr  514  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  516  <|@ instruction r10|QWORD = ADD (x: r14|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction CMP (x: r10|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4543485139831855357
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  550  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  554  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction stack:64|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:104|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B57 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  622  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction r10|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  638  <|@ instruction r8|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  640  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r8|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  676  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  688  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  690  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  692  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r8|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  700  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  712  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  714  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction r8|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  724  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B61" "B75" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  742  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  744  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rbx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4544081391258624703
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  762  <|@ instruction rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = IMUL (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  766  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  772  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B78 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" 
    successors "B78" "B79" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4544319959220978422
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP r13|DWORD y: 2 size: DWORD <|@ <|@
      nr  754  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r13|DWORD) condition: < <|@ <|@
      nr  756  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B44" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B76" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r10|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B61 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B54" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B49 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B65" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4537658527381996657
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B111 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B111" 
    successors "B66" "B111" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4539816359593607926
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  658  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  660  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  662  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4530809160338866934
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4529120481610407509
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction stack:64|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:104|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B60" 
    xhandlers
    flags 
    probability 4529796062626146167
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  614  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:72, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4523934476916634324
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  790  <|@ instruction rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  792  <|@ instruction rcx|QWORD = IMUL (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction rcx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  800  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  804  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  806  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 20], y: r8|QWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  812  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 24] size: DWORD <|@ <|@
      nr  814  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  816  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 24], y: r8|QWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  822  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 28] size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 28], y: r8|QWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  832  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 32] size: DWORD <|@ <|@
      nr  834  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  836  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 32], y: r8|QWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 36] size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  846  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 36], y: r8|QWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  852  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 40] size: DWORD <|@ <|@
      nr  854  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  856  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 40], y: r8|QWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 44] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 44], y: r8|QWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = LEA [r9|DWORD + 8] size: DWORD <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B81 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B81" 
    successors "B81" "B82" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4530144089210011538
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  782  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 8] size: DWORD <|@ <|@
      nr  784  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4513507875123775760
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction stack:64|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction stack:104|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4509803309792338579
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4529386253005070541
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  888  <|@ instruction rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  890  <|@ instruction rcx|QWORD = IMUL (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  892  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B84 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B84" 
    successors "B84" "B85" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  882  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B89" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction rcx|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  912  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B87" 
    successors "B91" "B96" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction rdx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  946  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B93" 
    successors "B98" "B104" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B105" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" "B100" 
    successors "B106" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r10|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B106" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4514024923855079869
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV [rbx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1070  <|@ instruction rdx|QWORD = IMUL (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1074  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1076  <|@ instruction MOV (x: [rax|QWORD[.] + r8|DWORD * 4 + 16], y: r10|QWORD) size: DWORD <|@ <|@
      nr 1078  <|@ instruction r10|QWORD = SAR r10|QWORD y: 32 size: QWORD <|@ <|@
      nr 1080  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B107 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B107" "B108" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4516985772283686555
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction BRANCH trueDestinationProbability: 0.6666666666666667 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B129" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1106  <|@ instruction r13|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1108  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1110  <|@ instruction MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1112  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~[] destination: B109 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  958  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  966  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1002  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1008  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B105" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1012  <|@ instruction JUMP ~[] destination: B100 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1536  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1540  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr 1542  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5] <|@ <|@
      nr 1546  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1548  <|@ instruction JUMP ~[] destination: B153 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" "B157" "B156" "B154" "B114" "B113" "B112" "B155" "B153" "B5" "B42" "B52" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@reference-map: [rdx:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: rdx|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 668] y: -132883 size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1132  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rdi:0, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
locals: rdx|QWORD[.] r11|QWORD - stack:32|QWORD[.] r10|QWORD - r13|DWORD rax|QWORD[.] r8|DWORD r8|DWORD rbx|QWORD[.] r9|DWORD rdi|QWORD[.] 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: rdx|QWORD[.] stack:32|QWORD[.] - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:202, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction r10|DWORD = MOVE input: int[-125723|0xfffffffffffe14e5] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B88 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B88" "B95" "B94" "B101" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1474612814] <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr 1038  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
locals: rdx|QWORD[.] r11|QWORD - stack:32|QWORD[.] r8|QWORD - r13|DWORD rax|QWORD[.] r9|DWORD r9|DWORD rbx|QWORD[.] - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: rdx|QWORD[.] stack:32|QWORD[.] - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:136, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction r10|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5] <|@ <|@
      nr  976  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B94 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction r10|DWORD = MOVE input: int[-130075|0xfffffffffffe03e5] // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-130075|0xfffffffffffe03e5] <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r10|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5] <|@ <|@
      nr  984  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1306  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731488164] <|@ <|@
      nr 1310  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1314  <|@ instruction JUMP ~[] destination: B130 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B130" "B150" "B149" "B133" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1512  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1514  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr 1516  <|@ st <@st|@reference-map: [rdx:0, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 144]
stack: long[0|0x0] - 
locals: rdx|QWORD[.] stack:32|QWORD[.] - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:144] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1496  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr 1504  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction r10|DWORD = MOVE input: int[-144155|0xfffffffffffdcce5] <|@ <|@
      nr 1508  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1338  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1344  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr 1346  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction r10|DWORD = MOVE input: int[-144155|0xfffffffffffdcce5] <|@ <|@
      nr 1350  <|@ instruction JUMP ~[] destination: B133 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1154  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr 1160  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction r10|DWORD = MOVE input: int[-121371|0xfffffffffffe25e5] <|@ <|@
      nr 1164  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B113 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1568  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1572  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr 1574  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-135963|0xfffffffffffdece5] <|@ <|@
      nr 1578  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction JUMP ~[] destination: B155 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5] <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B52 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964] <|@ <|@
      nr 1176  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction r10|DWORD = MOVE input: int[-120595|0xfffffffffffe28ed] <|@ <|@
      nr 1180  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B114 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVE input: int[-103963|0xfffffffffffe69e5] <|@ <|@
      nr  234  <|@ instruction rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" "B28" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [rdx:0, rdi:0]
live-base-pointers: []
sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: rdi|QWORD[.] r8|DWORD rdi|QWORD[.] r10|QWORD - r11|DWORD - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
locals: rdx|QWORD[.] - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:5, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r11|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed] <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: rdx|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
locals: - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 82] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r11|DWORD = MOVE input: int[-106523|0xfffffffffffe5fe5] <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction r8|DWORD = MOVE input: int[-149267|0xfffffffffffdb8ed] <|@ <|@
      nr 1416  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~[] destination: B141 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B141" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1468  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1470  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: rdx|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
locals: - - - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction r10|DWORD = MOVE input: int[-100635|0xfffffffffffe76e5] <|@ <|@
      nr   76  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B5 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1520  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1524  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction MOV [r15|QWORD + 668] y: -140051 size: DWORD <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1532  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rdi:0, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
locals: - r11|QWORD - stack:32|QWORD[.] r10|QWORD - - rbx|QWORD[.] rdi|QWORD[.] r9|DWORD rcx|DWORD - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: rdx|QWORD[.] stack:32|QWORD[.] - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:44, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr 1488  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-147483|0xfffffffffffdbfe5] <|@ <|@
      nr 1492  <|@ instruction JUMP ~[] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr 1144  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~[] destination: B112 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1594  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5] <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964] <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|DWORD = MOVE input: int[-120595|0xfffffffffffe28ed] <|@ <|@
      nr  410  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B42 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  306  <|@ instruction r10|DWORD = MOVE input: int[-112147|0xfffffffffffe49ed] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B32 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: int[-100635|0xfffffffffffe76e5] <|@ <|@
      nr  288  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B30 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1552  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1554  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1556  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr 1558  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5] <|@ <|@
      nr 1562  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction JUMP ~[] destination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1584  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1586  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1588  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction JUMP ~[] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r9|DWORD = MOVE input: int[-110363|0xfffffffffffe50e5] <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r9|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  136  <|@ instruction rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B12 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1456  <|@ instruction r8|DWORD = MOVE input: int[-150043|0xfffffffffffdb5e5] <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1460  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #13         // $assertionsDisabled:boolean
     3: ifne          23
     6: aload_0       
     7: getfield      #1          // isImmutable:boolean
    10: ifeq          23
    13: new           #17         // java.lang.AssertionError
    16: dup           
    17: ldc           #29         // "cannot modify immutable value"
    19: invokespecial #21         // java.lang.AssertionError.<init>:(java.lang.Object)void
    22: athrow        
    23: aload_0       
    24: invokespecial #22         // size:()int
    27: istore_2      
    28: aload_1       
    29: invokespecial #22         // size:()int
    32: istore_3      
    33: iload_2       
    34: iload_3       
    35: if_icmpge     87
    38: aload_0       
    39: getfield      #2          // data:int[]
    42: aload_0       
    43: getfield      #4          // nWords:int
    46: aload_0       
    47: getfield      #2          // data:int[]
    50: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
    53: istore        4
    55: iload         4
    57: ifeq          81
    60: aload_0       
    61: getfield      #2          // data:int[]
    64: aload_0       
    65: dup           
    66: getfield      #4          // nWords:int
    69: dup_x1        
    70: iconst_1      
    71: iadd          
    72: putfield      #4          // nWords:int
    75: iload         4
    77: iastore       
    78: goto          85
    81: aload_0       
    82: invokespecial #5          // trimLeadingZeros:()void
    85: iconst_0      
    86: ireturn       
    87: iload_2       
    88: iload_3       
    89: if_icmple     102
    92: new           #23         // java.lang.IllegalArgumentException
    95: dup           
    96: ldc           #33         // "disparate values"
    98: invokespecial #17         // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
   101: athrow        
   102: aload_0       
   103: getfield      #2          // data:int[]
   106: aload_0       
   107: getfield      #4          // nWords:int
   110: iconst_1      
   111: isub          
   112: iaload        
   113: i2l           
   114: ldc2_w        #19         // 4294967295
   117: land          
   118: aload_1       
   119: getfield      #2          // data:int[]
   122: aload_1       
   123: getfield      #4          // nWords:int
   126: iconst_1      
   127: isub          
   128: iaload        
   129: i2l           
   130: ldc2_w        #19         // 4294967295
   133: land          
   134: ldiv          
   135: lstore        4
   137: aload_0       
   138: lload         4
   140: aload_1       
   141: invokespecial #24         // multDiffMe:(long, sun.misc.FDBigInteger)long
   144: lstore        6
   146: lload         6
   148: lconst_0      
   149: lcmp          
   150: ifeq          291
   153: lconst_0      
   154: lstore        8
   156: aload_1       
   157: getfield      #3          // offset:int
   160: aload_0       
   161: getfield      #3          // offset:int
   164: isub          
   165: istore        10
   167: aload_1       
   168: getfield      #2          // data:int[]
   171: astore        11
   173: aload_0       
   174: getfield      #2          // data:int[]
   177: astore        12
   179: lload         8
   181: lconst_0      
   182: lcmp          
   183: ifne          291
   186: iconst_0      
   187: istore        13
   189: iload         10
   191: istore        14
   193: iload         14
   195: aload_0       
   196: getfield      #4          // nWords:int
   199: if_icmpge     252
   202: lload         8
   204: aload         12
   206: iload         14
   208: iaload        
   209: i2l           
   210: ldc2_w        #19         // 4294967295
   213: land          
   214: aload         11
   216: iload         13
   218: iaload        
   219: i2l           
   220: ldc2_w        #19         // 4294967295
   223: land          
   224: ladd          
   225: ladd          
   226: lstore        8
   228: aload         12
   230: iload         14
   232: lload         8
   234: l2i           
   235: iastore       
   236: lload         8
   238: bipush        32
   240: lushr         
   241: lstore        8
   243: iinc          
   246: iinc          
   249: goto          193
   252: getstatic     #13         // $assertionsDisabled:boolean
   255: ifne          282
   258: lload         8
   260: lconst_0      
   261: lcmp          
   262: ifeq          282
   265: lload         8
   267: lconst_1      
   268: lcmp          
   269: ifeq          282
   272: new           #17         // java.lang.AssertionError
   275: dup           
   276: lload         8
   278: invokespecial #25         // java.lang.AssertionError.<init>:(long)void
   281: athrow        
   282: lload         4
   284: lconst_1      
   285: lsub          
   286: lstore        4
   288: goto          179
   291: aload_0       
   292: getfield      #2          // data:int[]
   295: aload_0       
   296: getfield      #4          // nWords:int
   299: aload_0       
   300: getfield      #2          // data:int[]
   303: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
   306: istore        8
   308: getstatic     #13         // $assertionsDisabled:boolean
   311: ifne          329
   314: iload         8
   316: ifeq          329
   319: new           #17         // java.lang.AssertionError
   322: dup           
   323: iload         8
   325: invokespecial #14         // java.lang.AssertionError.<init>:(int)void
   328: athrow        
   329: aload_0       
   330: invokespecial #5          // trimLeadingZeros:()void
   333: lload         4
   335: l2i           
   336: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b92621e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, r13:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rax:0, r13:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdx|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.24201595755878824 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rbx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rax:0, rbx:0, r13:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rdx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B156" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4605002532847458463
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  334  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = MOV [rbx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rbp|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rax|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr  346  <|@ st <@st|@reference-map: [rbx:0, rbp:0, r13:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD state [bci:0] <|@ <|@
      nr  348  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5162453864221004 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600720757905725354
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B36" "B109" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1298  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1320  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1322  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction r11|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr 1326  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1332  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B149" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction r10|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr 1356  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1358  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1364  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1366  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B136" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4608557767962773186
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1376  <|@ instruction r9|QWORD = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1378  <|@ instruction rbx|QWORD = SHL r9|QWORD y: 3 size: QWORD <|@ <|@
      nr 1380  <|@ instruction r9|QWORD = SHL r9|QWORD size: QWORD <|@ <|@
      nr 1382  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1386  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: r11|QWORD) size: DWORD <|@ <|@
      nr 1388  <|@ instruction r11|QWORD = SHR r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1390  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1392  <|@ instruction JUMP ~[] destination: B137 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B137" "B138" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4611828579052266585
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B140" "B148" 
    xhandlers
    flags 
    probability 4605001962974020576
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction rdx|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1398  <|@ instruction CMP [rsi|QWORD[.] + r10|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1400  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B138 -> B140 falseDestination: B138 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors 
    xhandlers
    flags 
    probability 4604418827588220165
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B115" 
    xhandlers
    flags 
    probability 4600277108534450580
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rdx|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 1.7340038148083925E-4 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B119" "B117" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 1188  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B115 -> B119 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B155" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction rsi|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr 1200  <|@ instruction CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B119 falseDestination: B117 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B115" "B117" 
    successors "B124" "B121" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1210  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 1212  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B119 -> B124 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B154" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1222  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1224  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr 1226  <|@ instruction CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1228  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B121 -> B122 falseDestination: B121 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B153" 
    xhandlers
    flags 
    probability 4595772363512834108
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B124 falseDestination: B122 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B119" "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1248  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B125" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4600679141914788222
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1258  <|@ instruction rsi|DWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction rdx|QWORD = MOV [rbp|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1268  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [rbp|QWORD[.] + rcx|DWORD * 4 + 16], y: r10|QWORD) size: DWORD <|@ <|@
      nr 1272  <|@ instruction r10|QWORD = SAR r10|QWORD y: 32 size: QWORD <|@ <|@
      nr 1274  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1276  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~[] destination: B126 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B126" 
    successors "B126" "B127" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4604981152154866909
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.514809828340626 condition: > trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B152" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1284  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" 
    xhandlers
    flags 
    probability 4600275963140204604
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B3" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rbp|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B7 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B30" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = DEC rax|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4593383964473400708
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   88  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601180581118615456
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOV [rbp|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = SHL rax|QWORD y: 3 size: QWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD = SHL rax|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [rbp|QWORD[.] + r11|DWORD * 4 + 16], y: r10|QWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction r10|QWORD = SHR r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  114  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604109586098190129
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B26" 
    xhandlers
    flags 
    probability 4597887564100771204
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rsi|DWORD = MOV r10|QWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.8333333333333334 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: r9|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4596434306799065241
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP [rbp|QWORD[.] + rsi|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4595813625967755995
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B146" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr 1426  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1428  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B145" 
    xhandlers
    flags 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r8|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction CMP [rsi|QWORD[.] + r8|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr 1436  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B140" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4581605184808318675
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: r13|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
locals: - - - - rax|QWORD - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 330] <|@ <|@
      nr 1442  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B144 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" "B144" 
    successors "B141" "B142" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4590816494599541903
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4589329503749568218
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1452  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4585973850242618284
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction MOV (x: [rbp|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  256  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  178  <|@ instruction rax|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  188  <|@ instruction CMP [rbp|QWORD[.] + rsi|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572980947968751244
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ st <@st|@reference-map: [rbp:0, r13:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: r13|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
locals: - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 82] <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B20 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B20" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582205399512664980
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4580622668058897905
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B40" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B38 -> B44 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B114" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B44" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B48" "B46" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B48 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" "B113" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B48 falseDestination: B46 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors "B54" "B50" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r8|DWORD = ADD (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction r14|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B48 -> B54 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B112" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP (x: r14|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B54" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors "B55" "B59" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  498  <|@ instruction r13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  500  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  506  <|@ instruction stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" "B57" 
    xhandlers
    flags 
    probability 4543569587458822689
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction r14|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  510  <|@ instruction r14|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  512  <|@ instruction r14|DWORD = AND r14|DWORD y: -8 size: DWORD <|@ <|@
      nr  514  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  516  <|@ instruction r10|QWORD = ADD (x: r14|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction CMP (x: r10|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B59 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4543485139831855357
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  546  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  550  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  554  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction stack:64|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:104|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B57 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B76" "B62" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  622  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  628  <|@ instruction r10|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B60 -> B76 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B67" "B65" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  638  <|@ instruction r8|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  640  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B62 -> B67 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B70" "B69" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r8|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  676  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  688  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  690  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  692  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" 
    successors "B73" "B72" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r8|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  700  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  712  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  714  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B70" 
    successors "B76" "B75" 
    xhandlers
    flags 
    probability 4539816359593607926
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction r8|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  724  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B76 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4537658527381996657
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B60" "B75" "B73" 
    successors "B77" 
    xhandlers
    flags 
    probability 4544319959220978422
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  742  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  744  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rbx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4544081391258624703
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  762  <|@ instruction rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = IMUL (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  766  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  772  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B78 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" 
    successors "B78" "B80" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4544319959220978422
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP r13|DWORD y: 2 size: DWORD <|@ <|@
      nr  754  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r13|DWORD) condition: < <|@ <|@
      nr  756  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4539816359593607926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  658  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  660  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  662  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B67 falseDestination: B65 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4529796062626146167
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction stack:64|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:104|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  614  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:72, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  790  <|@ instruction rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  792  <|@ instruction rcx|QWORD = IMUL (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction rcx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  800  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  804  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  806  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 20], y: r8|QWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  812  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 24] size: DWORD <|@ <|@
      nr  814  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  816  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 24], y: r8|QWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  822  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 28] size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 28], y: r8|QWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  832  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 32] size: DWORD <|@ <|@
      nr  834  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  836  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 32], y: r8|QWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 36] size: DWORD <|@ <|@
      nr  844  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  846  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 36], y: r8|QWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  852  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 40] size: DWORD <|@ <|@
      nr  854  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  856  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 40], y: r8|QWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 44] size: DWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 44], y: r8|QWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = LEA [r9|DWORD + 8] size: DWORD <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B81 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B81" 
    successors "B81" "B83" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4530144089210011538
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  782  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 8] size: DWORD <|@ <|@
      nr  784  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4529386253005070541
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  888  <|@ instruction rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  890  <|@ instruction rcx|QWORD = IMUL (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  892  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction r8|QWORD = SAR r8|QWORD y: 32 size: QWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B84 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B84" 
    successors "B84" "B85" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4529756359058646377
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  882  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B90" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction rcx|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  912  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" 
    successors "B91" "B97" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction rdx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  946  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" 
    successors "B98" "B105" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" 
    successors "B106" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r10|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B106" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4514024923855079869
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV [rbx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1070  <|@ instruction rdx|QWORD = IMUL (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1074  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1076  <|@ instruction MOV (x: [rax|QWORD[.] + r8|DWORD * 4 + 16], y: r10|QWORD) size: DWORD <|@ <|@
      nr 1078  <|@ instruction r10|QWORD = SAR r10|QWORD y: 32 size: QWORD <|@ <|@
      nr 1080  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B107 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B107" "B108" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4516985772283686555
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction BRANCH trueDestinationProbability: 0.6666666666666667 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B129" 
    xhandlers
    flags 
    probability 4509521324227709371
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1106  <|@ instruction r13|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1108  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1110  <|@ instruction MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1112  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~[] destination: B109 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" "B88" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B90 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  958  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B94" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  966  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B97 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1002  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B105" "B101" 
    xhandlers
    flags 
    probability 4505017724600338875
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1008  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B105 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1536  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1540  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr 1542  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~[] destination: B153 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" "B157" "B156" "B154" "B114" "B113" "B112" "B155" "B153" "B5" "B42" "B52" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@reference-map: [rdx:0, r14:0]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0]
locals: rdx|QWORD[.] r14|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 668] y: -132883 size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1132  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rdi:0, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202]
locals: rdx|QWORD[.] r11|QWORD - stack:32|QWORD[.] r10|QWORD - r13|DWORD rax|QWORD[.] r8|DWORD r8|DWORD rbx|QWORD[.] r9|DWORD rdi|QWORD[.] 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: rdx|QWORD[.] stack:32|QWORD[.] - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:202, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction r10|DWORD = MOVE input: int[-125723|0xfffffffffffe14e5] <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B88 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B88" "B95" "B94" "B101" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1474612814] <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr 1038  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136]
locals: rdx|QWORD[.] r11|QWORD - stack:32|QWORD[.] r8|QWORD - r13|DWORD rax|QWORD[.] r9|DWORD r9|DWORD rbx|QWORD[.] - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: rdx|QWORD[.] stack:32|QWORD[.] - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:136, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction r10|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5] <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B94 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction r10|DWORD = MOVE input: int[-130075|0xfffffffffffe03e5] // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-130075|0xfffffffffffe03e5] <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r10|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5] <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1306  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731488164] <|@ <|@
      nr 1310  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1314  <|@ instruction JUMP ~[] destination: B130 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B130" "B150" "B149" "B133" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1512  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1514  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr 1516  <|@ st <@st|@reference-map: [rdx:0, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 144]
stack: long[0|0x0] - 
locals: rdx|QWORD[.] stack:32|QWORD[.] - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:144] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1496  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr 1504  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction r10|DWORD = MOVE input: int[-144155|0xfffffffffffdcce5] <|@ <|@
      nr 1508  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1338  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1344  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr 1346  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction r10|DWORD = MOVE input: int[-144155|0xfffffffffffdcce5] <|@ <|@
      nr 1350  <|@ instruction JUMP ~[] destination: B133 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1154  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr 1160  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction r10|DWORD = MOVE input: int[-121371|0xfffffffffffe25e5] <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B113 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1568  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1572  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr 1574  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-135963|0xfffffffffffdece5] <|@ <|@
      nr 1580  <|@ instruction JUMP ~[] destination: B155 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5] <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B52 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964] <|@ <|@
      nr 1176  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction r10|DWORD = MOVE input: int[-120595|0xfffffffffffe28ed] <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B114 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVE input: int[-103963|0xfffffffffffe69e5] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" "B28" "B25" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  136  <|@ instruction rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [rdx:0, rdi:0]
live-base-pointers: []
sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5]
locals: rdi|QWORD[.] r8|DWORD rdi|QWORD[.] r10|QWORD - r11|DWORD - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50]
locals: rdx|QWORD[.] - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:5, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r11|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed] <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B17" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: rdx|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82]
locals: - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 82] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r11|DWORD = MOVE input: int[-106523|0xfffffffffffe5fe5] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction r8|DWORD = MOVE input: int[-149267|0xfffffffffffdb8ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~[] destination: B141 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B141" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1416  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1468  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1470  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21]
locals: rdx|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330]
locals: - - - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction r10|DWORD = MOVE input: int[-100635|0xfffffffffffe76e5] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B5 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1520  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1524  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction MOV [r15|QWORD + 668] y: -140051 size: DWORD <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1532  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rdi:0, stack:80]
live-base-pointers: []
sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44]
locals: - r11|QWORD - stack:32|QWORD[.] r10|QWORD - - rbx|QWORD[.] rdi|QWORD[.] r9|DWORD rcx|DWORD - - 
sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141]
locals: rdx|QWORD[.] stack:32|QWORD[.] - - r11|QWORD - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:44, 141] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B151" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr 1488  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-147483|0xfffffffffffdbfe5] <|@ <|@
      nr 1492  <|@ instruction JUMP ~[] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184] <|@ <|@
      nr 1144  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~[] destination: B112 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1594  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5] <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964] <|@ <|@
      nr  406  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r10|DWORD = MOVE input: int[-120595|0xfffffffffffe28ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B42 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  306  <|@ instruction r10|DWORD = MOVE input: int[-112147|0xfffffffffffe49ed] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B32 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631] <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: int[-100635|0xfffffffffffe76e5] <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B30 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1552  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1554  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1556  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116] <|@ <|@
      nr 1558  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5] <|@ <|@
      nr 1564  <|@ instruction JUMP ~[] destination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1584  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1586  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1588  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction JUMP ~[] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r9|DWORD = MOVE input: int[-110363|0xfffffffffffe50e5] <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B29" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r9|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B12 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1456  <|@ instruction r8|DWORD = MOVE input: int[-150043|0xfffffffffffdb5e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #13         // $assertionsDisabled:boolean
     3: ifne          23
     6: aload_0       
     7: getfield      #1          // isImmutable:boolean
    10: ifeq          23
    13: new           #17         // java.lang.AssertionError
    16: dup           
    17: ldc           #29         // "cannot modify immutable value"
    19: invokespecial #21         // java.lang.AssertionError.<init>:(java.lang.Object)void
    22: athrow        
    23: aload_0       
    24: invokespecial #22         // size:()int
    27: istore_2      
    28: aload_1       
    29: invokespecial #22         // size:()int
    32: istore_3      
    33: iload_2       
    34: iload_3       
    35: if_icmpge     87
    38: aload_0       
    39: getfield      #2          // data:int[]
    42: aload_0       
    43: getfield      #4          // nWords:int
    46: aload_0       
    47: getfield      #2          // data:int[]
    50: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
    53: istore        4
    55: iload         4
    57: ifeq          81
    60: aload_0       
    61: getfield      #2          // data:int[]
    64: aload_0       
    65: dup           
    66: getfield      #4          // nWords:int
    69: dup_x1        
    70: iconst_1      
    71: iadd          
    72: putfield      #4          // nWords:int
    75: iload         4
    77: iastore       
    78: goto          85
    81: aload_0       
    82: invokespecial #5          // trimLeadingZeros:()void
    85: iconst_0      
    86: ireturn       
    87: iload_2       
    88: iload_3       
    89: if_icmple     102
    92: new           #23         // java.lang.IllegalArgumentException
    95: dup           
    96: ldc           #33         // "disparate values"
    98: invokespecial #17         // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
   101: athrow        
   102: aload_0       
   103: getfield      #2          // data:int[]
   106: aload_0       
   107: getfield      #4          // nWords:int
   110: iconst_1      
   111: isub          
   112: iaload        
   113: i2l           
   114: ldc2_w        #19         // 4294967295
   117: land          
   118: aload_1       
   119: getfield      #2          // data:int[]
   122: aload_1       
   123: getfield      #4          // nWords:int
   126: iconst_1      
   127: isub          
   128: iaload        
   129: i2l           
   130: ldc2_w        #19         // 4294967295
   133: land          
   134: ldiv          
   135: lstore        4
   137: aload_0       
   138: lload         4
   140: aload_1       
   141: invokespecial #24         // multDiffMe:(long, sun.misc.FDBigInteger)long
   144: lstore        6
   146: lload         6
   148: lconst_0      
   149: lcmp          
   150: ifeq          291
   153: lconst_0      
   154: lstore        8
   156: aload_1       
   157: getfield      #3          // offset:int
   160: aload_0       
   161: getfield      #3          // offset:int
   164: isub          
   165: istore        10
   167: aload_1       
   168: getfield      #2          // data:int[]
   171: astore        11
   173: aload_0       
   174: getfield      #2          // data:int[]
   177: astore        12
   179: lload         8
   181: lconst_0      
   182: lcmp          
   183: ifne          291
   186: iconst_0      
   187: istore        13
   189: iload         10
   191: istore        14
   193: iload         14
   195: aload_0       
   196: getfield      #4          // nWords:int
   199: if_icmpge     252
   202: lload         8
   204: aload         12
   206: iload         14
   208: iaload        
   209: i2l           
   210: ldc2_w        #19         // 4294967295
   213: land          
   214: aload         11
   216: iload         13
   218: iaload        
   219: i2l           
   220: ldc2_w        #19         // 4294967295
   223: land          
   224: ladd          
   225: ladd          
   226: lstore        8
   228: aload         12
   230: iload         14
   232: lload         8
   234: l2i           
   235: iastore       
   236: lload         8
   238: bipush        32
   240: lushr         
   241: lstore        8
   243: iinc          
   246: iinc          
   249: goto          193
   252: getstatic     #13         // $assertionsDisabled:boolean
   255: ifne          282
   258: lload         8
   260: lconst_0      
   261: lcmp          
   262: ifeq          282
   265: lload         8
   267: lconst_1      
   268: lcmp          
   269: ifeq          282
   272: new           #17         // java.lang.AssertionError
   275: dup           
   276: lload         8
   278: invokespecial #25         // java.lang.AssertionError.<init>:(long)void
   281: athrow        
   282: lload         4
   284: lconst_1      
   285: lsub          
   286: lstore        4
   288: goto          179
   291: aload_0       
   292: getfield      #2          // data:int[]
   295: aload_0       
   296: getfield      #4          // nWords:int
   299: aload_0       
   300: getfield      #2          // data:int[]
   303: invokestatic  #23         // multAndCarryBy10:(int[], int, int[])int
   306: istore        8
   308: getstatic     #13         // $assertionsDisabled:boolean
   311: ifne          329
   314: iload         8
   316: ifeq          329
   319: new           #17         // java.lang.AssertionError
   322: dup           
   323: iload         8
   325: invokespecial #14         // java.lang.AssertionError.<init>:(int)void
   328: athrow        
   329: aload_0       
   330: invokespecial #5          // trimLeadingZeros:()void
   333: lload         4
   335: l2i           
   336: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c24604c8bee4c8bf2418b4518418504c4458b560c458b5e10458b4510418b750c448b0cc50c000000418bd003d6418bca4103cb48c1e0033bca0f8f8f010000418b5e18418504dc3bd10f8fe7090000418bd0ffca443bca0f86a10900008b3cdd0c000000418bcbffc93bf90f861d0a00008b54901048c1e3038bd28b4c8b10488be8488bc2489948f7f94885c00f8598000000418bd0488bf583fa010f8c7c0700008b4e0c4c63d249ffca448bd94d3bda0f869907000085c90f84b1070000448bd241ffca413bca0f86ed08000041b80000000049c7c300000000e9230000006690468b4c8610498bd948c1e30349d1e14903d94c03db46895c861049c1eb2041ffc0413bd07fda8bd042837c9610000f84930100008bc2488b6c24604883c468850500000000c5f877c3418bd22bd64963cb85d20f8c2302000048ffc94183fb010f8c0b0000008bf7483bf10f865d0700004183fb010f8c1b0000004863f24803ce418bf1483bf10f86ff080000443bca0f86110600008bca41b90000000049c7c200000000e929000000660f1f440000428b748b108b548d108bf6480faff0482bd64c03d24489548d1049c1fa20ffc141ffc1453bd97fd84d85d20f85d2070000418bd0488bf5e9cbfeffff488be84183f8010f8c1b0000004963c048ffc8418bf1483bf00f86610800004585c90f847f07000041bb0000000049c7c200000000e92b00000066660f1f840000000000428b449d10488bf048c1e60348d1e04803f04c03d64689549d1049c1ea2041ffc3453bc37fda418bf285f60f858a0000004183f8010f8c64080000418bf0ffce443bce0f86b5060000837cb510000f8496000000b800000000488b6c24604883c468850500000000c5f877c30f1f4000458bda41ffcb413bcb0f862b0800004d63c242837c860c000f8514000000850500000000458bd34183fa017dd3e9a1060000458955108bc2488b6c24604883c468850500000000c5f877c3453bc80f86d0070000418bc0ffc0418945104289748510b800000000488b6c24604883c468850500000000c5f877c3448bd6e9330000000f1f80000000000f1f8000000000418bc2ffc8443bc80f862d0600004963f2837cb50c000f8514000000850500000000448bd04183fa017dd5e9ee05000045895510b800000000488b6c24604883c468850500000000c5f877c3412bf24863d648ffca83fe010f8c13000000483bca0f8e770500004183fb010f8c930600008bcf83fe010f8c09000000483bca0f86f90400004c897424504403c64d63f083fe010f8c120000004c3bf20f862a0600004585c00f84130500004c896c24484489542444498b57604d8b6f704181f8ffffff004c897424380f8369010000458bf041c1e602458d76174183e6f84d63f64d8bd64c03d24d3bd50f87480100004d895760410f188416c0000000410f18841600010000410f18841640010000410f188416800100004489420c48c70201000000c74208addeadde458bf048894c2430448bee488944242848895c2420897c241c48896c241044894c240c44895c2408488bc24183fe014c8b5424380f8c670000004c8d58104d8d42f84d85c049c7c1000000000f8da40000004d8d42fc4d3bc80f8f11000000c5f9efc0c4817a7f048b4d8d41044d8bc84d8d42fe4d3bc80f8f11000000c5f9efc0c481f97e048b4d8d41024d8bc84d8bc249ffc84d3bc80f8f040000004789248b41b90000000049c7c0000000004c8b5c2428488b5c2420e921000000660f1f840000000000428b4c8b10490fafcb4c2bc1468944881049c1f82041ffc14183fd02b901000000410f4ccd413bc97fd6e90901000090c5f9efc0c4817e7f048b4d8d49084d3bc87eede944ffffff48894c2430448bee488944242848895c2420897c241c48896c241044894c240c44895c240848beaddeaddeaddeadde418bd0b900000000458bf0e80000000090e9d8feffff666690428b4c8b10490fafcb4c2bc146894488104963c949c1f8208b7c8b14490faffb4c2bc7448944881449c1f8208b7c8b18490faffb4c2bc7448944881849c1f8208b7c8b1c490faffb4c2bc7448944881c49c1f8208b7c8b20490faffb4c2bc7448944882049c1f8208b7c8b24490faffb4c2bc7448944882449c1f8208b7c8b28490faffb4c2bc7448944882849c1f8208b7c8b2c490faffb4c2bc7448944882c49c1f820458d4908418d4df8413bc90f8f4bffffffe91e000000660f1f440000428b4c8b10490fafcb4c2bc1468944881049c1f82041ffc1453be97fe38b4c24088bf9412bf94863ff48ffcf413bc90f8fb70000004963d14803fa413bc90f8fbc000000413bc90f8fd30000004d8bd0488b7c2410458bc141b900000000e9320000000f1f8000000000660f1f440000428b548310428b748f108bd2490fafd3482bf24c03d6468954801049c1fa2041ffc141ffc0413bc87fd64d85d20f85c3000000448b542444488b542448448972104489520c4c8bd049c1ea03448952184c8bea49c1ed0949ba00e01b17010000004788641500488bf0498bc34c8bea418bd64c8b742450e95bf9ffff8b54240c8bd2483bd70f873affffffe983000000488b542430483bd70f86b60000008b54241c413bd10f8729ffffffe98c0000004c3bd70f868b000000453bf10f871bffffffe9850000004c89742450498bd549baaddeaddeaddeadde4d8bda41bae5e3fdff4589979c0200004d899fa8020000e80000000090488b54244841c7879c020000edf8fdff4d89a7a8020000e8000000009041bae514feff488b54244848b9addeaddeaddeadde4589979c02000049898fa8020000e8000000009041bae50bfeffebd541bae503feffebcd41bae503feffebc541bae50bfeffebbd4c8bd84c89742450498bd549baaddeaddeaddeadde4d8bc241baedc5fdff4589979c0200004d8987a8020000e800000000904c8bd84c89742450498bd549baaddeaddeaddeadde4d8bc241bae5ccfdffebcc4c8bd84c89742450498bd549baaddeaddeaddeadde4d8bc241bae5ccfdffebac4c89742450498bd549baaddeaddeaddeadde4d8bda41bae525feffe9f4feffff4c89742450498bd549baaddeaddeaddeadde4d8bda41bae5ecfdffe9d4feffff498bd549baaddeaddeaddeadde4d8bda41bae51dfeff4c8b742450e9b4feffff4c89742450498bd549baaddeaddeaddeadde4d8bda41baed28feffe994feffff41b9e569feff488bfd498bd545898f9c0200004d89a7a8020000e8000000009041bbed62feff498bd545899f9c0200004d89a7a8020000e8000000009041bbe55ffeffebe141b8edb8fdff4c8bd8498bd54589879c0200004d89a7a8020000e800000000904c89742450498bd549baaddeaddeaddeadde4d8bda41bae576feffe90ffeffff4c8bd8488bfd4c89742450498bd541c7879c020000eddcfdff4d89a7a8020000e800000000904c8bd84c89742450498bd549baaddeaddeaddeadde4d8bc241bae5bffdffe95efeffff498bd549baaddeaddeaddeadde4d8bda41bae51dfeff4c8b742450e9a6fdffff49bb000000000000000041bae540feff498bd5e98efdffff4c89742450498bd549baaddeaddeaddeadde4d8bda41baed28feffe96efdffff49bb000000000000000041baed49feff498bd5e956fdffff4c89742450498bd549baaddeaddeaddeadde4d8bda41bae576feffe936fdffff4c89742450498bd549baaddeaddeaddeadde4d8bda41bae5e3fdffe916fdffff49bb000000000000000041bae530feff498bd5e9fefcffff41b9e550feffe965feffff41b9ed6ffeffe95afeffff41b8e5b5fdffe994feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b92621e slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 58 12 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 58 [rax:0, r13:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 62 14 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [rax:0, r13:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 16 r11|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 70 18 r8|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 74 20 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 78 22 r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 86 24 rdx|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 91 26 rcx|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 97 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3  <||@
  Comment 101 30 CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 103 32 BRANCH trueDestinationProbability: 0.24201595755878824 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B31  <||@
  Comment 109 block B31 null  <||@
  Comment 109 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 294 rbx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD  <||@
  Comment 113 296 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 113 [rax:0, rbx:0, r13:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 298 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 119 300 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 125 block B33 null  <||@
  Comment 125 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 314 rdx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 130 316 CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 133 318 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B157  <||@
  Comment 139 block B34 null  <||@
  Comment 139 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 322 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 146 324 rcx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 151 326 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 328 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B156  <||@
  Comment 159 block B35 null  <||@
  Comment 159 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 332 rdx|DWORD = MOV [rax|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 163 334 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3  <||@
  Comment 167 336 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 169 338 rcx|QWORD = MOV [rbx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 173 340 rbp|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 176 342 rax|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 179 344 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 181 346 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD state [bci:0]  <||@
  Comment 181 [rbx:0, rbp:0, r13:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 181 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 184 348 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 187 350 BRANCH trueDestinationProbability: 0.5162453864221004 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 193 block B36 null  <||@
  Comment 193 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 354 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 196 356 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 199 358 JUMP ~[] destination: B36 -> B129  <||@
  Comment 199 block B129 null  <||@
  Comment 199 1294 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 199 1296 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 202 1298 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131  <||@
  Comment 208 block B131 null  <||@
  Comment 208 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 1318 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 211 1320 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 214 1322 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 217 1324 r11|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 220 1326 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 223 1328 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B150  <||@
  Comment 229 block B132 null  <||@
  Comment 229 1330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 1332 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 231 1334 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134  <||@
  Comment 237 block B134 null  <||@
  Comment 237 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 1354 r10|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 243 1356 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 246 1358 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B149  <||@
  Comment 252 block B135 null  <||@
  Comment 252 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 1362 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 258 1364 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 265 1366 JUMP ~[] destination: B135 -> B136  <||@
  Comment 270 block B137 loop 8 depth 1 header:203|LoopBegin  <||@
  Comment 270 1374 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 272 1376 r9|QWORD = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 277 1378 rbx|QWORD = SHL r9|QWORD y: 3 size: QWORD  <||@
  Comment 284 1380 r9|QWORD = SHL r9|QWORD size: QWORD  <||@
  Comment 287 1382 rbx|QWORD = ADD (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 290 1384 r11|QWORD = ADD (x: r11|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 293 1386 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: r11|QWORD) size: DWORD  <||@
  Comment 298 1388 r11|QWORD = SHR r11|QWORD y: 32 size: QWORD  <||@
  Comment 302 1390 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 305 1392 JUMP ~[] destination: B137 -> B136  <||@
  Comment 305 block B136 loop 8 depth 1 header:203|LoopBegin  <||@
  Comment 305 1368 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 305 1370 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 308 1372 BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 310 block B138 null  <||@
  Comment 310 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 1396 rdx|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 312 1398 CMP [rsi|QWORD[.] + r10|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 318 1400 BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B138 -> B140 falseDestination: B138 -> B148  <||@
  Comment 324 block B148 null  <||@
  Comment 324 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 1474 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 326 1476 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 335 12  <||@
  Comment 345 block B37 null  <||@
  Comment 345 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 362 rdx|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 350 364 rcx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 353 366 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 355 368 BRANCH trueDestinationProbability: 1.7340038148083925E-4 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B115  <||@
  Comment 361 block B115 null  <||@
  Comment 361 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 1186 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 364 1188 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 368 1190 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B115 -> B119 falseDestination: B115 -> B117  <||@
  Comment 374 block B117 null  <||@
  Comment 374 1196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 1198 rsi|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 376 1200 CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 379 1202 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B119 falseDestination: B117 -> B155  <||@
  Comment 385 block B119 null  <||@
  Comment 385 1208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 1210 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 389 1212 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B119 -> B124 falseDestination: B119 -> B121  <||@
  Comment 395 block B121 null  <||@
  Comment 395 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 1220 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 398 1222 rcx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 401 1224 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 404 1226 CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 407 1228 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B121 -> B122 falseDestination: B121 -> B154  <||@
  Comment 413 block B122 null  <||@
  Comment 413 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 1232 CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 416 1234 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B124 falseDestination: B122 -> B153  <||@
  Comment 422 block B124 null  <||@
  Comment 422 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 1242 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 424 1244 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 430 1246 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 437 1248 JUMP ~[] destination: B124 -> B125  <||@
  Comment 442 block B126 loop 7 depth 1 header:98|LoopBegin  <||@
  Comment 442 1256 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 1258 rsi|DWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 453 1260 rdx|QWORD = MOV [rbp|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 457 1262 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 459 1264 rsi|QWORD = IMUL (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 463 1266 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 466 1268 r10|QWORD = ADD (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 469 1270 MOV (x: [rbp|QWORD[.] + rcx|DWORD * 4 + 16], y: r10|QWORD) size: DWORD  <||@
  Comment 474 1272 r10|QWORD = SAR r10|QWORD y: 32 size: QWORD  <||@
  Comment 478 1274 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 480 1276 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 483 1278 JUMP ~[] destination: B126 -> B125  <||@
  Comment 483 block B125 loop 7 depth 1 header:98|LoopBegin  <||@
  Comment 483 1250 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 483 1252 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 486 1254 BRANCH trueDestinationProbability: 0.514809828340626 condition: > trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 488 block B127 null  <||@
  Comment 488 1280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 1282 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 491 1284 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B152  <||@
  Comment 497 block B128 null  <||@
  Comment 497 1286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 1288 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 500 1290 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 503 1292 JUMP ~[] destination: B128 -> B129  <||@
  Comment 508 block B1 null  <||@
  Comment 508 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 36 rbp|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 511 38 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 515 40 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B7 falseDestination: B1 -> B3  <||@
  Comment 521 block B3 null  <||@
  Comment 521 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 48 rax|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 524 50 rax|QWORD = DEC rax|QWORD size: QWORD  <||@
  Comment 527 52 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 530 54 CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 533 56 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B30  <||@
  Comment 539 block B4 null  <||@
  Comment 539 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 60 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 542 62 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 548 block B7 null  <||@
  Comment 548 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 86 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 554 88 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 561 90 JUMP ~[] destination: B7 -> B8  <||@
  Comment 566 block B9 loop 0 depth 1 header:266|LoopBegin  <||@
  Comment 566 98 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 576 100 rax|QWORD = MOV [rbp|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 581 102 rsi|QWORD = SHL rax|QWORD y: 3 size: QWORD  <||@
  Comment 588 104 rax|QWORD = SHL rax|QWORD size: QWORD  <||@
  Comment 591 106 rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 594 108 r10|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 597 110 MOV (x: [rbp|QWORD[.] + r11|DWORD * 4 + 16], y: r10|QWORD) size: DWORD  <||@
  Comment 602 112 r10|QWORD = SHR r10|QWORD y: 32 size: QWORD  <||@
  Comment 606 114 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 609 116 JUMP ~[] destination: B9 -> B8  <||@
  Comment 609 block B8 loop 0 depth 1 header:266|LoopBegin  <||@
  Comment 609 92 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 609 94 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 612 96 BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 614 block B10 null  <||@
  Comment 614 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 120 rsi|DWORD = MOV r10|QWORD size: DWORD  <||@
  Comment 617 122 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 619 124 BRANCH trueDestinationProbability: 0.8333333333333334 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B26  <||@
  Comment 625 block B11 null  <||@
  Comment 625 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 128 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 629 130 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 635 block B13 null  <||@
  Comment 635 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 635 144 rsi|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 640 146 CMP (x: r9|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 643 148 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25  <||@
  Comment 649 block B14 null  <||@
  Comment 649 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 152 CMP [rbp|QWORD[.] + rsi|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 654 154 BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B24  <||@
  Comment 660 block B24 null  <||@
  Comment 660 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 660 226 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 665 228 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 674 12  <||@
  Comment 684 block B142 loop 9 depth 1 header:240|LoopBegin  <||@
  Comment 684 1422 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 688 1424 r11|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 694 1426 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 697 1428 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B146  <||@
  Comment 703 block B143 loop 9 depth 1 header:240|LoopBegin  <||@
  Comment 703 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 1432 r8|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 706 1434 CMP [rsi|QWORD[.] + r8|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 712 1436 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145  <||@
  Comment 718 block B144 loop 9 depth 1 header:240|LoopBegin  <||@
  Comment 718 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 718 1440 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 330]  <||@
  Comment 718 [rsi:0, r13:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |-  |-  |-  |rax|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 718 {infopoint: SAFEPOINT}  <||@
  Comment 718 11  <||@
  Comment 724 1442 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 727 1444 JUMP ~[] destination: B144 -> B140  <||@
  Comment 727 block B140 loop 9 depth 1 header:240|LoopBegin  <||@
  Comment 727 1406 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 727 1408 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 731 1410 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142  <||@
  Comment 738 block B145 null  <||@
  Comment 738 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 738 1448 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 742 1450 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 744 1452 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 753 12  <||@
  Comment 763 block B26 null  <||@
  Comment 763 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 242 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 766 244 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 772 block B27 null  <||@
  Comment 772 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 772 248 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 777 250 MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 781 252 MOV (x: [rbp|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 786 254 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 791 256 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 800 12  <||@
  Comment 810 block B15 null  <||@
  Comment 810 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 158 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 813 160 JUMP ~[] destination: B15 -> B16  <||@
  Comment 818 block B18 loop 1 depth 1 header:302|LoopBegin  <||@
  Comment 818 176 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 178 rax|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 837 180 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 840 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B22  <||@
  Comment 846 block B19 loop 1 depth 1 header:302|LoopBegin  <||@
  Comment 846 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 186 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 849 188 CMP [rbp|QWORD[.] + rsi|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 854 190 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 860 block B20 loop 1 depth 1 header:302|LoopBegin  <||@
  Comment 860 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 194 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 82]  <||@
  Comment 860 [rbp:0, r13:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 860 {infopoint: SAFEPOINT}  <||@
  Comment 860 11  <||@
  Comment 866 196 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 869 198 JUMP ~[] destination: B20 -> B16  <||@
  Comment 869 block B16 loop 1 depth 1 header:302|LoopBegin  <||@
  Comment 869 162 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 869 164 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 873 166 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 880 block B21 null  <||@
  Comment 880 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 202 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 884 204 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 889 206 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 898 12  <||@
  Comment 908 block B38 null  <||@
  Comment 908 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 908 372 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 911 374 rdx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 914 376 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 917 378 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 920 380 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B38 -> B44 falseDestination: B38 -> B40  <||@
  Comment 926 block B40 null  <||@
  Comment 926 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 926 388 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 929 390 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B114  <||@
  Comment 935 block B41 null  <||@
  Comment 935 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 935 394 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 939 396 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B44  <||@
  Comment 945 block B44 null  <||@
  Comment 945 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 420 rcx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 947 422 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 950 424 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B48 falseDestination: B44 -> B46  <||@
  Comment 956 block B46 null  <||@
  Comment 956 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 956 434 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 959 436 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B48 falseDestination: B46 -> B113  <||@
  Comment 965 block B48 null  <||@
  Comment 965 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 428 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 970 446 r8|DWORD = ADD (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 973 448 r14|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 976 450 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 979 452 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B48 -> B54 falseDestination: B48 -> B50  <||@
  Comment 985 block B50 null  <||@
  Comment 985 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 462 CMP (x: r14|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 988 464 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B112  <||@
  Comment 994 block B51 null  <||@
  Comment 994 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 468 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 997 470 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B54  <||@
  Comment 1003 block B54 null  <||@
  Comment 1003 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1003 456 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1008 494 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1013 496 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1017 498 r13|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1021 500 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 1028 506 stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 1033 502 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B59  <||@
  Comment 1039 block B55 null  <||@
  Comment 1039 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1039 508 r14|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 1046 510 r14|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 1050 512 r14|DWORD = AND r14|DWORD y: -8 size: DWORD  <||@
  Comment 1054 514 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1057 516 r10|QWORD = ADD (x: r14|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1063 518 CMP (x: r10|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1066 520 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B59 falseDestination: B55 -> B57  <||@
  Comment 1072 block B57 null  <||@
  Comment 1072 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1072 544 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 1076 546 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1085 548 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1094 550 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1103 552 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1112 554 MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 1116 556 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 1123 558 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 1123 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 1130 560 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1130 562 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1133 564 stack:64|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1138 566 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1141 568 stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1146 570 stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1151 572 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1155 574 stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1160 576 stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1165 578 stack:104|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1170 580 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1173 582 JUMP ~[] destination: B57 -> B60  <||@
  Comment 1173 block B60 null  <||@
  Comment 1173 620 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1173 622 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1177 628 r10|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1182 624 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B60 -> B76 falseDestination: B60 -> B62  <||@
  Comment 1188 block B62 null  <||@
  Comment 1188 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1188 636 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1192 638 r8|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1196 640 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1199 646 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1206 642 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B62 -> B67 falseDestination: B62 -> B65  <||@
  Comment 1212 block B67 null  <||@
  Comment 1212 672 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1212 674 r8|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1216 676 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1219 678 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69  <||@
  Comment 1225 block B69 null  <||@
  Comment 1225 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1225 686 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1229 688 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1235 690 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1239 692 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1242 694 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1242 block B70 null  <||@
  Comment 1242 696 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1242 698 r8|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1246 700 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1249 702 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72  <||@
  Comment 1255 block B72 null  <||@
  Comment 1255 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1255 710 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 1259 712 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1265 714 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1269 716 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1272 718 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1272 block B73 null  <||@
  Comment 1272 720 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1272 722 r8|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1278 724 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1281 726 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B76 falseDestination: B73 -> B75  <||@
  Comment 1287 block B75 null  <||@
  Comment 1287 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1287 734 MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1291 736 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1291 block B76 null  <||@
  Comment 1291 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 740 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1297 742 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1304 744 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1309 746 rbx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 748 JUMP ~[] destination: B76 -> B77  <||@
  Comment 1319 block B78 loop 3 depth 1 header:131|LoopBegin  <||@
  Comment 1319 760 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1328 762 rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1333 764 rcx|QWORD = IMUL (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1337 766 r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 1340 768 MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD  <||@
  Comment 1345 770 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1349 772 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1352 774 JUMP ~[] destination: B78 -> B77  <||@
  Comment 1352 block B77 loop 3 depth 1 header:131|LoopBegin  <||@
  Comment 1352 750 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1352 752 CMP r13|DWORD y: 2 size: DWORD  <||@
  Comment 1356 754 rcx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r13|DWORD) condition: <  <||@
  Comment 1365 756 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1368 758 BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B80  <||@
  Comment 1375 block B65 loop 2 depth 1 header:1392|LoopBegin  <||@
  Comment 1375 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1376 658 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1380 660 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1386 662 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1390 664 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1393 666 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B67 falseDestination: B65 -> B65  <||@
  Comment 1400 block B59 null  <||@
  Comment 1400 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1400 588 stack:64|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1405 590 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1408 592 stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1413 594 stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1418 596 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1422 598 stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1427 600 stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1432 602 stack:104|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1437 608 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1437 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1447 610 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1450 612 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1455 614 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1458 616 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1458 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1463 [stack:16, stack:32, stack:72, stack:80]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 1464 618 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1469 block B81 loop 4 depth 1 header:974|LoopBegin  <||@
  Comment 1469 788 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1472 790 rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1477 792 rcx|QWORD = IMUL (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1481 794 r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 1484 796 MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD  <||@
  Comment 1489 798 rcx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 1492 800 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1496 802 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 20] size: DWORD  <||@
  Comment 1500 804 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1504 806 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1507 808 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 20], y: r8|QWORD) size: DWORD  <||@
  Comment 1512 810 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1516 812 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 24] size: DWORD  <||@
  Comment 1520 814 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1524 816 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1527 818 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 24], y: r8|QWORD) size: DWORD  <||@
  Comment 1532 820 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1536 822 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 28] size: DWORD  <||@
  Comment 1540 824 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1544 826 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1547 828 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 28], y: r8|QWORD) size: DWORD  <||@
  Comment 1552 830 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1556 832 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 32] size: DWORD  <||@
  Comment 1560 834 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1564 836 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1567 838 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 32], y: r8|QWORD) size: DWORD  <||@
  Comment 1572 840 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1576 842 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 36] size: DWORD  <||@
  Comment 1580 844 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1584 846 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1587 848 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 36], y: r8|QWORD) size: DWORD  <||@
  Comment 1592 850 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1596 852 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 40] size: DWORD  <||@
  Comment 1600 854 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1604 856 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1607 858 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 40], y: r8|QWORD) size: DWORD  <||@
  Comment 1612 860 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1616 862 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 44] size: DWORD  <||@
  Comment 1620 864 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1624 866 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1627 868 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 44], y: r8|QWORD) size: DWORD  <||@
  Comment 1632 870 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1636 872 r9|DWORD = LEA [r9|DWORD + 8] size: DWORD  <||@
  Comment 1640 874 JUMP ~[] destination: B81 -> B80  <||@
  Comment 1640 block B80 loop 4 depth 1 header:974|LoopBegin  <||@
  Comment 1640 780 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1640 782 rcx|DWORD = LEA [r13|DWORD - 8] size: DWORD  <||@
  Comment 1644 784 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1647 786 BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B83  <||@
  Comment 1658 block B84 loop 5 depth 1 header:1007|LoopBegin  <||@
  Comment 1658 886 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1664 888 rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1669 890 rcx|QWORD = IMUL (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1673 892 r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 1676 894 MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD  <||@
  Comment 1681 896 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1685 898 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1688 900 JUMP ~[] destination: B84 -> B83  <||@
  Comment 1688 block B83 loop 5 depth 1 header:1007|LoopBegin  <||@
  Comment 1688 880 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1688 882 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1691 884 BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 1693 block B85 null  <||@
  Comment 1693 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1693 904 rcx|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 1697 906 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1702 908 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1705 910 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 1708 912 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1711 914 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B90  <||@
  Comment 1717 block B90 null  <||@
  Comment 1717 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1717 944 rdx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 1720 946 rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1723 948 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1726 950 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B97  <||@
  Comment 1732 block B97 null  <||@
  Comment 1732 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1732 994 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1735 996 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B105  <||@
  Comment 1741 block B105 null  <||@
  Comment 1741 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1741 1046 r10|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1744 1048 rdi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1749 1050 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1752 1052 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1758 1054 JUMP ~[] destination: B105 -> B106  <||@
  Comment 1763 block B107 loop 6 depth 1 header:157|LoopBegin  <||@
  Comment 1763 1062 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1776 1064 rdx|DWORD = MOV [rbx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1781 1066 rsi|QWORD = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1786 1068 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 1788 1070 rdx|QWORD = IMUL (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1792 1072 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 1795 1074 r10|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1798 1076 MOV (x: [rax|QWORD[.] + r8|DWORD * 4 + 16], y: r10|QWORD) size: DWORD  <||@
  Comment 1803 1078 r10|QWORD = SAR r10|QWORD y: 32 size: QWORD  <||@
  Comment 1807 1080 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1810 1082 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 1813 1084 JUMP ~[] destination: B107 -> B106  <||@
  Comment 1813 block B106 loop 6 depth 1 header:157|LoopBegin  <||@
  Comment 1813 1056 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1813 1058 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1816 1060 BRANCH trueDestinationProbability: 0.6666666666666667 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108  <||@
  Comment 1818 block B108 null  <||@
  Comment 1818 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 1088 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1821 1090 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110  <||@
  Comment 1827 block B109 null  <||@
  Comment 1827 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1827 1094 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1832 1096 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1837 1098 MOV (x: [rdx|QWORD[.] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 1841 1100 MOV (x: [rdx|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1845 1102 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3  <||@
  Comment 1852 1104 MOV (x: [rdx|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1856 1106 r13|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1863 1108 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1873 1110 MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1878 1112 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1881 1114 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1884 1116 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1887 1118 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1890 1120 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 1122 JUMP ~[] destination: B109 -> B129  <||@
  Comment 1900 block B86 null  <||@
  Comment 1900 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 918 rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 1904 920 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 1906 922 CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1909 924 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B90 falseDestination: B86 -> B88  <||@
  Comment 1920 block B91 null  <||@
  Comment 1920 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1920 954 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1925 956 CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1928 958 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95  <||@
  Comment 1934 block B92 null  <||@
  Comment 1934 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1934 962 rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1938 964 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1941 966 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B97 falseDestination: B92 -> B94  <||@
  Comment 1952 block B98 null  <||@
  Comment 1952 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1952 1000 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1955 1002 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B102  <||@
  Comment 1961 block B99 null  <||@
  Comment 1961 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 1006 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1964 1008 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B105 falseDestination: B99 -> B101  <||@
  Comment 1975 block B153 null  <||@
  Comment 1975 1534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 1536 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1980 1538 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1983 1540 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116]  <||@
  Comment 1983 {Object[d.a@1171729116]}  <||@
  Comment 1993 1542 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1996 1544 r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5]  <||@
  Comment 2002 1548 JUMP ~[] destination: B153 -> B158  <||@
  Comment 2002 block B158 null  <||@
  Comment 2002 1602 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2002 1604 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2009 1606 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2016 1608 DEOPT info [bci:0]  <||@
  Comment 2016 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2021 [rdx:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2022 block B110 null  <||@
  Comment 2022 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2022 1126 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2027 1128 MOV [r15|QWORD + 668] y: -132883 size: DWORD  <||@
  Comment 2038 1130 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2045 1132 DEOPT info [bci:202, 141]  <||@
  Comment 2045 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2050 [rax:0, rdx:0, rbx:0, rdi:0, stack:80]at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202, duringCall: false, rethrow: false]
              |0             |1          |2  |3                  |4          |5  |6          |7             |8         |9         |10            |11        |12           
     locals:  |rdx|QWORD[.]  |r11|QWORD  |-  |stack:32|QWORD[.]  |r10|QWORD  |-  |r13|DWORD  |rax|QWORD[.]  |r8|DWORD  |r8|DWORD  |rbx|QWORD[.]  |r9|DWORD  |rdi|QWORD[.] 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2051 block B88 null  <||@
  Comment 2051 930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2051 932 r10|DWORD = MOVE input: int[-125723|0xfffffffffffe14e5]  <||@
  Comment 2057 936 JUMP ~[] destination: B88 -> B103  <||@
  Comment 2057 block B103 null  <||@
  Comment 2057 1030 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2057 1026 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 1032 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1474612814]  <||@
  Comment 2062 {Object[d.a@1474612814]}  <||@
  Comment 2072 1034 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2079 1036 MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 2086 1038 DEOPT info [bci:136, 141]  <||@
  Comment 2086 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2091 [rax:0, rdx:0, rbx:0, stack:80]at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136, duringCall: false, rethrow: false]
              |0             |1          |2  |3                  |4         |5  |6          |7             |8         |9         |10            |11  |12 
     locals:  |rdx|QWORD[.]  |r11|QWORD  |-  |stack:32|QWORD[.]  |r8|QWORD  |-  |r13|DWORD  |rax|QWORD[.]  |r9|DWORD  |r9|DWORD  |rbx|QWORD[.]  |-   |-  
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2092 block B94 null  <||@
  Comment 2092 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2092 974 r10|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5]  <||@
  Comment 2098 978 JUMP ~[] destination: B94 -> B103  <||@
  Comment 2100 block B102 null  <||@
  Comment 2100 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2100 1024 r10|DWORD = MOVE input: int[-130075|0xfffffffffffe03e5]  <||@
  Comment 2106 1028 JUMP ~[] destination: B102 -> B103  <||@
  Comment 2108 block B101 null  <||@
  Comment 2108 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2108 1016 r10|DWORD = MOVE input: int[-130075|0xfffffffffffe03e5]  <||@
  Comment 2114 1020 JUMP ~[] destination: B101 -> B103  <||@
  Comment 2116 block B95 null  <||@
  Comment 2116 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2116 982 r10|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5]  <||@
  Comment 2122 986 JUMP ~[] destination: B95 -> B103  <||@
  Comment 2124 block B130 null  <||@
  Comment 2124 1300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2124 1302 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2127 1304 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2132 1306 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2135 1308 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731488164]  <||@
  Comment 2135 {Object[d.a@731488164]}  <||@
  Comment 2145 1310 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 1312 r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed]  <||@
  Comment 2154 1314 JUMP ~[] destination: B130 -> B151  <||@
  Comment 2154 block B151 null  <||@
  Comment 2154 1510 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2154 1512 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2161 1514 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 2168 1516 DEOPT info [bci:144]  <||@
  Comment 2168 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2173 [rdx:0, stack:80]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 144, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-  
     stack:   |long[0|0x0]   |-                  |   |   |           |   |   |   |   |   |    |    |    |    |     <||@
  Comment 2174 block B150 null  <||@
  Comment 2174 1494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2174 1496 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2177 1498 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2182 1500 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2185 1502 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2185 {Object[d.a@1652644631]}  <||@
  Comment 2195 1504 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2198 1506 r10|DWORD = MOVE input: int[-144155|0xfffffffffffdcce5]  <||@
  Comment 2204 1508 JUMP ~[] destination: B150 -> B151  <||@
  Comment 2206 block B133 null  <||@
  Comment 2206 1336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2206 1338 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2209 1340 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2214 1342 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2217 1344 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2217 {Object[d.a@1652644631]}  <||@
  Comment 2227 1346 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2230 1348 r10|DWORD = MOVE input: int[-144155|0xfffffffffffdcce5]  <||@
  Comment 2236 1350 JUMP ~[] destination: B133 -> B151  <||@
  Comment 2238 block B113 null  <||@
  Comment 2238 1152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2238 1154 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2243 1156 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2246 1158 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184]  <||@
  Comment 2246 {Object[d.a@1070949184]}  <||@
  Comment 2256 1160 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2259 1162 r10|DWORD = MOVE input: int[-121371|0xfffffffffffe25e5]  <||@
  Comment 2265 1166 JUMP ~[] destination: B113 -> B158  <||@
  Comment 2270 block B155 null  <||@
  Comment 2270 1566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2270 1568 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2275 1570 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2278 1572 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116]  <||@
  Comment 2278 {Object[d.a@1171729116]}  <||@
  Comment 2288 1574 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2291 1576 r10|DWORD = MOVE input: int[-135963|0xfffffffffffdece5]  <||@
  Comment 2297 1580 JUMP ~[] destination: B155 -> B158  <||@
  Comment 2302 block B52 null  <||@
  Comment 2302 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 474 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2305 476 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184]  <||@
  Comment 2305 {Object[d.a@1070949184]}  <||@
  Comment 2315 478 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 480 r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5]  <||@
  Comment 2324 482 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2329 484 JUMP ~[] destination: B52 -> B158  <||@
  Comment 2334 block B114 null  <||@
  Comment 2334 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2334 1170 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2339 1172 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2342 1174 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964]  <||@
  Comment 2342 {Object[d.a@1592099964]}  <||@
  Comment 2352 1176 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2355 1178 r10|DWORD = MOVE input: int[-120595|0xfffffffffffe28ed]  <||@
  Comment 2361 1182 JUMP ~[] destination: B114 -> B158  <||@
  Comment 2366 block B25 null  <||@
  Comment 2366 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2366 232 r9|DWORD = MOVE input: int[-103963|0xfffffffffffe69e5]  <||@
  Comment 2372 238 JUMP ~[] destination: B25 -> B29  <||@
  Comment 2372 block B29 null  <||@
  Comment 2372 268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2372 136 rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2375 138 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2378 270 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 2385 272 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2392 274 DEOPT info [bci:5, 50]  <||@
  Comment 2392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2397 [rdx:0, rdi:0]at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5, duringCall: false, rethrow: false]
              |0             |1         |2             |3          |4  |5          |6  |7 
     locals:  |rdi|QWORD[.]  |r8|DWORD  |rdi|QWORD[.]  |r10|QWORD  |-  |r11|DWORD  |-  |- 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2398 block B17 null  <||@
  Comment 2398 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2398 170 r11|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed]  <||@
  Comment 2404 174 JUMP ~[] destination: B17 -> B23  <||@
  Comment 2404 block B23 null  <||@
  Comment 2404 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2404 172 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2407 218 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2414 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2421 222 DEOPT info [bci:21, 82]  <||@
  Comment 2421 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2426 [rdx:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdx|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2427 block B22 null  <||@
  Comment 2427 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2427 210 r11|DWORD = MOVE input: int[-106523|0xfffffffffffe5fe5]  <||@
  Comment 2433 214 JUMP ~[] destination: B22 -> B23  <||@
  Comment 2435 block B141 null  <||@
  Comment 2435 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2435 1414 r8|DWORD = MOVE input: int[-149267|0xfffffffffffdb8ed]  <||@
  Comment 2441 1420 JUMP ~[] destination: B141 -> B147  <||@
  Comment 2441 block B147 null  <||@
  Comment 2441 1464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2441 1416 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2444 1418 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2447 1466 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 2454 1468 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2461 1470 DEOPT info [bci:21, 330]  <||@
  Comment 2461 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2466 [rdx:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdx|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |-  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2467 block B5 null  <||@
  Comment 2467 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2467 66 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2472 68 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2475 70 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2475 {Object[d.a@1652644631]}  <||@
  Comment 2485 72 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2488 74 r10|DWORD = MOVE input: int[-100635|0xfffffffffffe76e5]  <||@
  Comment 2494 78 JUMP ~[] destination: B5 -> B158  <||@
  Comment 2499 block B152 null  <||@
  Comment 2499 1518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2499 1520 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2502 1522 rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2505 1524 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2510 1526 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2513 1528 MOV [r15|QWORD + 668] y: -140051 size: DWORD  <||@
  Comment 2524 1530 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2531 1532 DEOPT info [bci:44, 141]  <||@
  Comment 2531 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2536 [rdx:0, rbx:0, rdi:0, stack:80]at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44, duringCall: false, rethrow: false]
              |0  |1          |2  |3                  |4          |5  |6  |7             |8             |9         |10         |11  |12 
     locals:  |-  |r11|QWORD  |-  |stack:32|QWORD[.]  |r10|QWORD  |-  |-  |rbx|QWORD[.]  |rdi|QWORD[.]  |r9|DWORD  |rcx|DWORD  |-   |-  
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2537 block B149 null  <||@
  Comment 2537 1478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2537 1480 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2540 1482 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2545 1484 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2548 1486 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2548 {Object[d.a@1652644631]}  <||@
  Comment 2558 1488 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2561 1490 r10|DWORD = MOVE input: int[-147483|0xfffffffffffdbfe5]  <||@
  Comment 2567 1492 JUMP ~[] destination: B149 -> B151  <||@
  Comment 2572 block B112 null  <||@
  Comment 2572 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2572 1140 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2575 1142 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184]  <||@
  Comment 2575 {Object[d.a@1070949184]}  <||@
  Comment 2585 1144 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2588 1146 r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5]  <||@
  Comment 2594 1148 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2599 1150 JUMP ~[] destination: B112 -> B158  <||@
  Comment 2604 block B157 null  <||@
  Comment 2604 1592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2604 1594 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2614 1596 r10|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5]  <||@
  Comment 2620 1598 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2623 1600 JUMP ~[] destination: B157 -> B158  <||@
  Comment 2628 block B42 null  <||@
  Comment 2628 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2628 400 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2633 402 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2636 404 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964]  <||@
  Comment 2636 {Object[d.a@1592099964]}  <||@
  Comment 2646 406 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2649 408 r10|DWORD = MOVE input: int[-120595|0xfffffffffffe28ed]  <||@
  Comment 2655 412 JUMP ~[] destination: B42 -> B158  <||@
  Comment 2660 block B32 null  <||@
  Comment 2660 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2660 304 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2670 306 r10|DWORD = MOVE input: int[-112147|0xfffffffffffe49ed]  <||@
  Comment 2676 308 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2679 310 JUMP ~[] destination: B32 -> B158  <||@
  Comment 2684 block B30 null  <||@
  Comment 2684 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2684 278 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2689 280 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2692 282 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2692 {Object[d.a@1652644631]}  <||@
  Comment 2702 284 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2705 286 r10|DWORD = MOVE input: int[-100635|0xfffffffffffe76e5]  <||@
  Comment 2711 290 JUMP ~[] destination: B30 -> B158  <||@
  Comment 2716 block B154 null  <||@
  Comment 2716 1550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 1552 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2721 1554 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2724 1556 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116]  <||@
  Comment 2724 {Object[d.a@1171729116]}  <||@
  Comment 2734 1558 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2737 1560 r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5]  <||@
  Comment 2743 1564 JUMP ~[] destination: B154 -> B158  <||@
  Comment 2748 block B156 null  <||@
  Comment 2748 1582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2748 1584 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2758 1586 r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5]  <||@
  Comment 2764 1588 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2767 1590 JUMP ~[] destination: B156 -> B158  <||@
  Comment 2772 block B28 null  <||@
  Comment 2772 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2772 260 r9|DWORD = MOVE input: int[-110363|0xfffffffffffe50e5]  <||@
  Comment 2778 266 JUMP ~[] destination: B28 -> B29  <||@
  Comment 2783 block B12 null  <||@
  Comment 2783 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2783 134 r9|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed]  <||@
  Comment 2789 140 JUMP ~[] destination: B12 -> B29  <||@
  Comment 2794 block B146 null  <||@
  Comment 2794 1454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2794 1456 r8|DWORD = MOVE input: int[-150043|0xfffffffffffdb5e5]  <||@
  Comment 2800 1462 JUMP ~[] destination: B146 -> B147  <||@
  Comment 2805 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2805 4  <||@
  Comment 2811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2811 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9600[sun.misc.FDBigInteger.quoRemIteration(FDBigInteger)]"
  method "HotSpotCompilation-9600[sun.misc.FDBigInteger.quoRemIteration(FDBigInteger)]"
  date 1527005207802
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bb8120 448b560849c1e203493bc20f852fddc4fe900f1f80000000000f1f800000000089842400c0feff4883ec6848896c24604c8bee4c8bf2418b4518418504c4458b560c458b5e10458b4510418b750c448b0cc50c000000418bd003d6418bca4103cb48c1e0033bca0f8f8f010000418b5e18418504dc3bd10f8fe7090000418bd0ffca443bca0f86a10900008b3cdd0c000000418bcbffc93bf90f861d0a00008b54901048c1e3038bd28b4c8b10488be8488bc2489948f7f94885c00f8598000000418bd0488bf583fa010f8c7c0700008b4e0c4c63d249ffca448bd94d3bda0f869907000085c90f84b1070000448bd241ffca413bca0f86ed08000041b80000000049c7c300000000e9230000006690468b4c8610498bd948c1e30349d1e14903d94c03db46895c861049c1eb2041ffc0413bd07fda8bd042837c9610000f84930100008bc2488b6c24604883c4688505916dcdfcc5f877c3418bd22bd64963cb85d20f8c2302000048ffc94183fb010f8c0b0000008bf7483bf10f865d0700004183fb010f8c1b0000004863f24803ce418bf1483bf10f86ff080000443bca0f86110600008bca41b90000000049c7c200000000e929000000660f1f440000428b748b108b548d108bf6480faff0482bd64c03d24489548d1049c1fa20ffc141ffc1453bd97fd84d85d20f85d2070000418bd0488bf5e9cbfeffff488be84183f8010f8c1b0000004963c048ffc8418bf1483bf00f86610800004585c90f847f07000041bb0000000049c7c200000000e92b00000066660f1f840000000000428b449d10488bf048c1e60348d1e04803f04c03d64689549d1049c1ea2041ffc3453bc37fda418bf285f60f858a0000004183f8010f8c64080000418bf0ffce443bce0f86b5060000837cb510000f8496000000b800000000488b6c24604883c46885053e6ccdfcc5f877c30f1f4000458bda41ffcb413bcb0f862b0800004d63c242837c860c000f85140000008505126ccdfc458bd34183fa017dd3e9a1060000458955108bc2488b6c24604883c4688505ef6bcdfcc5f877c3453bc80f86d0070000418bc0ffc0418945104289748510b800000000488b6c24604883c4688505c06bcdfcc5f877c3448bd6e9330000000f1f80000000000f1f8000000000418bc2ffc8443bc80f862d0600004963f2837cb50c000f85140000008505846bcdfc448bd04183fa017dd5e9ee05000045895510b800000000488b6c24604883c46885055e6bcdfcc5f877c3412bf24863d648ffca83fe010f8c13000000483bca0f8e770500004183fb010f8c930600008bcf83fe010f8c09000000483bca0f86f90400004c897424504403c64d63f083fe010f8c120000004c3bf20f862a0600004585c00f84130500004c896c24484489542444498b57604d8b6f704181f8ffffff004c897424380f8369010000458bf041c1e602458d76174183e6f84d63f64d8bd64c03d24d3bd50f87480100004d895760410f188416c0000000410f18841600010000410f18841640010000410f188416800100004489420c48c70201000000c742086d0100f8458bf048894c2430448bee488944242848895c2420897c241c48896c241044894c240c44895c2408488bc24183fe014c8b5424380f8c670000004c8d58104d8d42f84d85c049c7c1000000000f8da40000004d8d42fc4d3bc80f8f11000000c5f9efc0c4817a7f048b4d8d41044d8bc84d8d42fe4d3bc80f8f11000000c5f9efc0c481f97e048b4d8d41024d8bc84d8bc249ffc84d3bc80f8f040000004789248b41b90000000049c7c0000000004c8b5c2428488b5c2420e921000000660f1f840000000000428b4c8b10490fafcb4c2bc1468944881049c1f82041ffc14183fd02b901000000410f4ccd413bc97fd6e90901000090c5f9efc0c4817e7f048b4d8d49084d3bc87eede944ffffff48894c2430448bee488944242848895c2420897c241c48896c241044894c240c44895c240848be680b00c007000000418bd0b900000000458bf0e809e73dff90e9d8feffff666690428b4c8b10490fafcb4c2bc146894488104963c949c1f8208b7c8b14490faffb4c2bc7448944881449c1f8208b7c8b18490faffb4c2bc7448944881849c1f8208b7c8b1c490faffb4c2bc7448944881c49c1f8208b7c8b20490faffb4c2bc7448944882049c1f8208b7c8b24490faffb4c2bc7448944882449c1f8208b7c8b28490faffb4c2bc7448944882849c1f8208b7c8b2c490faffb4c2bc7448944882c49c1f820458d4908418d4df8413bc90f8f4bffffffe91e000000660f1f440000428b4c8b10490fafcb4c2bc1468944881049c1f82041ffc1453be97fe38b4c24088bf9412bf94863ff48ffcf413bc90f8fb70000004963d14803fa413bc90f8fbc000000413bc90f8fd30000004d8bd0488b7c2410458bc141b900000000e9320000000f1f8000000000660f1f440000428b548310428b748f108bd2490fafd3482bf24c03d6468954801049c1fa2041ffc141ffc0413bc87fd64d85d20f85c3000000448b542444488b542448448972104489520c4c8bd049c1ea03448952184c8bea49c1ed0949ba00e01b17010000004788641500488bf0498bc34c8bea418bd64c8b742450e95bf9ffff8b54240c8bd2483bd70f873affffffe983000000488b542430483bd70f86b60000008b54241c413bd10f8729ffffffe98c0000004c3bd70f868b000000453bf10f871bffffffe9850000004c89742450498bd549ba480b31ba070000004d8bda41bae5e3fdff4589979c0200004d899fa8020000e8f9ecc4fe90488b54244841c7879c020000edf8fdff4d89a7a8020000e8dcecc4fe9041bae514feff488b54244848b9e80a31ba070000004589979c02000049898fa8020000e8b3ecc4fe9041bae50bfeffebd541bae503feffebcd41bae503feffebc541bae50bfeffebbd4c8bd84c89742450498bd549ba900631ba070000004d8bc241baedc5fdff4589979c0200004d8987a8020000e861ecc4fe904c8bd84c89742450498bd549ba600631ba070000004d8bc241bae5ccfdffebcc4c8bd84c89742450498bd549ba600631ba070000004d8bc241bae5ccfdffebac4c89742450498bd549bab80a31ba070000004d8bda41bae525feffe9f4feffff4c89742450498bd549ba480b31ba070000004d8bda41bae5ecfdffe9d4feffff498bd549bab80a31ba070000004d8bda41bae51dfeff4c8b742450e9b4feffff4c89742450498bd549bac00631ba070000004d8bda41baed28feffe994feffff41b9e569feff488bfd498bd545898f9c0200004d89a7a8020000e881ebc4fe9041bbed62feff498bd545899f9c0200004d89a7a8020000e864ebc4fe9041bbe55ffeffebe141b8edb8fdff4c8bd8498bd54589879c0200004d89a7a8020000e83cebc4fe904c89742450498bd549ba600631ba070000004d8bda41bae576feffe90ffeffff4c8bd8488bfd4c89742450498bd541c7879c020000eddcfdff4d89a7a8020000e8f6eac4fe904c8bd84c89742450498bd549ba600631ba070000004d8bc241bae5bffdffe95efeffff498bd549bab80a31ba070000004d8bda41bae51dfeff4c8b742450e9a6fdffff49bb000000000000000041bae540feff498bd5e98efdffff4c89742450498bd549bac00631ba070000004d8bda41baed28feffe96efdffff49bb000000000000000041baed49feff498bd5e956fdffff4c89742450498bd549ba600631ba070000004d8bda41bae576feffe936fdffff4c89742450498bd549ba480b31ba070000004d8bda41bae5e3fdffe916fdffff49bb000000000000000041bae530feff498bd5e9fefcffff41b9e550feffe965feffff41b9ed6ffeffe95afeffff41b8e5b5fdffe994feffffe8061a09ff90e8e0e8c4fe90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b92621e slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 58 12 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 58 [rax:0, r13:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 62 14 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [rax:0, r13:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 16 r11|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 70 18 r8|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 74 20 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 78 22 r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 86 24 rdx|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 91 26 rcx|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 97 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3  <||@
  Comment 101 30 CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 103 32 BRANCH trueDestinationProbability: 0.24201595755878824 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B31  <||@
  Comment 109 block B31 null  <||@
  Comment 109 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 294 rbx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD  <||@
  Comment 113 296 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 113 [rax:0, rbx:0, r13:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 298 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 119 300 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 125 block B33 null  <||@
  Comment 125 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 314 rdx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 130 316 CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 133 318 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B157  <||@
  Comment 139 block B34 null  <||@
  Comment 139 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 322 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 146 324 rcx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 151 326 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 328 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B156  <||@
  Comment 159 block B35 null  <||@
  Comment 159 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 332 rdx|DWORD = MOV [rax|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 163 334 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3  <||@
  Comment 167 336 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 169 338 rcx|QWORD = MOV [rbx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 173 340 rbp|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 176 342 rax|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 179 344 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 181 346 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD state [bci:0]  <||@
  Comment 181 [rbx:0, rbp:0, r13:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 181 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 184 348 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 187 350 BRANCH trueDestinationProbability: 0.5162453864221004 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 193 block B36 null  <||@
  Comment 193 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 354 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 196 356 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 199 358 JUMP ~[] destination: B36 -> B129  <||@
  Comment 199 block B129 null  <||@
  Comment 199 1294 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 199 1296 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 202 1298 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131  <||@
  Comment 208 block B131 null  <||@
  Comment 208 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 1318 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 211 1320 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 214 1322 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 217 1324 r11|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 220 1326 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 223 1328 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B150  <||@
  Comment 229 block B132 null  <||@
  Comment 229 1330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 1332 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 231 1334 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134  <||@
  Comment 237 block B134 null  <||@
  Comment 237 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 1354 r10|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 243 1356 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 246 1358 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B149  <||@
  Comment 252 block B135 null  <||@
  Comment 252 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 1362 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 258 1364 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 265 1366 JUMP ~[] destination: B135 -> B136  <||@
  Comment 270 block B137 loop 8 depth 1 header:203|LoopBegin  <||@
  Comment 270 1374 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 272 1376 r9|QWORD = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 277 1378 rbx|QWORD = SHL r9|QWORD y: 3 size: QWORD  <||@
  Comment 284 1380 r9|QWORD = SHL r9|QWORD size: QWORD  <||@
  Comment 287 1382 rbx|QWORD = ADD (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 290 1384 r11|QWORD = ADD (x: r11|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 293 1386 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: r11|QWORD) size: DWORD  <||@
  Comment 298 1388 r11|QWORD = SHR r11|QWORD y: 32 size: QWORD  <||@
  Comment 302 1390 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 305 1392 JUMP ~[] destination: B137 -> B136  <||@
  Comment 305 block B136 loop 8 depth 1 header:203|LoopBegin  <||@
  Comment 305 1368 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 305 1370 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 308 1372 BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 310 block B138 null  <||@
  Comment 310 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 1396 rdx|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 312 1398 CMP [rsi|QWORD[.] + r10|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 318 1400 BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B138 -> B140 falseDestination: B138 -> B148  <||@
  Comment 324 block B148 null  <||@
  Comment 324 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 1474 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 326 1476 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 335 12  <||@
  Comment 345 block B37 null  <||@
  Comment 345 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 362 rdx|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 350 364 rcx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 353 366 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 355 368 BRANCH trueDestinationProbability: 1.7340038148083925E-4 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B115  <||@
  Comment 361 block B115 null  <||@
  Comment 361 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 1186 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 364 1188 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 368 1190 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B115 -> B119 falseDestination: B115 -> B117  <||@
  Comment 374 block B117 null  <||@
  Comment 374 1196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 1198 rsi|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 376 1200 CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 379 1202 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B119 falseDestination: B117 -> B155  <||@
  Comment 385 block B119 null  <||@
  Comment 385 1208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 1210 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 389 1212 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B119 -> B124 falseDestination: B119 -> B121  <||@
  Comment 395 block B121 null  <||@
  Comment 395 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 1220 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 398 1222 rcx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 401 1224 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 404 1226 CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 407 1228 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B121 -> B122 falseDestination: B121 -> B154  <||@
  Comment 413 block B122 null  <||@
  Comment 413 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 1232 CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 416 1234 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B124 falseDestination: B122 -> B153  <||@
  Comment 422 block B124 null  <||@
  Comment 422 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 1242 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 424 1244 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 430 1246 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 437 1248 JUMP ~[] destination: B124 -> B125  <||@
  Comment 442 block B126 loop 7 depth 1 header:98|LoopBegin  <||@
  Comment 442 1256 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 1258 rsi|DWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 453 1260 rdx|QWORD = MOV [rbp|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 457 1262 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 459 1264 rsi|QWORD = IMUL (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 463 1266 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 466 1268 r10|QWORD = ADD (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 469 1270 MOV (x: [rbp|QWORD[.] + rcx|DWORD * 4 + 16], y: r10|QWORD) size: DWORD  <||@
  Comment 474 1272 r10|QWORD = SAR r10|QWORD y: 32 size: QWORD  <||@
  Comment 478 1274 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 480 1276 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 483 1278 JUMP ~[] destination: B126 -> B125  <||@
  Comment 483 block B125 loop 7 depth 1 header:98|LoopBegin  <||@
  Comment 483 1250 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 483 1252 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 486 1254 BRANCH trueDestinationProbability: 0.514809828340626 condition: > trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 488 block B127 null  <||@
  Comment 488 1280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 1282 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 491 1284 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B152  <||@
  Comment 497 block B128 null  <||@
  Comment 497 1286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 1288 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 500 1290 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 503 1292 JUMP ~[] destination: B128 -> B129  <||@
  Comment 508 block B1 null  <||@
  Comment 508 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 36 rbp|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 511 38 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 515 40 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B7 falseDestination: B1 -> B3  <||@
  Comment 521 block B3 null  <||@
  Comment 521 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 48 rax|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 524 50 rax|QWORD = DEC rax|QWORD size: QWORD  <||@
  Comment 527 52 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 530 54 CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 533 56 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B30  <||@
  Comment 539 block B4 null  <||@
  Comment 539 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 60 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 542 62 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 548 block B7 null  <||@
  Comment 548 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 86 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 554 88 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 561 90 JUMP ~[] destination: B7 -> B8  <||@
  Comment 566 block B9 loop 0 depth 1 header:266|LoopBegin  <||@
  Comment 566 98 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 576 100 rax|QWORD = MOV [rbp|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 581 102 rsi|QWORD = SHL rax|QWORD y: 3 size: QWORD  <||@
  Comment 588 104 rax|QWORD = SHL rax|QWORD size: QWORD  <||@
  Comment 591 106 rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 594 108 r10|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 597 110 MOV (x: [rbp|QWORD[.] + r11|DWORD * 4 + 16], y: r10|QWORD) size: DWORD  <||@
  Comment 602 112 r10|QWORD = SHR r10|QWORD y: 32 size: QWORD  <||@
  Comment 606 114 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 609 116 JUMP ~[] destination: B9 -> B8  <||@
  Comment 609 block B8 loop 0 depth 1 header:266|LoopBegin  <||@
  Comment 609 92 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 609 94 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 612 96 BRANCH trueDestinationProbability: 0.6326674577443074 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 614 block B10 null  <||@
  Comment 614 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 120 rsi|DWORD = MOV r10|QWORD size: DWORD  <||@
  Comment 617 122 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 619 124 BRANCH trueDestinationProbability: 0.8333333333333334 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B26  <||@
  Comment 625 block B11 null  <||@
  Comment 625 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 128 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 629 130 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 635 block B13 null  <||@
  Comment 635 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 635 144 rsi|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 640 146 CMP (x: r9|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 643 148 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25  <||@
  Comment 649 block B14 null  <||@
  Comment 649 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 152 CMP [rbp|QWORD[.] + rsi|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 654 154 BRANCH trueDestinationProbability: 0.08541926203716788 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B24  <||@
  Comment 660 block B24 null  <||@
  Comment 660 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 660 226 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 665 228 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 674 12  <||@
  Comment 684 block B142 loop 9 depth 1 header:240|LoopBegin  <||@
  Comment 684 1422 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 688 1424 r11|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 694 1426 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 697 1428 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B146  <||@
  Comment 703 block B143 loop 9 depth 1 header:240|LoopBegin  <||@
  Comment 703 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 1432 r8|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 706 1434 CMP [rsi|QWORD[.] + r8|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 712 1436 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145  <||@
  Comment 718 block B144 loop 9 depth 1 header:240|LoopBegin  <||@
  Comment 718 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 718 1440 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 330]  <||@
  Comment 718 [rsi:0, r13:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |-  |-  |-  |rax|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 718 {infopoint: SAFEPOINT}  <||@
  Comment 718 11  <||@
  Comment 724 1442 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 727 1444 JUMP ~[] destination: B144 -> B140  <||@
  Comment 727 block B140 loop 9 depth 1 header:240|LoopBegin  <||@
  Comment 727 1406 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 727 1408 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 731 1410 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142  <||@
  Comment 738 block B145 null  <||@
  Comment 738 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 738 1448 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 742 1450 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 744 1452 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 753 12  <||@
  Comment 763 block B26 null  <||@
  Comment 763 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 242 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 766 244 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 772 block B27 null  <||@
  Comment 772 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 772 248 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 777 250 MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 781 252 MOV (x: [rbp|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 786 254 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 791 256 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 800 12  <||@
  Comment 810 block B15 null  <||@
  Comment 810 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 158 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 813 160 JUMP ~[] destination: B15 -> B16  <||@
  Comment 818 block B18 loop 1 depth 1 header:302|LoopBegin  <||@
  Comment 818 176 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 178 rax|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 837 180 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 840 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B22  <||@
  Comment 846 block B19 loop 1 depth 1 header:302|LoopBegin  <||@
  Comment 846 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 186 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 849 188 CMP [rbp|QWORD[.] + rsi|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 854 190 BRANCH trueDestinationProbability: 0.24170562079580438 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 860 block B20 loop 1 depth 1 header:302|LoopBegin  <||@
  Comment 860 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 194 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:21, 82]  <||@
  Comment 860 [rbp:0, r13:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 860 {infopoint: SAFEPOINT}  <||@
  Comment 860 11  <||@
  Comment 866 196 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 869 198 JUMP ~[] destination: B20 -> B16  <||@
  Comment 869 block B16 loop 1 depth 1 header:302|LoopBegin  <||@
  Comment 869 162 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 869 164 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 873 166 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 880 block B21 null  <||@
  Comment 880 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 202 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 884 204 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 889 206 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 898 12  <||@
  Comment 908 block B38 null  <||@
  Comment 908 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 908 372 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 911 374 rdx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 914 376 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 917 378 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 920 380 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B38 -> B44 falseDestination: B38 -> B40  <||@
  Comment 926 block B40 null  <||@
  Comment 926 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 926 388 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 929 390 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B114  <||@
  Comment 935 block B41 null  <||@
  Comment 935 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 935 394 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 939 396 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B44  <||@
  Comment 945 block B44 null  <||@
  Comment 945 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 420 rcx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 947 422 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 950 424 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B48 falseDestination: B44 -> B46  <||@
  Comment 956 block B46 null  <||@
  Comment 956 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 956 434 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 959 436 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B48 falseDestination: B46 -> B113  <||@
  Comment 965 block B48 null  <||@
  Comment 965 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 428 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 970 446 r8|DWORD = ADD (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 973 448 r14|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 976 450 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 979 452 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B48 -> B54 falseDestination: B48 -> B50  <||@
  Comment 985 block B50 null  <||@
  Comment 985 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 462 CMP (x: r14|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 988 464 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B112  <||@
  Comment 994 block B51 null  <||@
  Comment 994 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 468 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 997 470 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B54  <||@
  Comment 1003 block B54 null  <||@
  Comment 1003 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1003 456 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1008 494 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1013 496 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1017 498 r13|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1021 500 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 1028 506 stack:56|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 1033 502 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B59  <||@
  Comment 1039 block B55 null  <||@
  Comment 1039 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1039 508 r14|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 1046 510 r14|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 1050 512 r14|DWORD = AND r14|DWORD y: -8 size: DWORD  <||@
  Comment 1054 514 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1057 516 r10|QWORD = ADD (x: r14|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1063 518 CMP (x: r10|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1066 520 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B59 falseDestination: B55 -> B57  <||@
  Comment 1072 block B57 null  <||@
  Comment 1072 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1072 544 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 1076 546 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1085 548 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1094 550 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1103 552 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1112 554 MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 1116 556 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 1123 558 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 1123 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 1130 560 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1130 562 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1133 564 stack:64|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1138 566 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1141 568 stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1146 570 stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1151 572 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1155 574 stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1160 576 stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1165 578 stack:104|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1170 580 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1173 582 JUMP ~[] destination: B57 -> B60  <||@
  Comment 1173 block B60 null  <||@
  Comment 1173 620 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1173 622 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1177 628 r10|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1182 624 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B60 -> B76 falseDestination: B60 -> B62  <||@
  Comment 1188 block B62 null  <||@
  Comment 1188 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1188 636 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1192 638 r8|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1196 640 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1199 646 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1206 642 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B62 -> B67 falseDestination: B62 -> B65  <||@
  Comment 1212 block B67 null  <||@
  Comment 1212 672 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1212 674 r8|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1216 676 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1219 678 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69  <||@
  Comment 1225 block B69 null  <||@
  Comment 1225 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1225 686 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1229 688 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1235 690 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1239 692 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1242 694 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1242 block B70 null  <||@
  Comment 1242 696 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1242 698 r8|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1246 700 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1249 702 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72  <||@
  Comment 1255 block B72 null  <||@
  Comment 1255 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1255 710 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 1259 712 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1265 714 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1269 716 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1272 718 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1272 block B73 null  <||@
  Comment 1272 720 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1272 722 r8|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1278 724 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1281 726 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B76 falseDestination: B73 -> B75  <||@
  Comment 1287 block B75 null  <||@
  Comment 1287 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1287 734 MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1291 736 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1291 block B76 null  <||@
  Comment 1291 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 740 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1297 742 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1304 744 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1309 746 rbx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 748 JUMP ~[] destination: B76 -> B77  <||@
  Comment 1319 block B78 loop 3 depth 1 header:131|LoopBegin  <||@
  Comment 1319 760 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1328 762 rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1333 764 rcx|QWORD = IMUL (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1337 766 r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 1340 768 MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD  <||@
  Comment 1345 770 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1349 772 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1352 774 JUMP ~[] destination: B78 -> B77  <||@
  Comment 1352 block B77 loop 3 depth 1 header:131|LoopBegin  <||@
  Comment 1352 750 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1352 752 CMP r13|DWORD y: 2 size: DWORD  <||@
  Comment 1356 754 rcx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r13|DWORD) condition: <  <||@
  Comment 1365 756 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1368 758 BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B80  <||@
  Comment 1375 block B65 loop 2 depth 1 header:1392|LoopBegin  <||@
  Comment 1375 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1376 658 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1380 660 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1386 662 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1390 664 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1393 666 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B67 falseDestination: B65 -> B65  <||@
  Comment 1400 block B59 null  <||@
  Comment 1400 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1400 588 stack:64|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1405 590 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1408 592 stack:72|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1413 594 stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1418 596 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1422 598 stack:96|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1427 600 stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1432 602 stack:104|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1437 608 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1437 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1447 610 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1450 612 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1455 614 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1458 616 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1458 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1463 [stack:16, stack:32, stack:72, stack:80]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 1464 618 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1469 block B81 loop 4 depth 1 header:974|LoopBegin  <||@
  Comment 1469 788 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1472 790 rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1477 792 rcx|QWORD = IMUL (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1481 794 r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 1484 796 MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD  <||@
  Comment 1489 798 rcx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 1492 800 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1496 802 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 20] size: DWORD  <||@
  Comment 1500 804 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1504 806 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1507 808 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 20], y: r8|QWORD) size: DWORD  <||@
  Comment 1512 810 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1516 812 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 24] size: DWORD  <||@
  Comment 1520 814 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1524 816 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1527 818 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 24], y: r8|QWORD) size: DWORD  <||@
  Comment 1532 820 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1536 822 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 28] size: DWORD  <||@
  Comment 1540 824 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1544 826 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1547 828 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 28], y: r8|QWORD) size: DWORD  <||@
  Comment 1552 830 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1556 832 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 32] size: DWORD  <||@
  Comment 1560 834 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1564 836 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1567 838 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 32], y: r8|QWORD) size: DWORD  <||@
  Comment 1572 840 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1576 842 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 36] size: DWORD  <||@
  Comment 1580 844 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1584 846 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1587 848 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 36], y: r8|QWORD) size: DWORD  <||@
  Comment 1592 850 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1596 852 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 40] size: DWORD  <||@
  Comment 1600 854 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1604 856 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1607 858 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 40], y: r8|QWORD) size: DWORD  <||@
  Comment 1612 860 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1616 862 rdi|QWORD = MOV [rbx|QWORD[.] + rcx|QWORD * 4 + 44] size: DWORD  <||@
  Comment 1620 864 rdi|QWORD = IMUL (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1624 866 r8|QWORD = SUB (x: r8|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1627 868 MOV (x: [rax|QWORD[.] + rcx|QWORD * 4 + 44], y: r8|QWORD) size: DWORD  <||@
  Comment 1632 870 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1636 872 r9|DWORD = LEA [r9|DWORD + 8] size: DWORD  <||@
  Comment 1640 874 JUMP ~[] destination: B81 -> B80  <||@
  Comment 1640 block B80 loop 4 depth 1 header:974|LoopBegin  <||@
  Comment 1640 780 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1640 782 rcx|DWORD = LEA [r13|DWORD - 8] size: DWORD  <||@
  Comment 1644 784 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1647 786 BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B83  <||@
  Comment 1658 block B84 loop 5 depth 1 header:1007|LoopBegin  <||@
  Comment 1658 886 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1664 888 rcx|QWORD = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1669 890 rcx|QWORD = IMUL (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1673 892 r8|QWORD = SUB (x: r8|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 1676 894 MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r8|QWORD) size: DWORD  <||@
  Comment 1681 896 r8|QWORD = SAR r8|QWORD y: 32 size: QWORD  <||@
  Comment 1685 898 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1688 900 JUMP ~[] destination: B84 -> B83  <||@
  Comment 1688 block B83 loop 5 depth 1 header:1007|LoopBegin  <||@
  Comment 1688 880 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1688 882 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1691 884 BRANCH trueDestinationProbability: 0.9545454545454546 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 1693 block B85 null  <||@
  Comment 1693 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1693 904 rcx|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 1697 906 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1702 908 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1705 910 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 1708 912 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1711 914 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B90  <||@
  Comment 1717 block B90 null  <||@
  Comment 1717 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1717 944 rdx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 1720 946 rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1723 948 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1726 950 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B97  <||@
  Comment 1732 block B97 null  <||@
  Comment 1732 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1732 994 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1735 996 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B105  <||@
  Comment 1741 block B105 null  <||@
  Comment 1741 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1741 1046 r10|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1744 1048 rdi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1749 1050 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1752 1052 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1758 1054 JUMP ~[] destination: B105 -> B106  <||@
  Comment 1763 block B107 loop 6 depth 1 header:157|LoopBegin  <||@
  Comment 1763 1062 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1776 1064 rdx|DWORD = MOV [rbx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1781 1066 rsi|QWORD = MOV [rdi|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1786 1068 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 1788 1070 rdx|QWORD = IMUL (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1792 1072 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 1795 1074 r10|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1798 1076 MOV (x: [rax|QWORD[.] + r8|DWORD * 4 + 16], y: r10|QWORD) size: DWORD  <||@
  Comment 1803 1078 r10|QWORD = SAR r10|QWORD y: 32 size: QWORD  <||@
  Comment 1807 1080 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1810 1082 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 1813 1084 JUMP ~[] destination: B107 -> B106  <||@
  Comment 1813 block B106 loop 6 depth 1 header:157|LoopBegin  <||@
  Comment 1813 1056 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1813 1058 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1816 1060 BRANCH trueDestinationProbability: 0.6666666666666667 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108  <||@
  Comment 1818 block B108 null  <||@
  Comment 1818 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 1088 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1821 1090 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110  <||@
  Comment 1827 block B109 null  <||@
  Comment 1827 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1827 1094 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1832 1096 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1837 1098 MOV (x: [rdx|QWORD[.] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 1841 1100 MOV (x: [rdx|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1845 1102 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b4952e3 encoding: base: 0 shift: 3  <||@
  Comment 1852 1104 MOV (x: [rdx|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1856 1106 r13|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1863 1108 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1873 1110 MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1878 1112 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1881 1114 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1884 1116 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1887 1118 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1890 1120 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 1122 JUMP ~[] destination: B109 -> B129  <||@
  Comment 1900 block B86 null  <||@
  Comment 1900 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 918 rdx|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 1904 920 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 1906 922 CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1909 924 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B90 falseDestination: B86 -> B88  <||@
  Comment 1920 block B91 null  <||@
  Comment 1920 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1920 954 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1925 956 CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1928 958 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95  <||@
  Comment 1934 block B92 null  <||@
  Comment 1934 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1934 962 rdx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1938 964 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1941 966 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B97 falseDestination: B92 -> B94  <||@
  Comment 1952 block B98 null  <||@
  Comment 1952 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1952 1000 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1955 1002 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B102  <||@
  Comment 1961 block B99 null  <||@
  Comment 1961 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 1006 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1964 1008 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B105 falseDestination: B99 -> B101  <||@
  Comment 1975 block B153 null  <||@
  Comment 1975 1534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 1536 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1980 1538 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1983 1540 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116]  <||@
  Comment 1983 {Object[d.a@1171729116]}  <||@
  Comment 1993 1542 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1996 1544 r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5]  <||@
  Comment 2002 1548 JUMP ~[] destination: B153 -> B158  <||@
  Comment 2002 block B158 null  <||@
  Comment 2002 1602 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2002 1604 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2009 1606 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2016 1608 DEOPT info [bci:0]  <||@
  Comment 2016 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2021 [rdx:0, r14:0]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:564) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2022 block B110 null  <||@
  Comment 2022 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2022 1126 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2027 1128 MOV [r15|QWORD + 668] y: -132883 size: DWORD  <||@
  Comment 2038 1130 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2045 1132 DEOPT info [bci:202, 141]  <||@
  Comment 2045 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2050 [rax:0, rdx:0, rbx:0, rdi:0, stack:80]at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1314) [bci: 202, duringCall: false, rethrow: false]
              |0             |1          |2  |3                  |4          |5  |6          |7             |8         |9         |10            |11        |12           
     locals:  |rdx|QWORD[.]  |r11|QWORD  |-  |stack:32|QWORD[.]  |r10|QWORD  |-  |r13|DWORD  |rax|QWORD[.]  |r8|DWORD  |r8|DWORD  |rbx|QWORD[.]  |r9|DWORD  |rdi|QWORD[.] 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2051 block B88 null  <||@
  Comment 2051 930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2051 932 r10|DWORD = MOVE input: int[-125723|0xfffffffffffe14e5]  <||@
  Comment 2057 936 JUMP ~[] destination: B88 -> B103  <||@
  Comment 2057 block B103 null  <||@
  Comment 2057 1030 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2057 1026 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 1032 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1474612814]  <||@
  Comment 2062 {Object[d.a@1474612814]}  <||@
  Comment 2072 1034 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2079 1036 MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 2086 1038 DEOPT info [bci:136, 141]  <||@
  Comment 2086 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2091 [rax:0, rdx:0, rbx:0, stack:80]at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1307) [bci: 136, duringCall: false, rethrow: false]
              |0             |1          |2  |3                  |4         |5  |6          |7             |8         |9         |10            |11  |12 
     locals:  |rdx|QWORD[.]  |r11|QWORD  |-  |stack:32|QWORD[.]  |r8|QWORD  |-  |r13|DWORD  |rax|QWORD[.]  |r9|DWORD  |r9|DWORD  |rbx|QWORD[.]  |-   |-  
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2092 block B94 null  <||@
  Comment 2092 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2092 974 r10|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5]  <||@
  Comment 2098 978 JUMP ~[] destination: B94 -> B103  <||@
  Comment 2100 block B102 null  <||@
  Comment 2100 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2100 1024 r10|DWORD = MOVE input: int[-130075|0xfffffffffffe03e5]  <||@
  Comment 2106 1028 JUMP ~[] destination: B102 -> B103  <||@
  Comment 2108 block B101 null  <||@
  Comment 2108 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2108 1016 r10|DWORD = MOVE input: int[-130075|0xfffffffffffe03e5]  <||@
  Comment 2114 1020 JUMP ~[] destination: B101 -> B103  <||@
  Comment 2116 block B95 null  <||@
  Comment 2116 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2116 982 r10|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5]  <||@
  Comment 2122 986 JUMP ~[] destination: B95 -> B103  <||@
  Comment 2124 block B130 null  <||@
  Comment 2124 1300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2124 1302 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2127 1304 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2132 1306 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2135 1308 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731488164]  <||@
  Comment 2135 {Object[d.a@731488164]}  <||@
  Comment 2145 1310 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 1312 r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed]  <||@
  Comment 2154 1314 JUMP ~[] destination: B130 -> B151  <||@
  Comment 2154 block B151 null  <||@
  Comment 2154 1510 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2154 1512 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2161 1514 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 2168 1516 DEOPT info [bci:144]  <||@
  Comment 2168 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2173 [rdx:0, stack:80]at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 144, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-  
     stack:   |long[0|0x0]   |-                  |   |   |           |   |   |   |   |   |    |    |    |    |     <||@
  Comment 2174 block B150 null  <||@
  Comment 2174 1494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2174 1496 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2177 1498 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2182 1500 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2185 1502 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2185 {Object[d.a@1652644631]}  <||@
  Comment 2195 1504 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2198 1506 r10|DWORD = MOVE input: int[-144155|0xfffffffffffdcce5]  <||@
  Comment 2204 1508 JUMP ~[] destination: B150 -> B151  <||@
  Comment 2206 block B133 null  <||@
  Comment 2206 1336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2206 1338 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2209 1340 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2214 1342 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2217 1344 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2217 {Object[d.a@1652644631]}  <||@
  Comment 2227 1346 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2230 1348 r10|DWORD = MOVE input: int[-144155|0xfffffffffffdcce5]  <||@
  Comment 2236 1350 JUMP ~[] destination: B133 -> B151  <||@
  Comment 2238 block B113 null  <||@
  Comment 2238 1152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2238 1154 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2243 1156 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2246 1158 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184]  <||@
  Comment 2246 {Object[d.a@1070949184]}  <||@
  Comment 2256 1160 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2259 1162 r10|DWORD = MOVE input: int[-121371|0xfffffffffffe25e5]  <||@
  Comment 2265 1166 JUMP ~[] destination: B113 -> B158  <||@
  Comment 2270 block B155 null  <||@
  Comment 2270 1566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2270 1568 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2275 1570 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2278 1572 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116]  <||@
  Comment 2278 {Object[d.a@1171729116]}  <||@
  Comment 2288 1574 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2291 1576 r10|DWORD = MOVE input: int[-135963|0xfffffffffffdece5]  <||@
  Comment 2297 1580 JUMP ~[] destination: B155 -> B158  <||@
  Comment 2302 block B52 null  <||@
  Comment 2302 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 474 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2305 476 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184]  <||@
  Comment 2305 {Object[d.a@1070949184]}  <||@
  Comment 2315 478 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 480 r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5]  <||@
  Comment 2324 482 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2329 484 JUMP ~[] destination: B52 -> B158  <||@
  Comment 2334 block B114 null  <||@
  Comment 2334 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2334 1170 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2339 1172 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2342 1174 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964]  <||@
  Comment 2342 {Object[d.a@1592099964]}  <||@
  Comment 2352 1176 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2355 1178 r10|DWORD = MOVE input: int[-120595|0xfffffffffffe28ed]  <||@
  Comment 2361 1182 JUMP ~[] destination: B114 -> B158  <||@
  Comment 2366 block B25 null  <||@
  Comment 2366 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2366 232 r9|DWORD = MOVE input: int[-103963|0xfffffffffffe69e5]  <||@
  Comment 2372 238 JUMP ~[] destination: B25 -> B29  <||@
  Comment 2372 block B29 null  <||@
  Comment 2372 268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2372 136 rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2375 138 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2378 270 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 2385 272 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2392 274 DEOPT info [bci:5, 50]  <||@
  Comment 2392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2397 [rdx:0, rdi:0]at sun.misc.FDBigInteger.multAndCarryBy10(FDBigInteger.java:1345) [bci: 5, duringCall: false, rethrow: false]
              |0             |1         |2             |3          |4  |5          |6  |7 
     locals:  |rdi|QWORD[.]  |r8|DWORD  |rdi|QWORD[.]  |r10|QWORD  |-  |r11|DWORD  |-  |- 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:573) [bci: 50, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2398 block B17 null  <||@
  Comment 2398 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2398 170 r11|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed]  <||@
  Comment 2404 174 JUMP ~[] destination: B17 -> B23  <||@
  Comment 2404 block B23 null  <||@
  Comment 2404 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2404 172 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2407 218 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2414 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2421 222 DEOPT info [bci:21, 82]  <||@
  Comment 2421 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2426 [rdx:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdx|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:577) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2427 block B22 null  <||@
  Comment 2427 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2427 210 r11|DWORD = MOVE input: int[-106523|0xfffffffffffe5fe5]  <||@
  Comment 2433 214 JUMP ~[] destination: B22 -> B23  <||@
  Comment 2435 block B141 null  <||@
  Comment 2435 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2435 1414 r8|DWORD = MOVE input: int[-149267|0xfffffffffffdb8ed]  <||@
  Comment 2441 1420 JUMP ~[] destination: B141 -> B147  <||@
  Comment 2441 block B147 null  <||@
  Comment 2441 1464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2441 1416 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2444 1418 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2447 1466 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 2454 1468 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2461 1470 DEOPT info [bci:21, 330]  <||@
  Comment 2461 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2466 [rdx:0]at sun.misc.FDBigInteger.trimLeadingZeros(FDBigInteger.java:373) [bci: 21, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdx|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:624) [bci: 330, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |-  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2467 block B5 null  <||@
  Comment 2467 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2467 66 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2472 68 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2475 70 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2475 {Object[d.a@1652644631]}  <||@
  Comment 2485 72 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2488 74 r10|DWORD = MOVE input: int[-100635|0xfffffffffffe76e5]  <||@
  Comment 2494 78 JUMP ~[] destination: B5 -> B158  <||@
  Comment 2499 block B152 null  <||@
  Comment 2499 1518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2499 1520 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2502 1522 rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2505 1524 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2510 1526 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2513 1528 MOV [r15|QWORD + 668] y: -140051 size: DWORD  <||@
  Comment 2524 1530 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2531 1532 DEOPT info [bci:44, 141]  <||@
  Comment 2531 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2536 [rdx:0, rbx:0, rdi:0, stack:80]at sun.misc.FDBigInteger.multDiffMe(FDBigInteger.java:1296) [bci: 44, duringCall: false, rethrow: false]
              |0  |1          |2  |3                  |4          |5  |6  |7             |8             |9         |10         |11  |12 
     locals:  |-  |r11|QWORD  |-  |stack:32|QWORD[.]  |r10|QWORD  |-  |-  |rbx|QWORD[.]  |rdi|QWORD[.]  |r9|DWORD  |rcx|DWORD  |-   |-  
  at sun.misc.FDBigInteger.quoRemIteration(FDBigInteger.java:587) [bci: 141, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4          |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rdx|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |r11|QWORD  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 2537 block B149 null  <||@
  Comment 2537 1478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2537 1480 r11|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2540 1482 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2545 1484 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2548 1486 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2548 {Object[d.a@1652644631]}  <||@
  Comment 2558 1488 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2561 1490 r10|DWORD = MOVE input: int[-147483|0xfffffffffffdbfe5]  <||@
  Comment 2567 1492 JUMP ~[] destination: B149 -> B151  <||@
  Comment 2572 block B112 null  <||@
  Comment 2572 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2572 1140 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2575 1142 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1070949184]  <||@
  Comment 2575 {Object[d.a@1070949184]}  <||@
  Comment 2585 1144 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2588 1146 r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5]  <||@
  Comment 2594 1148 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2599 1150 JUMP ~[] destination: B112 -> B158  <||@
  Comment 2604 block B157 null  <||@
  Comment 2604 1592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2604 1594 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2614 1596 r10|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5]  <||@
  Comment 2620 1598 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2623 1600 JUMP ~[] destination: B157 -> B158  <||@
  Comment 2628 block B42 null  <||@
  Comment 2628 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2628 400 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2633 402 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2636 404 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1592099964]  <||@
  Comment 2636 {Object[d.a@1592099964]}  <||@
  Comment 2646 406 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2649 408 r10|DWORD = MOVE input: int[-120595|0xfffffffffffe28ed]  <||@
  Comment 2655 412 JUMP ~[] destination: B42 -> B158  <||@
  Comment 2660 block B32 null  <||@
  Comment 2660 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2660 304 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2670 306 r10|DWORD = MOVE input: int[-112147|0xfffffffffffe49ed]  <||@
  Comment 2676 308 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2679 310 JUMP ~[] destination: B32 -> B158  <||@
  Comment 2684 block B30 null  <||@
  Comment 2684 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2684 278 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2689 280 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2692 282 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1652644631]  <||@
  Comment 2692 {Object[d.a@1652644631]}  <||@
  Comment 2702 284 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2705 286 r10|DWORD = MOVE input: int[-100635|0xfffffffffffe76e5]  <||@
  Comment 2711 290 JUMP ~[] destination: B30 -> B158  <||@
  Comment 2716 block B154 null  <||@
  Comment 2716 1550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 1552 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2721 1554 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2724 1556 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1171729116]  <||@
  Comment 2724 {Object[d.a@1171729116]}  <||@
  Comment 2734 1558 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2737 1560 r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5]  <||@
  Comment 2743 1564 JUMP ~[] destination: B154 -> B158  <||@
  Comment 2748 block B156 null  <||@
  Comment 2748 1582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2748 1584 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2758 1586 r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5]  <||@
  Comment 2764 1588 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2767 1590 JUMP ~[] destination: B156 -> B158  <||@
  Comment 2772 block B28 null  <||@
  Comment 2772 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2772 260 r9|DWORD = MOVE input: int[-110363|0xfffffffffffe50e5]  <||@
  Comment 2778 266 JUMP ~[] destination: B28 -> B29  <||@
  Comment 2783 block B12 null  <||@
  Comment 2783 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2783 134 r9|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed]  <||@
  Comment 2789 140 JUMP ~[] destination: B12 -> B29  <||@
  Comment 2794 block B146 null  <||@
  Comment 2794 1454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2794 1456 r8|DWORD = MOVE input: int[-150043|0xfffffffffffdb5e5]  <||@
  Comment 2800 1462 JUMP ~[] destination: B146 -> B147  <||@
  Comment 2805 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2805 4  <||@
  Comment 2811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2811 5  <||@
  HexCodeFile>>> <|@
end_nmethod
