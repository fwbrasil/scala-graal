begin_compilation
  name " HotSpotCompilation-9346[org.graalvm.collections.EconomicMapImpl.initFrom(Object)]"
  method "HotSpotCompilation-9346[org.graalvm.collections.EconomicMapImpl.initFrom(Object)]"
  date 1527005204608
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B50" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v662  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v674 v677 v683 v679 ?18 ?145 ?145 v685 ?36 j346 j463 j528 v731 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v687 ?36 v680 v681 ?145 ?18 v675 v676 v678 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 181
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v252 v662 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v687 
=== Succesors ===
next: v260 
=== Usages ===
v536 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v687 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v662 
y: v535 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v662 y: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v536 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v257 
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v536 #trueSuccessor: v258 #falseSuccessor: v257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a663 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a663  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v674 
=== Succesors ===
next: a664 
=== Usages ===
v169 
=== Predecessor ===
v258 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v674 #next: a664  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 17]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
=== Succesors ===
next: v192 
=== Usages ===
v169 
=== Predecessor ===
a663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a663 
y: a664 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a663 y: a664  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
a664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v189 #falseSuccessor: v191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: i665 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i665  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
=== Succesors ===
next: v92 
=== Usages ===
v92 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v676 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
value: i665 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i666 
=== Usages ===
=== Predecessor ===
i665 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v677 value: i665 stateAfter: - lastLocationAccess: - #next: i666  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
=== Succesors ===
next: v97 
=== Usages ===
v97 
=== Predecessor ===
v92 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
value: i666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a667 
=== Usages ===
=== Predecessor ===
i666 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v679 value: i666 stateAfter: - lastLocationAccess: - #next: a667  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
=== Succesors ===
next: a668 
=== Usages ===
v174 a151 a660 v682 v730 
=== Predecessor ===
v97 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 #next: a668  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
=== Succesors ===
next: v24 
=== Usages ===
a101 v170 v684 v700 
=== Predecessor ===
a667 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v680 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
stamp: void
=== Inputs ===
value: a668 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a668  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
stamp: void
=== Inputs ===
value: a667 
=== Succesors ===
=== Usages ===
v68 v45 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a667  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 v352 v532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j348 j425 j432 j464 j529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 j447 v713 v725 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a491 a299 v420 v445 a387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a299 a491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?18 <|@
d <@d|@=== Debug Properties ===
bci: 39
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 187
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a2 
=== Succesors ===
=== Usages ===
a387 a299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a2  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v330 v514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 v409 j434 v440 v511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i307 i394 i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i277 i373 i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 v476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 v61 v74 v75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
stamp: void
trueSuccessorProbability: 0.4350688210652304
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
a668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601509123039625491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
stamp: void
trueSuccessorProbability: 0.7916362574806598
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v43 #falseSuccessor: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4599876071557176989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: i669 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i669  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a667 
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i669 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
=== Succesors ===
next: j278 
=== Usages ===
v326 j344 v284 a299 i307 
=== Predecessor ===
v44 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 #next: j278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j323 
=== Usages ===
v688 v689 
=== Predecessor ===
i669 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j323  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
j323 v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
=== Succesors ===
next: j324 
=== Usages ===
j282 v690 v691 a298 v696 v692 v693 v694 v695 
=== Predecessor ===
j278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v688 #next: j324  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
j324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v689 
=== Succesors ===
next: v287 
=== Usages ===
v288 
=== Predecessor ===
j323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v689 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i669 
y: i283 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i669 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v284 
=== Succesors ===
trueSuccessor: v286 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
j324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v284 #trueSuccessor: v286 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4590543405999979534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i32
=== Inputs ===
x: i669 
y: i306 
=== Succesors ===
=== Usages ===
i277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i669 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i307 
y: i276 
=== Succesors ===
=== Usages ===
j281 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i307 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i277 
=== Succesors ===
=== Usages ===
j282 v692 v693 v694 v695 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i277  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
x: j281 
y: j323 
=== Succesors ===
=== Usages ===
v288 v325 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j281 y: j323  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j324 
y: j282 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j324 y: j282  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v288 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v288 #trueSuccessor: v293 #falseSuccessor: v292  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4560664324502694158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4590484616146611388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
value: j282 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v688 value: j282 stateAfter: - lastLocationAccess: - #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j281 
index: j323 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v692 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v692 #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j281 
index: j323 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v693 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v693 #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j281 
index: j323 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v694 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v694 #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j281 
index: j323 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v695 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v695 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v690 
value: i669 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v690 value: i669 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
value: j275 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 value: j275 stateAfter: - lastLocationAccess: - #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v696 
value: v537 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v696 value: v537 stateAfter: - lastLocationAccess: - #next: v297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j323 
=== Succesors ===
next: v300 
=== Usages ===
a303 
=== Predecessor ===
v297 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j323 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
a298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576379386524888644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576849705351833813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v289 v291 
=== Succesors ===
next: a299 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v289 v291 #next: a299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a299 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?18 
arguments: v274 i669 i109 
=== Succesors ===
next: v302 
=== Usages ===
a303 
=== Predecessor ===
v290 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?18 arguments: v274 i669 i109 #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
a299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v301 
values: a298 a299 
=== Succesors ===
=== Usages ===
j342 a123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: a298 a299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v300 v302 
=== Succesors ===
next: j338 
=== Usages ===
a303 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v300 v302 #next: j338  <|@  <|@
f <@~|@floating>@ <|@
tid a660 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a667 
=== Succesors ===
=== Usages ===
j338 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
object: a660 
=== Succesors ===
next: j342 
=== Usages ===
v697 
=== Predecessor ===
v301 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a660 #next: j342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
object: a303 
=== Succesors ===
next: v345 
=== Usages ===
v698 
=== Predecessor ===
j338 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a303 #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j338 
index: - 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j338 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j342 
index: - 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j342 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i669 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: byteDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v697 v698 j344 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
j342 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v697 v698 j344 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
op: Compress
stamp: n! -
=== Inputs ===
value: a303 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
value: a123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j346 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v683 value: a123 stateAfter: - lastLocationAccess: - #next: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v352 
=== Usages ===
j348 
=== Predecessor ===
v125 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j346 
y: i347 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j346 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: j351 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
value: i120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
j346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v699 value: i120 stateAfter: - lastLocationAccess: - #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: i670 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i670  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a668 
=== Succesors ===
=== Usages ===
i670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i670 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 14]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
=== Succesors ===
next: v671 
=== Usages ===
a387 j458 v408 i428 v420 i372 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a668 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v700 
=== Succesors ===
next: j374 
=== Usages ===
v357 v412 
=== Predecessor ===
i670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v700 #next: j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j405 
=== Usages ===
v701 v702 
=== Predecessor ===
v671 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j405  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j405 v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v701 
=== Succesors ===
next: j406 
=== Usages ===
j378 v703 v704 a386 v709 v705 v706 v707 v708 
=== Predecessor ===
j374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v701 #next: j406  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v702 
=== Succesors ===
next: v382 
=== Usages ===
v379 
=== Predecessor ===
j405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v702 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i372 i429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i670 
y: i371 
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i670 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i372 
y: i306 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i372 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i394 
y: i276 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i394 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i373 
=== Succesors ===
=== Usages ===
j378 v705 v706 v707 v708 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i373  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
x: j377 
y: j405 
=== Succesors ===
=== Usages ===
v379 v407 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j377 y: j405  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j406 
y: j378 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j406 y: j378  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
j406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v380 #falseSuccessor: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573163235201850893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a387  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v671 
=== Succesors ===
=== Usages ===
a387 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?18 
arguments: v357 i670 i109 
=== Succesors ===
next: v390 
=== Usages ===
a391 
=== Predecessor ===
v380 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?18 arguments: v357 i670 i109 #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
a387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603212782762218810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v701 
value: j378 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v701 value: j378 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: j405 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: v705 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v705 #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: j405 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: v706 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v706 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: j405 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: v707 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v707 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: j405 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: v708 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v708 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
value: i670 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v703 value: i670 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
value: j275 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v704 value: j275 stateAfter: - lastLocationAccess: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v709 
value: v671 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v709 value: v671 stateAfter: - lastLocationAccess: - #next: v385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a386 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j405 
=== Succesors ===
next: v388 
=== Usages ===
a391 
=== Predecessor ===
v385 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j405 #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
a386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v389 
values: a386 a387 
=== Succesors ===
=== Usages ===
v686 a244 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: a386 a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v388 v390 
=== Succesors ===
next: v601 
=== Usages ===
a391 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v388 v390 #next: v601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v549 
=== Usages ===
j603 
=== Predecessor ===
v389 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a391 
index: - 
=== Succesors ===
=== Usages ===
j603 j426 j424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a391 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i670 
=== Succesors ===
=== Usages ===
v459 j644 j631 j637 j641 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i670  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i670 
y: i109 
=== Succesors ===
=== Usages ===
v423 v549 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i670 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid j438 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j439 j644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v547 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v547 #falseSuccessor: v548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid j603 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v601 
address: v686 
=== Succesors ===
=== Usages ===
v726 v727 v728 v729 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v601 address: v686  <|@  <|@
f <@~|@floating>@ <|@
tid j630 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j631 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j458 
y: j630 
=== Succesors ===
=== Usages ===
v632 v634 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j458 y: j630  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j624 v632 j618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j631 
y: j310 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j631 y: j310  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v550 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v550 #falseSuccessor: v551  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B48" 
    successors "B21" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j624 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v554 
values: j310 j629 
=== Succesors ===
=== Usages ===
v729 j629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v554 values: j310 j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v553 
=== Succesors ===
next: v655 
=== Usages ===
j624 v558 v559 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v553 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j603 
index: j624 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j603 index: j624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v729 
value: v656 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v729 value: v656 stateAfter: - lastLocationAccess: - #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid j629 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j624 
y: j270 
=== Succesors ===
=== Usages ===
j618 j624 v634 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j624 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j631 
y: j629 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j631 y: j629  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v634 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v560 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v634 #trueSuccessor: v558 #falseSuccessor: v560  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v554 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v554 #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j618 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v563 
values: j310 j629 
=== Succesors ===
=== Usages ===
v728 j623 j611 v638 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v563 values: j310 j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v562 v564 
=== Succesors ===
next: v582 
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v562 v564 #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j637 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j458 
y: j636 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j458 y: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j637 
y: j618 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j637 y: j618  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v638 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v638 #trueSuccessor: v581 #falseSuccessor: v580  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j603 
index: j618 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j603 index: j618  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v728 
value: v659 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v728 value: v659 stateAfter: - lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid j606 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j618 
y: j606 
=== Succesors ===
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j618 y: j606  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j611 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v574 
values: j623 j618 
=== Succesors ===
=== Usages ===
v727 j617 j604 v642 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v574 values: j623 j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v573 v585 
=== Succesors ===
next: v588 
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v573 v585 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid j640 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j641 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j458 
y: j640 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j458 y: j640  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j641 
y: j611 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j641 y: j611  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v642 
=== Succesors ===
trueSuccessor: v587 
falseSuccessor: v586 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v642 #trueSuccessor: v587 #falseSuccessor: v586  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j603 
index: j611 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j603 index: j611  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v727 
value: v658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v727 value: v658 stateAfter: - lastLocationAccess: - #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid j616 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j617 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j617 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j611 
y: j616 
=== Succesors ===
=== Usages ===
j604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j611 y: j616  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j604 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v577 
values: j617 j611 
=== Succesors ===
=== Usages ===
v726 v645 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v577 values: j617 j611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v576 v591 
=== Succesors ===
next: v594 
=== Usages ===
j604 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v576 v591 #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j458 
y: j438 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j458 y: j438  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j644 
y: j604 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j644 y: j604  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v593 #falseSuccessor: v592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j603 
index: j604 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j603 index: j604  <|@  <|@
f <@~|@floating>@ <|@
tid a657 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
value: a657 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v726 value: a657 stateAfter: - lastLocationAccess: - #next: v579  <|@  <|@
f <@*|@fixed>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B16" "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v566 v579 v597 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v566 v579 v597 #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v421 #falseSuccessor: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: j424 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v686 
=== Succesors ===
next: j426 
=== Usages ===
j425 
=== Predecessor ===
v422 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v686 #next: j426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v686 
=== Succesors ===
next: v435 
=== Usages ===
j431 
=== Predecessor ===
j424 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v686 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i670 
y: i427 
=== Succesors ===
=== Usages ===
i429 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i670 y: i427  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i428 
y: i371 
=== Succesors ===
=== Usages ===
j430 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i428 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i429 
=== Succesors ===
=== Usages ===
j431 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i429  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
x: j426 
y: j430 
=== Succesors ===
=== Usages ===
j432 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j426 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j431 
y: i347 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j431 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j424 
y: i347 
=== Succesors ===
=== Usages ===
j433 j447 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j424 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j432 
y: j425 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j432 y: j425  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j433 
y: j275 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j433 y: j275  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
j426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B47" 
    successors "B35" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263667239157622
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v436 
values: j434 j439 
=== Succesors ===
=== Usages ===
j439 v440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v436 values: j434 j439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v435 
=== Succesors ===
next: v443 
=== Usages ===
j437 v441 v446 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v435 #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j437 
y: j275 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j437 y: j275  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v441 #falseSuccessor: v442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v436 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v436 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B46" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v449 v450 
=== Succesors ===
next: a244 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v449 v450 #next: a244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a391 
=== Succesors ===
next: j452 
=== Usages ===
j456 ?145 a147 v712 
=== Predecessor ===
v448 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a391 #next: j452  <|@  <|@
f <@~|@floating>@ <|@
tid a101 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a668 
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
object: a101 
=== Succesors ===
next: j456 
=== Usages ===
v710 
=== Predecessor ===
a244 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a101 #next: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
object: a244 
=== Succesors ===
next: v459 
=== Usages ===
v711 
=== Predecessor ===
j452 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a244 #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j456 
index: - 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointUninitArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v710 v711 j458 
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
j456 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v710 v711 j458 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a244 
index: - 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v712 
=== Succesors ===
next: v196 
=== Usages ===
v540 
=== Predecessor ===
v459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v712 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v672 
y: v539 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v672 y: v539  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v193 #falseSuccessor: v195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a147 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
op: Compress
stamp: n! -
=== Inputs ===
value: a244 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
value: a147 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j463 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v685 value: a147 stateAfter: - lastLocationAccess: - #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v467 
=== Usages ===
j464 
=== Predecessor ===
v149 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j463 
y: i347 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j463 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j464 
index: j351 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
value: i120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
j463 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v713 value: i120 stateAfter: - lastLocationAccess: - #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
stamp: void
trueSuccessorProbability: 0.7916362574806598
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4601728019295446344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: i673 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i673  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a667 
=== Succesors ===
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v730 
=== Succesors ===
next: j471 
=== Usages ===
v510 j526 v476 a491 i498 
=== Predecessor ===
v67 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v730 #next: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
v714 v715 
=== Predecessor ===
i673 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j507  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j471 
index: - 
=== Succesors ===
=== Usages ===
j507 v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j471 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
=== Succesors ===
next: j508 
=== Usages ===
j475 v716 v717 a490 v722 v718 v719 v720 v721 
=== Predecessor ===
j471 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v714 #next: j508  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j471 
index: - 
=== Succesors ===
=== Usages ===
j508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j471 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
=== Succesors ===
next: v479 
=== Usages ===
v480 
=== Predecessor ===
j507 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v715 #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i673 
y: i283 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i673 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
j508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v478 #falseSuccessor: v477  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4592298206299964085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i498 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i32
=== Inputs ===
x: i673 
y: i306 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i673 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i498 
y: i276 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i498 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i470 
=== Succesors ===
=== Usages ===
j475 v718 v719 v720 v721 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
x: j474 
y: j507 
=== Succesors ===
=== Usages ===
v480 v509 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j474 y: j507  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j508 
y: j475 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j508 y: j475  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v485 #falseSuccessor: v484  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4562528445706493417
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592221868443596093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
value: j475 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v714 value: j475 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j474 
index: j507 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v718 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v718 #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j474 
index: j507 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v719 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v719 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j474 
index: j507 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v720 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v720 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j474 
index: j507 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v721 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v721 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
value: i673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v716 value: i673 stateAfter: - lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
value: j275 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v717 value: j275 stateAfter: - lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
value: v537 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v722 value: v537 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a490 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j507 
=== Succesors ===
next: v492 
=== Usages ===
a495 
=== Predecessor ===
v489 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j507 #next: v492  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
a490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577939209013763800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4578549911864707733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v481 v483 
=== Succesors ===
next: a491 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v481 v483 #next: a491  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 60
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 190
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a2 
=== Succesors ===
=== Usages ===
a491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a491 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?36 
arguments: v274 i673 i109 
=== Succesors ===
next: v494 
=== Usages ===
a495 
=== Predecessor ===
v482 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?36 arguments: v274 i673 i109 #next: v494  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
a491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v493 
values: a490 a491 
=== Succesors ===
=== Usages ===
j524 a167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v493 values: a490 a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v492 v494 
=== Succesors ===
next: j522 
=== Usages ===
a495 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v492 v494 #next: j522  <|@  <|@
f <@~|@floating>@ <|@
tid a151 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a667 
=== Succesors ===
=== Usages ===
j522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
object: a151 
=== Succesors ===
next: j524 
=== Usages ===
v723 
=== Predecessor ===
v493 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a151 #next: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
object: a495 
=== Succesors ===
next: v527 
=== Usages ===
v724 
=== Predecessor ===
j522 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a495 #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i673 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: byteDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v723 v724 j526 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
j524 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v723 v724 j526 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a167 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
op: Compress
stamp: n! -
=== Inputs ===
value: a495 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
value: a167 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j528 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v731 value: a167 stateAfter: - lastLocationAccess: - #next: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v532 
=== Usages ===
j529 
=== Predecessor ===
v168 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j528 
y: i347 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j528 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j529 
index: j351 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j529 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
value: i120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
j528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v725 value: i120 stateAfter: - lastLocationAccess: - #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 188
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - a2 a1 a244 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a2 a1 a244  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 146
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
x: j437 
y: j438 
=== Succesors ===
=== Usages ===
j437 j444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j437 y: j438  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j425 
y: j351 
=== Succesors ===
=== Usages ===
j444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j425 y: j351  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
x: j439 
y: j447 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j439 y: j447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: j444 
value: i109 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j444 value: i109 #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
loopBegin: v436 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v436  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v554 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19475
stableDimension: 0
stamp: i32 [-19475] ⇊00000000ffffb3ed ⇈00000000ffffb3ed
stampKind: i32
value: int[-19475|0xffffffffffffb3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" "B50" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22291 - -19475] ⇊00000000ffffa0ed ⇈00000000ffffbbed
valueDescription: i32
=== Inputs ===
merge: v246 
values: i254 i248 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v246 values: i254 i248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v253 v265 
=== Succesors ===
next: v252 
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v253 v265 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid a249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i250 
speculation: a249 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i250 speculation: a249  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B50" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v662  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v674 v677 v683 v679 ?18 ?145 ?145 v685 ?36 j346 j463 j528 v731 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v687 ?36 v680 v681 ?145 ?18 v675 v676 v678 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 181
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v252 v662 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v687 
=== Succesors ===
next: v260 
=== Usages ===
v536 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v687 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v662 
y: v535 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v662 y: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v536 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v257 
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v536 #trueSuccessor: v258 #falseSuccessor: v257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54d5a7c9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a663 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a663  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a663 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 13]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v674 
=== Succesors ===
next: a664 
=== Usages ===
v169 
=== Predecessor ===
v258 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v674 #next: a664  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a664 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 17]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
=== Succesors ===
next: v192 
=== Usages ===
v169 
=== Predecessor ===
a663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a663 
y: a664 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a663 y: a664  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
a664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v189 #falseSuccessor: v191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD[.], y: [v1|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: i665 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i665  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i665 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
=== Succesors ===
next: v92 
=== Usages ===
v92 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v676 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
value: i665 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i666 
=== Usages ===
=== Predecessor ===
i665 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v677 value: i665 stateAfter: - lastLocationAccess: - #next: i666  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i666 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
=== Succesors ===
next: v97 
=== Usages ===
v97 
=== Predecessor ===
v92 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
value: i666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a667 
=== Usages ===
=== Predecessor ===
i666 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v679 value: i666 stateAfter: - lastLocationAccess: - #next: a667  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a667 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
=== Succesors ===
next: a668 
=== Usages ===
v174 a151 a660 v682 v730 
=== Predecessor ===
v97 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 #next: a668  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a668 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
=== Succesors ===
next: v24 
=== Usages ===
a101 v170 v684 v700 
=== Predecessor ===
a667 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v680 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
stamp: void
=== Inputs ===
value: a668 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a668  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
stamp: void
=== Inputs ===
value: a667 
=== Succesors ===
=== Usages ===
v68 v45 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a667  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 v352 v532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j348 j425 j432 j464 j529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 j447 v713 v725 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a491 a299 v420 v445 a387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a299 a491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?18 <|@
d <@d|@=== Debug Properties ===
bci: 39
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 187
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a2 
=== Succesors ===
=== Usages ===
a387 a299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a2  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v330 v514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 v409 j434 v440 v511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i306 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i307 i394 i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i277 i373 i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 v476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 v61 v74 v75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
stamp: void
trueSuccessorProbability: 0.4350688210652304
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
a668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD[.], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4350688210652304 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601509123039625491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
stamp: void
trueSuccessorProbability: 0.7916362574806598
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v43 #falseSuccessor: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4599876071557176989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: i669 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i669  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a667 
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i669 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
=== Succesors ===
next: j278 
=== Usages ===
v326 j344 v284 a299 i307 
=== Predecessor ===
v44 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 #next: j278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j323 
=== Usages ===
v688 v689 
=== Predecessor ===
i669 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j323  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
j323 v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j323 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
=== Succesors ===
next: j324 
=== Usages ===
j282 v690 v691 a298 v696 v692 v693 v694 v695 
=== Predecessor ===
j278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v688 #next: j324  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
j324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j324 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v689 
=== Succesors ===
next: v287 
=== Usages ===
v288 
=== Predecessor ===
j323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v689 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i669 
y: i283 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i669 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v284 
=== Succesors ===
trueSuccessor: v286 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
j324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v284 #trueSuccessor: v286 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4590543405999979534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i32
=== Inputs ===
x: i669 
y: i306 
=== Succesors ===
=== Usages ===
i277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i669 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i307 
y: i276 
=== Succesors ===
=== Usages ===
j281 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i307 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i277 
=== Succesors ===
=== Usages ===
j282 v692 v693 v694 v695 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i277  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
x: j281 
y: j323 
=== Succesors ===
=== Usages ===
v288 v325 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j281 y: j323  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j324 
y: j282 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j324 y: j282  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v288 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v288 #trueSuccessor: v293 #falseSuccessor: v292  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA [v9|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AND v12|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v14|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4560664324502694158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4590484616146611388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
value: j282 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v688 value: j282 stateAfter: - lastLocationAccess: - #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
result [v14|QWORD + v10|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j281 
index: j323 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v692 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v692 #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
result [v14|QWORD + v10|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j281 
index: j323 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v693 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v693 #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
result [v14|QWORD + v10|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j281 
index: j323 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v694 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v694 #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
result [v14|QWORD + v10|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j281 
index: j323 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v695 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v695 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
result [v10|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v690 
value: i669 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v690 value: i669 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
result [v10|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
value: j275 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 value: j275 stateAfter: - lastLocationAccess: - #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
result [v10|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v696 
value: v537 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v696 value: v537 stateAfter: - lastLocationAccess: - #next: v297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j323 
=== Succesors ===
next: v300 
=== Usages ===
a303 
=== Predecessor ===
v297 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j323 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
a298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576379386524888644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576849705351833813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v289 v291 
=== Succesors ===
next: a299 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v289 v291 #next: a299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a299 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?18 
arguments: v274 i669 i109 
=== Succesors ===
next: v302 
=== Usages ===
a303 
=== Predecessor ===
v290 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?18 arguments: v274 i669 i109 #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
a299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: v0|QWORD[.] - v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a303 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v301 
values: a298 a299 
=== Succesors ===
=== Usages ===
j342 a123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: a298 a299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v300 v302 
=== Succesors ===
next: j338 
=== Usages ===
a303 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v300 v302 #next: j338  <|@  <|@
f <@~|@floating>@ <|@
tid a660 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a667 
=== Succesors ===
=== Usages ===
j338 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
object: a660 
=== Succesors ===
next: j342 
=== Usages ===
v697 
=== Predecessor ===
v301 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a660 #next: j342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
result v21|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
object: a303 
=== Succesors ===
next: v345 
=== Usages ===
v698 
=== Predecessor ===
j338 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a303 #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
result [v20|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j338 
index: - 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j338 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
result [v21|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j342 
index: - 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j342 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i669 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: byteDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v697 v698 j344 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
j342 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v697 v698 j344 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a123 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
op: Compress
stamp: n! -
=== Inputs ===
value: a303 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
value: a123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j346 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v683 value: a123 stateAfter: - lastLocationAccess: - #next: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j346 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v352 
=== Usages ===
j348 
=== Predecessor ===
v125 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j346 
y: i347 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j346 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
result [v24|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: j351 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
value: i120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
j346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v699 value: i120 stateAfter: - lastLocationAccess: - #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v23|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: i670 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i670  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a668 
=== Succesors ===
=== Usages ===
i670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i670 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 14]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
=== Succesors ===
next: v671 
=== Usages ===
a387 j458 v408 i428 v420 i372 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
result [v6|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a668 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v671 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v700 
=== Succesors ===
next: j374 
=== Usages ===
v357 v412 
=== Predecessor ===
i670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v700 #next: j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j374 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j405 
=== Usages ===
v701 v702 
=== Predecessor ===
v671 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j405  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j405 v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v701 
=== Succesors ===
next: j406 
=== Usages ===
j378 v703 v704 a386 v709 v705 v706 v707 v708 
=== Predecessor ===
j374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v701 #next: j406  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j406 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v702 
=== Succesors ===
next: v382 
=== Usages ===
v379 
=== Predecessor ===
j405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v702 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i372 i429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i670 
y: i371 
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i670 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i372 
y: i306 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i372 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i394 
y: i276 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i394 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid j377 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i373 
=== Succesors ===
=== Usages ===
j378 v705 v706 v707 v708 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i373  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
x: j377 
y: j405 
=== Succesors ===
=== Usages ===
v379 v407 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j377 y: j405  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j406 
y: j378 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j406 y: j378  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
j406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v380 #falseSuccessor: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v6|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v25|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA [v28|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = AND v29|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVSXD v30|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573163235201850893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a387  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v671 
=== Succesors ===
=== Usages ===
a387 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?18 
arguments: v357 i670 i109 
=== Succesors ===
next: v390 
=== Usages ===
a391 
=== Predecessor ===
v380 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?18 arguments: v357 i670 i109 #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
a387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: v0|QWORD[.] - v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603212782762218810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v701 
value: j378 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v701 value: j378 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v705 <|@
result [v31|QWORD + v27|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: j405 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: v705 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v705 #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
result [v31|QWORD + v27|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: j405 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: v706 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v706 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
result [v31|QWORD + v27|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: j405 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: v707 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v707 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v708 <|@
result [v31|QWORD + v27|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: j405 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: v708 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v708 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
result [v27|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
value: i670 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v703 value: i670 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
result [v27|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
value: j275 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v704 value: j275 stateAfter: - lastLocationAccess: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
result [v27|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v709 
value: v671 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v709 value: v671 stateAfter: - lastLocationAccess: - #next: v385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a386 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a386 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j405 
=== Succesors ===
next: v388 
=== Usages ===
a391 
=== Predecessor ===
v385 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j405 #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
a386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v27|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v27|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v27|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v27|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + 12], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v27|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + 8], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a391 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v389 
values: a386 a387 
=== Succesors ===
=== Usages ===
v686 a244 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: a386 a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v388 v390 
=== Succesors ===
next: v601 
=== Usages ===
a391 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v388 v390 #next: v601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v549 
=== Usages ===
j603 
=== Predecessor ===
v389 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
result [v36|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a391 
index: - 
=== Succesors ===
=== Usages ===
j603 j426 j424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a391 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i670 
=== Succesors ===
=== Usages ===
v459 j644 j631 j637 j641 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i670  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i670 
y: i109 
=== Succesors ===
=== Usages ===
v423 v549 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i670 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid j438 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j439 j644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v547 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v547 #falseSuccessor: v548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid j603 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v601 
address: v686 
=== Succesors ===
=== Usages ===
v726 v727 v728 v729 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v601 address: v686  <|@  <|@
f <@~|@floating>@ <|@
tid j630 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j631 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j458 
y: j630 
=== Succesors ===
=== Usages ===
v632 v634 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j458 y: j630  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j624 v632 j618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j631 
y: j310 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j631 y: j310  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v550 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v550 #falseSuccessor: v551  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = LEA [v36|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
result v40|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B48" 
    successors "B21" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j624 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v554 
values: j310 j629 
=== Succesors ===
=== Usages ===
v729 j629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v554 values: j310 j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v553 
=== Succesors ===
next: v655 
=== Usages ===
j624 v558 v559 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v553 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
result [v38|QWORD[.] + v41|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j603 
index: j624 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j603 index: j624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v729 
value: v656 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v729 value: v656 stateAfter: - lastLocationAccess: - #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid j629 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j624 
y: j270 
=== Succesors ===
=== Usages ===
j618 j624 v634 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j624 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j631 
y: j629 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j631 y: j629  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v634 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v560 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v634 #trueSuccessor: v558 #falseSuccessor: v560  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v41|QWORD * 4], input: v40|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v554 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v554 #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j618 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v563 
values: j310 j629 
=== Succesors ===
=== Usages ===
v728 j623 j611 v638 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v563 values: j310 j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v562 v564 
=== Succesors ===
next: v582 
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v562 v564 #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j637 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j458 
y: j636 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j458 y: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j637 
y: j618 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j637 y: j618  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v638 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v638 #trueSuccessor: v581 #falseSuccessor: v580  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v37|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
result [v38|QWORD[.] + v43|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j603 
index: j618 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j603 index: j618  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
result v45|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v728 
value: v659 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v728 value: v659 stateAfter: - lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid j606 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j618 
y: j606 
=== Succesors ===
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j618 y: j606  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v43|QWORD * 4], input: v45|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j611 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v574 
values: j623 j618 
=== Succesors ===
=== Usages ===
v727 j617 j604 v642 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v574 values: j623 j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v573 v585 
=== Succesors ===
next: v588 
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v573 v585 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid j640 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j641 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j458 
y: j640 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j458 y: j640  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j641 
y: j611 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j641 y: j611  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v642 
=== Succesors ===
trueSuccessor: v587 
falseSuccessor: v586 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v642 #trueSuccessor: v587 #falseSuccessor: v586  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v37|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
result [v38|QWORD[.] + v47|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j603 
index: j611 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j603 index: j611  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
result v49|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v727 
value: v658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v727 value: v658 stateAfter: - lastLocationAccess: - #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid j616 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j617 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j617 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j611 
y: j616 
=== Succesors ===
=== Usages ===
j604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j611 y: j616  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v47|QWORD * 4], input: v49|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j604 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v577 
values: j617 j611 
=== Succesors ===
=== Usages ===
v726 v645 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v577 values: j617 j611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v576 v591 
=== Succesors ===
next: v594 
=== Usages ===
j604 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v576 v591 #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j458 
y: j438 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j458 y: j438  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j644 
y: j604 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j644 y: j604  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v593 #falseSuccessor: v592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = DEC v37|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
result [v38|QWORD[.] + v51|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j603 
index: j604 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j603 index: j604  <|@  <|@
f <@~|@floating>@ <|@
tid a657 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
value: a657 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v726 value: a657 stateAfter: - lastLocationAccess: - #next: v579  <|@  <|@
f <@*|@fixed>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v51|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B16" "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v566 v579 v597 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v566 v579 v597 #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v421 #falseSuccessor: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: j424 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j424 <|@
result [v36|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v686 
=== Succesors ===
next: j426 
=== Usages ===
j425 
=== Predecessor ===
v422 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v686 #next: j426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j426 <|@
result [v36|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v686 
=== Succesors ===
next: v435 
=== Usages ===
j431 
=== Predecessor ===
j424 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v686 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i670 
y: i427 
=== Succesors ===
=== Usages ===
i429 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i670 y: i427  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i428 
y: i371 
=== Succesors ===
=== Usages ===
j430 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i428 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i429 
=== Succesors ===
=== Usages ===
j431 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i429  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
x: j426 
y: j430 
=== Succesors ===
=== Usages ===
j432 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j426 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
result v58|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j431 
y: i347 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j431 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
result v59|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j424 
y: i347 
=== Succesors ===
=== Usages ===
j433 j447 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j424 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j432 
y: j425 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j432 y: j425  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
result v62|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j433 
y: j275 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j433 y: j275  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
j426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = DEC v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHL v53|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v54|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = LEA [v36|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = ADD (x: v56|QWORD[.], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v57|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v36|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = SHR v60|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SUB (x: v58|QWORD[*], ~y: v59|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = INC v61|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[*]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B47" 
    successors "B35" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263667239157622
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j437 <|@
result v63|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v436 
values: j434 j439 
=== Succesors ===
=== Usages ===
j439 v440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v436 values: j434 j439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v435 
=== Succesors ===
next: v443 
=== Usages ===
j437 v441 v446 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v435 #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j437 
y: j275 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j437 y: j275  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v441 #falseSuccessor: v442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v63|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v436 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v436 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B46" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v449 v450 
=== Succesors ===
next: a244 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v449 v450 #next: a244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a244 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a391 
=== Succesors ===
next: j452 
=== Usages ===
j456 ?145 a147 v712 
=== Predecessor ===
v448 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a391 #next: j452  <|@  <|@
f <@~|@floating>@ <|@
tid a101 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a668 
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j452 <|@
result v65|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
object: a101 
=== Succesors ===
next: j456 
=== Usages ===
v710 
=== Predecessor ===
a244 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a101 #next: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
result v66|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
object: a244 
=== Succesors ===
next: v459 
=== Usages ===
v711 
=== Predecessor ===
j452 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a244 #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
result [v65|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
result [v66|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j456 
index: - 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointUninitArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v710 v711 j458 
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
j456 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v710 v711 j458 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
result [v36|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a244 
index: - 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v672 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v712 
=== Succesors ===
next: v196 
=== Usages ===
v540 
=== Predecessor ===
v459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v712 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v672 
y: v539 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v672 y: v539  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v193 #falseSuccessor: v195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v65|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v66|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction CMP [v36|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a147 <|@
result v67|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
op: Compress
stamp: n! -
=== Inputs ===
value: a244 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
value: a147 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j463 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v685 value: a147 stateAfter: - lastLocationAccess: - #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v467 
=== Usages ===
j464 
=== Predecessor ===
v149 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
result v68|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j463 
y: i347 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j463 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
result [v68|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j464 
index: j351 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
value: i120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
j463 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v713 value: i120 stateAfter: - lastLocationAccess: - #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
stamp: void
trueSuccessorProbability: 0.7916362574806598
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v67|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4601728019295446344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: i673 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i673  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a667 
=== Succesors ===
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i673 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v730 
=== Succesors ===
next: j471 
=== Usages ===
v510 j526 v476 a491 i498 
=== Predecessor ===
v67 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v730 #next: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j471 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
v714 v715 
=== Predecessor ===
i673 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j507  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j471 
index: - 
=== Succesors ===
=== Usages ===
j507 v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j471 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
=== Succesors ===
next: j508 
=== Usages ===
j475 v716 v717 a490 v722 v718 v719 v720 v721 
=== Predecessor ===
j471 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v714 #next: j508  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j471 
index: - 
=== Succesors ===
=== Usages ===
j508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j471 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
=== Succesors ===
next: v479 
=== Usages ===
v480 
=== Predecessor ===
j507 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v715 #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i673 
y: i283 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i673 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
j508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v478 #falseSuccessor: v477  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v69|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4592298206299964085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i498 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i32
=== Inputs ===
x: i673 
y: i306 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i673 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i498 
y: i276 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i498 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid j474 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i470 
=== Succesors ===
=== Usages ===
j475 v718 v719 v720 v721 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
x: j474 
y: j507 
=== Succesors ===
=== Usages ===
v480 v509 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j474 y: j507  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j508 
y: j475 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j508 y: j475  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v485 #falseSuccessor: v484  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA [v69|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = AND v72|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVSXD v73|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = ADD (x: v74|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4562528445706493417
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592221868443596093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
value: j475 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v714 value: j475 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
result [v74|QWORD + v70|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j474 
index: j507 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v718 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v718 #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
result [v74|QWORD + v70|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j474 
index: j507 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v719 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v719 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
result [v74|QWORD + v70|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j474 
index: j507 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v720 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v720 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
result [v74|QWORD + v70|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j474 
index: j507 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
address: v721 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v721 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
result [v70|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
value: i673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v716 value: i673 stateAfter: - lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
result [v70|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
value: j275 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v717 value: j275 stateAfter: - lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
result [v70|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
value: v537 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v722 value: v537 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a490 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a490 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j507 
=== Succesors ===
next: v492 
=== Usages ===
a495 
=== Predecessor ===
v489 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j507 #next: v492  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
a490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v74|QWORD + v70|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v74|QWORD + v70|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v74|QWORD + v70|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v74|QWORD + v70|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v70|QWORD + 12], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE v70|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577939209013763800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4578549911864707733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v481 v483 
=== Succesors ===
next: a491 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v481 v483 #next: a491  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 60
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 190
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a2 
=== Succesors ===
=== Usages ===
a491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a491 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?36 
arguments: v274 i673 i109 
=== Succesors ===
next: v494 
=== Usages ===
a495 
=== Predecessor ===
v482 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?36 arguments: v274 i673 i109 #next: v494  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
a491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
locals: v0|QWORD[.] - v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a495 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v493 
values: a490 a491 
=== Succesors ===
=== Usages ===
j524 a167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v493 values: a490 a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v492 v494 
=== Succesors ===
next: j522 
=== Usages ===
a495 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v492 v494 #next: j522  <|@  <|@
f <@~|@floating>@ <|@
tid a151 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a667 
=== Succesors ===
=== Usages ===
j522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j522 <|@
result v80|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
object: a151 
=== Succesors ===
next: j524 
=== Usages ===
v723 
=== Predecessor ===
v493 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a151 #next: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
result v81|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: i64
=== Inputs ===
object: a495 
=== Succesors ===
next: v527 
=== Usages ===
v724 
=== Predecessor ===
j522 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a495 #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
result [v80|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
result [v81|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i673 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: byteDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v723 v724 j526 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
j524 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v723 v724 j526 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a167 <|@
result v83|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
op: Compress
stamp: n! -
=== Inputs ===
value: a495 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
value: a167 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j528 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v731 value: a167 stateAfter: - lastLocationAccess: - #next: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j528 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v532 
=== Usages ===
j529 
=== Predecessor ===
v168 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
result v84|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j528 
y: i347 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j528 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
result [v84|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j529 
index: j351 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j529 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
value: i120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
j528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v725 value: i120 stateAfter: - lastLocationAccess: - #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v80|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v81|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v82|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[.] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 188
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - a2 a1 a244 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a2 a1 a244  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 146
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -37427 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stack: v0|QWORD[.] v36|QWORD[.] 
locals: v0|QWORD[.] - v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result v85|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
x: j437 
y: j438 
=== Succesors ===
=== Usages ===
j437 j444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j437 y: j438  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result v86|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j425 
y: j351 
=== Succesors ===
=== Usages ===
j444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j425 y: j351  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
result v87|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: i64
=== Inputs ===
x: j439 
y: j447 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j439 y: j447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
address: j444 
value: i109 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j444 value: i109 #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
stamp: void
=== Inputs ===
loopBegin: v436 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v436  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = DEC v63|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = ADD (x: v59|QWORD[*], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = ADD (x: v86|QWORD[*], y: v85|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v87|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[*]] destination: B47 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596800691831357233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v554 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B48 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result int[-22291|0xffffffffffffa8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
result int[-19475|0xffffffffffffb3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19475
stableDimension: 0
stamp: i32 [-19475] ⇊00000000ffffb3ed ⇈00000000ffffb3ed
stampKind: i32
value: int[-19475|0xffffffffffffb3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19475|0xffffffffffffb3ed]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" "B50" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i250 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22291 - -19475] ⇊00000000ffffa0ed ⇈00000000ffffbbed
valueDescription: i32
=== Inputs ===
merge: v246 
values: i254 i248 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v246 values: i254 i248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v253 v265 
=== Succesors ===
next: v252 
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v253 v265 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid a249 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i250 
speculation: a249 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i250 speculation: a249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B50" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54d5a7c9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD[.], y: [v1|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD[.], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4350688210652304 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v6|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v25|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA [v28|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = AND v29|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVSXD v30|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603212782762218810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v27|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v27|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v27|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v27|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + 12], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v27|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + 8], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = LEA [v36|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v37|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v43|QWORD * 4], input: v45|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v37|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v47|QWORD * 4], input: v49|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = DEC v37|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v51|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B16" "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = DEC v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHL v53|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v54|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = LEA [v36|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = ADD (x: v56|QWORD[.], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v57|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v36|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = SHR v60|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SUB (x: v58|QWORD[*], ~y: v59|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = INC v61|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[*]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = DEC v63|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = ADD (x: v59|QWORD[*], y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = ADD (x: v86|QWORD[*], y: v85|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v87|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[*]] destination: B47 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B47" 
    successors "B35" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263667239157622
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v63|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601509123039625491
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4599876071557176989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B46" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v65|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v66|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction CMP [v36|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v67|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|QWORD[*] + v89|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4601728019295446344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v69|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4592298206299964085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA [v69|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = AND v72|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVSXD v73|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = ADD (x: v74|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592221868443596093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v74|QWORD + v70|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v74|QWORD + v70|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v74|QWORD + v70|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v74|QWORD + v70|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v70|QWORD + 12], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE v70|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD[.]] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v80|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v81|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v82|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[.] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[*] + v89|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4590543405999979534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA [v9|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AND v12|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v14|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4590484616146611388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v23|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[*] + v90|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596800691831357233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B48 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B48" 
    successors "B21" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v41|QWORD * 4], input: v40|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577939209013763800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4578549911864707733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
locals: v0|QWORD[.] - v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576379386524888644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576849705351833813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v92|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: v0|QWORD[.] - v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573163235201850893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: v0|QWORD[.] - v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4562528445706493417
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4560664324502694158
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19475|0xffffffffffffb3ed]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" "B50" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -37427 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stack: v0|QWORD[.] v36|QWORD[.] 
locals: v0|QWORD[.] - v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #3          // org.graalvm.collections.EconomicMapImpl
     4: ifeq          83
     7: aload_1       
     8: checkcast     #3          // org.graalvm.collections.EconomicMapImpl
    11: astore_2      
    12: aload_0       
    13: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    16: aload_2       
    17: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    20: if_acmpne     83
    23: aload_0       
    24: aload_2       
    25: getfield      #5          // totalEntries:int
    28: putfield      #5          // totalEntries:int
    31: aload_0       
    32: aload_2       
    33: getfield      #21         // deletedEntries:int
    36: putfield      #21         // deletedEntries:int
    39: aload_2       
    40: getfield      #22         // entries:java.lang.Object[]
    43: ifnull        60
    46: aload_0       
    47: aload_2       
    48: getfield      #22         // entries:java.lang.Object[]
    51: invokevirtual #23         // java.lang.Object.clone:()java.lang.Object
    54: checkcast     #28         // java.lang.Object[]
    57: putfield      #22         // entries:java.lang.Object[]
    60: aload_2       
    61: getfield      #24         // hashArray:byte[]
    64: ifnull        81
    67: aload_0       
    68: aload_2       
    69: getfield      #24         // hashArray:byte[]
    72: invokevirtual #25         // java.lang.Object.clone:()java.lang.Object
    75: checkcast     #31         // byte[]
    78: putfield      #24         // hashArray:byte[]
    81: iconst_1      
    82: ireturn       
    83: iconst_0      
    84: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B50" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54d5a7c9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: rax|DWORD[.], y: [rdx|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   32  <|@ instruction r13|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.4350688210652304 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction r11|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  188  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr  190  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  192  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction r8|QWORD = ADD (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603212782762218810
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  236  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  238  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rax|QWORD + 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction r9|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  272  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r9|QWORD = LEA [r8|QWORD - 4] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  320  <|@ instruction J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  322  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  324  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r9|QWORD = LEA [r8|QWORD - 2] size: QWORD <|@ <|@
      nr  332  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  344  <|@ instruction J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  346  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r9|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr  356  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rdi|QWORD[.] + rcx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B16" "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  374  <|@ instruction stack:48|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  394  <|@ instruction rdi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  402  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  604  <|@ instruction rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD <|@ <|@
      nr  606  <|@ instruction rbx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r9|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr  610  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B47 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B47" 
    successors "B35" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263667239157622
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction CMP rcx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601509123039625491
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4599876071557176989
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B16 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction stack:52|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B46" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  430  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  444  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  462  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  464  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  466  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4601728019295446344
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction stack:52|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  482  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  484  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4592298206299964085
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction r11|DWORD = LEA [r13|DWORD + 23] size: DWORD <|@ <|@
      nr  492  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  494  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  496  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592221868443596093
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  512  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  514  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  516  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  524  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOV stack:52|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  586  <|@ instruction r9|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  590  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  592  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   56  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4590543405999979534
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r8|DWORD = LEA [r13|DWORD + 23] size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4590484616146611388
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   94  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   98  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  104  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  154  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  160  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  172  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596800691831357233
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B48 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B48" 
    successors "B21" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  292  <|@ instruction J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577939209013763800
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4578549911864707733
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  548  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60] <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576379386524888644
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576849705351833813
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573163235201850893
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction stack:52|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [r13:0, stack:12, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39] <|@ <|@
      nr  218  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r13|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4562528445706493417
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4560664324502694158
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r10|DWORD = MOVE input: int[-19475|0xffffffffffffb3ed] <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" "B50" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  632  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  636  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 668] y: -37427 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [r11:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stack: stack:32|QWORD[.] r11|QWORD[.] 
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #3          // org.graalvm.collections.EconomicMapImpl
     4: ifeq          83
     7: aload_1       
     8: checkcast     #3          // org.graalvm.collections.EconomicMapImpl
    11: astore_2      
    12: aload_0       
    13: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    16: aload_2       
    17: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    20: if_acmpne     83
    23: aload_0       
    24: aload_2       
    25: getfield      #5          // totalEntries:int
    28: putfield      #5          // totalEntries:int
    31: aload_0       
    32: aload_2       
    33: getfield      #21         // deletedEntries:int
    36: putfield      #21         // deletedEntries:int
    39: aload_2       
    40: getfield      #22         // entries:java.lang.Object[]
    43: ifnull        60
    46: aload_0       
    47: aload_2       
    48: getfield      #22         // entries:java.lang.Object[]
    51: invokevirtual #23         // java.lang.Object.clone:()java.lang.Object
    54: checkcast     #28         // java.lang.Object[]
    57: putfield      #22         // entries:java.lang.Object[]
    60: aload_2       
    61: getfield      #24         // hashArray:byte[]
    64: ifnull        81
    67: aload_0       
    68: aload_2       
    69: getfield      #24         // hashArray:byte[]
    72: invokevirtual #25         // java.lang.Object.clone:()java.lang.Object
    75: checkcast     #31         // byte[]
    78: putfield      #24         // hashArray:byte[]
    81: iconst_1      
    82: ireturn       
    83: iconst_0      
    84: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B50" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54d5a7c9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: rax|DWORD[.], y: [rdx|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   32  <|@ instruction r13|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.4350688210652304 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction r11|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  188  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr  190  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  192  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction r8|QWORD = ADD (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603212782762218810
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  236  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  238  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [rax|QWORD + 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B31" "B17" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B31 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction r9|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  272  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B25" "B24" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r9|QWORD = LEA [r8|QWORD - 4] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  320  <|@ instruction J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  322  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  324  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B22" 
    successors "B28" "B27" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r9|QWORD = LEA [r8|QWORD - 2] size: QWORD <|@ <|@
      nr  332  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  344  <|@ instruction J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  346  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B25" 
    successors "B31" "B30" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r9|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr  356  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4596800691831357233
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rdi|QWORD[.] + rcx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" "B28" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  374  <|@ instruction stack:48|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B36 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598760067611787126
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  394  <|@ instruction rdi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  402  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  604  <|@ instruction rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD <|@ <|@
      nr  606  <|@ instruction rbx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r9|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr  610  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B47 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B47" 
    successors "B36" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263667239157622
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction CMP rcx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B36 falseDestination: B34 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601509123039625491
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4599876071557176989
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B37" "B46" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction stack:52|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  430  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  444  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603263667239157622
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r9|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  462  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  464  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  466  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4601728019295446344
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B44" 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  482  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  484  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" "B42" 
    xhandlers
    flags 
    probability 4592298206299964085
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction r11|DWORD = LEA [r13|DWORD + 23] size: DWORD <|@ <|@
      nr  492  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  494  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  496  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592221868443596093
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  512  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  514  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  516  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  524  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4593146404704052880
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOV stack:52|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  586  <|@ instruction r9|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  590  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  592  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   56  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B8" 
    xhandlers
    flags 
    probability 4590543405999979534
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r8|DWORD = LEA [r13|DWORD + 23] size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B10 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4590484616146611388
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   94  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   98  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  104  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 4591196626592958935
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  154  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  160  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  172  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589752868357046134
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B20" 
    successors "B22" "B20" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760067611787126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  292  <|@ instruction J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B22 falseDestination: B20 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4578549911864707733
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  548  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60] <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576849705351833813
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573163235201850893
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction stack:52|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [r13:0, stack:12, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39] <|@ <|@
      nr  218  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r13|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r10|DWORD = MOVE input: int[-19475|0xffffffffffffb3ed] <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" "B50" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  632  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  636  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 668] y: -37427 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [r11:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stack: stack:32|QWORD[.] r11|QWORD[.] 
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #3          // org.graalvm.collections.EconomicMapImpl
     4: ifeq          83
     7: aload_1       
     8: checkcast     #3          // org.graalvm.collections.EconomicMapImpl
    11: astore_2      
    12: aload_0       
    13: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    16: aload_2       
    17: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    20: if_acmpne     83
    23: aload_0       
    24: aload_2       
    25: getfield      #5          // totalEntries:int
    28: putfield      #5          // totalEntries:int
    31: aload_0       
    32: aload_2       
    33: getfield      #21         // deletedEntries:int
    36: putfield      #21         // deletedEntries:int
    39: aload_2       
    40: getfield      #22         // entries:java.lang.Object[]
    43: ifnull        60
    46: aload_0       
    47: aload_2       
    48: getfield      #22         // entries:java.lang.Object[]
    51: invokevirtual #23         // java.lang.Object.clone:()java.lang.Object
    54: checkcast     #28         // java.lang.Object[]
    57: putfield      #22         // entries:java.lang.Object[]
    60: aload_2       
    61: getfield      #24         // hashArray:byte[]
    64: ifnull        81
    67: aload_0       
    68: aload_2       
    69: getfield      #24         // hashArray:byte[]
    72: invokevirtual #25         // java.lang.Object.clone:()java.lang.Object
    75: checkcast     #31         // byte[]
    78: putfield      #24         // hashArray:byte[]
    81: iconst_1      
    82: ireturn       
    83: iconst_0      
    84: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420817a08addeadde0f85700400008b46203b42200f85960400008b420c89460c8b4210894610448b521c448b6a184585ed0f8440010000468b34ed0c000000468b1ced08000000498b4760418bfec1e7028d7f1783e7f84863ff4c8bc74c03c04d3b47700f87d80300004d8947600f188407c00000000f188407000100000f188407400100000f188407800100004489700c48c70001000000448958084c8bd8458bc64585f60f8466000000498d7b104d8d48f84d85c90f8d0d03000048c7c1000000004d8d48fc493bc90f8f10000000c5f9efc0c5fa7f048f4c8d4904498bc94d8d48fe493bc90f8f11000000c5f9efc0c4e1f97e048f4c8d4902498bc94d8bc849ffc9493bc90f8f040000004489248f49b900e01b17010000004c894c24104585f60f846e00000041ffce41c1e6024963fe498d4b104803cf48c1e909498d7b1048c1ef09482bcf48ffc1e91900000066660f1f84000000000048ffc9488bdf4903d94803d94488234883f9010f8c23000000ebe54585d20f8568010000b801000000488b6c24304883c438850500000000c5f877c3448954240c488954241849c1e503498bcb498d7d10488d7110498bd04c891c24e800000000904c8b1c2441817b08addeadde0f85c80200004c8b4c2410448b54240c488b74242049c1eb0344895e18488bc648c1e809468824084585d20f8518000000b801000000488b6c24304883c438850500000000c5f877c3468b2cd50c000000498b5760498b4f704181fdffffff000f83bf010000458d5d174183e3f84d63db4d8bc34c03c24c3bc10f87a50100004d894760410f188413c0000000410f18841300010000410f18841340010000410f1884138001000044896a0c48c70201000000c74208addeadde488bc244896c240c458bea458bd549c1e203488bd0448b5c240c498d7a10488d7210498bd348890424e80000000090488b042448c1e803488b74242089461c48c1ee094c8b4c24104688240eb801000000488b6c24304883c438850500000000c5f877c3468b2cd50c000000498b7f604d8b5f704181fdffffff000f8312010000458d45174183e0f84d63c04d8bc84c03cf4d3bcb0f87f80000004d894f60410f188438c0000000410f18843800010000410f18843840010000410f1884388001000044896f0c48c70701000000c74708addeadde488bc7458bf5458bea49ba00e01b1701000000418bfd48c1e703488bd0458bde488d7f10488d7210498bd34889442410e80000000090488b44241048c1e803488b74242089461c48c1ee0949ba00e01b170100000046882416b801000000488b6c24304883c438850500000000c5f877c3c5f9efc048c7c1000000000f1f8000000000c5fe7f048f488d4908493bc97ef2e9d5fcffff48baaddeaddeaddeadde488bf2418bd5b90000000044896c240c458beae80000000090e978feffff458bf5458bea488954241848baaddeaddeaddeadde488bf2418bd6b900000000e80000000090e920ffffff44896c240c458bea488954241849c1e303498bf3418bd6b900000000e800000000904c8bd8458bd5488b542418488b742420448b6c240ce922fcffff41baedb3ffff4589979c0200004d89a7a8020000e8000000009041c7879c020000cd6dffff4d89a7a8020000e8000000009041baeda8ffffebcce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54d5a7c9 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 53 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 60 10 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B50  <||@
  Comment 66 block B1 null  <||@
  Comment 66 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 14 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 69 16 CMP (x: rax|DWORD[.], y: [rdx|QWORD[.] + 32]) size: DWORD  <||@
  Comment 72 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B49  <||@
  Comment 78 block B2 null  <||@
  Comment 78 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 22 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 81 24 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 84 26 rax|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 87 28 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 90 30 r10|DWORD[.] = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 94 32 r13|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 98 34 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 101 36 BRANCH trueDestinationProbability: 0.4350688210652304 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12  <||@
  Comment 107 block B12 null  <||@
  Comment 107 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 107 180 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 115 182 r11|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 123 184 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 127 186 rdi|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 133 188 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 136 190 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 139 192 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 142 194 r8|QWORD = ADD (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 148 196 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 152 198 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 158 block B14 null  <||@
  Comment 158 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 232 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 162 234 AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 170 236 AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 178 238 AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 186 240 AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 194 242 MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 198 244 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 205 246 MOV (x: [rax|QWORD + 8], y: r11|DWORD) size: DWORD  <||@
  Comment 209 248 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 209 250 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 212 252 JUMP ~[] destination: B14 -> B15  <||@
  Comment 212 block B15 null  <||@
  Comment 212 254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 212 256 r8|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 215 258 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 218 260 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B31 falseDestination: B15 -> B17  <||@
  Comment 224 block B17 null  <||@
  Comment 224 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 268 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 228 270 r9|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 232 272 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 235 274 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 241 block B18 null  <||@
  Comment 241 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 241 278 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 248 280 JUMP ~[] destination: B18 -> B22  <||@
  Comment 248 block B22 null  <||@
  Comment 248 304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 248 306 r9|QWORD = LEA [r8|QWORD - 4] size: QWORD  <||@
  Comment 252 308 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 255 310 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 261 block B24 null  <||@
  Comment 261 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 318 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 265 320 J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 270 322 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 274 324 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 277 326 JUMP ~[] destination: B24 -> B25  <||@
  Comment 277 block B25 null  <||@
  Comment 277 328 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 277 330 r9|QWORD = LEA [r8|QWORD - 2] size: QWORD  <||@
  Comment 281 332 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 284 334 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 290 block B27 null  <||@
  Comment 290 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 290 342 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 294 344 J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 300 346 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 304 348 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 307 350 JUMP ~[] destination: B27 -> B28  <||@
  Comment 307 block B28 null  <||@
  Comment 307 352 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 307 354 r9|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 313 356 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 316 358 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 322 block B30 null  <||@
  Comment 322 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 322 366 MOV (x: [rdi|QWORD[.] + rcx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 326 368 JUMP ~[] destination: B30 -> B31  <||@
  Comment 326 block B31 null  <||@
  Comment 326 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 372 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 336 374 stack:48|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 341 376 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 344 378 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 350 block B33 null  <||@
  Comment 350 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 390 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 353 392 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 357 394 rdi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 360 396 rcx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 364 398 rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 367 400 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 371 402 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 375 404 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 379 406 rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 382 408 rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD  <||@
  Comment 385 410 JUMP ~[] destination: B33 -> B34  <||@
  Comment 390 block B47 loop 1 depth 1 header:436|LoopBegin  <||@
  Comment 390 602 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 400 604 rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD  <||@
  Comment 403 606 rbx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r9|QWORD) size: QWORD  <||@
  Comment 409 608 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 412 610 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 415 612 JUMP ~[] destination: B47 -> B34  <||@
  Comment 415 block B34 loop 1 depth 1 header:436|LoopBegin  <||@
  Comment 415 412 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 415 414 CMP rcx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 419 416 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B36 falseDestination: B34 -> B47  <||@
  Comment 427 block B3 null  <||@
  Comment 427 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 40 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 430 42 BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 436 block B4 null  <||@
  Comment 436 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 46 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 441 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 450 12  <||@
  Comment 460 block B36 null  <||@
  Comment 460 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 382 stack:52|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 465 384 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 470 428 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 474 430 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 474 432 rcx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 477 434 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 481 436 rsi|QWORD = LEA [rcx|QWORD[*] + 16] size: QWORD  <||@
  Comment 485 438 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 488 440 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 492 442 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 492 {Field[name=StubRoutines::_oop_disjoint_arraycopy_uninit, type=address, offset=0, address=0x105a7dcc8, value=0x106813200]:0x106813200}  <||@
  Comment 498 444 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 502 446 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 502 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 510 448 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46  <||@
  Comment 516 block B37 null  <||@
  Comment 516 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 516 452 r9|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 521 454 r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 526 456 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 531 458 r11|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 535 460 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 539 462 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 546 464 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 550 466 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 553 468 BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 559 block B38 null  <||@
  Comment 559 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 472 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 564 474 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 573 12  <||@
  Comment 583 block B39 null  <||@
  Comment 583 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 583 478 r13|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 591 480 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 595 482 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 599 484 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 606 486 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44  <||@
  Comment 612 block B40 null  <||@
  Comment 612 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 490 r11|DWORD = LEA [r13|DWORD + 23] size: DWORD  <||@
  Comment 616 492 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 620 494 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 623 496 r8|QWORD = ADD (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 629 498 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 632 500 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42  <||@
  Comment 638 block B42 null  <||@
  Comment 638 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 638 508 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 642 510 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 651 512 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 660 514 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 669 516 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 678 518 MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 682 520 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 689 522 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 689 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 696 524 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 696 526 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 699 528 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 704 530 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 707 532 JUMP ~[] destination: B42 -> B45  <||@
  Comment 707 block B45 null  <||@
  Comment 707 556 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 707 558 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 714 560 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 714 562 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 717 564 r11|QWORD = MOV stack:52|DWORD size: DWORD  <||@
  Comment 722 566 rdi|QWORD = LEA [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 726 568 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 730 570 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 733 572 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 737 574 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 737 {Field[name=StubRoutines::_arrayof_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd00, value=0x106812ae0]:0x106812ae0}  <||@
  Comment 743 576 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 747 578 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 751 580 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 756 582 MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 759 584 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 763 586 r9|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 768 588 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 772 590 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 777 592 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 786 12  <||@
  Comment 796 block B5 null  <||@
  Comment 796 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 796 52 r13|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 804 54 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 808 56 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 812 58 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 819 60 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B10  <||@
  Comment 825 block B6 null  <||@
  Comment 825 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 825 64 r8|DWORD = LEA [r13|DWORD + 23] size: DWORD  <||@
  Comment 829 66 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 833 68 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 836 70 r9|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 842 72 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 845 74 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B10 falseDestination: B6 -> B8  <||@
  Comment 851 block B8 null  <||@
  Comment 851 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 851 88 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 855 90 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 192] instr: 0  <||@
  Comment 864 92 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 873 94 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 882 96 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 891 98 MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 895 100 MOV [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 902 102 MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 902 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 909 104 rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 909 106 rax|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 912 108 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 915 110 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 918 112 JUMP ~[] destination: B8 -> B11  <||@
  Comment 918 block B11 null  <||@
  Comment 918 138 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 918 140 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 928 142 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 935 144 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 935 146 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 938 148 r11|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 941 150 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 945 152 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 949 154 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 952 156 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 957 158 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 957 {Field[name=StubRoutines::_arrayof_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd00, value=0x106812ae0]:0x106812ae0}  <||@
  Comment 963 160 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 968 162 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 972 164 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 977 166 MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 980 168 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 984 170 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 994 172 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 998 174 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1003 176 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1012 12  <||@
  Comment 1022 block B19 null  <||@
  Comment 1022 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1022 284 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1026 286 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1033 288 JUMP ~[] destination: B19 -> B20  <||@
  Comment 1033 block B20 loop 0 depth 1 header:554|LoopBegin  <||@
  Comment 1033 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1040 292 J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1045 294 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1049 296 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1052 298 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B22 falseDestination: B20 -> B20  <||@
  Comment 1059 block B44 null  <||@
  Comment 1059 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1059 540 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1059 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1069 542 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1072 544 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1075 546 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1080 548 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1085 550 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1088 552 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60]  <||@
  Comment 1088 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1093 [r13:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]   <||@
  Comment 1094 554 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1099 block B10 null  <||@
  Comment 1099 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 116 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1102 118 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1105 120 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1110 126 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1110 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1120 128 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1123 130 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1126 132 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1131 134 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39]  <||@
  Comment 1131 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1136 [r13:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]   <||@
  Comment 1137 136 JUMP ~[] destination: B10 -> B11  <||@
  Comment 1142 block B13 null  <||@
  Comment 1142 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1142 202 stack:52|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1147 204 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1150 206 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1155 208 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 1159 210 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1162 212 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1165 214 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1170 216 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39]  <||@
  Comment 1170 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1175 [r13:0, stack:12, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]   <||@
  Comment 1176 218 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1179 220 r10|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1182 222 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1187 224 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1192 226 r13|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1197 228 JUMP ~[] destination: B13 -> B15  <||@
  Comment 1202 block B50 null  <||@
  Comment 1202 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1202 626 r10|DWORD = MOVE input: int[-19475|0xffffffffffffb3ed]  <||@
  Comment 1208 628 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1208 block B51 null  <||@
  Comment 1208 630 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1208 632 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1215 634 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1222 636 DEOPT info [bci:0]  <||@
  Comment 1222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1227 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 1228 block B46 null  <||@
  Comment 1228 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1228 596 MOV [r15|QWORD + 668] y: -37427 size: DWORD  <||@
  Comment 1239 598 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1246 600 DEOPT info [bci:54]  <||@
  Comment 1246 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1251 [r11:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2                 
     locals:  |stack:32|QWORD[.]  |-             |stack:40|QWORD[.] 
     stack:   |stack:32|QWORD[.]  |r11|QWORD[.]  |                    <||@
  Comment 1252 block B49 null  <||@
  Comment 1252 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 620 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 1258 622 JUMP ~[] destination: B49 -> B51  <||@
  Comment 1260 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1260 4  <||@
  Comment 1266 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1266 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9346[org.graalvm.collections.EconomicMapImpl.initFrom(Object)]"
  method "HotSpotCompilation-9346[org.graalvm.collections.EconomicMapImpl.initFrom(Object)]"
  date 1527005204908
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b7b1c0 448b560849c1e203493bc20f858facc8fe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420817a08f93c01f80f85700400008b46203b42200f85960400008b420c89460c8b4210894610448b521c448b6a184585ed0f8440010000468b34ed0c000000468b1ced08000000498b4760418bfec1e7028d7f1783e7f84863ff4c8bc74c03c04d3b47700f87d80300004d8947600f188407c00000000f188407000100000f188407400100000f188407800100004489700c48c70001000000448958084c8bd8458bc64585f60f8466000000498d7b104d8d48f84d85c90f8d0d03000048c7c1000000004d8d48fc493bc90f8f10000000c5f9efc0c5fa7f048f4c8d4904498bc94d8d48fe493bc90f8f11000000c5f9efc0c4e1f97e048f4c8d4902498bc94d8bc849ffc9493bc90f8f040000004489248f49b900e01b17010000004c894c24104585f60f846e00000041ffce41c1e6024963fe498d4b104803cf48c1e909498d7b1048c1ef09482bcf48ffc1e91900000066660f1f84000000000048ffc9488bdf4903d94803d94488234883f9010f8c23000000ebe54585d20f8568010000b801000000488b6c24304883c43885057e3cd1fcc5f877c3448954240c488954241849c1e503498bcb498d7d10488d7110498bd04c891c24e84f7ec9fe904c8b1c2441817b08f52200f80f85c80200004c8b4c2410448b54240c488b74242049c1eb0344895e18488bc648c1e809468824084585d20f8518000000b801000000488b6c24304883c4388505033cd1fcc5f877c3468b2cd50c000000498b5760498b4f704181fdffffff000f83bf010000458d5d174183e3f84d63db4d8bc34c03c24c3bc10f87a50100004d894760410f188413c0000000410f18841300010000410f18841340010000410f1884138001000044896a0c48c70201000000c74208f50000f8488bc244896c240c458bea458bd549c1e203488bd0448b5c240c498d7a10488d7210498bd348890424e83a76c9fe90488b042448c1e803488b74242089461c48c1ee094c8b4c24104688240eb801000000488b6c24304883c43885052e3bd1fcc5f877c3468b2cd50c000000498b7f604d8b5f704181fdffffff000f8312010000458d45174183e0f84d63c04d8bc84c03cf4d3bcb0f87f80000004d894f60410f188438c0000000410f18843800010000410f18843840010000410f1884388001000044896f0c48c70701000000c74708f50000f8488bc7458bf5458bea49ba00e01b1701000000418bfd48c1e703488bd0458bde488d7f10488d7210498bd34889442410e85e75c9fe90488b44241048c1e803488b74242089461c48c1ee0949ba00e01b170100000046882416b801000000488b6c24304883c43885054c3ad1fcc5f877c3c5f9efc048c7c1000000000f1f8000000000c5fe7f048f488d4908493bc97ef2e9d5fcffff48baa80700c007000000488bf2418bd5b90000000044896c240c458beae8dbb741ff90e978feffff458bf5458bea488954241848baa80700c007000000488bf2418bd6b900000000e8b0b741ff90e920ffffff44896c240c458bea488954241849c1e303498bf3418bd6b900000000e889b741ff904c8bd8458bd5488b542418488b742420448b6c240ce922fcffff41baedb3ffff4589979c0200004d89a7a8020000e873bfc8fe9041c7879c020000cd6dffff4d89a7a8020000e85bbfc8fe9041baeda8ffffebcce86fef0cff90e849bec8fe90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54d5a7c9 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 53 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 60 10 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B50  <||@
  Comment 66 block B1 null  <||@
  Comment 66 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 14 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 69 16 CMP (x: rax|DWORD[.], y: [rdx|QWORD[.] + 32]) size: DWORD  <||@
  Comment 72 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B49  <||@
  Comment 78 block B2 null  <||@
  Comment 78 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 22 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 81 24 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 84 26 rax|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 87 28 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 90 30 r10|DWORD[.] = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 94 32 r13|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 98 34 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 101 36 BRANCH trueDestinationProbability: 0.4350688210652304 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12  <||@
  Comment 107 block B12 null  <||@
  Comment 107 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 107 180 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 115 182 r11|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 123 184 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 127 186 rdi|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 133 188 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 136 190 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 139 192 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 142 194 r8|QWORD = ADD (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 148 196 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 152 198 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 158 block B14 null  <||@
  Comment 158 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 232 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 162 234 AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 170 236 AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 178 238 AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 186 240 AMD64PREFETCH ~[rdi|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 194 242 MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 198 244 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 205 246 MOV (x: [rax|QWORD + 8], y: r11|DWORD) size: DWORD  <||@
  Comment 209 248 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 209 250 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 212 252 JUMP ~[] destination: B14 -> B15  <||@
  Comment 212 block B15 null  <||@
  Comment 212 254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 212 256 r8|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 215 258 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 218 260 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B31 falseDestination: B15 -> B17  <||@
  Comment 224 block B17 null  <||@
  Comment 224 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 268 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 228 270 r9|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 232 272 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 235 274 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 241 block B18 null  <||@
  Comment 241 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 241 278 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 248 280 JUMP ~[] destination: B18 -> B22  <||@
  Comment 248 block B22 null  <||@
  Comment 248 304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 248 306 r9|QWORD = LEA [r8|QWORD - 4] size: QWORD  <||@
  Comment 252 308 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 255 310 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 261 block B24 null  <||@
  Comment 261 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 318 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 265 320 J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 270 322 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 274 324 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 277 326 JUMP ~[] destination: B24 -> B25  <||@
  Comment 277 block B25 null  <||@
  Comment 277 328 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 277 330 r9|QWORD = LEA [r8|QWORD - 2] size: QWORD  <||@
  Comment 281 332 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 284 334 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 290 block B27 null  <||@
  Comment 290 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 290 342 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 294 344 J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 300 346 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 304 348 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 307 350 JUMP ~[] destination: B27 -> B28  <||@
  Comment 307 block B28 null  <||@
  Comment 307 352 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 307 354 r9|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 313 356 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 316 358 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 322 block B30 null  <||@
  Comment 322 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 322 366 MOV (x: [rdi|QWORD[.] + rcx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 326 368 JUMP ~[] destination: B30 -> B31  <||@
  Comment 326 block B31 null  <||@
  Comment 326 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 372 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 336 374 stack:48|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 341 376 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 344 378 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 350 block B33 null  <||@
  Comment 350 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 390 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 353 392 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 357 394 rdi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 360 396 rcx|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 364 398 rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 367 400 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 371 402 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 375 404 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 379 406 rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 382 408 rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD  <||@
  Comment 385 410 JUMP ~[] destination: B33 -> B34  <||@
  Comment 390 block B47 loop 1 depth 1 header:436|LoopBegin  <||@
  Comment 390 602 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 400 604 rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD  <||@
  Comment 403 606 rbx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r9|QWORD) size: QWORD  <||@
  Comment 409 608 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 412 610 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 415 612 JUMP ~[] destination: B47 -> B34  <||@
  Comment 415 block B34 loop 1 depth 1 header:436|LoopBegin  <||@
  Comment 415 412 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 415 414 CMP rcx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 419 416 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B36 falseDestination: B34 -> B47  <||@
  Comment 427 block B3 null  <||@
  Comment 427 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 40 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 430 42 BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 436 block B4 null  <||@
  Comment 436 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 46 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 441 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 450 12  <||@
  Comment 460 block B36 null  <||@
  Comment 460 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 382 stack:52|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 465 384 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 470 428 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 474 430 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 474 432 rcx|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 477 434 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 481 436 rsi|QWORD = LEA [rcx|QWORD[*] + 16] size: QWORD  <||@
  Comment 485 438 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 488 440 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 492 442 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 492 {Field[name=StubRoutines::_oop_disjoint_arraycopy_uninit, type=address, offset=0, address=0x105a7dcc8, value=0x106813200]:0x106813200}  <||@
  Comment 498 444 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 502 446 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 502 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 510 448 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B46  <||@
  Comment 516 block B37 null  <||@
  Comment 516 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 516 452 r9|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 521 454 r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 526 456 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 531 458 r11|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 535 460 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 539 462 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 546 464 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 550 466 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 553 468 BRANCH trueDestinationProbability: 0.7916362574806598 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 559 block B38 null  <||@
  Comment 559 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 472 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 564 474 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 573 12  <||@
  Comment 583 block B39 null  <||@
  Comment 583 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 583 478 r13|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 591 480 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 595 482 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 599 484 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 606 486 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44  <||@
  Comment 612 block B40 null  <||@
  Comment 612 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 490 r11|DWORD = LEA [r13|DWORD + 23] size: DWORD  <||@
  Comment 616 492 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 620 494 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 623 496 r8|QWORD = ADD (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 629 498 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 632 500 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42  <||@
  Comment 638 block B42 null  <||@
  Comment 638 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 638 508 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 642 510 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 651 512 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 660 514 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 669 516 AMD64PREFETCH ~[r11|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 678 518 MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 682 520 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 689 522 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 689 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 696 524 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 696 526 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 699 528 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 704 530 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 707 532 JUMP ~[] destination: B42 -> B45  <||@
  Comment 707 block B45 null  <||@
  Comment 707 556 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 707 558 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 714 560 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 714 562 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 717 564 r11|QWORD = MOV stack:52|DWORD size: DWORD  <||@
  Comment 722 566 rdi|QWORD = LEA [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 726 568 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 730 570 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 733 572 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 737 574 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 737 {Field[name=StubRoutines::_arrayof_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd00, value=0x106812ae0]:0x106812ae0}  <||@
  Comment 743 576 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 747 578 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 751 580 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 756 582 MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 759 584 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 763 586 r9|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 768 588 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 772 590 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 777 592 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 786 12  <||@
  Comment 796 block B5 null  <||@
  Comment 796 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 796 52 r13|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 804 54 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 808 56 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 812 58 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 819 60 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B10  <||@
  Comment 825 block B6 null  <||@
  Comment 825 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 825 64 r8|DWORD = LEA [r13|DWORD + 23] size: DWORD  <||@
  Comment 829 66 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 833 68 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 836 70 r9|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 842 72 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 845 74 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B10 falseDestination: B6 -> B8  <||@
  Comment 851 block B8 null  <||@
  Comment 851 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 851 88 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 855 90 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 192] instr: 0  <||@
  Comment 864 92 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 873 94 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 882 96 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 891 98 MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 895 100 MOV [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 902 102 MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 902 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 909 104 rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 909 106 rax|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 912 108 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 915 110 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 918 112 JUMP ~[] destination: B8 -> B11  <||@
  Comment 918 block B11 null  <||@
  Comment 918 138 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 918 140 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 928 142 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 935 144 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 935 146 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 938 148 r11|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 941 150 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 945 152 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 949 154 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 952 156 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 957 158 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 957 {Field[name=StubRoutines::_arrayof_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd00, value=0x106812ae0]:0x106812ae0}  <||@
  Comment 963 160 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 968 162 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 972 164 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 977 166 MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 980 168 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 984 170 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 994 172 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 998 174 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1003 176 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1012 12  <||@
  Comment 1022 block B19 null  <||@
  Comment 1022 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1022 284 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1026 286 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1033 288 JUMP ~[] destination: B19 -> B20  <||@
  Comment 1033 block B20 loop 0 depth 1 header:554|LoopBegin  <||@
  Comment 1033 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1040 292 J (address: [rdi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1045 294 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1049 296 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1052 298 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B22 falseDestination: B20 -> B20  <||@
  Comment 1059 block B44 null  <||@
  Comment 1059 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1059 540 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1059 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1069 542 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1072 544 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1075 546 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1080 548 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1085 550 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1088 552 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60]  <||@
  Comment 1088 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1093 [r13:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]   <||@
  Comment 1094 554 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1099 block B10 null  <||@
  Comment 1099 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 116 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1102 118 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1105 120 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1110 126 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1110 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1120 128 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1123 130 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1126 132 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1131 134 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39]  <||@
  Comment 1131 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1136 [r13:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]   <||@
  Comment 1137 136 JUMP ~[] destination: B10 -> B11  <||@
  Comment 1142 block B13 null  <||@
  Comment 1142 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1142 202 stack:52|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1147 204 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1150 206 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1155 208 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68010cb4 encoding: base: 0 shift: 3  <||@
  Comment 1159 210 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1162 212 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1165 214 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1170 216 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39]  <||@
  Comment 1170 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1175 [r13:0, stack:12, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]   <||@
  Comment 1176 218 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1179 220 r10|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1182 222 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1187 224 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1192 226 r13|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1197 228 JUMP ~[] destination: B13 -> B15  <||@
  Comment 1202 block B50 null  <||@
  Comment 1202 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1202 626 r10|DWORD = MOVE input: int[-19475|0xffffffffffffb3ed]  <||@
  Comment 1208 628 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1208 block B51 null  <||@
  Comment 1208 630 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1208 632 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1215 634 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1222 636 DEOPT info [bci:0]  <||@
  Comment 1222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1227 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 1228 block B46 null  <||@
  Comment 1228 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1228 596 MOV [r15|QWORD + 668] y: -37427 size: DWORD  <||@
  Comment 1239 598 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1246 600 DEOPT info [bci:54]  <||@
  Comment 1246 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1251 [r11:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2                 
     locals:  |stack:32|QWORD[.]  |-             |stack:40|QWORD[.] 
     stack:   |stack:32|QWORD[.]  |r11|QWORD[.]  |                    <||@
  Comment 1252 block B49 null  <||@
  Comment 1252 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 620 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 1258 622 JUMP ~[] destination: B49 -> B51  <||@
  Comment 1260 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1260 4  <||@
  Comment 1266 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1266 5  <||@
  HexCodeFile>>> <|@
end_nmethod
